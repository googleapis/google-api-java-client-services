/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.content;

/**
 * Service definition for ShoppingContent (v2.1).
 *
 * <p>
 * Manage your product listings and accounts for Google Shopping
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/shopping-content/v2/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ShoppingContentRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class ShoppingContent extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Content API for Shopping library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://shoppingcontent.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://shoppingcontent.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "content/v2.1/";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public ShoppingContent(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  ShoppingContent(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Accounts.List request = content.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * Returns information about the authenticated user.
     *
     * Create a request for the method "accounts.authinfo".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Authinfo#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Authinfo authinfo() throws java.io.IOException {
      Authinfo result = new Authinfo();
      initialize(result);
      return result;
    }

    public class Authinfo extends ShoppingContentRequest<com.google.api.services.content.model.AccountsAuthInfoResponse> {

      private static final String REST_PATH = "accounts/authinfo";

      /**
       * Returns information about the authenticated user.
       *
       * Create a request for the method "accounts.authinfo".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Authinfo#execute()} method to invoke the remote operation. <p>
       * {@link
       * Authinfo#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Authinfo() {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.AccountsAuthInfoResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Authinfo set$Xgafv(java.lang.String $Xgafv) {
        return (Authinfo) super.set$Xgafv($Xgafv);
      }

      @Override
      public Authinfo setAccessToken(java.lang.String accessToken) {
        return (Authinfo) super.setAccessToken(accessToken);
      }

      @Override
      public Authinfo setAlt(java.lang.String alt) {
        return (Authinfo) super.setAlt(alt);
      }

      @Override
      public Authinfo setCallback(java.lang.String callback) {
        return (Authinfo) super.setCallback(callback);
      }

      @Override
      public Authinfo setFields(java.lang.String fields) {
        return (Authinfo) super.setFields(fields);
      }

      @Override
      public Authinfo setKey(java.lang.String key) {
        return (Authinfo) super.setKey(key);
      }

      @Override
      public Authinfo setOauthToken(java.lang.String oauthToken) {
        return (Authinfo) super.setOauthToken(oauthToken);
      }

      @Override
      public Authinfo setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Authinfo) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Authinfo setQuotaUser(java.lang.String quotaUser) {
        return (Authinfo) super.setQuotaUser(quotaUser);
      }

      @Override
      public Authinfo setUploadType(java.lang.String uploadType) {
        return (Authinfo) super.setUploadType(uploadType);
      }

      @Override
      public Authinfo setUploadProtocol(java.lang.String uploadProtocol) {
        return (Authinfo) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Authinfo set(String parameterName, Object value) {
        return (Authinfo) super.set(parameterName, value);
      }
    }
    /**
     * Claims the website of a Merchant Center sub-account. Merchant accounts with approved third-party
     * CSSs aren't required to claim a website.
     *
     * Create a request for the method "accounts.claimwebsite".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Claimwebsite#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account whose website is claimed.
     * @return the request
     */
    public Claimwebsite claimwebsite(java.math.BigInteger merchantId, java.math.BigInteger accountId) throws java.io.IOException {
      Claimwebsite result = new Claimwebsite(merchantId, accountId);
      initialize(result);
      return result;
    }

    public class Claimwebsite extends ShoppingContentRequest<com.google.api.services.content.model.AccountsClaimWebsiteResponse> {

      private static final String REST_PATH = "{merchantId}/accounts/{accountId}/claimwebsite";

      /**
       * Claims the website of a Merchant Center sub-account. Merchant accounts with approved third-
       * party CSSs aren't required to claim a website.
       *
       * Create a request for the method "accounts.claimwebsite".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Claimwebsite#execute()} method to invoke the remote operation. <p>
       * {@link
       * Claimwebsite#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account whose website is claimed.
       * @since 1.13
       */
      protected Claimwebsite(java.math.BigInteger merchantId, java.math.BigInteger accountId) {
        super(ShoppingContent.this, "POST", REST_PATH, null, com.google.api.services.content.model.AccountsClaimWebsiteResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Claimwebsite set$Xgafv(java.lang.String $Xgafv) {
        return (Claimwebsite) super.set$Xgafv($Xgafv);
      }

      @Override
      public Claimwebsite setAccessToken(java.lang.String accessToken) {
        return (Claimwebsite) super.setAccessToken(accessToken);
      }

      @Override
      public Claimwebsite setAlt(java.lang.String alt) {
        return (Claimwebsite) super.setAlt(alt);
      }

      @Override
      public Claimwebsite setCallback(java.lang.String callback) {
        return (Claimwebsite) super.setCallback(callback);
      }

      @Override
      public Claimwebsite setFields(java.lang.String fields) {
        return (Claimwebsite) super.setFields(fields);
      }

      @Override
      public Claimwebsite setKey(java.lang.String key) {
        return (Claimwebsite) super.setKey(key);
      }

      @Override
      public Claimwebsite setOauthToken(java.lang.String oauthToken) {
        return (Claimwebsite) super.setOauthToken(oauthToken);
      }

      @Override
      public Claimwebsite setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Claimwebsite) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Claimwebsite setQuotaUser(java.lang.String quotaUser) {
        return (Claimwebsite) super.setQuotaUser(quotaUser);
      }

      @Override
      public Claimwebsite setUploadType(java.lang.String uploadType) {
        return (Claimwebsite) super.setUploadType(uploadType);
      }

      @Override
      public Claimwebsite setUploadProtocol(java.lang.String uploadProtocol) {
        return (Claimwebsite) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Claimwebsite setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account whose website is claimed. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account whose website is claimed.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account whose website is claimed. */
      public Claimwebsite setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      /**
       * Only available to selected merchants, for example multi-client accounts (MCAs) and their
       * sub-accounts. When set to `True`, this option removes any existing claim on the requested
       * website and replaces it with a claim from the account that makes the request.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean overwrite;

      /** Only available to selected merchants, for example multi-client accounts (MCAs) and their sub-
     accounts. When set to `True`, this option removes any existing claim on the requested website and
     replaces it with a claim from the account that makes the request.
       */
      public java.lang.Boolean getOverwrite() {
        return overwrite;
      }

      /**
       * Only available to selected merchants, for example multi-client accounts (MCAs) and their
       * sub-accounts. When set to `True`, this option removes any existing claim on the requested
       * website and replaces it with a claim from the account that makes the request.
       */
      public Claimwebsite setOverwrite(java.lang.Boolean overwrite) {
        this.overwrite = overwrite;
        return this;
      }

      @Override
      public Claimwebsite set(String parameterName, Object value) {
        return (Claimwebsite) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single
     * request.
     *
     * Create a request for the method "accounts.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.AccountsCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.AccountsCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.AccountsCustomBatchResponse> {

      private static final String REST_PATH = "accounts/batch";

      /**
       * Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single
       * request.
       *
       * Create a request for the method "accounts.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.AccountsCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.AccountsCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.AccountsCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a Merchant Center sub-account.
     *
     * Create a request for the method "accounts.delete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. This must be a multi-client account, and accountId must be the ID of
     *        a sub-account of this account.
     * @param accountId The ID of the account.
     * @return the request
     */
    public Delete delete(java.math.BigInteger merchantId, java.math.BigInteger accountId) throws java.io.IOException {
      Delete result = new Delete(merchantId, accountId);
      initialize(result);
      return result;
    }

    public class Delete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/accounts/{accountId}";

      /**
       * Deletes a Merchant Center sub-account.
       *
       * Create a request for the method "accounts.delete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. This must be a multi-client account, and accountId must be the ID of
     *        a sub-account of this account.
       * @param accountId The ID of the account.
       * @since 1.13
       */
      protected Delete(java.math.BigInteger merchantId, java.math.BigInteger accountId) {
        super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. This must be a multi-client account, and accountId must be
       * the ID of a sub-account of this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. This must be a multi-client account, and accountId must be the ID
     of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. This must be a multi-client account, and accountId must be
       * the ID of a sub-account of this account.
       */
      public Delete setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account. */
      public Delete setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      /** Option to delete sub-accounts with products. The default value is false. */
      @com.google.api.client.util.Key
      private java.lang.Boolean force;

      /** Option to delete sub-accounts with products. The default value is false. [default: false]
       */
      public java.lang.Boolean getForce() {
        return force;
      }

      /** Option to delete sub-accounts with products. The default value is false. */
      public Delete setForce(java.lang.Boolean force) {
        this.force = force;
        return this;
      }

      /**
       * Convenience method that returns only {@link Boolean#TRUE} or {@link Boolean#FALSE}.
       *
       * <p>
       * Boolean properties can have four possible values:
       * {@code null}, {@link com.google.api.client.util.Data#NULL_BOOLEAN}, {@link Boolean#TRUE}
       * or {@link Boolean#FALSE}.
       * </p>
       *
       * <p>
       * This method returns {@link Boolean#TRUE} if the default of the property is {@link Boolean#TRUE}
       * and it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
       * {@link Boolean#FALSE} is returned if the default of the property is {@link Boolean#FALSE} and
       * it is {@code null} or {@link com.google.api.client.util.Data#NULL_BOOLEAN}.
       * </p>
       *
       * <p>
       * Option to delete sub-accounts with products. The default value is false.
       * </p>
       */
      public boolean isForce() {
        if (force == null || force == com.google.api.client.util.Data.NULL_BOOLEAN) {
          return false;
        }
        return force;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a Merchant Center account.
     *
     * Create a request for the method "accounts.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.math.BigInteger accountId) throws java.io.IOException {
      Get result = new Get(merchantId, accountId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.Account> {

      private static final String REST_PATH = "{merchantId}/accounts/{accountId}";

      /**
       * Retrieves a Merchant Center account.
       *
       * Create a request for the method "accounts.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.math.BigInteger accountId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.Account.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account. */
      public Get setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      /**
       * Controls which fields will be populated. Acceptable values are: "merchant" and "css". The
       * default value is "merchant".
       */
      @com.google.api.client.util.Key
      private java.lang.String view;

      /** Controls which fields will be populated. Acceptable values are: "merchant" and "css". The default
     value is "merchant".
       */
      public java.lang.String getView() {
        return view;
      }

      /**
       * Controls which fields will be populated. Acceptable values are: "merchant" and "css". The
       * default value is "merchant".
       */
      public Get setView(java.lang.String view) {
        this.view = view;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a Merchant Center sub-account.
     *
     * Create a request for the method "accounts.insert".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. This must be a multi-client account.
     * @param content the {@link com.google.api.services.content.model.Account}
     * @return the request
     */
    public Insert insert(java.math.BigInteger merchantId, com.google.api.services.content.model.Account content) throws java.io.IOException {
      Insert result = new Insert(merchantId, content);
      initialize(result);
      return result;
    }

    public class Insert extends ShoppingContentRequest<com.google.api.services.content.model.Account> {

      private static final String REST_PATH = "{merchantId}/accounts";

      /**
       * Creates a Merchant Center sub-account.
       *
       * Create a request for the method "accounts.insert".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. This must be a multi-client account.
       * @param content the {@link com.google.api.services.content.model.Account}
       * @since 1.13
       */
      protected Insert(java.math.BigInteger merchantId, com.google.api.services.content.model.Account content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.Account.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Insert set$Xgafv(java.lang.String $Xgafv) {
        return (Insert) super.set$Xgafv($Xgafv);
      }

      @Override
      public Insert setAccessToken(java.lang.String accessToken) {
        return (Insert) super.setAccessToken(accessToken);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setCallback(java.lang.String callback) {
        return (Insert) super.setCallback(callback);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUploadType(java.lang.String uploadType) {
        return (Insert) super.setUploadType(uploadType);
      }

      @Override
      public Insert setUploadProtocol(java.lang.String uploadProtocol) {
        return (Insert) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the managing account. This must be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. This must be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the managing account. This must be a multi-client account. */
      public Insert setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Performs an action on a link between two Merchant Center accounts, namely accountId and
     * linkedAccountId.
     *
     * Create a request for the method "accounts.link".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Link#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account that should be linked.
     * @param content the {@link com.google.api.services.content.model.AccountsLinkRequest}
     * @return the request
     */
    public Link link(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.AccountsLinkRequest content) throws java.io.IOException {
      Link result = new Link(merchantId, accountId, content);
      initialize(result);
      return result;
    }

    public class Link extends ShoppingContentRequest<com.google.api.services.content.model.AccountsLinkResponse> {

      private static final String REST_PATH = "{merchantId}/accounts/{accountId}/link";

      /**
       * Performs an action on a link between two Merchant Center accounts, namely accountId and
       * linkedAccountId.
       *
       * Create a request for the method "accounts.link".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Link#execute()} method to invoke the remote operation. <p> {@link
       * Link#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account that should be linked.
       * @param content the {@link com.google.api.services.content.model.AccountsLinkRequest}
       * @since 1.13
       */
      protected Link(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.AccountsLinkRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.AccountsLinkResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Link set$Xgafv(java.lang.String $Xgafv) {
        return (Link) super.set$Xgafv($Xgafv);
      }

      @Override
      public Link setAccessToken(java.lang.String accessToken) {
        return (Link) super.setAccessToken(accessToken);
      }

      @Override
      public Link setAlt(java.lang.String alt) {
        return (Link) super.setAlt(alt);
      }

      @Override
      public Link setCallback(java.lang.String callback) {
        return (Link) super.setCallback(callback);
      }

      @Override
      public Link setFields(java.lang.String fields) {
        return (Link) super.setFields(fields);
      }

      @Override
      public Link setKey(java.lang.String key) {
        return (Link) super.setKey(key);
      }

      @Override
      public Link setOauthToken(java.lang.String oauthToken) {
        return (Link) super.setOauthToken(oauthToken);
      }

      @Override
      public Link setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Link) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Link setQuotaUser(java.lang.String quotaUser) {
        return (Link) super.setQuotaUser(quotaUser);
      }

      @Override
      public Link setUploadType(java.lang.String uploadType) {
        return (Link) super.setUploadType(uploadType);
      }

      @Override
      public Link setUploadProtocol(java.lang.String uploadProtocol) {
        return (Link) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Link setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account that should be linked. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account that should be linked.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account that should be linked. */
      public Link setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Link set(String parameterName, Object value) {
        return (Link) super.set(parameterName, value);
      }
    }
    /**
     * Lists the sub-accounts in your Merchant Center account.
     *
     * Create a request for the method "accounts.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. This must be a multi-client account.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.AccountsListResponse> {

      private static final String REST_PATH = "{merchantId}/accounts";

      /**
       * Lists the sub-accounts in your Merchant Center account.
       *
       * Create a request for the method "accounts.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. This must be a multi-client account.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.AccountsListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the managing account. This must be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. This must be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the managing account. This must be a multi-client account. */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** If view is set to "css", only return accounts that are assigned label with given ID. */
      @com.google.api.client.util.Key
      private java.math.BigInteger label;

      /** If view is set to "css", only return accounts that are assigned label with given ID.
       */
      public java.math.BigInteger getLabel() {
        return label;
      }

      /** If view is set to "css", only return accounts that are assigned label with given ID. */
      public List setLabel(java.math.BigInteger label) {
        this.label = label;
        return this;
      }

      /** The maximum number of accounts to return in the response, used for paging. */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of accounts to return in the response, used for paging.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /** The maximum number of accounts to return in the response, used for paging. */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** If set, only the accounts with the given name (case sensitive) will be returned. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** If set, only the accounts with the given name (case sensitive) will be returned.
       */
      public java.lang.String getName() {
        return name;
      }

      /** If set, only the accounts with the given name (case sensitive) will be returned. */
      public List setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * Controls which fields will be populated. Acceptable values are: "merchant" and "css". The
       * default value is "merchant".
       */
      @com.google.api.client.util.Key
      private java.lang.String view;

      /** Controls which fields will be populated. Acceptable values are: "merchant" and "css". The default
     value is "merchant".
       */
      public java.lang.String getView() {
        return view;
      }

      /**
       * Controls which fields will be populated. Acceptable values are: "merchant" and "css". The
       * default value is "merchant".
       */
      public List setView(java.lang.String view) {
        this.view = view;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Returns the list of accounts linked to your Merchant Center account.
     *
     * Create a request for the method "accounts.listlinks".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Listlinks#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account for which to list links.
     * @return the request
     */
    public Listlinks listlinks(java.math.BigInteger merchantId, java.math.BigInteger accountId) throws java.io.IOException {
      Listlinks result = new Listlinks(merchantId, accountId);
      initialize(result);
      return result;
    }

    public class Listlinks extends ShoppingContentRequest<com.google.api.services.content.model.AccountsListLinksResponse> {

      private static final String REST_PATH = "{merchantId}/accounts/{accountId}/listlinks";

      /**
       * Returns the list of accounts linked to your Merchant Center account.
       *
       * Create a request for the method "accounts.listlinks".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Listlinks#execute()} method to invoke the remote operation. <p>
       * {@link
       * Listlinks#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account for which to list links.
       * @since 1.13
       */
      protected Listlinks(java.math.BigInteger merchantId, java.math.BigInteger accountId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.AccountsListLinksResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Listlinks set$Xgafv(java.lang.String $Xgafv) {
        return (Listlinks) super.set$Xgafv($Xgafv);
      }

      @Override
      public Listlinks setAccessToken(java.lang.String accessToken) {
        return (Listlinks) super.setAccessToken(accessToken);
      }

      @Override
      public Listlinks setAlt(java.lang.String alt) {
        return (Listlinks) super.setAlt(alt);
      }

      @Override
      public Listlinks setCallback(java.lang.String callback) {
        return (Listlinks) super.setCallback(callback);
      }

      @Override
      public Listlinks setFields(java.lang.String fields) {
        return (Listlinks) super.setFields(fields);
      }

      @Override
      public Listlinks setKey(java.lang.String key) {
        return (Listlinks) super.setKey(key);
      }

      @Override
      public Listlinks setOauthToken(java.lang.String oauthToken) {
        return (Listlinks) super.setOauthToken(oauthToken);
      }

      @Override
      public Listlinks setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Listlinks) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Listlinks setQuotaUser(java.lang.String quotaUser) {
        return (Listlinks) super.setQuotaUser(quotaUser);
      }

      @Override
      public Listlinks setUploadType(java.lang.String uploadType) {
        return (Listlinks) super.setUploadType(uploadType);
      }

      @Override
      public Listlinks setUploadProtocol(java.lang.String uploadProtocol) {
        return (Listlinks) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Listlinks setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account for which to list links. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account for which to list links.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account for which to list links. */
      public Listlinks setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      /**
       * The maximum number of links to return in the response, used for pagination. The minimum
       * allowed value is 5 results per page. If provided value is lower than 5, it will be
       * automatically increased to 5.
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of links to return in the response, used for pagination. The minimum allowed
     value is 5 results per page. If provided value is lower than 5, it will be automatically increased
     to 5.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of links to return in the response, used for pagination. The minimum
       * allowed value is 5 results per page. If provided value is lower than 5, it will be
       * automatically increased to 5.
       */
      public Listlinks setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public Listlinks setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public Listlinks set(String parameterName, Object value) {
        return (Listlinks) super.set(parameterName, value);
      }
    }
    /**
     * Request verification code to start phone verification.
     *
     * Create a request for the method "accounts.requestphoneverification".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Requestphoneverification#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId Required. The ID of the managing account. If this parameter is not the same as accountId, then this
     *        account must be a multi-client account and accountId must be the ID of a sub-account of
     *        this account.
     * @param accountId Required. The ID of the account.
     * @param content the {@link com.google.api.services.content.model.RequestPhoneVerificationRequest}
     * @return the request
     */
    public Requestphoneverification requestphoneverification(java.lang.Long merchantId, java.lang.Long accountId, com.google.api.services.content.model.RequestPhoneVerificationRequest content) throws java.io.IOException {
      Requestphoneverification result = new Requestphoneverification(merchantId, accountId, content);
      initialize(result);
      return result;
    }

    public class Requestphoneverification extends ShoppingContentRequest<com.google.api.services.content.model.RequestPhoneVerificationResponse> {

      private static final String REST_PATH = "{merchantId}/accounts/{accountId}/requestphoneverification";

      /**
       * Request verification code to start phone verification.
       *
       * Create a request for the method "accounts.requestphoneverification".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Requestphoneverification#execute()} method to invoke the remote
       * operation. <p> {@link Requestphoneverification#initialize(com.google.api.client.googleapis.serv
       * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the managing account. If this parameter is not the same as accountId, then this
     *        account must be a multi-client account and accountId must be the ID of a sub-account of
     *        this account.
       * @param accountId Required. The ID of the account.
       * @param content the {@link com.google.api.services.content.model.RequestPhoneVerificationRequest}
       * @since 1.13
       */
      protected Requestphoneverification(java.lang.Long merchantId, java.lang.Long accountId, com.google.api.services.content.model.RequestPhoneVerificationRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.RequestPhoneVerificationResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Requestphoneverification set$Xgafv(java.lang.String $Xgafv) {
        return (Requestphoneverification) super.set$Xgafv($Xgafv);
      }

      @Override
      public Requestphoneverification setAccessToken(java.lang.String accessToken) {
        return (Requestphoneverification) super.setAccessToken(accessToken);
      }

      @Override
      public Requestphoneverification setAlt(java.lang.String alt) {
        return (Requestphoneverification) super.setAlt(alt);
      }

      @Override
      public Requestphoneverification setCallback(java.lang.String callback) {
        return (Requestphoneverification) super.setCallback(callback);
      }

      @Override
      public Requestphoneverification setFields(java.lang.String fields) {
        return (Requestphoneverification) super.setFields(fields);
      }

      @Override
      public Requestphoneverification setKey(java.lang.String key) {
        return (Requestphoneverification) super.setKey(key);
      }

      @Override
      public Requestphoneverification setOauthToken(java.lang.String oauthToken) {
        return (Requestphoneverification) super.setOauthToken(oauthToken);
      }

      @Override
      public Requestphoneverification setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Requestphoneverification) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Requestphoneverification setQuotaUser(java.lang.String quotaUser) {
        return (Requestphoneverification) super.setQuotaUser(quotaUser);
      }

      @Override
      public Requestphoneverification setUploadType(java.lang.String uploadType) {
        return (Requestphoneverification) super.setUploadType(uploadType);
      }

      @Override
      public Requestphoneverification setUploadProtocol(java.lang.String uploadProtocol) {
        return (Requestphoneverification) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The ID of the managing account. If this parameter is not the same as accountId,
       * then this account must be a multi-client account and accountId must be the ID of a sub-
       * account of this account.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the managing account. If this parameter is not the same as accountId, then this
     account must be a multi-client account and accountId must be the ID of a sub-account of this
     account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The ID of the managing account. If this parameter is not the same as accountId,
       * then this account must be a multi-client account and accountId must be the ID of a sub-
       * account of this account.
       */
      public Requestphoneverification setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The ID of the account. */
      @com.google.api.client.util.Key
      private java.lang.Long accountId;

      /** Required. The ID of the account.
       */
      public java.lang.Long getAccountId() {
        return accountId;
      }

      /** Required. The ID of the account. */
      public Requestphoneverification setAccountId(java.lang.Long accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Requestphoneverification set(String parameterName, Object value) {
        return (Requestphoneverification) super.set(parameterName, value);
      }
    }
    /**
     * Updates a Merchant Center account. Any fields that are not provided are deleted from the
     * resource.
     *
     * Create a request for the method "accounts.update".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account.
     * @param content the {@link com.google.api.services.content.model.Account}
     * @return the request
     */
    public Update update(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.Account content) throws java.io.IOException {
      Update result = new Update(merchantId, accountId, content);
      initialize(result);
      return result;
    }

    public class Update extends ShoppingContentRequest<com.google.api.services.content.model.Account> {

      private static final String REST_PATH = "{merchantId}/accounts/{accountId}";

      /**
       * Updates a Merchant Center account. Any fields that are not provided are deleted from the
       * resource.
       *
       * Create a request for the method "accounts.update".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account.
       * @param content the {@link com.google.api.services.content.model.Account}
       * @since 1.13
       */
      protected Update(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.Account content) {
        super(ShoppingContent.this, "PUT", REST_PATH, content, com.google.api.services.content.model.Account.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Update setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account. */
      public Update setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }
    /**
     * Updates labels that are assigned to the Merchant Center account by CSS user.
     *
     * Create a request for the method "accounts.updatelabels".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Updatelabels#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account.
     * @param accountId The ID of the account whose labels are updated.
     * @param content the {@link com.google.api.services.content.model.AccountsUpdateLabelsRequest}
     * @return the request
     */
    public Updatelabels updatelabels(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.AccountsUpdateLabelsRequest content) throws java.io.IOException {
      Updatelabels result = new Updatelabels(merchantId, accountId, content);
      initialize(result);
      return result;
    }

    public class Updatelabels extends ShoppingContentRequest<com.google.api.services.content.model.AccountsUpdateLabelsResponse> {

      private static final String REST_PATH = "{merchantId}/accounts/{accountId}/updatelabels";

      /**
       * Updates labels that are assigned to the Merchant Center account by CSS user.
       *
       * Create a request for the method "accounts.updatelabels".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Updatelabels#execute()} method to invoke the remote operation. <p>
       * {@link
       * Updatelabels#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account.
       * @param accountId The ID of the account whose labels are updated.
       * @param content the {@link com.google.api.services.content.model.AccountsUpdateLabelsRequest}
       * @since 1.13
       */
      protected Updatelabels(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.AccountsUpdateLabelsRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.AccountsUpdateLabelsResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Updatelabels set$Xgafv(java.lang.String $Xgafv) {
        return (Updatelabels) super.set$Xgafv($Xgafv);
      }

      @Override
      public Updatelabels setAccessToken(java.lang.String accessToken) {
        return (Updatelabels) super.setAccessToken(accessToken);
      }

      @Override
      public Updatelabels setAlt(java.lang.String alt) {
        return (Updatelabels) super.setAlt(alt);
      }

      @Override
      public Updatelabels setCallback(java.lang.String callback) {
        return (Updatelabels) super.setCallback(callback);
      }

      @Override
      public Updatelabels setFields(java.lang.String fields) {
        return (Updatelabels) super.setFields(fields);
      }

      @Override
      public Updatelabels setKey(java.lang.String key) {
        return (Updatelabels) super.setKey(key);
      }

      @Override
      public Updatelabels setOauthToken(java.lang.String oauthToken) {
        return (Updatelabels) super.setOauthToken(oauthToken);
      }

      @Override
      public Updatelabels setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Updatelabels) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Updatelabels setQuotaUser(java.lang.String quotaUser) {
        return (Updatelabels) super.setQuotaUser(quotaUser);
      }

      @Override
      public Updatelabels setUploadType(java.lang.String uploadType) {
        return (Updatelabels) super.setUploadType(uploadType);
      }

      @Override
      public Updatelabels setUploadProtocol(java.lang.String uploadProtocol) {
        return (Updatelabels) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the managing account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the managing account. */
      public Updatelabels setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account whose labels are updated. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account whose labels are updated.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account whose labels are updated. */
      public Updatelabels setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Updatelabels set(String parameterName, Object value) {
        return (Updatelabels) super.set(parameterName, value);
      }
    }
    /**
     * Validates verification code to verify phone number for the account. If successful this will
     * overwrite the value of `accounts.businessinformation.phoneNumber`. Only verified phone number
     * will replace an existing verified phone number.
     *
     * Create a request for the method "accounts.verifyphonenumber".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Verifyphonenumber#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the managing account. If this parameter is not the same as accountId, then this
     *        account must be a multi-client account and accountId must be the ID of a sub-account of
     *        this account.
     * @param accountId Required. The ID of the account.
     * @param content the {@link com.google.api.services.content.model.VerifyPhoneNumberRequest}
     * @return the request
     */
    public Verifyphonenumber verifyphonenumber(java.lang.Long merchantId, java.lang.Long accountId, com.google.api.services.content.model.VerifyPhoneNumberRequest content) throws java.io.IOException {
      Verifyphonenumber result = new Verifyphonenumber(merchantId, accountId, content);
      initialize(result);
      return result;
    }

    public class Verifyphonenumber extends ShoppingContentRequest<com.google.api.services.content.model.VerifyPhoneNumberResponse> {

      private static final String REST_PATH = "{merchantId}/accounts/{accountId}/verifyphonenumber";

      /**
       * Validates verification code to verify phone number for the account. If successful this will
       * overwrite the value of `accounts.businessinformation.phoneNumber`. Only verified phone number
       * will replace an existing verified phone number.
       *
       * Create a request for the method "accounts.verifyphonenumber".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Verifyphonenumber#execute()} method to invoke the remote operation.
       * <p> {@link Verifyphonenumber#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param merchantId Required. The ID of the managing account. If this parameter is not the same as accountId, then this
     *        account must be a multi-client account and accountId must be the ID of a sub-account of
     *        this account.
       * @param accountId Required. The ID of the account.
       * @param content the {@link com.google.api.services.content.model.VerifyPhoneNumberRequest}
       * @since 1.13
       */
      protected Verifyphonenumber(java.lang.Long merchantId, java.lang.Long accountId, com.google.api.services.content.model.VerifyPhoneNumberRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.VerifyPhoneNumberResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Verifyphonenumber set$Xgafv(java.lang.String $Xgafv) {
        return (Verifyphonenumber) super.set$Xgafv($Xgafv);
      }

      @Override
      public Verifyphonenumber setAccessToken(java.lang.String accessToken) {
        return (Verifyphonenumber) super.setAccessToken(accessToken);
      }

      @Override
      public Verifyphonenumber setAlt(java.lang.String alt) {
        return (Verifyphonenumber) super.setAlt(alt);
      }

      @Override
      public Verifyphonenumber setCallback(java.lang.String callback) {
        return (Verifyphonenumber) super.setCallback(callback);
      }

      @Override
      public Verifyphonenumber setFields(java.lang.String fields) {
        return (Verifyphonenumber) super.setFields(fields);
      }

      @Override
      public Verifyphonenumber setKey(java.lang.String key) {
        return (Verifyphonenumber) super.setKey(key);
      }

      @Override
      public Verifyphonenumber setOauthToken(java.lang.String oauthToken) {
        return (Verifyphonenumber) super.setOauthToken(oauthToken);
      }

      @Override
      public Verifyphonenumber setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Verifyphonenumber) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Verifyphonenumber setQuotaUser(java.lang.String quotaUser) {
        return (Verifyphonenumber) super.setQuotaUser(quotaUser);
      }

      @Override
      public Verifyphonenumber setUploadType(java.lang.String uploadType) {
        return (Verifyphonenumber) super.setUploadType(uploadType);
      }

      @Override
      public Verifyphonenumber setUploadProtocol(java.lang.String uploadProtocol) {
        return (Verifyphonenumber) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The ID of the managing account. If this parameter is not the same as accountId,
       * then this account must be a multi-client account and accountId must be the ID of a sub-
       * account of this account.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the managing account. If this parameter is not the same as accountId, then this
     account must be a multi-client account and accountId must be the ID of a sub-account of this
     account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The ID of the managing account. If this parameter is not the same as accountId,
       * then this account must be a multi-client account and accountId must be the ID of a sub-
       * account of this account.
       */
      public Verifyphonenumber setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The ID of the account. */
      @com.google.api.client.util.Key
      private java.lang.Long accountId;

      /** Required. The ID of the account.
       */
      public java.lang.Long getAccountId() {
        return accountId;
      }

      /** Required. The ID of the account. */
      public Verifyphonenumber setAccountId(java.lang.Long accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Verifyphonenumber set(String parameterName, Object value) {
        return (Verifyphonenumber) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Credentials collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ShoppingContent content = new ShoppingContent(...);}
     *   {@code ShoppingContent.Credentials.List request = content.credentials().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Credentials credentials() {
      return new Credentials();
    }

    /**
     * The "credentials" collection of methods.
     */
    public class Credentials {

      /**
       * Uploads credentials for the Merchant Center account. If credentials already exist for this
       * Merchant Center account and purpose, this method updates them.
       *
       * Create a request for the method "credentials.create".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param accountId Required. The merchant id of the account these credentials belong to.
       * @param content the {@link com.google.api.services.content.model.AccountCredentials}
       * @return the request
       */
      public Create create(java.lang.Long accountId, com.google.api.services.content.model.AccountCredentials content) throws java.io.IOException {
        Create result = new Create(accountId, content);
        initialize(result);
        return result;
      }

      public class Create extends ShoppingContentRequest<com.google.api.services.content.model.AccountCredentials> {

        private static final String REST_PATH = "accounts/{accountId}/credentials";

        /**
         * Uploads credentials for the Merchant Center account. If credentials already exist for this
         * Merchant Center account and purpose, this method updates them.
         *
         * Create a request for the method "credentials.create".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId Required. The merchant id of the account these credentials belong to.
         * @param content the {@link com.google.api.services.content.model.AccountCredentials}
         * @since 1.13
         */
        protected Create(java.lang.Long accountId, com.google.api.services.content.model.AccountCredentials content) {
          super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.AccountCredentials.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The merchant id of the account these credentials belong to. */
        @com.google.api.client.util.Key
        private java.lang.Long accountId;

        /** Required. The merchant id of the account these credentials belong to.
         */
        public java.lang.Long getAccountId() {
          return accountId;
        }

        /** Required. The merchant id of the account these credentials belong to. */
        public Create setAccountId(java.lang.Long accountId) {
          this.accountId = accountId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Labels collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ShoppingContent content = new ShoppingContent(...);}
     *   {@code ShoppingContent.Labels.List request = content.labels().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Labels labels() {
      return new Labels();
    }

    /**
     * The "labels" collection of methods.
     */
    public class Labels {

      /**
       * Creates a new label, not assigned to any account.
       *
       * Create a request for the method "labels.create".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param accountId Required. The id of the account this label belongs to.
       * @param content the {@link com.google.api.services.content.model.AccountLabel}
       * @return the request
       */
      public Create create(java.lang.Long accountId, com.google.api.services.content.model.AccountLabel content) throws java.io.IOException {
        Create result = new Create(accountId, content);
        initialize(result);
        return result;
      }

      public class Create extends ShoppingContentRequest<com.google.api.services.content.model.AccountLabel> {

        private static final String REST_PATH = "accounts/{accountId}/labels";

        /**
         * Creates a new label, not assigned to any account.
         *
         * Create a request for the method "labels.create".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId Required. The id of the account this label belongs to.
         * @param content the {@link com.google.api.services.content.model.AccountLabel}
         * @since 1.13
         */
        protected Create(java.lang.Long accountId, com.google.api.services.content.model.AccountLabel content) {
          super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.AccountLabel.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The id of the account this label belongs to. */
        @com.google.api.client.util.Key
        private java.lang.Long accountId;

        /** Required. The id of the account this label belongs to.
         */
        public java.lang.Long getAccountId() {
          return accountId;
        }

        /** Required. The id of the account this label belongs to. */
        public Create setAccountId(java.lang.Long accountId) {
          this.accountId = accountId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a label and removes it from all accounts to which it was assigned.
       *
       * Create a request for the method "labels.delete".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param accountId Required. The id of the account that owns the label.
       * @param labelId Required. The id of the label to delete.
       * @return the request
       */
      public Delete delete(java.lang.Long accountId, java.lang.Long labelId) throws java.io.IOException {
        Delete result = new Delete(accountId, labelId);
        initialize(result);
        return result;
      }

      public class Delete extends ShoppingContentRequest<Void> {

        private static final String REST_PATH = "accounts/{accountId}/labels/{labelId}";

        /**
         * Deletes a label and removes it from all accounts to which it was assigned.
         *
         * Create a request for the method "labels.delete".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId Required. The id of the account that owns the label.
         * @param labelId Required. The id of the label to delete.
         * @since 1.13
         */
        protected Delete(java.lang.Long accountId, java.lang.Long labelId) {
          super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          this.labelId = com.google.api.client.util.Preconditions.checkNotNull(labelId, "Required parameter labelId must be specified.");
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The id of the account that owns the label. */
        @com.google.api.client.util.Key
        private java.lang.Long accountId;

        /** Required. The id of the account that owns the label.
         */
        public java.lang.Long getAccountId() {
          return accountId;
        }

        /** Required. The id of the account that owns the label. */
        public Delete setAccountId(java.lang.Long accountId) {
          this.accountId = accountId;
          return this;
        }

        /** Required. The id of the label to delete. */
        @com.google.api.client.util.Key
        private java.lang.Long labelId;

        /** Required. The id of the label to delete.
         */
        public java.lang.Long getLabelId() {
          return labelId;
        }

        /** Required. The id of the label to delete. */
        public Delete setLabelId(java.lang.Long labelId) {
          this.labelId = labelId;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lists the labels assigned to an account.
       *
       * Create a request for the method "labels.list".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param accountId Required. The account id for whose labels are to be listed.
       * @return the request
       */
      public List list(java.lang.Long accountId) throws java.io.IOException {
        List result = new List(accountId);
        initialize(result);
        return result;
      }

      public class List extends ShoppingContentRequest<com.google.api.services.content.model.ListAccountLabelsResponse> {

        private static final String REST_PATH = "accounts/{accountId}/labels";

        /**
         * Lists the labels assigned to an account.
         *
         * Create a request for the method "labels.list".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId Required. The account id for whose labels are to be listed.
         * @since 1.13
         */
        protected List(java.lang.Long accountId) {
          super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ListAccountLabelsResponse.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The account id for whose labels are to be listed. */
        @com.google.api.client.util.Key
        private java.lang.Long accountId;

        /** Required. The account id for whose labels are to be listed.
         */
        public java.lang.Long getAccountId() {
          return accountId;
        }

        /** Required. The account id for whose labels are to be listed. */
        public List setAccountId(java.lang.Long accountId) {
          this.accountId = accountId;
          return this;
        }

        /**
         * The maximum number of labels to return. The service may return fewer than this value. If
         * unspecified, at most 50 labels will be returned. The maximum value is 1000; values above
         * 1000 will be coerced to 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of labels to return. The service may return fewer than this value. If
       unspecified, at most 50 labels will be returned. The maximum value is 1000; values above 1000 will
       be coerced to 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of labels to return. The service may return fewer than this value. If
         * unspecified, at most 50 labels will be returned. The maximum value is 1000; values above
         * 1000 will be coerced to 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListAccountLabels` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListAccountLabels` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListAccountLabels` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListAccountLabels` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListAccountLabels` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListAccountLabels` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a label.
       *
       * Create a request for the method "labels.patch".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param accountId Required. The id of the account this label belongs to.
       * @param labelId Required. The id of the label to update.
       * @param content the {@link com.google.api.services.content.model.AccountLabel}
       * @return the request
       */
      public Patch patch(java.lang.Long accountId, java.lang.Long labelId, com.google.api.services.content.model.AccountLabel content) throws java.io.IOException {
        Patch result = new Patch(accountId, labelId, content);
        initialize(result);
        return result;
      }

      public class Patch extends ShoppingContentRequest<com.google.api.services.content.model.AccountLabel> {

        private static final String REST_PATH = "accounts/{accountId}/labels/{labelId}";

        /**
         * Updates a label.
         *
         * Create a request for the method "labels.patch".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId Required. The id of the account this label belongs to.
         * @param labelId Required. The id of the label to update.
         * @param content the {@link com.google.api.services.content.model.AccountLabel}
         * @since 1.13
         */
        protected Patch(java.lang.Long accountId, java.lang.Long labelId, com.google.api.services.content.model.AccountLabel content) {
          super(ShoppingContent.this, "PATCH", REST_PATH, content, com.google.api.services.content.model.AccountLabel.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          this.labelId = com.google.api.client.util.Preconditions.checkNotNull(labelId, "Required parameter labelId must be specified.");
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The id of the account this label belongs to. */
        @com.google.api.client.util.Key
        private java.lang.Long accountId;

        /** Required. The id of the account this label belongs to.
         */
        public java.lang.Long getAccountId() {
          return accountId;
        }

        /** Required. The id of the account this label belongs to. */
        public Patch setAccountId(java.lang.Long accountId) {
          this.accountId = accountId;
          return this;
        }

        /** Required. The id of the label to update. */
        @com.google.api.client.util.Key
        private java.lang.Long labelId;

        /** Required. The id of the label to update.
         */
        public java.lang.Long getLabelId() {
          return labelId;
        }

        /** Required. The id of the label to update. */
        public Patch setLabelId(java.lang.Long labelId) {
          this.labelId = labelId;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Returncarrier collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ShoppingContent content = new ShoppingContent(...);}
     *   {@code ShoppingContent.Returncarrier.List request = content.returncarrier().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Returncarrier returncarrier() {
      return new Returncarrier();
    }

    /**
     * The "returncarrier" collection of methods.
     */
    public class Returncarrier {

      /**
       * Links return carrier to a merchant account.
       *
       * Create a request for the method "returncarrier.create".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param accountId Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
       * @param content the {@link com.google.api.services.content.model.AccountReturnCarrier}
       * @return the request
       */
      public Create create(java.lang.Long accountId, com.google.api.services.content.model.AccountReturnCarrier content) throws java.io.IOException {
        Create result = new Create(accountId, content);
        initialize(result);
        return result;
      }

      public class Create extends ShoppingContentRequest<com.google.api.services.content.model.AccountReturnCarrier> {

        private static final String REST_PATH = "accounts/{accountId}/returncarrier";

        /**
         * Links return carrier to a merchant account.
         *
         * Create a request for the method "returncarrier.create".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         * @param content the {@link com.google.api.services.content.model.AccountReturnCarrier}
         * @since 1.13
         */
        protected Create(java.lang.Long accountId, com.google.api.services.content.model.AccountReturnCarrier content) {
          super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.AccountReturnCarrier.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        @com.google.api.client.util.Key
        private java.lang.Long accountId;

        /** Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        public java.lang.Long getAccountId() {
          return accountId;
        }

        /**
         * Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        public Create setAccountId(java.lang.Long accountId) {
          this.accountId = accountId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete a return carrier in the merchant account.
       *
       * Create a request for the method "returncarrier.delete".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param accountId Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
       * @param carrierAccountId Required. The Google-provided unique carrier ID, used to update the resource.
       * @return the request
       */
      public Delete delete(java.lang.Long accountId, java.lang.Long carrierAccountId) throws java.io.IOException {
        Delete result = new Delete(accountId, carrierAccountId);
        initialize(result);
        return result;
      }

      public class Delete extends ShoppingContentRequest<Void> {

        private static final String REST_PATH = "accounts/{accountId}/returncarrier/{carrierAccountId}";

        /**
         * Delete a return carrier in the merchant account.
         *
         * Create a request for the method "returncarrier.delete".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         * @param carrierAccountId Required. The Google-provided unique carrier ID, used to update the resource.
         * @since 1.13
         */
        protected Delete(java.lang.Long accountId, java.lang.Long carrierAccountId) {
          super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          this.carrierAccountId = com.google.api.client.util.Preconditions.checkNotNull(carrierAccountId, "Required parameter carrierAccountId must be specified.");
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        @com.google.api.client.util.Key
        private java.lang.Long accountId;

        /** Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        public java.lang.Long getAccountId() {
          return accountId;
        }

        /**
         * Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        public Delete setAccountId(java.lang.Long accountId) {
          this.accountId = accountId;
          return this;
        }

        /** Required. The Google-provided unique carrier ID, used to update the resource. */
        @com.google.api.client.util.Key
        private java.lang.Long carrierAccountId;

        /** Required. The Google-provided unique carrier ID, used to update the resource.
         */
        public java.lang.Long getCarrierAccountId() {
          return carrierAccountId;
        }

        /** Required. The Google-provided unique carrier ID, used to update the resource. */
        public Delete setCarrierAccountId(java.lang.Long carrierAccountId) {
          this.carrierAccountId = carrierAccountId;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lists available return carriers in the merchant account.
       *
       * Create a request for the method "returncarrier.list".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param accountId Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
       * @return the request
       */
      public List list(java.lang.Long accountId) throws java.io.IOException {
        List result = new List(accountId);
        initialize(result);
        return result;
      }

      public class List extends ShoppingContentRequest<com.google.api.services.content.model.ListAccountReturnCarrierResponse> {

        private static final String REST_PATH = "accounts/{accountId}/returncarrier";

        /**
         * Lists available return carriers in the merchant account.
         *
         * Create a request for the method "returncarrier.list".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         * @since 1.13
         */
        protected List(java.lang.Long accountId) {
          super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ListAccountReturnCarrierResponse.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        @com.google.api.client.util.Key
        private java.lang.Long accountId;

        /** Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        public java.lang.Long getAccountId() {
          return accountId;
        }

        /**
         * Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        public List setAccountId(java.lang.Long accountId) {
          this.accountId = accountId;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a return carrier in the merchant account.
       *
       * Create a request for the method "returncarrier.patch".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param accountId Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
       * @param carrierAccountId Required. The Google-provided unique carrier ID, used to update the resource.
       * @param content the {@link com.google.api.services.content.model.AccountReturnCarrier}
       * @return the request
       */
      public Patch patch(java.lang.Long accountId, java.lang.Long carrierAccountId, com.google.api.services.content.model.AccountReturnCarrier content) throws java.io.IOException {
        Patch result = new Patch(accountId, carrierAccountId, content);
        initialize(result);
        return result;
      }

      public class Patch extends ShoppingContentRequest<com.google.api.services.content.model.AccountReturnCarrier> {

        private static final String REST_PATH = "accounts/{accountId}/returncarrier/{carrierAccountId}";

        /**
         * Updates a return carrier in the merchant account.
         *
         * Create a request for the method "returncarrier.patch".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param accountId Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         * @param carrierAccountId Required. The Google-provided unique carrier ID, used to update the resource.
         * @param content the {@link com.google.api.services.content.model.AccountReturnCarrier}
         * @since 1.13
         */
        protected Patch(java.lang.Long accountId, java.lang.Long carrierAccountId, com.google.api.services.content.model.AccountReturnCarrier content) {
          super(ShoppingContent.this, "PATCH", REST_PATH, content, com.google.api.services.content.model.AccountReturnCarrier.class);
          this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
          this.carrierAccountId = com.google.api.client.util.Preconditions.checkNotNull(carrierAccountId, "Required parameter carrierAccountId must be specified.");
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        @com.google.api.client.util.Key
        private java.lang.Long accountId;

        /** Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        public java.lang.Long getAccountId() {
          return accountId;
        }

        /**
         * Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
         */
        public Patch setAccountId(java.lang.Long accountId) {
          this.accountId = accountId;
          return this;
        }

        /** Required. The Google-provided unique carrier ID, used to update the resource. */
        @com.google.api.client.util.Key
        private java.lang.Long carrierAccountId;

        /** Required. The Google-provided unique carrier ID, used to update the resource.
         */
        public java.lang.Long getCarrierAccountId() {
          return carrierAccountId;
        }

        /** Required. The Google-provided unique carrier ID, used to update the resource. */
        public Patch setCarrierAccountId(java.lang.Long carrierAccountId) {
          this.carrierAccountId = carrierAccountId;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Accountstatuses collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Accountstatuses.List request = content.accountstatuses().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accountstatuses accountstatuses() {
    return new Accountstatuses();
  }

  /**
   * The "accountstatuses" collection of methods.
   */
  public class Accountstatuses {

    /**
     * Retrieves multiple Merchant Center account statuses in a single request.
     *
     * Create a request for the method "accountstatuses.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.AccountstatusesCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.AccountstatusesCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.AccountstatusesCustomBatchResponse> {

      private static final String REST_PATH = "accountstatuses/batch";

      /**
       * Retrieves multiple Merchant Center account statuses in a single request.
       *
       * Create a request for the method "accountstatuses.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.AccountstatusesCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.AccountstatusesCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.AccountstatusesCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-
     * client accounts.
     *
     * Create a request for the method "accountstatuses.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.math.BigInteger accountId) throws java.io.IOException {
      Get result = new Get(merchantId, accountId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.AccountStatus> {

      private static final String REST_PATH = "{merchantId}/accountstatuses/{accountId}";

      /**
       * Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-
       * client accounts.
       *
       * Create a request for the method "accountstatuses.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.math.BigInteger accountId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.AccountStatus.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account. */
      public Get setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      /**
       * If set, only issues for the specified destinations are returned, otherwise only issues for
       * the Shopping destination.
       */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> destinations;

      /** If set, only issues for the specified destinations are returned, otherwise only issues for the
     Shopping destination.
       */
      public java.util.List<java.lang.String> getDestinations() {
        return destinations;
      }

      /**
       * If set, only issues for the specified destinations are returned, otherwise only issues for
       * the Shopping destination.
       */
      public Get setDestinations(java.util.List<java.lang.String> destinations) {
        this.destinations = destinations;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists the statuses of the sub-accounts in your Merchant Center account.
     *
     * Create a request for the method "accountstatuses.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. This must be a multi-client account.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.AccountstatusesListResponse> {

      private static final String REST_PATH = "{merchantId}/accountstatuses";

      /**
       * Lists the statuses of the sub-accounts in your Merchant Center account.
       *
       * Create a request for the method "accountstatuses.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. This must be a multi-client account.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.AccountstatusesListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the managing account. This must be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. This must be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the managing account. This must be a multi-client account. */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * If set, only issues for the specified destinations are returned, otherwise only issues for
       * the Shopping destination.
       */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> destinations;

      /** If set, only issues for the specified destinations are returned, otherwise only issues for the
     Shopping destination.
       */
      public java.util.List<java.lang.String> getDestinations() {
        return destinations;
      }

      /**
       * If set, only issues for the specified destinations are returned, otherwise only issues for
       * the Shopping destination.
       */
      public List setDestinations(java.util.List<java.lang.String> destinations) {
        this.destinations = destinations;
        return this;
      }

      /** The maximum number of account statuses to return in the response, used for paging. */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of account statuses to return in the response, used for paging.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /** The maximum number of account statuses to return in the response, used for paging. */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** If set, only the accounts with the given name (case sensitive) will be returned. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** If set, only the accounts with the given name (case sensitive) will be returned.
       */
      public java.lang.String getName() {
        return name;
      }

      /** If set, only the accounts with the given name (case sensitive) will be returned. */
      public List setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Accounttax collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Accounttax.List request = content.accounttax().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounttax accounttax() {
    return new Accounttax();
  }

  /**
   * The "accounttax" collection of methods.
   */
  public class Accounttax {

    /**
     * Retrieves and updates tax settings of multiple accounts in a single request.
     *
     * Create a request for the method "accounttax.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.AccounttaxCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.AccounttaxCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.AccounttaxCustomBatchResponse> {

      private static final String REST_PATH = "accounttax/batch";

      /**
       * Retrieves and updates tax settings of multiple accounts in a single request.
       *
       * Create a request for the method "accounttax.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.AccounttaxCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.AccounttaxCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.AccounttaxCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the tax settings of the account.
     *
     * Create a request for the method "accounttax.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account for which to get/update account tax settings.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.math.BigInteger accountId) throws java.io.IOException {
      Get result = new Get(merchantId, accountId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.AccountTax> {

      private static final String REST_PATH = "{merchantId}/accounttax/{accountId}";

      /**
       * Retrieves the tax settings of the account.
       *
       * Create a request for the method "accounttax.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account for which to get/update account tax settings.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.math.BigInteger accountId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.AccountTax.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account for which to get/update account tax settings. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account for which to get/update account tax settings.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account for which to get/update account tax settings. */
      public Get setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists the tax settings of the sub-accounts in your Merchant Center account.
     *
     * Create a request for the method "accounttax.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. This must be a multi-client account.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.AccounttaxListResponse> {

      private static final String REST_PATH = "{merchantId}/accounttax";

      /**
       * Lists the tax settings of the sub-accounts in your Merchant Center account.
       *
       * Create a request for the method "accounttax.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. This must be a multi-client account.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.AccounttaxListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the managing account. This must be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. This must be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the managing account. This must be a multi-client account. */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The maximum number of tax settings to return in the response, used for paging. */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of tax settings to return in the response, used for paging.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /** The maximum number of tax settings to return in the response, used for paging. */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates the tax settings of the account. Any fields that are not provided are deleted from the
     * resource.
     *
     * Create a request for the method "accounttax.update".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account for which to get/update account tax settings.
     * @param content the {@link com.google.api.services.content.model.AccountTax}
     * @return the request
     */
    public Update update(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.AccountTax content) throws java.io.IOException {
      Update result = new Update(merchantId, accountId, content);
      initialize(result);
      return result;
    }

    public class Update extends ShoppingContentRequest<com.google.api.services.content.model.AccountTax> {

      private static final String REST_PATH = "{merchantId}/accounttax/{accountId}";

      /**
       * Updates the tax settings of the account. Any fields that are not provided are deleted from the
       * resource.
       *
       * Create a request for the method "accounttax.update".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account for which to get/update account tax settings.
       * @param content the {@link com.google.api.services.content.model.AccountTax}
       * @since 1.13
       */
      protected Update(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.AccountTax content) {
        super(ShoppingContent.this, "PUT", REST_PATH, content, com.google.api.services.content.model.AccountTax.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Update setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account for which to get/update account tax settings. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account for which to get/update account tax settings.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account for which to get/update account tax settings. */
      public Update setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Collections collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Collections.List request = content.collections().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Collections collections() {
    return new Collections();
  }

  /**
   * The "collections" collection of methods.
   */
  public class Collections {

    /**
     * Uploads a collection to your Merchant Center account. If a collection with the same collectionId
     * already exists, this method updates that entry. In each update, the collection is completely
     * replaced by the fields in the body of the update request.
     *
     * Create a request for the method "collections.create".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
     * @param content the {@link com.google.api.services.content.model.Collection}
     * @return the request
     */
    public Create create(java.lang.Long merchantId, com.google.api.services.content.model.Collection content) throws java.io.IOException {
      Create result = new Create(merchantId, content);
      initialize(result);
      return result;
    }

    public class Create extends ShoppingContentRequest<com.google.api.services.content.model.Collection> {

      private static final String REST_PATH = "{merchantId}/collections";

      /**
       * Uploads a collection to your Merchant Center account. If a collection with the same
       * collectionId already exists, this method updates that entry. In each update, the collection is
       * completely replaced by the fields in the body of the update request.
       *
       * Create a request for the method "collections.create".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
       * @param content the {@link com.google.api.services.content.model.Collection}
       * @since 1.13
       */
      protected Create(java.lang.Long merchantId, com.google.api.services.content.model.Collection content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.Collection.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that contains the collection. This account cannot be a multi-client
     account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      public Create setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a collection from your Merchant Center account.
     *
     * Create a request for the method "collections.delete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
     * @param collectionId Required. The collectionId of the collection. CollectionId is the same as the REST ID of the
     *        collection.
     * @return the request
     */
    public Delete delete(java.lang.Long merchantId, java.lang.String collectionId) throws java.io.IOException {
      Delete result = new Delete(merchantId, collectionId);
      initialize(result);
      return result;
    }

    public class Delete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/collections/{collectionId}";

      /**
       * Deletes a collection from your Merchant Center account.
       *
       * Create a request for the method "collections.delete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
       * @param collectionId Required. The collectionId of the collection. CollectionId is the same as the REST ID of the
     *        collection.
       * @since 1.13
       */
      protected Delete(java.lang.Long merchantId, java.lang.String collectionId) {
        super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.collectionId = com.google.api.client.util.Preconditions.checkNotNull(collectionId, "Required parameter collectionId must be specified.");
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that contains the collection. This account cannot be a multi-client
     account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      public Delete setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * Required. The collectionId of the collection. CollectionId is the same as the REST ID of
       * the collection.
       */
      @com.google.api.client.util.Key
      private java.lang.String collectionId;

      /** Required. The collectionId of the collection. CollectionId is the same as the REST ID of the
     collection.
       */
      public java.lang.String getCollectionId() {
        return collectionId;
      }

      /**
       * Required. The collectionId of the collection. CollectionId is the same as the REST ID of
       * the collection.
       */
      public Delete setCollectionId(java.lang.String collectionId) {
        this.collectionId = collectionId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a collection from your Merchant Center account.
     *
     * Create a request for the method "collections.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
     * @param collectionId Required. The REST ID of the collection.
     * @return the request
     */
    public Get get(java.lang.Long merchantId, java.lang.String collectionId) throws java.io.IOException {
      Get result = new Get(merchantId, collectionId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.Collection> {

      private static final String REST_PATH = "{merchantId}/collections/{collectionId}";

      /**
       * Retrieves a collection from your Merchant Center account.
       *
       * Create a request for the method "collections.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
       * @param collectionId Required. The REST ID of the collection.
       * @since 1.13
       */
      protected Get(java.lang.Long merchantId, java.lang.String collectionId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.Collection.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.collectionId = com.google.api.client.util.Preconditions.checkNotNull(collectionId, "Required parameter collectionId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that contains the collection. This account cannot be a multi-client
     account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      public Get setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The REST ID of the collection. */
      @com.google.api.client.util.Key
      private java.lang.String collectionId;

      /** Required. The REST ID of the collection.
       */
      public java.lang.String getCollectionId() {
        return collectionId;
      }

      /** Required. The REST ID of the collection. */
      public Get setCollectionId(java.lang.String collectionId) {
        this.collectionId = collectionId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists the collections in your Merchant Center account. The response might contain fewer items
     * than specified by page_size. Rely on next_page_token to determine if there are more items to be
     * requested.
     *
     * Create a request for the method "collections.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
     * @return the request
     */
    public List list(java.lang.Long merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ListCollectionsResponse> {

      private static final String REST_PATH = "{merchantId}/collections";

      /**
       * Lists the collections in your Merchant Center account. The response might contain fewer items
       * than specified by page_size. Rely on next_page_token to determine if there are more items to be
       * requested.
       *
       * Create a request for the method "collections.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
       * @since 1.13
       */
      protected List(java.lang.Long merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ListCollectionsResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that contains the collection. This account cannot be a multi-client
     account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      public List setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * The maximum number of collections to return in the response, used for paging. Defaults to
       * 50; values above 1000 will be coerced to 1000.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of collections to return in the response, used for paging. Defaults to 50;
     values above 1000 will be coerced to 1000.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of collections to return in the response, used for paging. Defaults to
       * 50; values above 1000 will be coerced to 1000.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * Token (if provided) to retrieve the subsequent page. All other parameters must match the
       * original call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Token (if provided) to retrieve the subsequent page. All other parameters must match the original
     call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Token (if provided) to retrieve the subsequent page. All other parameters must match the
       * original call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Collectionstatuses collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Collectionstatuses.List request = content.collectionstatuses().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Collectionstatuses collectionstatuses() {
    return new Collectionstatuses();
  }

  /**
   * The "collectionstatuses" collection of methods.
   */
  public class Collectionstatuses {

    /**
     * Gets the status of a collection from your Merchant Center account.
     *
     * Create a request for the method "collectionstatuses.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
     * @param collectionId Required. The collectionId of the collection. CollectionId is the same as the REST ID of the
     *        collection.
     * @return the request
     */
    public Get get(java.lang.Long merchantId, java.lang.String collectionId) throws java.io.IOException {
      Get result = new Get(merchantId, collectionId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.CollectionStatus> {

      private static final String REST_PATH = "{merchantId}/collectionstatuses/{collectionId}";

      /**
       * Gets the status of a collection from your Merchant Center account.
       *
       * Create a request for the method "collectionstatuses.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
       * @param collectionId Required. The collectionId of the collection. CollectionId is the same as the REST ID of the
     *        collection.
       * @since 1.13
       */
      protected Get(java.lang.Long merchantId, java.lang.String collectionId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.CollectionStatus.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.collectionId = com.google.api.client.util.Preconditions.checkNotNull(collectionId, "Required parameter collectionId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that contains the collection. This account cannot be a multi-client
     account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      public Get setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * Required. The collectionId of the collection. CollectionId is the same as the REST ID of
       * the collection.
       */
      @com.google.api.client.util.Key
      private java.lang.String collectionId;

      /** Required. The collectionId of the collection. CollectionId is the same as the REST ID of the
     collection.
       */
      public java.lang.String getCollectionId() {
        return collectionId;
      }

      /**
       * Required. The collectionId of the collection. CollectionId is the same as the REST ID of
       * the collection.
       */
      public Get setCollectionId(java.lang.String collectionId) {
        this.collectionId = collectionId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists the statuses of the collections in your Merchant Center account.
     *
     * Create a request for the method "collectionstatuses.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
     * @return the request
     */
    public List list(java.lang.Long merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ListCollectionStatusesResponse> {

      private static final String REST_PATH = "{merchantId}/collectionstatuses";

      /**
       * Lists the statuses of the collections in your Merchant Center account.
       *
       * Create a request for the method "collectionstatuses.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that contains the collection. This account cannot be a multi-client
     *        account.
       * @since 1.13
       */
      protected List(java.lang.Long merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ListCollectionStatusesResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that contains the collection. This account cannot be a multi-client
     account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The ID of the account that contains the collection. This account cannot be a
       * multi-client account.
       */
      public List setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * The maximum number of collection statuses to return in the response, used for paging.
       * Defaults to 50; values above 1000 will be coerced to 1000.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of collection statuses to return in the response, used for paging. Defaults to
     50; values above 1000 will be coerced to 1000.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of collection statuses to return in the response, used for paging.
       * Defaults to 50; values above 1000 will be coerced to 1000.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * Token (if provided) to retrieve the subsequent page. All other parameters must match the
       * original call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Token (if provided) to retrieve the subsequent page. All other parameters must match the original
     call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Token (if provided) to retrieve the subsequent page. All other parameters must match the
       * original call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Conversionsources collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Conversionsources.List request = content.conversionsources().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Conversionsources conversionsources() {
    return new Conversionsources();
  }

  /**
   * The "conversionsources" collection of methods.
   */
  public class Conversionsources {

    /**
     * Creates a new conversion source.
     *
     * Create a request for the method "conversionsources.create".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that owns the new conversion source.
     * @param content the {@link com.google.api.services.content.model.ConversionSource}
     * @return the request
     */
    public Create create(java.lang.Long merchantId, com.google.api.services.content.model.ConversionSource content) throws java.io.IOException {
      Create result = new Create(merchantId, content);
      initialize(result);
      return result;
    }

    public class Create extends ShoppingContentRequest<com.google.api.services.content.model.ConversionSource> {

      private static final String REST_PATH = "{merchantId}/conversionsources";

      /**
       * Creates a new conversion source.
       *
       * Create a request for the method "conversionsources.create".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that owns the new conversion source.
       * @param content the {@link com.google.api.services.content.model.ConversionSource}
       * @since 1.13
       */
      protected Create(java.lang.Long merchantId, com.google.api.services.content.model.ConversionSource content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.ConversionSource.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that owns the new conversion source. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that owns the new conversion source.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that owns the new conversion source. */
      public Create setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Archives an existing conversion source. It will be recoverable for 30 days. This archiving
     * behavior is not typical in the Content API and unique to this service.
     *
     * Create a request for the method "conversionsources.delete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that owns the new conversion source.
     * @param conversionSourceId Required. The ID of the conversion source to be deleted.
     * @return the request
     */
    public Delete delete(java.lang.Long merchantId, java.lang.String conversionSourceId) throws java.io.IOException {
      Delete result = new Delete(merchantId, conversionSourceId);
      initialize(result);
      return result;
    }

    public class Delete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/conversionsources/{conversionSourceId}";

      /**
       * Archives an existing conversion source. It will be recoverable for 30 days. This archiving
       * behavior is not typical in the Content API and unique to this service.
       *
       * Create a request for the method "conversionsources.delete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that owns the new conversion source.
       * @param conversionSourceId Required. The ID of the conversion source to be deleted.
       * @since 1.13
       */
      protected Delete(java.lang.Long merchantId, java.lang.String conversionSourceId) {
        super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.conversionSourceId = com.google.api.client.util.Preconditions.checkNotNull(conversionSourceId, "Required parameter conversionSourceId must be specified.");
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that owns the new conversion source. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that owns the new conversion source.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that owns the new conversion source. */
      public Delete setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The ID of the conversion source to be deleted. */
      @com.google.api.client.util.Key
      private java.lang.String conversionSourceId;

      /** Required. The ID of the conversion source to be deleted.
       */
      public java.lang.String getConversionSourceId() {
        return conversionSourceId;
      }

      /** Required. The ID of the conversion source to be deleted. */
      public Delete setConversionSourceId(java.lang.String conversionSourceId) {
        this.conversionSourceId = conversionSourceId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Fetches a conversion source.
     *
     * Create a request for the method "conversionsources.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that owns the new conversion source.
     * @param conversionSourceId Required. The REST ID of the collection.
     * @return the request
     */
    public Get get(java.lang.Long merchantId, java.lang.String conversionSourceId) throws java.io.IOException {
      Get result = new Get(merchantId, conversionSourceId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.ConversionSource> {

      private static final String REST_PATH = "{merchantId}/conversionsources/{conversionSourceId}";

      /**
       * Fetches a conversion source.
       *
       * Create a request for the method "conversionsources.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that owns the new conversion source.
       * @param conversionSourceId Required. The REST ID of the collection.
       * @since 1.13
       */
      protected Get(java.lang.Long merchantId, java.lang.String conversionSourceId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ConversionSource.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.conversionSourceId = com.google.api.client.util.Preconditions.checkNotNull(conversionSourceId, "Required parameter conversionSourceId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that owns the new conversion source. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that owns the new conversion source.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that owns the new conversion source. */
      public Get setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The REST ID of the collection. */
      @com.google.api.client.util.Key
      private java.lang.String conversionSourceId;

      /** Required. The REST ID of the collection.
       */
      public java.lang.String getConversionSourceId() {
        return conversionSourceId;
      }

      /** Required. The REST ID of the collection. */
      public Get setConversionSourceId(java.lang.String conversionSourceId) {
        this.conversionSourceId = conversionSourceId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of conversion sources the caller has access to.
     *
     * Create a request for the method "conversionsources.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that owns the new conversion source.
     * @return the request
     */
    public List list(java.lang.Long merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ListConversionSourcesResponse> {

      private static final String REST_PATH = "{merchantId}/conversionsources";

      /**
       * Retrieves the list of conversion sources the caller has access to.
       *
       * Create a request for the method "conversionsources.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that owns the new conversion source.
       * @since 1.13
       */
      protected List(java.lang.Long merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ListConversionSourcesResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that owns the new conversion source. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that owns the new conversion source.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that owns the new conversion source. */
      public List setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * The maximum number of conversion sources to return in a page. If no `page_size` is
       * specified, `100` is used as the default value. The maximum value is `200`. Values above
       * `200` will be coerced to `200`. Regardless of pagination, at most `200` conversion sources
       * are returned in total.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of conversion sources to return in a page. If no `page_size` is specified, `100`
     is used as the default value. The maximum value is `200`. Values above `200` will be coerced to
     `200`. Regardless of pagination, at most `200` conversion sources are returned in total.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of conversion sources to return in a page. If no `page_size` is
       * specified, `100` is used as the default value. The maximum value is `200`. Values above
       * `200` will be coerced to `200`. Regardless of pagination, at most `200` conversion sources
       * are returned in total.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /** Page token. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** Page token. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /** If true, also returns archived conversion sources. */
      @com.google.api.client.util.Key
      private java.lang.Boolean showDeleted;

      /** If true, also returns archived conversion sources.
       */
      public java.lang.Boolean getShowDeleted() {
        return showDeleted;
      }

      /** If true, also returns archived conversion sources. */
      public List setShowDeleted(java.lang.Boolean showDeleted) {
        this.showDeleted = showDeleted;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates information of an existing conversion source.
     *
     * Create a request for the method "conversionsources.patch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that owns the new conversion source.
     * @param conversionSourceId Required. The ID of the conversion source to be updated.
     * @param content the {@link com.google.api.services.content.model.ConversionSource}
     * @return the request
     */
    public Patch patch(java.lang.Long merchantId, java.lang.String conversionSourceId, com.google.api.services.content.model.ConversionSource content) throws java.io.IOException {
      Patch result = new Patch(merchantId, conversionSourceId, content);
      initialize(result);
      return result;
    }

    public class Patch extends ShoppingContentRequest<com.google.api.services.content.model.ConversionSource> {

      private static final String REST_PATH = "{merchantId}/conversionsources/{conversionSourceId}";

      /**
       * Updates information of an existing conversion source.
       *
       * Create a request for the method "conversionsources.patch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that owns the new conversion source.
       * @param conversionSourceId Required. The ID of the conversion source to be updated.
       * @param content the {@link com.google.api.services.content.model.ConversionSource}
       * @since 1.13
       */
      protected Patch(java.lang.Long merchantId, java.lang.String conversionSourceId, com.google.api.services.content.model.ConversionSource content) {
        super(ShoppingContent.this, "PATCH", REST_PATH, content, com.google.api.services.content.model.ConversionSource.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.conversionSourceId = com.google.api.client.util.Preconditions.checkNotNull(conversionSourceId, "Required parameter conversionSourceId must be specified.");
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that owns the new conversion source. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that owns the new conversion source.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that owns the new conversion source. */
      public Patch setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The ID of the conversion source to be updated. */
      @com.google.api.client.util.Key
      private java.lang.String conversionSourceId;

      /** Required. The ID of the conversion source to be updated.
       */
      public java.lang.String getConversionSourceId() {
        return conversionSourceId;
      }

      /** Required. The ID of the conversion source to be updated. */
      public Patch setConversionSourceId(java.lang.String conversionSourceId) {
        this.conversionSourceId = conversionSourceId;
        return this;
      }

      /** Optional. List of fields being updated. */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Optional. List of fields being updated.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /** Optional. List of fields being updated. */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Re-enables an archived conversion source.
     *
     * Create a request for the method "conversionsources.undelete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Undelete#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that owns the new conversion source.
     * @param conversionSourceId Required. The ID of the conversion source to be undeleted.
     * @param content the {@link com.google.api.services.content.model.UndeleteConversionSourceRequest}
     * @return the request
     */
    public Undelete undelete(java.lang.Long merchantId, java.lang.String conversionSourceId, com.google.api.services.content.model.UndeleteConversionSourceRequest content) throws java.io.IOException {
      Undelete result = new Undelete(merchantId, conversionSourceId, content);
      initialize(result);
      return result;
    }

    public class Undelete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/conversionsources/{conversionSourceId}:undelete";

      /**
       * Re-enables an archived conversion source.
       *
       * Create a request for the method "conversionsources.undelete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Undelete#execute()} method to invoke the remote operation. <p>
       * {@link
       * Undelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that owns the new conversion source.
       * @param conversionSourceId Required. The ID of the conversion source to be undeleted.
       * @param content the {@link com.google.api.services.content.model.UndeleteConversionSourceRequest}
       * @since 1.13
       */
      protected Undelete(java.lang.Long merchantId, java.lang.String conversionSourceId, com.google.api.services.content.model.UndeleteConversionSourceRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.conversionSourceId = com.google.api.client.util.Preconditions.checkNotNull(conversionSourceId, "Required parameter conversionSourceId must be specified.");
      }

      @Override
      public Undelete set$Xgafv(java.lang.String $Xgafv) {
        return (Undelete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Undelete setAccessToken(java.lang.String accessToken) {
        return (Undelete) super.setAccessToken(accessToken);
      }

      @Override
      public Undelete setAlt(java.lang.String alt) {
        return (Undelete) super.setAlt(alt);
      }

      @Override
      public Undelete setCallback(java.lang.String callback) {
        return (Undelete) super.setCallback(callback);
      }

      @Override
      public Undelete setFields(java.lang.String fields) {
        return (Undelete) super.setFields(fields);
      }

      @Override
      public Undelete setKey(java.lang.String key) {
        return (Undelete) super.setKey(key);
      }

      @Override
      public Undelete setOauthToken(java.lang.String oauthToken) {
        return (Undelete) super.setOauthToken(oauthToken);
      }

      @Override
      public Undelete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Undelete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Undelete setQuotaUser(java.lang.String quotaUser) {
        return (Undelete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Undelete setUploadType(java.lang.String uploadType) {
        return (Undelete) super.setUploadType(uploadType);
      }

      @Override
      public Undelete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Undelete) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that owns the new conversion source. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that owns the new conversion source.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that owns the new conversion source. */
      public Undelete setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The ID of the conversion source to be undeleted. */
      @com.google.api.client.util.Key
      private java.lang.String conversionSourceId;

      /** Required. The ID of the conversion source to be undeleted.
       */
      public java.lang.String getConversionSourceId() {
        return conversionSourceId;
      }

      /** Required. The ID of the conversion source to be undeleted. */
      public Undelete setConversionSourceId(java.lang.String conversionSourceId) {
        this.conversionSourceId = conversionSourceId;
        return this;
      }

      @Override
      public Undelete set(String parameterName, Object value) {
        return (Undelete) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Csses collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Csses.List request = content.csses().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Csses csses() {
    return new Csses();
  }

  /**
   * The "csses" collection of methods.
   */
  public class Csses {

    /**
     * Retrieves a single CSS domain by ID.
     *
     * Create a request for the method "csses.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param cssGroupId Required. The ID of the managing account. If this parameter is not the same as
     *        [cssDomainId](#cssDomainId), then this ID must be a CSS group ID and `cssDomainId` must be
     *        the ID of a CSS domain affiliated with this group.
     * @param cssDomainId Required. The ID of the CSS domain to return.
     * @return the request
     */
    public Get get(java.lang.Long cssGroupId, java.lang.Long cssDomainId) throws java.io.IOException {
      Get result = new Get(cssGroupId, cssDomainId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.Css> {

      private static final String REST_PATH = "{cssGroupId}/csses/{cssDomainId}";

      /**
       * Retrieves a single CSS domain by ID.
       *
       * Create a request for the method "csses.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param cssGroupId Required. The ID of the managing account. If this parameter is not the same as
     *        [cssDomainId](#cssDomainId), then this ID must be a CSS group ID and `cssDomainId` must be
     *        the ID of a CSS domain affiliated with this group.
       * @param cssDomainId Required. The ID of the CSS domain to return.
       * @since 1.13
       */
      protected Get(java.lang.Long cssGroupId, java.lang.Long cssDomainId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.Css.class);
        this.cssGroupId = com.google.api.client.util.Preconditions.checkNotNull(cssGroupId, "Required parameter cssGroupId must be specified.");
        this.cssDomainId = com.google.api.client.util.Preconditions.checkNotNull(cssDomainId, "Required parameter cssDomainId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The ID of the managing account. If this parameter is not the same as
       * [cssDomainId](#cssDomainId), then this ID must be a CSS group ID and `cssDomainId` must be
       * the ID of a CSS domain affiliated with this group.
       */
      @com.google.api.client.util.Key
      private java.lang.Long cssGroupId;

      /** Required. The ID of the managing account. If this parameter is not the same as
     [cssDomainId](#cssDomainId), then this ID must be a CSS group ID and `cssDomainId` must be the ID
     of a CSS domain affiliated with this group.
       */
      public java.lang.Long getCssGroupId() {
        return cssGroupId;
      }

      /**
       * Required. The ID of the managing account. If this parameter is not the same as
       * [cssDomainId](#cssDomainId), then this ID must be a CSS group ID and `cssDomainId` must be
       * the ID of a CSS domain affiliated with this group.
       */
      public Get setCssGroupId(java.lang.Long cssGroupId) {
        this.cssGroupId = cssGroupId;
        return this;
      }

      /** Required. The ID of the CSS domain to return. */
      @com.google.api.client.util.Key
      private java.lang.Long cssDomainId;

      /** Required. The ID of the CSS domain to return.
       */
      public java.lang.Long getCssDomainId() {
        return cssDomainId;
      }

      /** Required. The ID of the CSS domain to return. */
      public Get setCssDomainId(java.lang.Long cssDomainId) {
        this.cssDomainId = cssDomainId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists CSS domains affiliated with a CSS group.
     *
     * Create a request for the method "csses.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param cssGroupId Required. The CSS group ID of CSS domains to be listed.
     * @return the request
     */
    public List list(java.lang.Long cssGroupId) throws java.io.IOException {
      List result = new List(cssGroupId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ListCssesResponse> {

      private static final String REST_PATH = "{cssGroupId}/csses";

      /**
       * Lists CSS domains affiliated with a CSS group.
       *
       * Create a request for the method "csses.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param cssGroupId Required. The CSS group ID of CSS domains to be listed.
       * @since 1.13
       */
      protected List(java.lang.Long cssGroupId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ListCssesResponse.class);
        this.cssGroupId = com.google.api.client.util.Preconditions.checkNotNull(cssGroupId, "Required parameter cssGroupId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The CSS group ID of CSS domains to be listed. */
      @com.google.api.client.util.Key
      private java.lang.Long cssGroupId;

      /** Required. The CSS group ID of CSS domains to be listed.
       */
      public java.lang.Long getCssGroupId() {
        return cssGroupId;
      }

      /** Required. The CSS group ID of CSS domains to be listed. */
      public List setCssGroupId(java.lang.Long cssGroupId) {
        this.cssGroupId = cssGroupId;
        return this;
      }

      /**
       * The maximum number of CSS domains to return. The service may return fewer than this value.
       * If unspecified, at most 50 CSS domains will be returned. The maximum value is 1000; values
       * above 1000 will be coerced to 1000.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of CSS domains to return. The service may return fewer than this value. If
     unspecified, at most 50 CSS domains will be returned. The maximum value is 1000; values above 1000
     will be coerced to 1000.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of CSS domains to return. The service may return fewer than this value.
       * If unspecified, at most 50 CSS domains will be returned. The maximum value is 1000; values
       * above 1000 will be coerced to 1000.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListCsses` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListCsses` must match
       * the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListCsses` call. Provide this to retrieve the subsequent
     page. When paginating, all other parameters provided to `ListCsses` must match the call that
     provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListCsses` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListCsses` must match
       * the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates labels that are assigned to a CSS domain by its CSS group.
     *
     * Create a request for the method "csses.updatelabels".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Updatelabels#execute()} method to invoke the remote operation.
     *
     * @param cssGroupId Required. The CSS group ID of the updated CSS domain.
     * @param cssDomainId Required. The ID of the updated CSS domain.
     * @param content the {@link com.google.api.services.content.model.LabelIds}
     * @return the request
     */
    public Updatelabels updatelabels(java.lang.Long cssGroupId, java.lang.Long cssDomainId, com.google.api.services.content.model.LabelIds content) throws java.io.IOException {
      Updatelabels result = new Updatelabels(cssGroupId, cssDomainId, content);
      initialize(result);
      return result;
    }

    public class Updatelabels extends ShoppingContentRequest<com.google.api.services.content.model.Css> {

      private static final String REST_PATH = "{cssGroupId}/csses/{cssDomainId}/updatelabels";

      /**
       * Updates labels that are assigned to a CSS domain by its CSS group.
       *
       * Create a request for the method "csses.updatelabels".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Updatelabels#execute()} method to invoke the remote operation. <p>
       * {@link
       * Updatelabels#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param cssGroupId Required. The CSS group ID of the updated CSS domain.
       * @param cssDomainId Required. The ID of the updated CSS domain.
       * @param content the {@link com.google.api.services.content.model.LabelIds}
       * @since 1.13
       */
      protected Updatelabels(java.lang.Long cssGroupId, java.lang.Long cssDomainId, com.google.api.services.content.model.LabelIds content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.Css.class);
        this.cssGroupId = com.google.api.client.util.Preconditions.checkNotNull(cssGroupId, "Required parameter cssGroupId must be specified.");
        this.cssDomainId = com.google.api.client.util.Preconditions.checkNotNull(cssDomainId, "Required parameter cssDomainId must be specified.");
      }

      @Override
      public Updatelabels set$Xgafv(java.lang.String $Xgafv) {
        return (Updatelabels) super.set$Xgafv($Xgafv);
      }

      @Override
      public Updatelabels setAccessToken(java.lang.String accessToken) {
        return (Updatelabels) super.setAccessToken(accessToken);
      }

      @Override
      public Updatelabels setAlt(java.lang.String alt) {
        return (Updatelabels) super.setAlt(alt);
      }

      @Override
      public Updatelabels setCallback(java.lang.String callback) {
        return (Updatelabels) super.setCallback(callback);
      }

      @Override
      public Updatelabels setFields(java.lang.String fields) {
        return (Updatelabels) super.setFields(fields);
      }

      @Override
      public Updatelabels setKey(java.lang.String key) {
        return (Updatelabels) super.setKey(key);
      }

      @Override
      public Updatelabels setOauthToken(java.lang.String oauthToken) {
        return (Updatelabels) super.setOauthToken(oauthToken);
      }

      @Override
      public Updatelabels setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Updatelabels) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Updatelabels setQuotaUser(java.lang.String quotaUser) {
        return (Updatelabels) super.setQuotaUser(quotaUser);
      }

      @Override
      public Updatelabels setUploadType(java.lang.String uploadType) {
        return (Updatelabels) super.setUploadType(uploadType);
      }

      @Override
      public Updatelabels setUploadProtocol(java.lang.String uploadProtocol) {
        return (Updatelabels) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The CSS group ID of the updated CSS domain. */
      @com.google.api.client.util.Key
      private java.lang.Long cssGroupId;

      /** Required. The CSS group ID of the updated CSS domain.
       */
      public java.lang.Long getCssGroupId() {
        return cssGroupId;
      }

      /** Required. The CSS group ID of the updated CSS domain. */
      public Updatelabels setCssGroupId(java.lang.Long cssGroupId) {
        this.cssGroupId = cssGroupId;
        return this;
      }

      /** Required. The ID of the updated CSS domain. */
      @com.google.api.client.util.Key
      private java.lang.Long cssDomainId;

      /** Required. The ID of the updated CSS domain.
       */
      public java.lang.Long getCssDomainId() {
        return cssDomainId;
      }

      /** Required. The ID of the updated CSS domain. */
      public Updatelabels setCssDomainId(java.lang.Long cssDomainId) {
        this.cssDomainId = cssDomainId;
        return this;
      }

      @Override
      public Updatelabels set(String parameterName, Object value) {
        return (Updatelabels) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Datafeeds collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Datafeeds.List request = content.datafeeds().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Datafeeds datafeeds() {
    return new Datafeeds();
  }

  /**
   * The "datafeeds" collection of methods.
   */
  public class Datafeeds {

    /**
     * Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.
     *
     * Create a request for the method "datafeeds.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.DatafeedsCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.DatafeedsCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.DatafeedsCustomBatchResponse> {

      private static final String REST_PATH = "datafeeds/batch";

      /**
       * Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.
       *
       * Create a request for the method "datafeeds.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.DatafeedsCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.DatafeedsCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.DatafeedsCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a datafeed configuration from your Merchant Center account.
     *
     * Create a request for the method "datafeeds.delete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
     * @param datafeedId The ID of the datafeed.
     * @return the request
     */
    public Delete delete(java.math.BigInteger merchantId, java.math.BigInteger datafeedId) throws java.io.IOException {
      Delete result = new Delete(merchantId, datafeedId);
      initialize(result);
      return result;
    }

    public class Delete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/datafeeds/{datafeedId}";

      /**
       * Deletes a datafeed configuration from your Merchant Center account.
       *
       * Create a request for the method "datafeeds.delete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       * @param datafeedId The ID of the datafeed.
       * @since 1.13
       */
      protected Delete(java.math.BigInteger merchantId, java.math.BigInteger datafeedId) {
        super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.datafeedId = com.google.api.client.util.Preconditions.checkNotNull(datafeedId, "Required parameter datafeedId must be specified.");
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      public Delete setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the datafeed. */
      @com.google.api.client.util.Key
      private java.math.BigInteger datafeedId;

      /** The ID of the datafeed.
       */
      public java.math.BigInteger getDatafeedId() {
        return datafeedId;
      }

      /** The ID of the datafeed. */
      public Delete setDatafeedId(java.math.BigInteger datafeedId) {
        this.datafeedId = datafeedId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Invokes a fetch for the datafeed in your Merchant Center account. If you need to call this method
     * more than once per day, we recommend you use the [Products
     * service](https://developers.google.com/shopping-content/reference/rest/v2.1/products) to update
     * your product data.
     *
     * Create a request for the method "datafeeds.fetchnow".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Fetchnow#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
     * @param datafeedId The ID of the datafeed to be fetched.
     * @return the request
     */
    public Fetchnow fetchnow(java.math.BigInteger merchantId, java.math.BigInteger datafeedId) throws java.io.IOException {
      Fetchnow result = new Fetchnow(merchantId, datafeedId);
      initialize(result);
      return result;
    }

    public class Fetchnow extends ShoppingContentRequest<com.google.api.services.content.model.DatafeedsFetchNowResponse> {

      private static final String REST_PATH = "{merchantId}/datafeeds/{datafeedId}/fetchNow";

      /**
       * Invokes a fetch for the datafeed in your Merchant Center account. If you need to call this
       * method more than once per day, we recommend you use the [Products
       * service](https://developers.google.com/shopping-content/reference/rest/v2.1/products) to update
       * your product data.
       *
       * Create a request for the method "datafeeds.fetchnow".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Fetchnow#execute()} method to invoke the remote operation. <p>
       * {@link
       * Fetchnow#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       * @param datafeedId The ID of the datafeed to be fetched.
       * @since 1.13
       */
      protected Fetchnow(java.math.BigInteger merchantId, java.math.BigInteger datafeedId) {
        super(ShoppingContent.this, "POST", REST_PATH, null, com.google.api.services.content.model.DatafeedsFetchNowResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.datafeedId = com.google.api.client.util.Preconditions.checkNotNull(datafeedId, "Required parameter datafeedId must be specified.");
      }

      @Override
      public Fetchnow set$Xgafv(java.lang.String $Xgafv) {
        return (Fetchnow) super.set$Xgafv($Xgafv);
      }

      @Override
      public Fetchnow setAccessToken(java.lang.String accessToken) {
        return (Fetchnow) super.setAccessToken(accessToken);
      }

      @Override
      public Fetchnow setAlt(java.lang.String alt) {
        return (Fetchnow) super.setAlt(alt);
      }

      @Override
      public Fetchnow setCallback(java.lang.String callback) {
        return (Fetchnow) super.setCallback(callback);
      }

      @Override
      public Fetchnow setFields(java.lang.String fields) {
        return (Fetchnow) super.setFields(fields);
      }

      @Override
      public Fetchnow setKey(java.lang.String key) {
        return (Fetchnow) super.setKey(key);
      }

      @Override
      public Fetchnow setOauthToken(java.lang.String oauthToken) {
        return (Fetchnow) super.setOauthToken(oauthToken);
      }

      @Override
      public Fetchnow setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Fetchnow) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Fetchnow setQuotaUser(java.lang.String quotaUser) {
        return (Fetchnow) super.setQuotaUser(quotaUser);
      }

      @Override
      public Fetchnow setUploadType(java.lang.String uploadType) {
        return (Fetchnow) super.setUploadType(uploadType);
      }

      @Override
      public Fetchnow setUploadProtocol(java.lang.String uploadProtocol) {
        return (Fetchnow) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      public Fetchnow setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the datafeed to be fetched. */
      @com.google.api.client.util.Key
      private java.math.BigInteger datafeedId;

      /** The ID of the datafeed to be fetched.
       */
      public java.math.BigInteger getDatafeedId() {
        return datafeedId;
      }

      /** The ID of the datafeed to be fetched. */
      public Fetchnow setDatafeedId(java.math.BigInteger datafeedId) {
        this.datafeedId = datafeedId;
        return this;
      }

      @Override
      public Fetchnow set(String parameterName, Object value) {
        return (Fetchnow) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a datafeed configuration from your Merchant Center account.
     *
     * Create a request for the method "datafeeds.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
     * @param datafeedId The ID of the datafeed.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.math.BigInteger datafeedId) throws java.io.IOException {
      Get result = new Get(merchantId, datafeedId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.Datafeed> {

      private static final String REST_PATH = "{merchantId}/datafeeds/{datafeedId}";

      /**
       * Retrieves a datafeed configuration from your Merchant Center account.
       *
       * Create a request for the method "datafeeds.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       * @param datafeedId The ID of the datafeed.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.math.BigInteger datafeedId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.Datafeed.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.datafeedId = com.google.api.client.util.Preconditions.checkNotNull(datafeedId, "Required parameter datafeedId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the datafeed. */
      @com.google.api.client.util.Key
      private java.math.BigInteger datafeedId;

      /** The ID of the datafeed.
       */
      public java.math.BigInteger getDatafeedId() {
        return datafeedId;
      }

      /** The ID of the datafeed. */
      public Get setDatafeedId(java.math.BigInteger datafeedId) {
        this.datafeedId = datafeedId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Registers a datafeed configuration with your Merchant Center account.
     *
     * Create a request for the method "datafeeds.insert".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
     * @param content the {@link com.google.api.services.content.model.Datafeed}
     * @return the request
     */
    public Insert insert(java.math.BigInteger merchantId, com.google.api.services.content.model.Datafeed content) throws java.io.IOException {
      Insert result = new Insert(merchantId, content);
      initialize(result);
      return result;
    }

    public class Insert extends ShoppingContentRequest<com.google.api.services.content.model.Datafeed> {

      private static final String REST_PATH = "{merchantId}/datafeeds";

      /**
       * Registers a datafeed configuration with your Merchant Center account.
       *
       * Create a request for the method "datafeeds.insert".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       * @param content the {@link com.google.api.services.content.model.Datafeed}
       * @since 1.13
       */
      protected Insert(java.math.BigInteger merchantId, com.google.api.services.content.model.Datafeed content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.Datafeed.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Insert set$Xgafv(java.lang.String $Xgafv) {
        return (Insert) super.set$Xgafv($Xgafv);
      }

      @Override
      public Insert setAccessToken(java.lang.String accessToken) {
        return (Insert) super.setAccessToken(accessToken);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setCallback(java.lang.String callback) {
        return (Insert) super.setCallback(callback);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUploadType(java.lang.String uploadType) {
        return (Insert) super.setUploadType(uploadType);
      }

      @Override
      public Insert setUploadProtocol(java.lang.String uploadProtocol) {
        return (Insert) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      public Insert setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Lists the configurations for datafeeds in your Merchant Center account.
     *
     * Create a request for the method "datafeeds.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.DatafeedsListResponse> {

      private static final String REST_PATH = "{merchantId}/datafeeds";

      /**
       * Lists the configurations for datafeeds in your Merchant Center account.
       *
       * Create a request for the method "datafeeds.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.DatafeedsListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that manages the datafeeds. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that manages the datafeeds. This account cannot be a multi-client
       * account.
       */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The maximum number of products to return in the response, used for paging. */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of products to return in the response, used for paging.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /** The maximum number of products to return in the response, used for paging. */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a datafeed configuration of your Merchant Center account. Any fields that are not
     * provided are deleted from the resource.
     *
     * Create a request for the method "datafeeds.update".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
     * @param datafeedId The ID of the datafeed.
     * @param content the {@link com.google.api.services.content.model.Datafeed}
     * @return the request
     */
    public Update update(java.math.BigInteger merchantId, java.math.BigInteger datafeedId, com.google.api.services.content.model.Datafeed content) throws java.io.IOException {
      Update result = new Update(merchantId, datafeedId, content);
      initialize(result);
      return result;
    }

    public class Update extends ShoppingContentRequest<com.google.api.services.content.model.Datafeed> {

      private static final String REST_PATH = "{merchantId}/datafeeds/{datafeedId}";

      /**
       * Updates a datafeed configuration of your Merchant Center account. Any fields that are not
       * provided are deleted from the resource.
       *
       * Create a request for the method "datafeeds.update".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       * @param datafeedId The ID of the datafeed.
       * @param content the {@link com.google.api.services.content.model.Datafeed}
       * @since 1.13
       */
      protected Update(java.math.BigInteger merchantId, java.math.BigInteger datafeedId, com.google.api.services.content.model.Datafeed content) {
        super(ShoppingContent.this, "PUT", REST_PATH, content, com.google.api.services.content.model.Datafeed.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.datafeedId = com.google.api.client.util.Preconditions.checkNotNull(datafeedId, "Required parameter datafeedId must be specified.");
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      public Update setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the datafeed. */
      @com.google.api.client.util.Key
      private java.math.BigInteger datafeedId;

      /** The ID of the datafeed.
       */
      public java.math.BigInteger getDatafeedId() {
        return datafeedId;
      }

      /** The ID of the datafeed. */
      public Update setDatafeedId(java.math.BigInteger datafeedId) {
        this.datafeedId = datafeedId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Datafeedstatuses collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Datafeedstatuses.List request = content.datafeedstatuses().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Datafeedstatuses datafeedstatuses() {
    return new Datafeedstatuses();
  }

  /**
   * The "datafeedstatuses" collection of methods.
   */
  public class Datafeedstatuses {

    /**
     * Gets multiple Merchant Center datafeed statuses in a single request.
     *
     * Create a request for the method "datafeedstatuses.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.DatafeedstatusesCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.DatafeedstatusesCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.DatafeedstatusesCustomBatchResponse> {

      private static final String REST_PATH = "datafeedstatuses/batch";

      /**
       * Gets multiple Merchant Center datafeed statuses in a single request.
       *
       * Create a request for the method "datafeedstatuses.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.DatafeedstatusesCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.DatafeedstatusesCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.DatafeedstatusesCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the status of a datafeed from your Merchant Center account.
     *
     * Create a request for the method "datafeedstatuses.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
     * @param datafeedId The ID of the datafeed.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.math.BigInteger datafeedId) throws java.io.IOException {
      Get result = new Get(merchantId, datafeedId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.DatafeedStatus> {

      private static final String REST_PATH = "{merchantId}/datafeedstatuses/{datafeedId}";

      /**
       * Retrieves the status of a datafeed from your Merchant Center account.
       *
       * Create a request for the method "datafeedstatuses.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       * @param datafeedId The ID of the datafeed.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.math.BigInteger datafeedId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.DatafeedStatus.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.datafeedId = com.google.api.client.util.Preconditions.checkNotNull(datafeedId, "Required parameter datafeedId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the datafeed. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that manages the datafeed. This account cannot be a multi-client
       * account.
       */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the datafeed. */
      @com.google.api.client.util.Key
      private java.math.BigInteger datafeedId;

      /** The ID of the datafeed.
       */
      public java.math.BigInteger getDatafeedId() {
        return datafeedId;
      }

      /** The ID of the datafeed. */
      public Get setDatafeedId(java.math.BigInteger datafeedId) {
        this.datafeedId = datafeedId;
        return this;
      }

      /**
       * Deprecated. Use `feedLabel` instead. The country to get the datafeed status for. If this
       * parameter is provided then `language` must also be provided. Note that this parameter is
       * required for feeds targeting multiple countries and languages, since a feed may have a
       * different status for each target.
       */
      @com.google.api.client.util.Key
      private java.lang.String country;

      /** Deprecated. Use `feedLabel` instead. The country to get the datafeed status for. If this parameter
     is provided then `language` must also be provided. Note that this parameter is required for feeds
     targeting multiple countries and languages, since a feed may have a different status for each
     target.
       */
      public java.lang.String getCountry() {
        return country;
      }

      /**
       * Deprecated. Use `feedLabel` instead. The country to get the datafeed status for. If this
       * parameter is provided then `language` must also be provided. Note that this parameter is
       * required for feeds targeting multiple countries and languages, since a feed may have a
       * different status for each target.
       */
      public Get setCountry(java.lang.String country) {
        this.country = country;
        return this;
      }

      /**
       * The feed label to get the datafeed status for. If this parameter is provided then
       * `language` must also be provided. Note that this parameter is required for feeds targeting
       * multiple countries and languages, since a feed may have a different status for each target.
       */
      @com.google.api.client.util.Key
      private java.lang.String feedLabel;

      /** The feed label to get the datafeed status for. If this parameter is provided then `language` must
     also be provided. Note that this parameter is required for feeds targeting multiple countries and
     languages, since a feed may have a different status for each target.
       */
      public java.lang.String getFeedLabel() {
        return feedLabel;
      }

      /**
       * The feed label to get the datafeed status for. If this parameter is provided then
       * `language` must also be provided. Note that this parameter is required for feeds targeting
       * multiple countries and languages, since a feed may have a different status for each target.
       */
      public Get setFeedLabel(java.lang.String feedLabel) {
        this.feedLabel = feedLabel;
        return this;
      }

      /**
       * The language to get the datafeed status for. If this parameter is provided then `country`
       * must also be provided. Note that this parameter is required for feeds targeting multiple
       * countries and languages, since a feed may have a different status for each target.
       */
      @com.google.api.client.util.Key
      private java.lang.String language;

      /** The language to get the datafeed status for. If this parameter is provided then `country` must also
     be provided. Note that this parameter is required for feeds targeting multiple countries and
     languages, since a feed may have a different status for each target.
       */
      public java.lang.String getLanguage() {
        return language;
      }

      /**
       * The language to get the datafeed status for. If this parameter is provided then `country`
       * must also be provided. Note that this parameter is required for feeds targeting multiple
       * countries and languages, since a feed may have a different status for each target.
       */
      public Get setLanguage(java.lang.String language) {
        this.language = language;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists the statuses of the datafeeds in your Merchant Center account.
     *
     * Create a request for the method "datafeedstatuses.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.DatafeedstatusesListResponse> {

      private static final String REST_PATH = "{merchantId}/datafeedstatuses";

      /**
       * Lists the statuses of the datafeeds in your Merchant Center account.
       *
       * Create a request for the method "datafeedstatuses.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.DatafeedstatusesListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that manages the datafeeds. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that manages the datafeeds. This account cannot be a multi-client
       * account.
       */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The maximum number of products to return in the response, used for paging. */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of products to return in the response, used for paging.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /** The maximum number of products to return in the response, used for paging. */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Freelistingsprogram collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Freelistingsprogram.List request = content.freelistingsprogram().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Freelistingsprogram freelistingsprogram() {
    return new Freelistingsprogram();
  }

  /**
   * The "freelistingsprogram" collection of methods.
   */
  public class Freelistingsprogram {

    /**
     * Retrieves the status and review eligibility for the free listing program. Returns errors and
     * warnings if they require action to resolve, will become disapprovals, or impact impressions. Use
     * `accountstatuses` to view all issues for an account.
     *
     * Create a request for the method "freelistingsprogram.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account.
     * @return the request
     */
    public Get get(java.lang.Long merchantId) throws java.io.IOException {
      Get result = new Get(merchantId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.FreeListingsProgramStatus> {

      private static final String REST_PATH = "{merchantId}/freelistingsprogram";

      /**
       * Retrieves the status and review eligibility for the free listing program. Returns errors and
       * warnings if they require action to resolve, will become disapprovals, or impact impressions.
       * Use `accountstatuses` to view all issues for an account.
       *
       * Create a request for the method "freelistingsprogram.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account.
       * @since 1.13
       */
      protected Get(java.lang.Long merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.FreeListingsProgramStatus.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account. */
      public Get setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Requests a review of free listings in a specific region. This method deprecated. Use the
     * `MerchantSupportService` to view product and account issues and request a review.
     *
     * Create a request for the method "freelistingsprogram.requestreview".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Requestreview#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account.
     * @param content the {@link com.google.api.services.content.model.RequestReviewFreeListingsRequest}
     * @return the request
     */
    public Requestreview requestreview(java.lang.Long merchantId, com.google.api.services.content.model.RequestReviewFreeListingsRequest content) throws java.io.IOException {
      Requestreview result = new Requestreview(merchantId, content);
      initialize(result);
      return result;
    }

    public class Requestreview extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/freelistingsprogram/requestreview";

      /**
       * Requests a review of free listings in a specific region. This method deprecated. Use the
       * `MerchantSupportService` to view product and account issues and request a review.
       *
       * Create a request for the method "freelistingsprogram.requestreview".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Requestreview#execute()} method to invoke the remote operation. <p>
       * {@link Requestreview#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param merchantId Required. The ID of the account.
       * @param content the {@link com.google.api.services.content.model.RequestReviewFreeListingsRequest}
       * @since 1.13
       */
      protected Requestreview(java.lang.Long merchantId, com.google.api.services.content.model.RequestReviewFreeListingsRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Requestreview set$Xgafv(java.lang.String $Xgafv) {
        return (Requestreview) super.set$Xgafv($Xgafv);
      }

      @Override
      public Requestreview setAccessToken(java.lang.String accessToken) {
        return (Requestreview) super.setAccessToken(accessToken);
      }

      @Override
      public Requestreview setAlt(java.lang.String alt) {
        return (Requestreview) super.setAlt(alt);
      }

      @Override
      public Requestreview setCallback(java.lang.String callback) {
        return (Requestreview) super.setCallback(callback);
      }

      @Override
      public Requestreview setFields(java.lang.String fields) {
        return (Requestreview) super.setFields(fields);
      }

      @Override
      public Requestreview setKey(java.lang.String key) {
        return (Requestreview) super.setKey(key);
      }

      @Override
      public Requestreview setOauthToken(java.lang.String oauthToken) {
        return (Requestreview) super.setOauthToken(oauthToken);
      }

      @Override
      public Requestreview setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Requestreview) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Requestreview setQuotaUser(java.lang.String quotaUser) {
        return (Requestreview) super.setQuotaUser(quotaUser);
      }

      @Override
      public Requestreview setUploadType(java.lang.String uploadType) {
        return (Requestreview) super.setUploadType(uploadType);
      }

      @Override
      public Requestreview setUploadProtocol(java.lang.String uploadProtocol) {
        return (Requestreview) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account. */
      public Requestreview setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Requestreview set(String parameterName, Object value) {
        return (Requestreview) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Checkoutsettings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code ShoppingContent content = new ShoppingContent(...);}
     *   {@code ShoppingContent.Checkoutsettings.List request = content.checkoutsettings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Checkoutsettings checkoutsettings() {
      return new Checkoutsettings();
    }

    /**
     * The "checkoutsettings" collection of methods.
     */
    public class Checkoutsettings {

      /**
       * Deletes `Checkout` settings and unenrolls merchant from `Checkout` program.
       *
       * Create a request for the method "checkoutsettings.delete".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param merchantId Required. The ID of the account.
       * @return the request
       */
      public Delete delete(java.lang.Long merchantId) throws java.io.IOException {
        Delete result = new Delete(merchantId);
        initialize(result);
        return result;
      }

      public class Delete extends ShoppingContentRequest<Void> {

        private static final String REST_PATH = "{merchantId}/freelistingsprogram/checkoutsettings";

        /**
         * Deletes `Checkout` settings and unenrolls merchant from `Checkout` program.
         *
         * Create a request for the method "checkoutsettings.delete".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param merchantId Required. The ID of the account.
         * @since 1.13
         */
        protected Delete(java.lang.Long merchantId) {
          super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
          this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The ID of the account. */
        @com.google.api.client.util.Key
        private java.lang.Long merchantId;

        /** Required. The ID of the account.
         */
        public java.lang.Long getMerchantId() {
          return merchantId;
        }

        /** Required. The ID of the account. */
        public Delete setMerchantId(java.lang.Long merchantId) {
          this.merchantId = merchantId;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets Checkout settings for the given merchant. This includes information about review state,
       * enrollment state and URL settings.
       *
       * Create a request for the method "checkoutsettings.get".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param merchantId Required. The ID of the account.
       * @return the request
       */
      public Get get(java.lang.Long merchantId) throws java.io.IOException {
        Get result = new Get(merchantId);
        initialize(result);
        return result;
      }

      public class Get extends ShoppingContentRequest<com.google.api.services.content.model.CheckoutSettings> {

        private static final String REST_PATH = "{merchantId}/freelistingsprogram/checkoutsettings";

        /**
         * Gets Checkout settings for the given merchant. This includes information about review state,
         * enrollment state and URL settings.
         *
         * Create a request for the method "checkoutsettings.get".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param merchantId Required. The ID of the account.
         * @since 1.13
         */
        protected Get(java.lang.Long merchantId) {
          super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.CheckoutSettings.class);
          this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The ID of the account. */
        @com.google.api.client.util.Key
        private java.lang.Long merchantId;

        /** Required. The ID of the account.
         */
        public java.lang.Long getMerchantId() {
          return merchantId;
        }

        /** Required. The ID of the account. */
        public Get setMerchantId(java.lang.Long merchantId) {
          this.merchantId = merchantId;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Enrolls merchant in `Checkout` program.
       *
       * Create a request for the method "checkoutsettings.insert".
       *
       * This request holds the parameters needed by the content server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       *
       * @param merchantId Required. The ID of the account.
       * @param content the {@link com.google.api.services.content.model.InsertCheckoutSettingsRequest}
       * @return the request
       */
      public Insert insert(java.lang.Long merchantId, com.google.api.services.content.model.InsertCheckoutSettingsRequest content) throws java.io.IOException {
        Insert result = new Insert(merchantId, content);
        initialize(result);
        return result;
      }

      public class Insert extends ShoppingContentRequest<com.google.api.services.content.model.CheckoutSettings> {

        private static final String REST_PATH = "{merchantId}/freelistingsprogram/checkoutsettings";

        /**
         * Enrolls merchant in `Checkout` program.
         *
         * Create a request for the method "checkoutsettings.insert".
         *
         * This request holds the parameters needed by the the content server.  After setting any optional
         * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
         * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param merchantId Required. The ID of the account.
         * @param content the {@link com.google.api.services.content.model.InsertCheckoutSettingsRequest}
         * @since 1.13
         */
        protected Insert(java.lang.Long merchantId, com.google.api.services.content.model.InsertCheckoutSettingsRequest content) {
          super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.CheckoutSettings.class);
          this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        }

        @Override
        public Insert set$Xgafv(java.lang.String $Xgafv) {
          return (Insert) super.set$Xgafv($Xgafv);
        }

        @Override
        public Insert setAccessToken(java.lang.String accessToken) {
          return (Insert) super.setAccessToken(accessToken);
        }

        @Override
        public Insert setAlt(java.lang.String alt) {
          return (Insert) super.setAlt(alt);
        }

        @Override
        public Insert setCallback(java.lang.String callback) {
          return (Insert) super.setCallback(callback);
        }

        @Override
        public Insert setFields(java.lang.String fields) {
          return (Insert) super.setFields(fields);
        }

        @Override
        public Insert setKey(java.lang.String key) {
          return (Insert) super.setKey(key);
        }

        @Override
        public Insert setOauthToken(java.lang.String oauthToken) {
          return (Insert) super.setOauthToken(oauthToken);
        }

        @Override
        public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Insert) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Insert setQuotaUser(java.lang.String quotaUser) {
          return (Insert) super.setQuotaUser(quotaUser);
        }

        @Override
        public Insert setUploadType(java.lang.String uploadType) {
          return (Insert) super.setUploadType(uploadType);
        }

        @Override
        public Insert setUploadProtocol(java.lang.String uploadProtocol) {
          return (Insert) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The ID of the account. */
        @com.google.api.client.util.Key
        private java.lang.Long merchantId;

        /** Required. The ID of the account.
         */
        public java.lang.Long getMerchantId() {
          return merchantId;
        }

        /** Required. The ID of the account. */
        public Insert setMerchantId(java.lang.Long merchantId) {
          this.merchantId = merchantId;
          return this;
        }

        @Override
        public Insert set(String parameterName, Object value) {
          return (Insert) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Liasettings collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Liasettings.List request = content.liasettings().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Liasettings liasettings() {
    return new Liasettings();
  }

  /**
   * The "liasettings" collection of methods.
   */
  public class Liasettings {

    /**
     * Retrieves and/or updates the LIA settings of multiple accounts in a single request.
     *
     * Create a request for the method "liasettings.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.LiasettingsCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.LiasettingsCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.LiasettingsCustomBatchResponse> {

      private static final String REST_PATH = "liasettings/batch";

      /**
       * Retrieves and/or updates the LIA settings of multiple accounts in a single request.
       *
       * Create a request for the method "liasettings.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.LiasettingsCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.LiasettingsCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.LiasettingsCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the LIA settings of the account.
     *
     * Create a request for the method "liasettings.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account for which to get or update LIA settings.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.math.BigInteger accountId) throws java.io.IOException {
      Get result = new Get(merchantId, accountId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.LiaSettings> {

      private static final String REST_PATH = "{merchantId}/liasettings/{accountId}";

      /**
       * Retrieves the LIA settings of the account.
       *
       * Create a request for the method "liasettings.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account for which to get or update LIA settings.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.math.BigInteger accountId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.LiaSettings.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account for which to get or update LIA settings. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account for which to get or update LIA settings.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account for which to get or update LIA settings. */
      public Get setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of accessible Business Profiles.
     *
     * Create a request for the method "liasettings.getaccessiblegmbaccounts".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Getaccessiblegmbaccounts#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account for which to retrieve accessible Business Profiles.
     * @return the request
     */
    public Getaccessiblegmbaccounts getaccessiblegmbaccounts(java.math.BigInteger merchantId, java.math.BigInteger accountId) throws java.io.IOException {
      Getaccessiblegmbaccounts result = new Getaccessiblegmbaccounts(merchantId, accountId);
      initialize(result);
      return result;
    }

    public class Getaccessiblegmbaccounts extends ShoppingContentRequest<com.google.api.services.content.model.LiasettingsGetAccessibleGmbAccountsResponse> {

      private static final String REST_PATH = "{merchantId}/liasettings/{accountId}/accessiblegmbaccounts";

      /**
       * Retrieves the list of accessible Business Profiles.
       *
       * Create a request for the method "liasettings.getaccessiblegmbaccounts".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Getaccessiblegmbaccounts#execute()} method to invoke the remote
       * operation. <p> {@link Getaccessiblegmbaccounts#initialize(com.google.api.client.googleapis.serv
       * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account for which to retrieve accessible Business Profiles.
       * @since 1.13
       */
      protected Getaccessiblegmbaccounts(java.math.BigInteger merchantId, java.math.BigInteger accountId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.LiasettingsGetAccessibleGmbAccountsResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Getaccessiblegmbaccounts set$Xgafv(java.lang.String $Xgafv) {
        return (Getaccessiblegmbaccounts) super.set$Xgafv($Xgafv);
      }

      @Override
      public Getaccessiblegmbaccounts setAccessToken(java.lang.String accessToken) {
        return (Getaccessiblegmbaccounts) super.setAccessToken(accessToken);
      }

      @Override
      public Getaccessiblegmbaccounts setAlt(java.lang.String alt) {
        return (Getaccessiblegmbaccounts) super.setAlt(alt);
      }

      @Override
      public Getaccessiblegmbaccounts setCallback(java.lang.String callback) {
        return (Getaccessiblegmbaccounts) super.setCallback(callback);
      }

      @Override
      public Getaccessiblegmbaccounts setFields(java.lang.String fields) {
        return (Getaccessiblegmbaccounts) super.setFields(fields);
      }

      @Override
      public Getaccessiblegmbaccounts setKey(java.lang.String key) {
        return (Getaccessiblegmbaccounts) super.setKey(key);
      }

      @Override
      public Getaccessiblegmbaccounts setOauthToken(java.lang.String oauthToken) {
        return (Getaccessiblegmbaccounts) super.setOauthToken(oauthToken);
      }

      @Override
      public Getaccessiblegmbaccounts setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Getaccessiblegmbaccounts) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Getaccessiblegmbaccounts setQuotaUser(java.lang.String quotaUser) {
        return (Getaccessiblegmbaccounts) super.setQuotaUser(quotaUser);
      }

      @Override
      public Getaccessiblegmbaccounts setUploadType(java.lang.String uploadType) {
        return (Getaccessiblegmbaccounts) super.setUploadType(uploadType);
      }

      @Override
      public Getaccessiblegmbaccounts setUploadProtocol(java.lang.String uploadProtocol) {
        return (Getaccessiblegmbaccounts) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Getaccessiblegmbaccounts setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account for which to retrieve accessible Business Profiles. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account for which to retrieve accessible Business Profiles.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account for which to retrieve accessible Business Profiles. */
      public Getaccessiblegmbaccounts setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Getaccessiblegmbaccounts set(String parameterName, Object value) {
        return (Getaccessiblegmbaccounts) super.set(parameterName, value);
      }
    }
    /**
     * Lists the LIA settings of the sub-accounts in your Merchant Center account.
     *
     * Create a request for the method "liasettings.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. This must be a multi-client account.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.LiasettingsListResponse> {

      private static final String REST_PATH = "{merchantId}/liasettings";

      /**
       * Lists the LIA settings of the sub-accounts in your Merchant Center account.
       *
       * Create a request for the method "liasettings.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. This must be a multi-client account.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.LiasettingsListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the managing account. This must be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. This must be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the managing account. This must be a multi-client account. */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The maximum number of LIA settings to return in the response, used for paging. */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of LIA settings to return in the response, used for paging.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /** The maximum number of LIA settings to return in the response, used for paging. */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the list of POS data providers that have active settings for the all eiligible
     * countries.
     *
     * Create a request for the method "liasettings.listposdataproviders".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Listposdataproviders#execute()} method to invoke the remote
     * operation.
     *
     * @return the request
     */
    public Listposdataproviders listposdataproviders() throws java.io.IOException {
      Listposdataproviders result = new Listposdataproviders();
      initialize(result);
      return result;
    }

    public class Listposdataproviders extends ShoppingContentRequest<com.google.api.services.content.model.LiasettingsListPosDataProvidersResponse> {

      private static final String REST_PATH = "liasettings/posdataproviders";

      /**
       * Retrieves the list of POS data providers that have active settings for the all eiligible
       * countries.
       *
       * Create a request for the method "liasettings.listposdataproviders".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Listposdataproviders#execute()} method to invoke the remote
       * operation. <p> {@link Listposdataproviders#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Listposdataproviders() {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.LiasettingsListPosDataProvidersResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Listposdataproviders set$Xgafv(java.lang.String $Xgafv) {
        return (Listposdataproviders) super.set$Xgafv($Xgafv);
      }

      @Override
      public Listposdataproviders setAccessToken(java.lang.String accessToken) {
        return (Listposdataproviders) super.setAccessToken(accessToken);
      }

      @Override
      public Listposdataproviders setAlt(java.lang.String alt) {
        return (Listposdataproviders) super.setAlt(alt);
      }

      @Override
      public Listposdataproviders setCallback(java.lang.String callback) {
        return (Listposdataproviders) super.setCallback(callback);
      }

      @Override
      public Listposdataproviders setFields(java.lang.String fields) {
        return (Listposdataproviders) super.setFields(fields);
      }

      @Override
      public Listposdataproviders setKey(java.lang.String key) {
        return (Listposdataproviders) super.setKey(key);
      }

      @Override
      public Listposdataproviders setOauthToken(java.lang.String oauthToken) {
        return (Listposdataproviders) super.setOauthToken(oauthToken);
      }

      @Override
      public Listposdataproviders setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Listposdataproviders) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Listposdataproviders setQuotaUser(java.lang.String quotaUser) {
        return (Listposdataproviders) super.setQuotaUser(quotaUser);
      }

      @Override
      public Listposdataproviders setUploadType(java.lang.String uploadType) {
        return (Listposdataproviders) super.setUploadType(uploadType);
      }

      @Override
      public Listposdataproviders setUploadProtocol(java.lang.String uploadProtocol) {
        return (Listposdataproviders) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Listposdataproviders set(String parameterName, Object value) {
        return (Listposdataproviders) super.set(parameterName, value);
      }
    }
    /**
     * Requests access to a specified Business Profile.
     *
     * Create a request for the method "liasettings.requestgmbaccess".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Requestgmbaccess#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account for which Business Profile access is requested.
     * @param gmbEmail The email of the Business Profile.
     * @return the request
     */
    public Requestgmbaccess requestgmbaccess(java.math.BigInteger merchantId, java.math.BigInteger accountId, java.lang.String gmbEmail) throws java.io.IOException {
      Requestgmbaccess result = new Requestgmbaccess(merchantId, accountId, gmbEmail);
      initialize(result);
      return result;
    }

    public class Requestgmbaccess extends ShoppingContentRequest<com.google.api.services.content.model.LiasettingsRequestGmbAccessResponse> {

      private static final String REST_PATH = "{merchantId}/liasettings/{accountId}/requestgmbaccess";

      /**
       * Requests access to a specified Business Profile.
       *
       * Create a request for the method "liasettings.requestgmbaccess".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Requestgmbaccess#execute()} method to invoke the remote operation.
       * <p> {@link Requestgmbaccess#initialize(com.google.api.client.googleapis.services.AbstractGoogle
       * ClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account for which Business Profile access is requested.
       * @param gmbEmail The email of the Business Profile.
       * @since 1.13
       */
      protected Requestgmbaccess(java.math.BigInteger merchantId, java.math.BigInteger accountId, java.lang.String gmbEmail) {
        super(ShoppingContent.this, "POST", REST_PATH, null, com.google.api.services.content.model.LiasettingsRequestGmbAccessResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
        this.gmbEmail = com.google.api.client.util.Preconditions.checkNotNull(gmbEmail, "Required parameter gmbEmail must be specified.");
      }

      @Override
      public Requestgmbaccess set$Xgafv(java.lang.String $Xgafv) {
        return (Requestgmbaccess) super.set$Xgafv($Xgafv);
      }

      @Override
      public Requestgmbaccess setAccessToken(java.lang.String accessToken) {
        return (Requestgmbaccess) super.setAccessToken(accessToken);
      }

      @Override
      public Requestgmbaccess setAlt(java.lang.String alt) {
        return (Requestgmbaccess) super.setAlt(alt);
      }

      @Override
      public Requestgmbaccess setCallback(java.lang.String callback) {
        return (Requestgmbaccess) super.setCallback(callback);
      }

      @Override
      public Requestgmbaccess setFields(java.lang.String fields) {
        return (Requestgmbaccess) super.setFields(fields);
      }

      @Override
      public Requestgmbaccess setKey(java.lang.String key) {
        return (Requestgmbaccess) super.setKey(key);
      }

      @Override
      public Requestgmbaccess setOauthToken(java.lang.String oauthToken) {
        return (Requestgmbaccess) super.setOauthToken(oauthToken);
      }

      @Override
      public Requestgmbaccess setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Requestgmbaccess) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Requestgmbaccess setQuotaUser(java.lang.String quotaUser) {
        return (Requestgmbaccess) super.setQuotaUser(quotaUser);
      }

      @Override
      public Requestgmbaccess setUploadType(java.lang.String uploadType) {
        return (Requestgmbaccess) super.setUploadType(uploadType);
      }

      @Override
      public Requestgmbaccess setUploadProtocol(java.lang.String uploadProtocol) {
        return (Requestgmbaccess) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Requestgmbaccess setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account for which Business Profile access is requested. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account for which Business Profile access is requested.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account for which Business Profile access is requested. */
      public Requestgmbaccess setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      /** The email of the Business Profile. */
      @com.google.api.client.util.Key
      private java.lang.String gmbEmail;

      /** The email of the Business Profile.
       */
      public java.lang.String getGmbEmail() {
        return gmbEmail;
      }

      /** The email of the Business Profile. */
      public Requestgmbaccess setGmbEmail(java.lang.String gmbEmail) {
        this.gmbEmail = gmbEmail;
        return this;
      }

      @Override
      public Requestgmbaccess set(String parameterName, Object value) {
        return (Requestgmbaccess) super.set(parameterName, value);
      }
    }
    /**
     * Requests inventory validation for the specified country.
     *
     * Create a request for the method "liasettings.requestinventoryverification".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Requestinventoryverification#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param country The country for which inventory validation is requested.
     * @return the request
     */
    public Requestinventoryverification requestinventoryverification(java.math.BigInteger merchantId, java.math.BigInteger accountId, java.lang.String country) throws java.io.IOException {
      Requestinventoryverification result = new Requestinventoryverification(merchantId, accountId, country);
      initialize(result);
      return result;
    }

    public class Requestinventoryverification extends ShoppingContentRequest<com.google.api.services.content.model.LiasettingsRequestInventoryVerificationResponse> {

      private static final String REST_PATH = "{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}";

      /**
       * Requests inventory validation for the specified country.
       *
       * Create a request for the method "liasettings.requestinventoryverification".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Requestinventoryverification#execute()} method to invoke the remote
       * operation. <p> {@link Requestinventoryverification#initialize(com.google.api.client.googleapis.
       * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param country The country for which inventory validation is requested.
       * @since 1.13
       */
      protected Requestinventoryverification(java.math.BigInteger merchantId, java.math.BigInteger accountId, java.lang.String country) {
        super(ShoppingContent.this, "POST", REST_PATH, null, com.google.api.services.content.model.LiasettingsRequestInventoryVerificationResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
        this.country = com.google.api.client.util.Preconditions.checkNotNull(country, "Required parameter country must be specified.");
      }

      @Override
      public Requestinventoryverification set$Xgafv(java.lang.String $Xgafv) {
        return (Requestinventoryverification) super.set$Xgafv($Xgafv);
      }

      @Override
      public Requestinventoryverification setAccessToken(java.lang.String accessToken) {
        return (Requestinventoryverification) super.setAccessToken(accessToken);
      }

      @Override
      public Requestinventoryverification setAlt(java.lang.String alt) {
        return (Requestinventoryverification) super.setAlt(alt);
      }

      @Override
      public Requestinventoryverification setCallback(java.lang.String callback) {
        return (Requestinventoryverification) super.setCallback(callback);
      }

      @Override
      public Requestinventoryverification setFields(java.lang.String fields) {
        return (Requestinventoryverification) super.setFields(fields);
      }

      @Override
      public Requestinventoryverification setKey(java.lang.String key) {
        return (Requestinventoryverification) super.setKey(key);
      }

      @Override
      public Requestinventoryverification setOauthToken(java.lang.String oauthToken) {
        return (Requestinventoryverification) super.setOauthToken(oauthToken);
      }

      @Override
      public Requestinventoryverification setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Requestinventoryverification) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Requestinventoryverification setQuotaUser(java.lang.String quotaUser) {
        return (Requestinventoryverification) super.setQuotaUser(quotaUser);
      }

      @Override
      public Requestinventoryverification setUploadType(java.lang.String uploadType) {
        return (Requestinventoryverification) super.setUploadType(uploadType);
      }

      @Override
      public Requestinventoryverification setUploadProtocol(java.lang.String uploadProtocol) {
        return (Requestinventoryverification) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Requestinventoryverification setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Requestinventoryverification setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      /** The country for which inventory validation is requested. */
      @com.google.api.client.util.Key
      private java.lang.String country;

      /** The country for which inventory validation is requested.
       */
      public java.lang.String getCountry() {
        return country;
      }

      /** The country for which inventory validation is requested. */
      public Requestinventoryverification setCountry(java.lang.String country) {
        this.country = country;
        return this;
      }

      @Override
      public Requestinventoryverification set(String parameterName, Object value) {
        return (Requestinventoryverification) super.set(parameterName, value);
      }
    }
    /**
     * Sets the inventory verification contract for the specified country.
     *
     * Create a request for the method "liasettings.setinventoryverificationcontact".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Setinventoryverificationcontact#execute()} method to invoke the
     * remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account that manages the order. This cannot be a multi-client account.
     * @param country The country for which inventory verification is requested.
     * @param language The language for which inventory verification is requested.
     * @param contactName The name of the inventory verification contact.
     * @param contactEmail The email of the inventory verification contact.
     * @return the request
     */
    public Setinventoryverificationcontact setinventoryverificationcontact(java.math.BigInteger merchantId, java.math.BigInteger accountId, java.lang.String country, java.lang.String language, java.lang.String contactName, java.lang.String contactEmail) throws java.io.IOException {
      Setinventoryverificationcontact result = new Setinventoryverificationcontact(merchantId, accountId, country, language, contactName, contactEmail);
      initialize(result);
      return result;
    }

    public class Setinventoryverificationcontact extends ShoppingContentRequest<com.google.api.services.content.model.LiasettingsSetInventoryVerificationContactResponse> {

      private static final String REST_PATH = "{merchantId}/liasettings/{accountId}/setinventoryverificationcontact";

      /**
       * Sets the inventory verification contract for the specified country.
       *
       * Create a request for the method "liasettings.setinventoryverificationcontact".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Setinventoryverificationcontact#execute()} method to invoke the
       * remote operation. <p> {@link Setinventoryverificationcontact#initialize(com.google.api.client.g
       * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account that manages the order. This cannot be a multi-client account.
       * @param country The country for which inventory verification is requested.
       * @param language The language for which inventory verification is requested.
       * @param contactName The name of the inventory verification contact.
       * @param contactEmail The email of the inventory verification contact.
       * @since 1.13
       */
      protected Setinventoryverificationcontact(java.math.BigInteger merchantId, java.math.BigInteger accountId, java.lang.String country, java.lang.String language, java.lang.String contactName, java.lang.String contactEmail) {
        super(ShoppingContent.this, "POST", REST_PATH, null, com.google.api.services.content.model.LiasettingsSetInventoryVerificationContactResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
        this.country = com.google.api.client.util.Preconditions.checkNotNull(country, "Required parameter country must be specified.");
        this.language = com.google.api.client.util.Preconditions.checkNotNull(language, "Required parameter language must be specified.");
        this.contactName = com.google.api.client.util.Preconditions.checkNotNull(contactName, "Required parameter contactName must be specified.");
        this.contactEmail = com.google.api.client.util.Preconditions.checkNotNull(contactEmail, "Required parameter contactEmail must be specified.");
      }

      @Override
      public Setinventoryverificationcontact set$Xgafv(java.lang.String $Xgafv) {
        return (Setinventoryverificationcontact) super.set$Xgafv($Xgafv);
      }

      @Override
      public Setinventoryverificationcontact setAccessToken(java.lang.String accessToken) {
        return (Setinventoryverificationcontact) super.setAccessToken(accessToken);
      }

      @Override
      public Setinventoryverificationcontact setAlt(java.lang.String alt) {
        return (Setinventoryverificationcontact) super.setAlt(alt);
      }

      @Override
      public Setinventoryverificationcontact setCallback(java.lang.String callback) {
        return (Setinventoryverificationcontact) super.setCallback(callback);
      }

      @Override
      public Setinventoryverificationcontact setFields(java.lang.String fields) {
        return (Setinventoryverificationcontact) super.setFields(fields);
      }

      @Override
      public Setinventoryverificationcontact setKey(java.lang.String key) {
        return (Setinventoryverificationcontact) super.setKey(key);
      }

      @Override
      public Setinventoryverificationcontact setOauthToken(java.lang.String oauthToken) {
        return (Setinventoryverificationcontact) super.setOauthToken(oauthToken);
      }

      @Override
      public Setinventoryverificationcontact setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Setinventoryverificationcontact) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Setinventoryverificationcontact setQuotaUser(java.lang.String quotaUser) {
        return (Setinventoryverificationcontact) super.setQuotaUser(quotaUser);
      }

      @Override
      public Setinventoryverificationcontact setUploadType(java.lang.String uploadType) {
        return (Setinventoryverificationcontact) super.setUploadType(uploadType);
      }

      @Override
      public Setinventoryverificationcontact setUploadProtocol(java.lang.String uploadProtocol) {
        return (Setinventoryverificationcontact) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Setinventoryverificationcontact setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account that manages the order. This cannot be a multi-client account.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account that manages the order. This cannot be a multi-client account. */
      public Setinventoryverificationcontact setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      /** The country for which inventory verification is requested. */
      @com.google.api.client.util.Key
      private java.lang.String country;

      /** The country for which inventory verification is requested.
       */
      public java.lang.String getCountry() {
        return country;
      }

      /** The country for which inventory verification is requested. */
      public Setinventoryverificationcontact setCountry(java.lang.String country) {
        this.country = country;
        return this;
      }

      /** The language for which inventory verification is requested. */
      @com.google.api.client.util.Key
      private java.lang.String language;

      /** The language for which inventory verification is requested.
       */
      public java.lang.String getLanguage() {
        return language;
      }

      /** The language for which inventory verification is requested. */
      public Setinventoryverificationcontact setLanguage(java.lang.String language) {
        this.language = language;
        return this;
      }

      /** The name of the inventory verification contact. */
      @com.google.api.client.util.Key
      private java.lang.String contactName;

      /** The name of the inventory verification contact.
       */
      public java.lang.String getContactName() {
        return contactName;
      }

      /** The name of the inventory verification contact. */
      public Setinventoryverificationcontact setContactName(java.lang.String contactName) {
        this.contactName = contactName;
        return this;
      }

      /** The email of the inventory verification contact. */
      @com.google.api.client.util.Key
      private java.lang.String contactEmail;

      /** The email of the inventory verification contact.
       */
      public java.lang.String getContactEmail() {
        return contactEmail;
      }

      /** The email of the inventory verification contact. */
      public Setinventoryverificationcontact setContactEmail(java.lang.String contactEmail) {
        this.contactEmail = contactEmail;
        return this;
      }

      @Override
      public Setinventoryverificationcontact set(String parameterName, Object value) {
        return (Setinventoryverificationcontact) super.set(parameterName, value);
      }
    }
    /**
     * Sets the omnichannel experience for the specified country. Only supported for merchants whose POS
     * data provider is trusted to enable the corresponding experience. For more context, see these help
     * articles [about LFP](https://support.google.com/merchants/answer/7676652) and [how to get
     * started](https://support.google.com/merchants/answer/7676578) with it.
     *
     * Create a request for the method "liasettings.setomnichannelexperience".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Setomnichannelexperience#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account for which to retrieve accessible Business Profiles.
     * @return the request
     */
    public Setomnichannelexperience setomnichannelexperience(java.math.BigInteger merchantId, java.math.BigInteger accountId) throws java.io.IOException {
      Setomnichannelexperience result = new Setomnichannelexperience(merchantId, accountId);
      initialize(result);
      return result;
    }

    public class Setomnichannelexperience extends ShoppingContentRequest<com.google.api.services.content.model.LiaOmnichannelExperience> {

      private static final String REST_PATH = "{merchantId}/liasettings/{accountId}/setomnichannelexperience";

      /**
       * Sets the omnichannel experience for the specified country. Only supported for merchants whose
       * POS data provider is trusted to enable the corresponding experience. For more context, see
       * these help articles [about LFP](https://support.google.com/merchants/answer/7676652) and [how
       * to get started](https://support.google.com/merchants/answer/7676578) with it.
       *
       * Create a request for the method "liasettings.setomnichannelexperience".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Setomnichannelexperience#execute()} method to invoke the remote
       * operation. <p> {@link Setomnichannelexperience#initialize(com.google.api.client.googleapis.serv
       * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account for which to retrieve accessible Business Profiles.
       * @since 1.13
       */
      protected Setomnichannelexperience(java.math.BigInteger merchantId, java.math.BigInteger accountId) {
        super(ShoppingContent.this, "POST", REST_PATH, null, com.google.api.services.content.model.LiaOmnichannelExperience.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Setomnichannelexperience set$Xgafv(java.lang.String $Xgafv) {
        return (Setomnichannelexperience) super.set$Xgafv($Xgafv);
      }

      @Override
      public Setomnichannelexperience setAccessToken(java.lang.String accessToken) {
        return (Setomnichannelexperience) super.setAccessToken(accessToken);
      }

      @Override
      public Setomnichannelexperience setAlt(java.lang.String alt) {
        return (Setomnichannelexperience) super.setAlt(alt);
      }

      @Override
      public Setomnichannelexperience setCallback(java.lang.String callback) {
        return (Setomnichannelexperience) super.setCallback(callback);
      }

      @Override
      public Setomnichannelexperience setFields(java.lang.String fields) {
        return (Setomnichannelexperience) super.setFields(fields);
      }

      @Override
      public Setomnichannelexperience setKey(java.lang.String key) {
        return (Setomnichannelexperience) super.setKey(key);
      }

      @Override
      public Setomnichannelexperience setOauthToken(java.lang.String oauthToken) {
        return (Setomnichannelexperience) super.setOauthToken(oauthToken);
      }

      @Override
      public Setomnichannelexperience setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Setomnichannelexperience) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Setomnichannelexperience setQuotaUser(java.lang.String quotaUser) {
        return (Setomnichannelexperience) super.setQuotaUser(quotaUser);
      }

      @Override
      public Setomnichannelexperience setUploadType(java.lang.String uploadType) {
        return (Setomnichannelexperience) super.setUploadType(uploadType);
      }

      @Override
      public Setomnichannelexperience setUploadProtocol(java.lang.String uploadProtocol) {
        return (Setomnichannelexperience) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Setomnichannelexperience setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account for which to retrieve accessible Business Profiles. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account for which to retrieve accessible Business Profiles.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account for which to retrieve accessible Business Profiles. */
      public Setomnichannelexperience setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      /**
       * The CLDR country code (for example, "US") for which the omnichannel experience is selected.
       */
      @com.google.api.client.util.Key
      private java.lang.String country;

      /** The CLDR country code (for example, "US") for which the omnichannel experience is selected.
       */
      public java.lang.String getCountry() {
        return country;
      }

      /**
       * The CLDR country code (for example, "US") for which the omnichannel experience is selected.
       */
      public Setomnichannelexperience setCountry(java.lang.String country) {
        this.country = country;
        return this;
      }

      /**
       * The Local Store Front (LSF) type for this country. Acceptable values are: - "`ghlsf`"
       * (Google-Hosted Local Store Front) - "`mhlsfBasic`" (Merchant-Hosted Local Store Front
       * Basic) - "`mhlsfFull`" (Merchant-Hosted Local Store Front Full) More details about these
       * types can be found here.
       */
      @com.google.api.client.util.Key
      private java.lang.String lsfType;

      /** The Local Store Front (LSF) type for this country. Acceptable values are: - "`ghlsf`" (Google-
     Hosted Local Store Front) - "`mhlsfBasic`" (Merchant-Hosted Local Store Front Basic) -
     "`mhlsfFull`" (Merchant-Hosted Local Store Front Full) More details about these types can be found
     here.
       */
      public java.lang.String getLsfType() {
        return lsfType;
      }

      /**
       * The Local Store Front (LSF) type for this country. Acceptable values are: - "`ghlsf`"
       * (Google-Hosted Local Store Front) - "`mhlsfBasic`" (Merchant-Hosted Local Store Front
       * Basic) - "`mhlsfFull`" (Merchant-Hosted Local Store Front Full) More details about these
       * types can be found here.
       */
      public Setomnichannelexperience setLsfType(java.lang.String lsfType) {
        this.lsfType = lsfType;
        return this;
      }

      /**
       * The Pickup types for this country. Acceptable values are: - "`pickupToday`" -
       * "`pickupLater`"
       */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> pickupTypes;

      /** The Pickup types for this country. Acceptable values are: - "`pickupToday`" - "`pickupLater`"
       */
      public java.util.List<java.lang.String> getPickupTypes() {
        return pickupTypes;
      }

      /**
       * The Pickup types for this country. Acceptable values are: - "`pickupToday`" -
       * "`pickupLater`"
       */
      public Setomnichannelexperience setPickupTypes(java.util.List<java.lang.String> pickupTypes) {
        this.pickupTypes = pickupTypes;
        return this;
      }

      @Override
      public Setomnichannelexperience set(String parameterName, Object value) {
        return (Setomnichannelexperience) super.set(parameterName, value);
      }
    }
    /**
     * Sets the POS data provider for the specified country.
     *
     * Create a request for the method "liasettings.setposdataprovider".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Setposdataprovider#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account for which to retrieve accessible Business Profiles.
     * @param country The country for which the POS data provider is selected.
     * @return the request
     */
    public Setposdataprovider setposdataprovider(java.math.BigInteger merchantId, java.math.BigInteger accountId, java.lang.String country) throws java.io.IOException {
      Setposdataprovider result = new Setposdataprovider(merchantId, accountId, country);
      initialize(result);
      return result;
    }

    public class Setposdataprovider extends ShoppingContentRequest<com.google.api.services.content.model.LiasettingsSetPosDataProviderResponse> {

      private static final String REST_PATH = "{merchantId}/liasettings/{accountId}/setposdataprovider";

      /**
       * Sets the POS data provider for the specified country.
       *
       * Create a request for the method "liasettings.setposdataprovider".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Setposdataprovider#execute()} method to invoke the remote
       * operation. <p> {@link Setposdataprovider#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account for which to retrieve accessible Business Profiles.
       * @param country The country for which the POS data provider is selected.
       * @since 1.13
       */
      protected Setposdataprovider(java.math.BigInteger merchantId, java.math.BigInteger accountId, java.lang.String country) {
        super(ShoppingContent.this, "POST", REST_PATH, null, com.google.api.services.content.model.LiasettingsSetPosDataProviderResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
        this.country = com.google.api.client.util.Preconditions.checkNotNull(country, "Required parameter country must be specified.");
      }

      @Override
      public Setposdataprovider set$Xgafv(java.lang.String $Xgafv) {
        return (Setposdataprovider) super.set$Xgafv($Xgafv);
      }

      @Override
      public Setposdataprovider setAccessToken(java.lang.String accessToken) {
        return (Setposdataprovider) super.setAccessToken(accessToken);
      }

      @Override
      public Setposdataprovider setAlt(java.lang.String alt) {
        return (Setposdataprovider) super.setAlt(alt);
      }

      @Override
      public Setposdataprovider setCallback(java.lang.String callback) {
        return (Setposdataprovider) super.setCallback(callback);
      }

      @Override
      public Setposdataprovider setFields(java.lang.String fields) {
        return (Setposdataprovider) super.setFields(fields);
      }

      @Override
      public Setposdataprovider setKey(java.lang.String key) {
        return (Setposdataprovider) super.setKey(key);
      }

      @Override
      public Setposdataprovider setOauthToken(java.lang.String oauthToken) {
        return (Setposdataprovider) super.setOauthToken(oauthToken);
      }

      @Override
      public Setposdataprovider setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Setposdataprovider) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Setposdataprovider setQuotaUser(java.lang.String quotaUser) {
        return (Setposdataprovider) super.setQuotaUser(quotaUser);
      }

      @Override
      public Setposdataprovider setUploadType(java.lang.String uploadType) {
        return (Setposdataprovider) super.setUploadType(uploadType);
      }

      @Override
      public Setposdataprovider setUploadProtocol(java.lang.String uploadProtocol) {
        return (Setposdataprovider) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Setposdataprovider setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account for which to retrieve accessible Business Profiles. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account for which to retrieve accessible Business Profiles.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account for which to retrieve accessible Business Profiles. */
      public Setposdataprovider setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      /** The country for which the POS data provider is selected. */
      @com.google.api.client.util.Key
      private java.lang.String country;

      /** The country for which the POS data provider is selected.
       */
      public java.lang.String getCountry() {
        return country;
      }

      /** The country for which the POS data provider is selected. */
      public Setposdataprovider setCountry(java.lang.String country) {
        this.country = country;
        return this;
      }

      /** The ID of POS data provider. */
      @com.google.api.client.util.Key
      private java.math.BigInteger posDataProviderId;

      /** The ID of POS data provider.
       */
      public java.math.BigInteger getPosDataProviderId() {
        return posDataProviderId;
      }

      /** The ID of POS data provider. */
      public Setposdataprovider setPosDataProviderId(java.math.BigInteger posDataProviderId) {
        this.posDataProviderId = posDataProviderId;
        return this;
      }

      /** The account ID by which this merchant is known to the POS data provider. */
      @com.google.api.client.util.Key
      private java.lang.String posExternalAccountId;

      /** The account ID by which this merchant is known to the POS data provider.
       */
      public java.lang.String getPosExternalAccountId() {
        return posExternalAccountId;
      }

      /** The account ID by which this merchant is known to the POS data provider. */
      public Setposdataprovider setPosExternalAccountId(java.lang.String posExternalAccountId) {
        this.posExternalAccountId = posExternalAccountId;
        return this;
      }

      @Override
      public Setposdataprovider set(String parameterName, Object value) {
        return (Setposdataprovider) super.set(parameterName, value);
      }
    }
    /**
     * Updates the LIA settings of the account. Any fields that are not provided are deleted from the
     * resource.
     *
     * Create a request for the method "liasettings.update".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account for which to get or update LIA settings.
     * @param content the {@link com.google.api.services.content.model.LiaSettings}
     * @return the request
     */
    public Update update(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.LiaSettings content) throws java.io.IOException {
      Update result = new Update(merchantId, accountId, content);
      initialize(result);
      return result;
    }

    public class Update extends ShoppingContentRequest<com.google.api.services.content.model.LiaSettings> {

      private static final String REST_PATH = "{merchantId}/liasettings/{accountId}";

      /**
       * Updates the LIA settings of the account. Any fields that are not provided are deleted from the
       * resource.
       *
       * Create a request for the method "liasettings.update".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account for which to get or update LIA settings.
       * @param content the {@link com.google.api.services.content.model.LiaSettings}
       * @since 1.13
       */
      protected Update(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.LiaSettings content) {
        super(ShoppingContent.this, "PUT", REST_PATH, content, com.google.api.services.content.model.LiaSettings.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Update setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account for which to get or update LIA settings. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account for which to get or update LIA settings.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account for which to get or update LIA settings. */
      public Update setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Localinventory collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Localinventory.List request = content.localinventory().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Localinventory localinventory() {
    return new Localinventory();
  }

  /**
   * The "localinventory" collection of methods.
   */
  public class Localinventory {

    /**
     * Updates local inventory for multiple products or stores in a single request.
     *
     * Create a request for the method "localinventory.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.LocalinventoryCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.LocalinventoryCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.LocalinventoryCustomBatchResponse> {

      private static final String REST_PATH = "localinventory/batch";

      /**
       * Updates local inventory for multiple products or stores in a single request.
       *
       * Create a request for the method "localinventory.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.LocalinventoryCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.LocalinventoryCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.LocalinventoryCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Updates the local inventory of a product in your Merchant Center account.
     *
     * Create a request for the method "localinventory.insert".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
     * @param productId The REST ID of the product for which to update local inventory.
     * @param content the {@link com.google.api.services.content.model.LocalInventory}
     * @return the request
     */
    public Insert insert(java.math.BigInteger merchantId, java.lang.String productId, com.google.api.services.content.model.LocalInventory content) throws java.io.IOException {
      Insert result = new Insert(merchantId, productId, content);
      initialize(result);
      return result;
    }

    public class Insert extends ShoppingContentRequest<com.google.api.services.content.model.LocalInventory> {

      private static final String REST_PATH = "{merchantId}/products/{productId}/localinventory";

      /**
       * Updates the local inventory of a product in your Merchant Center account.
       *
       * Create a request for the method "localinventory.insert".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
       * @param productId The REST ID of the product for which to update local inventory.
       * @param content the {@link com.google.api.services.content.model.LocalInventory}
       * @since 1.13
       */
      protected Insert(java.math.BigInteger merchantId, java.lang.String productId, com.google.api.services.content.model.LocalInventory content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.LocalInventory.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.productId = com.google.api.client.util.Preconditions.checkNotNull(productId, "Required parameter productId must be specified.");
      }

      @Override
      public Insert set$Xgafv(java.lang.String $Xgafv) {
        return (Insert) super.set$Xgafv($Xgafv);
      }

      @Override
      public Insert setAccessToken(java.lang.String accessToken) {
        return (Insert) super.setAccessToken(accessToken);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setCallback(java.lang.String callback) {
        return (Insert) super.setCallback(callback);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUploadType(java.lang.String uploadType) {
        return (Insert) super.setUploadType(uploadType);
      }

      @Override
      public Insert setUploadProtocol(java.lang.String uploadProtocol) {
        return (Insert) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that contains the product. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      public Insert setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The REST ID of the product for which to update local inventory. */
      @com.google.api.client.util.Key
      private java.lang.String productId;

      /** The REST ID of the product for which to update local inventory.
       */
      public java.lang.String getProductId() {
        return productId;
      }

      /** The REST ID of the product for which to update local inventory. */
      public Insert setProductId(java.lang.String productId) {
        this.productId = productId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Merchantsupport collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Merchantsupport.List request = content.merchantsupport().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Merchantsupport merchantsupport() {
    return new Merchantsupport();
  }

  /**
   * The "merchantsupport" collection of methods.
   */
  public class Merchantsupport {

    /**
     * Provide a list of merchant's issues with a support content and available actions. This content
     * and actions are meant to be rendered and shown in third-party applications.
     *
     * Create a request for the method "merchantsupport.renderaccountissues".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Renderaccountissues#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account to fetch issues for.
     * @param content the {@link com.google.api.services.content.model.RenderAccountIssuesRequestPayload}
     * @return the request
     */
    public Renderaccountissues renderaccountissues(java.lang.Long merchantId, com.google.api.services.content.model.RenderAccountIssuesRequestPayload content) throws java.io.IOException {
      Renderaccountissues result = new Renderaccountissues(merchantId, content);
      initialize(result);
      return result;
    }

    public class Renderaccountissues extends ShoppingContentRequest<com.google.api.services.content.model.RenderAccountIssuesResponse> {

      private static final String REST_PATH = "{merchantId}/merchantsupport/renderaccountissues";

      /**
       * Provide a list of merchant's issues with a support content and available actions. This content
       * and actions are meant to be rendered and shown in third-party applications.
       *
       * Create a request for the method "merchantsupport.renderaccountissues".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Renderaccountissues#execute()} method to invoke the remote
       * operation. <p> {@link Renderaccountissues#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account to fetch issues for.
       * @param content the {@link com.google.api.services.content.model.RenderAccountIssuesRequestPayload}
       * @since 1.13
       */
      protected Renderaccountissues(java.lang.Long merchantId, com.google.api.services.content.model.RenderAccountIssuesRequestPayload content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.RenderAccountIssuesResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Renderaccountissues set$Xgafv(java.lang.String $Xgafv) {
        return (Renderaccountissues) super.set$Xgafv($Xgafv);
      }

      @Override
      public Renderaccountissues setAccessToken(java.lang.String accessToken) {
        return (Renderaccountissues) super.setAccessToken(accessToken);
      }

      @Override
      public Renderaccountissues setAlt(java.lang.String alt) {
        return (Renderaccountissues) super.setAlt(alt);
      }

      @Override
      public Renderaccountissues setCallback(java.lang.String callback) {
        return (Renderaccountissues) super.setCallback(callback);
      }

      @Override
      public Renderaccountissues setFields(java.lang.String fields) {
        return (Renderaccountissues) super.setFields(fields);
      }

      @Override
      public Renderaccountissues setKey(java.lang.String key) {
        return (Renderaccountissues) super.setKey(key);
      }

      @Override
      public Renderaccountissues setOauthToken(java.lang.String oauthToken) {
        return (Renderaccountissues) super.setOauthToken(oauthToken);
      }

      @Override
      public Renderaccountissues setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Renderaccountissues) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Renderaccountissues setQuotaUser(java.lang.String quotaUser) {
        return (Renderaccountissues) super.setQuotaUser(quotaUser);
      }

      @Override
      public Renderaccountissues setUploadType(java.lang.String uploadType) {
        return (Renderaccountissues) super.setUploadType(uploadType);
      }

      @Override
      public Renderaccountissues setUploadProtocol(java.lang.String uploadProtocol) {
        return (Renderaccountissues) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account to fetch issues for. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account to fetch issues for.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account to fetch issues for. */
      public Renderaccountissues setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to
       * localize support content. If not set, the result will be in default language `en-US`.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to localize
     support content. If not set, the result will be in default language `en-US`.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to
       * localize support content. If not set, the result will be in default language `en-US`.
       */
      public Renderaccountissues setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      /**
       * Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in
       * support content. For example 'America/Los_Angeles'. If not set, results will use as a
       * default UTC.
       */
      @com.google.api.client.util.Key
      private java.lang.String timeZone;

      /** Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in support
     content. For example 'America/Los_Angeles'. If not set, results will use as a default UTC.
       */
      public java.lang.String getTimeZone() {
        return timeZone;
      }

      /**
       * Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in
       * support content. For example 'America/Los_Angeles'. If not set, results will use as a
       * default UTC.
       */
      public Renderaccountissues setTimeZone(java.lang.String timeZone) {
        this.timeZone = timeZone;
        return this;
      }

      @Override
      public Renderaccountissues set(String parameterName, Object value) {
        return (Renderaccountissues) super.set(parameterName, value);
      }
    }
    /**
     * Provide a list of issues for merchant's product with a support content and available actions.
     * This content and actions are meant to be rendered and shown in third-party applications.
     *
     * Create a request for the method "merchantsupport.renderproductissues".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Renderproductissues#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that contains the product.
     * @param productId Required. The [REST_ID](https://developers.google.com/shopping-
     *        content/reference/rest/v2.1/products#Product.FIELDS.id) of the product to fetch issues
     *        for.
     * @param content the {@link com.google.api.services.content.model.RenderProductIssuesRequestPayload}
     * @return the request
     */
    public Renderproductissues renderproductissues(java.lang.Long merchantId, java.lang.String productId, com.google.api.services.content.model.RenderProductIssuesRequestPayload content) throws java.io.IOException {
      Renderproductissues result = new Renderproductissues(merchantId, productId, content);
      initialize(result);
      return result;
    }

    public class Renderproductissues extends ShoppingContentRequest<com.google.api.services.content.model.RenderProductIssuesResponse> {

      private static final String REST_PATH = "{merchantId}/merchantsupport/renderproductissues/{productId}";

      /**
       * Provide a list of issues for merchant's product with a support content and available actions.
       * This content and actions are meant to be rendered and shown in third-party applications.
       *
       * Create a request for the method "merchantsupport.renderproductissues".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Renderproductissues#execute()} method to invoke the remote
       * operation. <p> {@link Renderproductissues#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that contains the product.
       * @param productId Required. The [REST_ID](https://developers.google.com/shopping-
     *        content/reference/rest/v2.1/products#Product.FIELDS.id) of the product to fetch issues
     *        for.
       * @param content the {@link com.google.api.services.content.model.RenderProductIssuesRequestPayload}
       * @since 1.13
       */
      protected Renderproductissues(java.lang.Long merchantId, java.lang.String productId, com.google.api.services.content.model.RenderProductIssuesRequestPayload content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.RenderProductIssuesResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.productId = com.google.api.client.util.Preconditions.checkNotNull(productId, "Required parameter productId must be specified.");
      }

      @Override
      public Renderproductissues set$Xgafv(java.lang.String $Xgafv) {
        return (Renderproductissues) super.set$Xgafv($Xgafv);
      }

      @Override
      public Renderproductissues setAccessToken(java.lang.String accessToken) {
        return (Renderproductissues) super.setAccessToken(accessToken);
      }

      @Override
      public Renderproductissues setAlt(java.lang.String alt) {
        return (Renderproductissues) super.setAlt(alt);
      }

      @Override
      public Renderproductissues setCallback(java.lang.String callback) {
        return (Renderproductissues) super.setCallback(callback);
      }

      @Override
      public Renderproductissues setFields(java.lang.String fields) {
        return (Renderproductissues) super.setFields(fields);
      }

      @Override
      public Renderproductissues setKey(java.lang.String key) {
        return (Renderproductissues) super.setKey(key);
      }

      @Override
      public Renderproductissues setOauthToken(java.lang.String oauthToken) {
        return (Renderproductissues) super.setOauthToken(oauthToken);
      }

      @Override
      public Renderproductissues setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Renderproductissues) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Renderproductissues setQuotaUser(java.lang.String quotaUser) {
        return (Renderproductissues) super.setQuotaUser(quotaUser);
      }

      @Override
      public Renderproductissues setUploadType(java.lang.String uploadType) {
        return (Renderproductissues) super.setUploadType(uploadType);
      }

      @Override
      public Renderproductissues setUploadProtocol(java.lang.String uploadProtocol) {
        return (Renderproductissues) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that contains the product. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that contains the product.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that contains the product. */
      public Renderproductissues setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * Required. The [REST_ID](https://developers.google.com/shopping-
       * content/reference/rest/v2.1/products#Product.FIELDS.id) of the product to fetch issues for.
       */
      @com.google.api.client.util.Key
      private java.lang.String productId;

      /** Required. The [REST_ID](https://developers.google.com/shopping-
     content/reference/rest/v2.1/products#Product.FIELDS.id) of the product to fetch issues for.
       */
      public java.lang.String getProductId() {
        return productId;
      }

      /**
       * Required. The [REST_ID](https://developers.google.com/shopping-
       * content/reference/rest/v2.1/products#Product.FIELDS.id) of the product to fetch issues for.
       */
      public Renderproductissues setProductId(java.lang.String productId) {
        this.productId = productId;
        return this;
      }

      /**
       * Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to
       * localize support content. If not set, the result will be in default language `en-US`.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to localize
     support content. If not set, the result will be in default language `en-US`.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to
       * localize support content. If not set, the result will be in default language `en-US`.
       */
      public Renderproductissues setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      /**
       * Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in
       * support content. For example 'America/Los_Angeles'. If not set, results will use as a
       * default UTC.
       */
      @com.google.api.client.util.Key
      private java.lang.String timeZone;

      /** Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in support
     content. For example 'America/Los_Angeles'. If not set, results will use as a default UTC.
       */
      public java.lang.String getTimeZone() {
        return timeZone;
      }

      /**
       * Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in
       * support content. For example 'America/Los_Angeles'. If not set, results will use as a
       * default UTC.
       */
      public Renderproductissues setTimeZone(java.lang.String timeZone) {
        this.timeZone = timeZone;
        return this;
      }

      @Override
      public Renderproductissues set(String parameterName, Object value) {
        return (Renderproductissues) super.set(parameterName, value);
      }
    }
    /**
     * Start an action. The action can be requested by merchants in third-party application. Before
     * merchants can request the action, the third-party application needs to show them action specific
     * content and display a user input form. The action can be successfully started only once all
     * `required` inputs are provided. If any `required` input is missing, or invalid value was
     * provided, the service will return 400 error. Validation errors will contain Ids for all
     * problematic field together with translated, human readable error messages that can be shown to
     * the user.
     *
     * Create a request for the method "merchantsupport.triggeraction".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Triggeraction#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the merchant's account.
     * @param content the {@link com.google.api.services.content.model.TriggerActionPayload}
     * @return the request
     */
    public Triggeraction triggeraction(java.lang.Long merchantId, com.google.api.services.content.model.TriggerActionPayload content) throws java.io.IOException {
      Triggeraction result = new Triggeraction(merchantId, content);
      initialize(result);
      return result;
    }

    public class Triggeraction extends ShoppingContentRequest<com.google.api.services.content.model.TriggerActionResponse> {

      private static final String REST_PATH = "{merchantId}/merchantsupport/triggeraction";

      /**
       * Start an action. The action can be requested by merchants in third-party application. Before
       * merchants can request the action, the third-party application needs to show them action
       * specific content and display a user input form. The action can be successfully started only
       * once all `required` inputs are provided. If any `required` input is missing, or invalid value
       * was provided, the service will return 400 error. Validation errors will contain Ids for all
       * problematic field together with translated, human readable error messages that can be shown to
       * the user.
       *
       * Create a request for the method "merchantsupport.triggeraction".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Triggeraction#execute()} method to invoke the remote operation. <p>
       * {@link Triggeraction#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param merchantId Required. The ID of the merchant's account.
       * @param content the {@link com.google.api.services.content.model.TriggerActionPayload}
       * @since 1.13
       */
      protected Triggeraction(java.lang.Long merchantId, com.google.api.services.content.model.TriggerActionPayload content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.TriggerActionResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Triggeraction set$Xgafv(java.lang.String $Xgafv) {
        return (Triggeraction) super.set$Xgafv($Xgafv);
      }

      @Override
      public Triggeraction setAccessToken(java.lang.String accessToken) {
        return (Triggeraction) super.setAccessToken(accessToken);
      }

      @Override
      public Triggeraction setAlt(java.lang.String alt) {
        return (Triggeraction) super.setAlt(alt);
      }

      @Override
      public Triggeraction setCallback(java.lang.String callback) {
        return (Triggeraction) super.setCallback(callback);
      }

      @Override
      public Triggeraction setFields(java.lang.String fields) {
        return (Triggeraction) super.setFields(fields);
      }

      @Override
      public Triggeraction setKey(java.lang.String key) {
        return (Triggeraction) super.setKey(key);
      }

      @Override
      public Triggeraction setOauthToken(java.lang.String oauthToken) {
        return (Triggeraction) super.setOauthToken(oauthToken);
      }

      @Override
      public Triggeraction setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Triggeraction) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Triggeraction setQuotaUser(java.lang.String quotaUser) {
        return (Triggeraction) super.setQuotaUser(quotaUser);
      }

      @Override
      public Triggeraction setUploadType(java.lang.String uploadType) {
        return (Triggeraction) super.setUploadType(uploadType);
      }

      @Override
      public Triggeraction setUploadProtocol(java.lang.String uploadProtocol) {
        return (Triggeraction) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the merchant's account. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the merchant's account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the merchant's account. */
      public Triggeraction setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * Optional. Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) used to
       * localize the response. If not set, the result will be in default language `en-US`.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** Optional. Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) used to localize
     the response. If not set, the result will be in default language `en-US`.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * Optional. Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) used to
       * localize the response. If not set, the result will be in default language `en-US`.
       */
      public Triggeraction setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public Triggeraction set(String parameterName, Object value) {
        return (Triggeraction) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Ordertrackingsignals collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Ordertrackingsignals.List request = content.ordertrackingsignals().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Ordertrackingsignals ordertrackingsignals() {
    return new Ordertrackingsignals();
  }

  /**
   * The "ordertrackingsignals" collection of methods.
   */
  public class Ordertrackingsignals {

    /**
     * Creates new order tracking signal.
     *
     * Create a request for the method "ordertrackingsignals.create".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the merchant for which the order signal is created.
     * @param content the {@link com.google.api.services.content.model.OrderTrackingSignal}
     * @return the request
     */
    public Create create(java.lang.Long merchantId, com.google.api.services.content.model.OrderTrackingSignal content) throws java.io.IOException {
      Create result = new Create(merchantId, content);
      initialize(result);
      return result;
    }

    public class Create extends ShoppingContentRequest<com.google.api.services.content.model.OrderTrackingSignal> {

      private static final String REST_PATH = "{merchantId}/ordertrackingsignals";

      /**
       * Creates new order tracking signal.
       *
       * Create a request for the method "ordertrackingsignals.create".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the merchant for which the order signal is created.
       * @param content the {@link com.google.api.services.content.model.OrderTrackingSignal}
       * @since 1.13
       */
      protected Create(java.lang.Long merchantId, com.google.api.services.content.model.OrderTrackingSignal content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.OrderTrackingSignal.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the merchant for which the order signal is created. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** The ID of the merchant for which the order signal is created.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** The ID of the merchant for which the order signal is created. */
      public Create setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Pos collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Pos.List request = content.pos().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Pos pos() {
    return new Pos();
  }

  /**
   * The "pos" collection of methods.
   */
  public class Pos {

    /**
     * Batches multiple POS-related calls in a single request.
     *
     * Create a request for the method "pos.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.PosCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.PosCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.PosCustomBatchResponse> {

      private static final String REST_PATH = "pos/batch";

      /**
       * Batches multiple POS-related calls in a single request.
       *
       * Create a request for the method "pos.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.PosCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.PosCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.PosCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a store for the given merchant.
     *
     * Create a request for the method "pos.delete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the POS or inventory data provider.
     * @param targetMerchantId The ID of the target merchant.
     * @param storeCode A store code that is unique per merchant.
     * @return the request
     */
    public Delete delete(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId, java.lang.String storeCode) throws java.io.IOException {
      Delete result = new Delete(merchantId, targetMerchantId, storeCode);
      initialize(result);
      return result;
    }

    public class Delete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/pos/{targetMerchantId}/store/{storeCode}";

      /**
       * Deletes a store for the given merchant.
       *
       * Create a request for the method "pos.delete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the POS or inventory data provider.
       * @param targetMerchantId The ID of the target merchant.
       * @param storeCode A store code that is unique per merchant.
       * @since 1.13
       */
      protected Delete(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId, java.lang.String storeCode) {
        super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.targetMerchantId = com.google.api.client.util.Preconditions.checkNotNull(targetMerchantId, "Required parameter targetMerchantId must be specified.");
        this.storeCode = com.google.api.client.util.Preconditions.checkNotNull(storeCode, "Required parameter storeCode must be specified.");
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the POS or inventory data provider. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the POS or inventory data provider.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the POS or inventory data provider. */
      public Delete setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the target merchant. */
      @com.google.api.client.util.Key
      private java.math.BigInteger targetMerchantId;

      /** The ID of the target merchant.
       */
      public java.math.BigInteger getTargetMerchantId() {
        return targetMerchantId;
      }

      /** The ID of the target merchant. */
      public Delete setTargetMerchantId(java.math.BigInteger targetMerchantId) {
        this.targetMerchantId = targetMerchantId;
        return this;
      }

      /** A store code that is unique per merchant. */
      @com.google.api.client.util.Key
      private java.lang.String storeCode;

      /** A store code that is unique per merchant.
       */
      public java.lang.String getStoreCode() {
        return storeCode;
      }

      /** A store code that is unique per merchant. */
      public Delete setStoreCode(java.lang.String storeCode) {
        this.storeCode = storeCode;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves information about the given store.
     *
     * Create a request for the method "pos.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the POS or inventory data provider.
     * @param targetMerchantId The ID of the target merchant.
     * @param storeCode A store code that is unique per merchant.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId, java.lang.String storeCode) throws java.io.IOException {
      Get result = new Get(merchantId, targetMerchantId, storeCode);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.PosStore> {

      private static final String REST_PATH = "{merchantId}/pos/{targetMerchantId}/store/{storeCode}";

      /**
       * Retrieves information about the given store.
       *
       * Create a request for the method "pos.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the POS or inventory data provider.
       * @param targetMerchantId The ID of the target merchant.
       * @param storeCode A store code that is unique per merchant.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId, java.lang.String storeCode) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.PosStore.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.targetMerchantId = com.google.api.client.util.Preconditions.checkNotNull(targetMerchantId, "Required parameter targetMerchantId must be specified.");
        this.storeCode = com.google.api.client.util.Preconditions.checkNotNull(storeCode, "Required parameter storeCode must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the POS or inventory data provider. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the POS or inventory data provider.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the POS or inventory data provider. */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the target merchant. */
      @com.google.api.client.util.Key
      private java.math.BigInteger targetMerchantId;

      /** The ID of the target merchant.
       */
      public java.math.BigInteger getTargetMerchantId() {
        return targetMerchantId;
      }

      /** The ID of the target merchant. */
      public Get setTargetMerchantId(java.math.BigInteger targetMerchantId) {
        this.targetMerchantId = targetMerchantId;
        return this;
      }

      /** A store code that is unique per merchant. */
      @com.google.api.client.util.Key
      private java.lang.String storeCode;

      /** A store code that is unique per merchant.
       */
      public java.lang.String getStoreCode() {
        return storeCode;
      }

      /** A store code that is unique per merchant. */
      public Get setStoreCode(java.lang.String storeCode) {
        this.storeCode = storeCode;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates a store for the given merchant.
     *
     * Create a request for the method "pos.insert".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the POS or inventory data provider.
     * @param targetMerchantId The ID of the target merchant.
     * @param content the {@link com.google.api.services.content.model.PosStore}
     * @return the request
     */
    public Insert insert(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId, com.google.api.services.content.model.PosStore content) throws java.io.IOException {
      Insert result = new Insert(merchantId, targetMerchantId, content);
      initialize(result);
      return result;
    }

    public class Insert extends ShoppingContentRequest<com.google.api.services.content.model.PosStore> {

      private static final String REST_PATH = "{merchantId}/pos/{targetMerchantId}/store";

      /**
       * Creates a store for the given merchant.
       *
       * Create a request for the method "pos.insert".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the POS or inventory data provider.
       * @param targetMerchantId The ID of the target merchant.
       * @param content the {@link com.google.api.services.content.model.PosStore}
       * @since 1.13
       */
      protected Insert(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId, com.google.api.services.content.model.PosStore content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.PosStore.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.targetMerchantId = com.google.api.client.util.Preconditions.checkNotNull(targetMerchantId, "Required parameter targetMerchantId must be specified.");
      }

      @Override
      public Insert set$Xgafv(java.lang.String $Xgafv) {
        return (Insert) super.set$Xgafv($Xgafv);
      }

      @Override
      public Insert setAccessToken(java.lang.String accessToken) {
        return (Insert) super.setAccessToken(accessToken);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setCallback(java.lang.String callback) {
        return (Insert) super.setCallback(callback);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUploadType(java.lang.String uploadType) {
        return (Insert) super.setUploadType(uploadType);
      }

      @Override
      public Insert setUploadProtocol(java.lang.String uploadProtocol) {
        return (Insert) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the POS or inventory data provider. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the POS or inventory data provider.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the POS or inventory data provider. */
      public Insert setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the target merchant. */
      @com.google.api.client.util.Key
      private java.math.BigInteger targetMerchantId;

      /** The ID of the target merchant.
       */
      public java.math.BigInteger getTargetMerchantId() {
        return targetMerchantId;
      }

      /** The ID of the target merchant. */
      public Insert setTargetMerchantId(java.math.BigInteger targetMerchantId) {
        this.targetMerchantId = targetMerchantId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Submit inventory for the given merchant.
     *
     * Create a request for the method "pos.inventory".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Inventory#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the POS or inventory data provider.
     * @param targetMerchantId The ID of the target merchant.
     * @param content the {@link com.google.api.services.content.model.PosInventoryRequest}
     * @return the request
     */
    public Inventory inventory(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId, com.google.api.services.content.model.PosInventoryRequest content) throws java.io.IOException {
      Inventory result = new Inventory(merchantId, targetMerchantId, content);
      initialize(result);
      return result;
    }

    public class Inventory extends ShoppingContentRequest<com.google.api.services.content.model.PosInventoryResponse> {

      private static final String REST_PATH = "{merchantId}/pos/{targetMerchantId}/inventory";

      /**
       * Submit inventory for the given merchant.
       *
       * Create a request for the method "pos.inventory".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Inventory#execute()} method to invoke the remote operation. <p>
       * {@link
       * Inventory#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the POS or inventory data provider.
       * @param targetMerchantId The ID of the target merchant.
       * @param content the {@link com.google.api.services.content.model.PosInventoryRequest}
       * @since 1.13
       */
      protected Inventory(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId, com.google.api.services.content.model.PosInventoryRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.PosInventoryResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.targetMerchantId = com.google.api.client.util.Preconditions.checkNotNull(targetMerchantId, "Required parameter targetMerchantId must be specified.");
      }

      @Override
      public Inventory set$Xgafv(java.lang.String $Xgafv) {
        return (Inventory) super.set$Xgafv($Xgafv);
      }

      @Override
      public Inventory setAccessToken(java.lang.String accessToken) {
        return (Inventory) super.setAccessToken(accessToken);
      }

      @Override
      public Inventory setAlt(java.lang.String alt) {
        return (Inventory) super.setAlt(alt);
      }

      @Override
      public Inventory setCallback(java.lang.String callback) {
        return (Inventory) super.setCallback(callback);
      }

      @Override
      public Inventory setFields(java.lang.String fields) {
        return (Inventory) super.setFields(fields);
      }

      @Override
      public Inventory setKey(java.lang.String key) {
        return (Inventory) super.setKey(key);
      }

      @Override
      public Inventory setOauthToken(java.lang.String oauthToken) {
        return (Inventory) super.setOauthToken(oauthToken);
      }

      @Override
      public Inventory setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Inventory) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Inventory setQuotaUser(java.lang.String quotaUser) {
        return (Inventory) super.setQuotaUser(quotaUser);
      }

      @Override
      public Inventory setUploadType(java.lang.String uploadType) {
        return (Inventory) super.setUploadType(uploadType);
      }

      @Override
      public Inventory setUploadProtocol(java.lang.String uploadProtocol) {
        return (Inventory) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the POS or inventory data provider. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the POS or inventory data provider.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the POS or inventory data provider. */
      public Inventory setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the target merchant. */
      @com.google.api.client.util.Key
      private java.math.BigInteger targetMerchantId;

      /** The ID of the target merchant.
       */
      public java.math.BigInteger getTargetMerchantId() {
        return targetMerchantId;
      }

      /** The ID of the target merchant. */
      public Inventory setTargetMerchantId(java.math.BigInteger targetMerchantId) {
        this.targetMerchantId = targetMerchantId;
        return this;
      }

      @Override
      public Inventory set(String parameterName, Object value) {
        return (Inventory) super.set(parameterName, value);
      }
    }
    /**
     * Lists the stores of the target merchant.
     *
     * Create a request for the method "pos.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the POS or inventory data provider.
     * @param targetMerchantId The ID of the target merchant.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId) throws java.io.IOException {
      List result = new List(merchantId, targetMerchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.PosListResponse> {

      private static final String REST_PATH = "{merchantId}/pos/{targetMerchantId}/store";

      /**
       * Lists the stores of the target merchant.
       *
       * Create a request for the method "pos.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the POS or inventory data provider.
       * @param targetMerchantId The ID of the target merchant.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.PosListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.targetMerchantId = com.google.api.client.util.Preconditions.checkNotNull(targetMerchantId, "Required parameter targetMerchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the POS or inventory data provider. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the POS or inventory data provider.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the POS or inventory data provider. */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the target merchant. */
      @com.google.api.client.util.Key
      private java.math.BigInteger targetMerchantId;

      /** The ID of the target merchant.
       */
      public java.math.BigInteger getTargetMerchantId() {
        return targetMerchantId;
      }

      /** The ID of the target merchant. */
      public List setTargetMerchantId(java.math.BigInteger targetMerchantId) {
        this.targetMerchantId = targetMerchantId;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Submit a sale event for the given merchant.
     *
     * Create a request for the method "pos.sale".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Sale#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the POS or inventory data provider.
     * @param targetMerchantId The ID of the target merchant.
     * @param content the {@link com.google.api.services.content.model.PosSaleRequest}
     * @return the request
     */
    public Sale sale(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId, com.google.api.services.content.model.PosSaleRequest content) throws java.io.IOException {
      Sale result = new Sale(merchantId, targetMerchantId, content);
      initialize(result);
      return result;
    }

    public class Sale extends ShoppingContentRequest<com.google.api.services.content.model.PosSaleResponse> {

      private static final String REST_PATH = "{merchantId}/pos/{targetMerchantId}/sale";

      /**
       * Submit a sale event for the given merchant.
       *
       * Create a request for the method "pos.sale".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Sale#execute()} method to invoke the remote operation. <p> {@link
       * Sale#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the POS or inventory data provider.
       * @param targetMerchantId The ID of the target merchant.
       * @param content the {@link com.google.api.services.content.model.PosSaleRequest}
       * @since 1.13
       */
      protected Sale(java.math.BigInteger merchantId, java.math.BigInteger targetMerchantId, com.google.api.services.content.model.PosSaleRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.PosSaleResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.targetMerchantId = com.google.api.client.util.Preconditions.checkNotNull(targetMerchantId, "Required parameter targetMerchantId must be specified.");
      }

      @Override
      public Sale set$Xgafv(java.lang.String $Xgafv) {
        return (Sale) super.set$Xgafv($Xgafv);
      }

      @Override
      public Sale setAccessToken(java.lang.String accessToken) {
        return (Sale) super.setAccessToken(accessToken);
      }

      @Override
      public Sale setAlt(java.lang.String alt) {
        return (Sale) super.setAlt(alt);
      }

      @Override
      public Sale setCallback(java.lang.String callback) {
        return (Sale) super.setCallback(callback);
      }

      @Override
      public Sale setFields(java.lang.String fields) {
        return (Sale) super.setFields(fields);
      }

      @Override
      public Sale setKey(java.lang.String key) {
        return (Sale) super.setKey(key);
      }

      @Override
      public Sale setOauthToken(java.lang.String oauthToken) {
        return (Sale) super.setOauthToken(oauthToken);
      }

      @Override
      public Sale setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Sale) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Sale setQuotaUser(java.lang.String quotaUser) {
        return (Sale) super.setQuotaUser(quotaUser);
      }

      @Override
      public Sale setUploadType(java.lang.String uploadType) {
        return (Sale) super.setUploadType(uploadType);
      }

      @Override
      public Sale setUploadProtocol(java.lang.String uploadProtocol) {
        return (Sale) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the POS or inventory data provider. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the POS or inventory data provider.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the POS or inventory data provider. */
      public Sale setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the target merchant. */
      @com.google.api.client.util.Key
      private java.math.BigInteger targetMerchantId;

      /** The ID of the target merchant.
       */
      public java.math.BigInteger getTargetMerchantId() {
        return targetMerchantId;
      }

      /** The ID of the target merchant. */
      public Sale setTargetMerchantId(java.math.BigInteger targetMerchantId) {
        this.targetMerchantId = targetMerchantId;
        return this;
      }

      @Override
      public Sale set(String parameterName, Object value) {
        return (Sale) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Productdeliverytime collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Productdeliverytime.List request = content.productdeliverytime().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Productdeliverytime productdeliverytime() {
    return new Productdeliverytime();
  }

  /**
   * The "productdeliverytime" collection of methods.
   */
  public class Productdeliverytime {

    /**
     * Creates or updates the delivery time of a product.
     *
     * Create a request for the method "productdeliverytime.create".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param merchantId The Google merchant ID of the account that contains the product. This account cannot be a multi-
     *        client account.
     * @param content the {@link com.google.api.services.content.model.ProductDeliveryTime}
     * @return the request
     */
    public Create create(java.lang.Long merchantId, com.google.api.services.content.model.ProductDeliveryTime content) throws java.io.IOException {
      Create result = new Create(merchantId, content);
      initialize(result);
      return result;
    }

    public class Create extends ShoppingContentRequest<com.google.api.services.content.model.ProductDeliveryTime> {

      private static final String REST_PATH = "{merchantId}/productdeliverytime";

      /**
       * Creates or updates the delivery time of a product.
       *
       * Create a request for the method "productdeliverytime.create".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The Google merchant ID of the account that contains the product. This account cannot be a multi-
     *        client account.
       * @param content the {@link com.google.api.services.content.model.ProductDeliveryTime}
       * @since 1.13
       */
      protected Create(java.lang.Long merchantId, com.google.api.services.content.model.ProductDeliveryTime content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.ProductDeliveryTime.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The Google merchant ID of the account that contains the product. This account cannot be a
       * multi-client account.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** The Google merchant ID of the account that contains the product. This account cannot be a multi-
     client account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * The Google merchant ID of the account that contains the product. This account cannot be a
       * multi-client account.
       */
      public Create setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Deletes the delivery time of a product.
     *
     * Create a request for the method "productdeliverytime.delete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The Google merchant ID of the account that contains the product. This account cannot be a
     *        multi-client account.
     * @param productId Required. The Content API ID of the product, in the form
     *        `channel:contentLanguage:targetCountry:offerId`.
     * @return the request
     */
    public Delete delete(java.lang.Long merchantId, java.lang.String productId) throws java.io.IOException {
      Delete result = new Delete(merchantId, productId);
      initialize(result);
      return result;
    }

    public class Delete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/productdeliverytime/{productId}";

      /**
       * Deletes the delivery time of a product.
       *
       * Create a request for the method "productdeliverytime.delete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The Google merchant ID of the account that contains the product. This account cannot be a
     *        multi-client account.
       * @param productId Required. The Content API ID of the product, in the form
     *        `channel:contentLanguage:targetCountry:offerId`.
       * @since 1.13
       */
      protected Delete(java.lang.Long merchantId, java.lang.String productId) {
        super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.productId = com.google.api.client.util.Preconditions.checkNotNull(productId, "Required parameter productId must be specified.");
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The Google merchant ID of the account that contains the product. This account
       * cannot be a multi-client account.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The Google merchant ID of the account that contains the product. This account cannot be a
     multi-client account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The Google merchant ID of the account that contains the product. This account
       * cannot be a multi-client account.
       */
      public Delete setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * Required. The Content API ID of the product, in the form
       * `channel:contentLanguage:targetCountry:offerId`.
       */
      @com.google.api.client.util.Key
      private java.lang.String productId;

      /** Required. The Content API ID of the product, in the form
     `channel:contentLanguage:targetCountry:offerId`.
       */
      public java.lang.String getProductId() {
        return productId;
      }

      /**
       * Required. The Content API ID of the product, in the form
       * `channel:contentLanguage:targetCountry:offerId`.
       */
      public Delete setProductId(java.lang.String productId) {
        this.productId = productId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets `productDeliveryTime` by `productId`.
     *
     * Create a request for the method "productdeliverytime.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The Google merchant ID of the account that contains the product. This account cannot be a
     *        multi-client account.
     * @param productId Required. The Content API ID of the product, in the form
     *        `channel:contentLanguage:targetCountry:offerId`.
     * @return the request
     */
    public Get get(java.lang.Long merchantId, java.lang.String productId) throws java.io.IOException {
      Get result = new Get(merchantId, productId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.ProductDeliveryTime> {

      private static final String REST_PATH = "{merchantId}/productdeliverytime/{productId}";

      /**
       * Gets `productDeliveryTime` by `productId`.
       *
       * Create a request for the method "productdeliverytime.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The Google merchant ID of the account that contains the product. This account cannot be a
     *        multi-client account.
       * @param productId Required. The Content API ID of the product, in the form
     *        `channel:contentLanguage:targetCountry:offerId`.
       * @since 1.13
       */
      protected Get(java.lang.Long merchantId, java.lang.String productId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ProductDeliveryTime.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.productId = com.google.api.client.util.Preconditions.checkNotNull(productId, "Required parameter productId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The Google merchant ID of the account that contains the product. This account
       * cannot be a multi-client account.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The Google merchant ID of the account that contains the product. This account cannot be a
     multi-client account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The Google merchant ID of the account that contains the product. This account
       * cannot be a multi-client account.
       */
      public Get setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * Required. The Content API ID of the product, in the form
       * `channel:contentLanguage:targetCountry:offerId`.
       */
      @com.google.api.client.util.Key
      private java.lang.String productId;

      /** Required. The Content API ID of the product, in the form
     `channel:contentLanguage:targetCountry:offerId`.
       */
      public java.lang.String getProductId() {
        return productId;
      }

      /**
       * Required. The Content API ID of the product, in the form
       * `channel:contentLanguage:targetCountry:offerId`.
       */
      public Get setProductId(java.lang.String productId) {
        this.productId = productId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Products collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Products.List request = content.products().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Products products() {
    return new Products();
  }

  /**
   * The "products" collection of methods.
   */
  public class Products {

    /**
     * Retrieves, inserts, and deletes multiple products in a single request.
     *
     * Create a request for the method "products.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.ProductsCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.ProductsCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.ProductsCustomBatchResponse> {

      private static final String REST_PATH = "products/batch";

      /**
       * Retrieves, inserts, and deletes multiple products in a single request.
       *
       * Create a request for the method "products.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.ProductsCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.ProductsCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.ProductsCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a product from your Merchant Center account.
     *
     * Create a request for the method "products.delete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
     * @param productId The REST ID of the product.
     * @return the request
     */
    public Delete delete(java.math.BigInteger merchantId, java.lang.String productId) throws java.io.IOException {
      Delete result = new Delete(merchantId, productId);
      initialize(result);
      return result;
    }

    public class Delete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/products/{productId}";

      /**
       * Deletes a product from your Merchant Center account.
       *
       * Create a request for the method "products.delete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
       * @param productId The REST ID of the product.
       * @since 1.13
       */
      protected Delete(java.math.BigInteger merchantId, java.lang.String productId) {
        super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.productId = com.google.api.client.util.Preconditions.checkNotNull(productId, "Required parameter productId must be specified.");
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that contains the product. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      public Delete setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The REST ID of the product. */
      @com.google.api.client.util.Key
      private java.lang.String productId;

      /** The REST ID of the product.
       */
      public java.lang.String getProductId() {
        return productId;
      }

      /** The REST ID of the product. */
      public Delete setProductId(java.lang.String productId) {
        this.productId = productId;
        return this;
      }

      /**
       * The Content API Supplemental Feed ID. If present then product deletion applies to the data
       * in a supplemental feed. If absent, entire product will be deleted.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger feedId;

      /** The Content API Supplemental Feed ID. If present then product deletion applies to the data in a
     supplemental feed. If absent, entire product will be deleted.
       */
      public java.math.BigInteger getFeedId() {
        return feedId;
      }

      /**
       * The Content API Supplemental Feed ID. If present then product deletion applies to the data
       * in a supplemental feed. If absent, entire product will be deleted.
       */
      public Delete setFeedId(java.math.BigInteger feedId) {
        this.feedId = feedId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a product from your Merchant Center account.
     *
     * Create a request for the method "products.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
     * @param productId The REST ID of the product.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.lang.String productId) throws java.io.IOException {
      Get result = new Get(merchantId, productId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.Product> {

      private static final String REST_PATH = "{merchantId}/products/{productId}";

      /**
       * Retrieves a product from your Merchant Center account.
       *
       * Create a request for the method "products.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
       * @param productId The REST ID of the product.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.lang.String productId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.Product.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.productId = com.google.api.client.util.Preconditions.checkNotNull(productId, "Required parameter productId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that contains the product. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The REST ID of the product. */
      @com.google.api.client.util.Key
      private java.lang.String productId;

      /** The REST ID of the product.
       */
      public java.lang.String getProductId() {
        return productId;
      }

      /** The REST ID of the product. */
      public Get setProductId(java.lang.String productId) {
        this.productId = productId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Uploads a product to your Merchant Center account. If an item with the same channel,
     * contentLanguage, offerId, and targetCountry already exists, this method updates that entry.
     *
     * Create a request for the method "products.insert".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
     * @param content the {@link com.google.api.services.content.model.Product}
     * @return the request
     */
    public Insert insert(java.math.BigInteger merchantId, com.google.api.services.content.model.Product content) throws java.io.IOException {
      Insert result = new Insert(merchantId, content);
      initialize(result);
      return result;
    }

    public class Insert extends ShoppingContentRequest<com.google.api.services.content.model.Product> {

      private static final String REST_PATH = "{merchantId}/products";

      /**
       * Uploads a product to your Merchant Center account. If an item with the same channel,
       * contentLanguage, offerId, and targetCountry already exists, this method updates that entry.
       *
       * Create a request for the method "products.insert".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
       * @param content the {@link com.google.api.services.content.model.Product}
       * @since 1.13
       */
      protected Insert(java.math.BigInteger merchantId, com.google.api.services.content.model.Product content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.Product.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Insert set$Xgafv(java.lang.String $Xgafv) {
        return (Insert) super.set$Xgafv($Xgafv);
      }

      @Override
      public Insert setAccessToken(java.lang.String accessToken) {
        return (Insert) super.setAccessToken(accessToken);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setCallback(java.lang.String callback) {
        return (Insert) super.setCallback(callback);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUploadType(java.lang.String uploadType) {
        return (Insert) super.setUploadType(uploadType);
      }

      @Override
      public Insert setUploadProtocol(java.lang.String uploadProtocol) {
        return (Insert) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that contains the product. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      public Insert setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * The Content API Supplemental Feed ID. If present then product insertion applies to the data
       * in a supplemental feed.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger feedId;

      /** The Content API Supplemental Feed ID. If present then product insertion applies to the data in a
     supplemental feed.
       */
      public java.math.BigInteger getFeedId() {
        return feedId;
      }

      /**
       * The Content API Supplemental Feed ID. If present then product insertion applies to the data
       * in a supplemental feed.
       */
      public Insert setFeedId(java.math.BigInteger feedId) {
        this.feedId = feedId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Lists the products in your Merchant Center account. The response might contain fewer items than
     * specified by maxResults. Rely on nextPageToken to determine if there are more items to be
     * requested.
     *
     * Create a request for the method "products.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that contains the products. This account cannot be a multi-client account.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ProductsListResponse> {

      private static final String REST_PATH = "{merchantId}/products";

      /**
       * Lists the products in your Merchant Center account. The response might contain fewer items than
       * specified by maxResults. Rely on nextPageToken to determine if there are more items to be
       * requested.
       *
       * Create a request for the method "products.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that contains the products. This account cannot be a multi-client account.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ProductsListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that contains the products. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that contains the products. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that contains the products. This account cannot be a multi-client
       * account.
       */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * The maximum number of products to return in the response, used for paging. The default
       * value is 25. The maximum value is 250.
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of products to return in the response, used for paging. The default value is 25.
     The maximum value is 250.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of products to return in the response, used for paging. The default
       * value is 25. The maximum value is 250.
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates an existing product in your Merchant Center account. Only updates attributes provided in
     * the request.
     *
     * Create a request for the method "products.update".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
     * @param productId The REST ID of the product for which to update.
     * @param content the {@link com.google.api.services.content.model.Product}
     * @return the request
     */
    public Update update(java.math.BigInteger merchantId, java.lang.String productId, com.google.api.services.content.model.Product content) throws java.io.IOException {
      Update result = new Update(merchantId, productId, content);
      initialize(result);
      return result;
    }

    public class Update extends ShoppingContentRequest<com.google.api.services.content.model.Product> {

      private static final String REST_PATH = "{merchantId}/products/{productId}";

      /**
       * Updates an existing product in your Merchant Center account. Only updates attributes provided
       * in the request.
       *
       * Create a request for the method "products.update".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
       * @param productId The REST ID of the product for which to update.
       * @param content the {@link com.google.api.services.content.model.Product}
       * @since 1.13
       */
      protected Update(java.math.BigInteger merchantId, java.lang.String productId, com.google.api.services.content.model.Product content) {
        super(ShoppingContent.this, "PATCH", REST_PATH, content, com.google.api.services.content.model.Product.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.productId = com.google.api.client.util.Preconditions.checkNotNull(productId, "Required parameter productId must be specified.");
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that contains the product. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      public Update setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The REST ID of the product for which to update. */
      @com.google.api.client.util.Key
      private java.lang.String productId;

      /** The REST ID of the product for which to update.
       */
      public java.lang.String getProductId() {
        return productId;
      }

      /** The REST ID of the product for which to update. */
      public Update setProductId(java.lang.String productId) {
        this.productId = productId;
        return this;
      }

      /**
       * The comma-separated list of product attributes to be updated. Example: `"title,salePrice"`.
       * Attributes specified in the update mask without a value specified in the body will be
       * deleted from the product. *You must specify the update mask to delete attributes.* Only
       * top-level product attributes can be updated. If not defined, product attributes with set
       * values will be updated and other attributes will stay unchanged.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** The comma-separated list of product attributes to be updated. Example: `"title,salePrice"`.
     Attributes specified in the update mask without a value specified in the body will be deleted from
     the product. *You must specify the update mask to delete attributes.* Only top-level product
     attributes can be updated. If not defined, product attributes with set values will be updated and
     other attributes will stay unchanged.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * The comma-separated list of product attributes to be updated. Example: `"title,salePrice"`.
       * Attributes specified in the update mask without a value specified in the body will be
       * deleted from the product. *You must specify the update mask to delete attributes.* Only
       * top-level product attributes can be updated. If not defined, product attributes with set
       * values will be updated and other attributes will stay unchanged.
       */
      public Update setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Productstatuses collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Productstatuses.List request = content.productstatuses().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Productstatuses productstatuses() {
    return new Productstatuses();
  }

  /**
   * The "productstatuses" collection of methods.
   */
  public class Productstatuses {

    /**
     * Gets the statuses of multiple products in a single request.
     *
     * Create a request for the method "productstatuses.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.ProductstatusesCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.ProductstatusesCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.ProductstatusesCustomBatchResponse> {

      private static final String REST_PATH = "productstatuses/batch";

      /**
       * Gets the statuses of multiple products in a single request.
       *
       * Create a request for the method "productstatuses.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.ProductstatusesCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.ProductstatusesCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.ProductstatusesCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Gets the status of a product from your Merchant Center account.
     *
     * Create a request for the method "productstatuses.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
     * @param productId The REST ID of the product.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.lang.String productId) throws java.io.IOException {
      Get result = new Get(merchantId, productId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.ProductStatus> {

      private static final String REST_PATH = "{merchantId}/productstatuses/{productId}";

      /**
       * Gets the status of a product from your Merchant Center account.
       *
       * Create a request for the method "productstatuses.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
       * @param productId The REST ID of the product.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.lang.String productId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ProductStatus.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.productId = com.google.api.client.util.Preconditions.checkNotNull(productId, "Required parameter productId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that contains the product. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The REST ID of the product. */
      @com.google.api.client.util.Key
      private java.lang.String productId;

      /** The REST ID of the product.
       */
      public java.lang.String getProductId() {
        return productId;
      }

      /** The REST ID of the product. */
      public Get setProductId(java.lang.String productId) {
        this.productId = productId;
        return this;
      }

      /**
       * If set, only issues for the specified destinations are returned, otherwise only issues for
       * the Shopping destination.
       */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> destinations;

      /** If set, only issues for the specified destinations are returned, otherwise only issues for the
     Shopping destination.
       */
      public java.util.List<java.lang.String> getDestinations() {
        return destinations;
      }

      /**
       * If set, only issues for the specified destinations are returned, otherwise only issues for
       * the Shopping destination.
       */
      public Get setDestinations(java.util.List<java.lang.String> destinations) {
        this.destinations = destinations;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists the statuses of the products in your Merchant Center account.
     *
     * Create a request for the method "productstatuses.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that contains the products. This account cannot be a multi-client account.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ProductstatusesListResponse> {

      private static final String REST_PATH = "{merchantId}/productstatuses";

      /**
       * Lists the statuses of the products in your Merchant Center account.
       *
       * Create a request for the method "productstatuses.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that contains the products. This account cannot be a multi-client account.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ProductstatusesListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that contains the products. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that contains the products. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that contains the products. This account cannot be a multi-client
       * account.
       */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * If set, only issues for the specified destinations are returned, otherwise only issues for
       * the Shopping destination.
       */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> destinations;

      /** If set, only issues for the specified destinations are returned, otherwise only issues for the
     Shopping destination.
       */
      public java.util.List<java.lang.String> getDestinations() {
        return destinations;
      }

      /**
       * If set, only issues for the specified destinations are returned, otherwise only issues for
       * the Shopping destination.
       */
      public List setDestinations(java.util.List<java.lang.String> destinations) {
        this.destinations = destinations;
        return this;
      }

      /**
       * The maximum number of product statuses to return in the response, used for paging. The
       * default value is 25. The maximum value is 250.
       */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of product statuses to return in the response, used for paging. The default
     value is 25. The maximum value is 250.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /**
       * The maximum number of product statuses to return in the response, used for paging. The
       * default value is 25. The maximum value is 250.
       */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Promotions collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Promotions.List request = content.promotions().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Promotions promotions() {
    return new Promotions();
  }

  /**
   * The "promotions" collection of methods.
   */
  public class Promotions {

    /**
     * Inserts a promotion for your Merchant Center account. If the promotion already exists, then it
     * updates the promotion instead. To [end or delete] (https://developers.google.com/shopping-
     * content/guides/promotions#end_a_promotion) a promotion update the time period of the promotion to
     * a time that has already passed.
     *
     * Create a request for the method "promotions.create".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that contains the collection.
     * @param content the {@link com.google.api.services.content.model.Promotion}
     * @return the request
     */
    public Create create(java.lang.Long merchantId, com.google.api.services.content.model.Promotion content) throws java.io.IOException {
      Create result = new Create(merchantId, content);
      initialize(result);
      return result;
    }

    public class Create extends ShoppingContentRequest<com.google.api.services.content.model.Promotion> {

      private static final String REST_PATH = "{merchantId}/promotions";

      /**
       * Inserts a promotion for your Merchant Center account. If the promotion already exists, then it
       * updates the promotion instead. To [end or delete] (https://developers.google.com/shopping-
       * content/guides/promotions#end_a_promotion) a promotion update the time period of the promotion
       * to a time that has already passed.
       *
       * Create a request for the method "promotions.create".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that contains the collection.
       * @param content the {@link com.google.api.services.content.model.Promotion}
       * @since 1.13
       */
      protected Create(java.lang.Long merchantId, com.google.api.services.content.model.Promotion content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.Promotion.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that contains the collection. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that contains the collection.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that contains the collection. */
      public Create setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a promotion from your Merchant Center account.
     *
     * Create a request for the method "promotions.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that contains the collection.
     * @param id Required. REST ID of the promotion to retrieve.
     * @return the request
     */
    public Get get(java.lang.Long merchantId, java.lang.String id) throws java.io.IOException {
      Get result = new Get(merchantId, id);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.Promotion> {

      private static final String REST_PATH = "{merchantId}/promotions/{id}";

      /**
       * Retrieves a promotion from your Merchant Center account.
       *
       * Create a request for the method "promotions.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that contains the collection.
       * @param id Required. REST ID of the promotion to retrieve.
       * @since 1.13
       */
      protected Get(java.lang.Long merchantId, java.lang.String id) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.Promotion.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that contains the collection. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that contains the collection.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that contains the collection. */
      public Get setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. REST ID of the promotion to retrieve. */
      @com.google.api.client.util.Key
      private java.lang.String id;

      /** Required. REST ID of the promotion to retrieve.
       */
      public java.lang.String getId() {
        return id;
      }

      /** Required. REST ID of the promotion to retrieve. */
      public Get setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * List all promotions from your Merchant Center account.
     *
     * Create a request for the method "promotions.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that contains the collection.
     * @return the request
     */
    public List list(java.lang.Long merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ListPromotionResponse> {

      private static final String REST_PATH = "{merchantId}/promotions";

      /**
       * List all promotions from your Merchant Center account.
       *
       * Create a request for the method "promotions.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that contains the collection.
       * @since 1.13
       */
      protected List(java.lang.Long merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ListPromotionResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that contains the collection. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that contains the collection.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that contains the collection. */
      public List setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * [CLDR country code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) (for
       * example, "US"), used as a filter on promotions target country.
       */
      @com.google.api.client.util.Key
      private java.lang.String countryCode;

      /**[ CLDR country code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) (for example,
    [ "US"), used as a filter on promotions target country.
    [

       */
      public java.lang.String getCountryCode() {
        return countryCode;
      }

      /**
       * [CLDR country code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) (for
       * example, "US"), used as a filter on promotions target country.
       */
      public List setCountryCode(java.lang.String countryCode) {
        this.countryCode = countryCode;
        return this;
      }

      /**
       * The two-letter ISO 639-1 language code associated with the promotions, used as a filter.
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** The two-letter ISO 639-1 language code associated with the promotions, used as a filter.
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * The two-letter ISO 639-1 language code associated with the promotions, used as a filter.
       */
      public List setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      /**
       * The maximum number of promotions to return. The service may return fewer than this value.
       * If unspecified, at most 50 labels will be returned. The maximum value is 1000; values above
       * 1000 will be coerced to 1000.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of promotions to return. The service may return fewer than this value. If
     unspecified, at most 50 labels will be returned. The maximum value is 1000; values above 1000 will
     be coerced to 1000.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of promotions to return. The service may return fewer than this value.
       * If unspecified, at most 50 labels will be returned. The maximum value is 1000; values above
       * 1000 will be coerced to 1000.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListPromotion` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListPromotion` must
       * match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListPromotion` call. Provide this to retrieve the
     subsequent page. When paginating, all other parameters provided to `ListPromotion` must match the
     call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListPromotion` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListPromotion` must
       * match the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Pubsubnotificationsettings collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Pubsubnotificationsettings.List request = content.pubsubnotificationsettings().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Pubsubnotificationsettings pubsubnotificationsettings() {
    return new Pubsubnotificationsettings();
  }

  /**
   * The "pubsubnotificationsettings" collection of methods.
   */
  public class Pubsubnotificationsettings {

    /**
     * Retrieves a Merchant Center account's pubsub notification settings.
     *
     * Create a request for the method "pubsubnotificationsettings.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account for which to get pubsub notification settings.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId) throws java.io.IOException {
      Get result = new Get(merchantId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.PubsubNotificationSettings> {

      private static final String REST_PATH = "{merchantId}/pubsubnotificationsettings";

      /**
       * Retrieves a Merchant Center account's pubsub notification settings.
       *
       * Create a request for the method "pubsubnotificationsettings.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account for which to get pubsub notification settings.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.PubsubNotificationSettings.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the account for which to get pubsub notification settings. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account for which to get pubsub notification settings.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account for which to get pubsub notification settings. */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Register a Merchant Center account for pubsub notifications. Note that cloud topic name shouldn't
     * be provided as part of the request.
     *
     * Create a request for the method "pubsubnotificationsettings.update".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account.
     * @param content the {@link com.google.api.services.content.model.PubsubNotificationSettings}
     * @return the request
     */
    public Update update(java.math.BigInteger merchantId, com.google.api.services.content.model.PubsubNotificationSettings content) throws java.io.IOException {
      Update result = new Update(merchantId, content);
      initialize(result);
      return result;
    }

    public class Update extends ShoppingContentRequest<com.google.api.services.content.model.PubsubNotificationSettings> {

      private static final String REST_PATH = "{merchantId}/pubsubnotificationsettings";

      /**
       * Register a Merchant Center account for pubsub notifications. Note that cloud topic name
       * shouldn't be provided as part of the request.
       *
       * Create a request for the method "pubsubnotificationsettings.update".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account.
       * @param content the {@link com.google.api.services.content.model.PubsubNotificationSettings}
       * @since 1.13
       */
      protected Update(java.math.BigInteger merchantId, com.google.api.services.content.model.PubsubNotificationSettings content) {
        super(ShoppingContent.this, "PUT", REST_PATH, content, com.google.api.services.content.model.PubsubNotificationSettings.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account. */
      public Update setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Quotas collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Quotas.List request = content.quotas().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Quotas quotas() {
    return new Quotas();
  }

  /**
   * The "quotas" collection of methods.
   */
  public class Quotas {

    /**
     * Lists the daily call quota and usage per method for your Merchant Center account.
     *
     * Create a request for the method "quotas.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that has quota. This account must be an admin.
     * @return the request
     */
    public List list(java.lang.Long merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ListMethodQuotasResponse> {

      private static final String REST_PATH = "{merchantId}/quotas";

      /**
       * Lists the daily call quota and usage per method for your Merchant Center account.
       *
       * Create a request for the method "quotas.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account that has quota. This account must be an admin.
       * @since 1.13
       */
      protected List(java.lang.Long merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ListMethodQuotasResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that has quota. This account must be an admin. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that has quota. This account must be an admin.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that has quota. This account must be an admin. */
      public List setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * The maximum number of quotas to return in the response, used for paging. Defaults to 500;
       * values above 1000 will be coerced to 1000.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of quotas to return in the response, used for paging. Defaults to 500; values
     above 1000 will be coerced to 1000.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of quotas to return in the response, used for paging. Defaults to 500;
       * values above 1000 will be coerced to 1000.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * Token (if provided) to retrieve the subsequent page. All other parameters must match the
       * original call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** Token (if provided) to retrieve the subsequent page. All other parameters must match the original
     call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * Token (if provided) to retrieve the subsequent page. All other parameters must match the
       * original call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Recommendations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Recommendations.List request = content.recommendations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Recommendations recommendations() {
    return new Recommendations();
  }

  /**
   * The "recommendations" collection of methods.
   */
  public class Recommendations {

    /**
     * Generates recommendations for a merchant.
     *
     * Create a request for the method "recommendations.generate".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Generate#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account to fetch recommendations for.
     * @return the request
     */
    public Generate generate(java.lang.Long merchantId) throws java.io.IOException {
      Generate result = new Generate(merchantId);
      initialize(result);
      return result;
    }

    public class Generate extends ShoppingContentRequest<com.google.api.services.content.model.GenerateRecommendationsResponse> {

      private static final String REST_PATH = "{merchantId}/recommendations/generate";

      /**
       * Generates recommendations for a merchant.
       *
       * Create a request for the method "recommendations.generate".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Generate#execute()} method to invoke the remote operation. <p>
       * {@link
       * Generate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account to fetch recommendations for.
       * @since 1.13
       */
      protected Generate(java.lang.Long merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.GenerateRecommendationsResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Generate set$Xgafv(java.lang.String $Xgafv) {
        return (Generate) super.set$Xgafv($Xgafv);
      }

      @Override
      public Generate setAccessToken(java.lang.String accessToken) {
        return (Generate) super.setAccessToken(accessToken);
      }

      @Override
      public Generate setAlt(java.lang.String alt) {
        return (Generate) super.setAlt(alt);
      }

      @Override
      public Generate setCallback(java.lang.String callback) {
        return (Generate) super.setCallback(callback);
      }

      @Override
      public Generate setFields(java.lang.String fields) {
        return (Generate) super.setFields(fields);
      }

      @Override
      public Generate setKey(java.lang.String key) {
        return (Generate) super.setKey(key);
      }

      @Override
      public Generate setOauthToken(java.lang.String oauthToken) {
        return (Generate) super.setOauthToken(oauthToken);
      }

      @Override
      public Generate setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Generate) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Generate setQuotaUser(java.lang.String quotaUser) {
        return (Generate) super.setQuotaUser(quotaUser);
      }

      @Override
      public Generate setUploadType(java.lang.String uploadType) {
        return (Generate) super.setUploadType(uploadType);
      }

      @Override
      public Generate setUploadProtocol(java.lang.String uploadProtocol) {
        return (Generate) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account to fetch recommendations for. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account to fetch recommendations for.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account to fetch recommendations for. */
      public Generate setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * Optional. List of allowed tags. Tags are a set of predefined strings that describe the
       * category that individual recommendation types belong to. User can specify zero or more tags
       * in this field to indicate what categories of recommendations they want to receive. Current
       * list of supported tags: - TREND
       */
      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> allowedTag;

      /** Optional. List of allowed tags. Tags are a set of predefined strings that describe the category
     that individual recommendation types belong to. User can specify zero or more tags in this field to
     indicate what categories of recommendations they want to receive. Current list of supported tags: -
     TREND
       */
      public java.util.List<java.lang.String> getAllowedTag() {
        return allowedTag;
      }

      /**
       * Optional. List of allowed tags. Tags are a set of predefined strings that describe the
       * category that individual recommendation types belong to. User can specify zero or more tags
       * in this field to indicate what categories of recommendations they want to receive. Current
       * list of supported tags: - TREND
       */
      public Generate setAllowedTag(java.util.List<java.lang.String> allowedTag) {
        this.allowedTag = allowedTag;
        return this;
      }

      /**
       * Optional. Language code of the client. If not set, the result will be in default language
       * (English). This language code affects all fields prefixed with "localized". This should be
       * set to ISO 639-1 country code. List of currently verified supported language code: en, fr,
       * cs, da, de, es, it, nl, no, pl, pt, pt, fi, sv, vi, tr, th, ko, zh-CN, zh-TW, ja, id, hi
       */
      @com.google.api.client.util.Key
      private java.lang.String languageCode;

      /** Optional. Language code of the client. If not set, the result will be in default language
     (English). This language code affects all fields prefixed with "localized". This should be set to
     ISO 639-1 country code. List of currently verified supported language code: en, fr, cs, da, de, es,
     it, nl, no, pl, pt, pt, fi, sv, vi, tr, th, ko, zh-CN, zh-TW, ja, id, hi
       */
      public java.lang.String getLanguageCode() {
        return languageCode;
      }

      /**
       * Optional. Language code of the client. If not set, the result will be in default language
       * (English). This language code affects all fields prefixed with "localized". This should be
       * set to ISO 639-1 country code. List of currently verified supported language code: en, fr,
       * cs, da, de, es, it, nl, no, pl, pt, pt, fi, sv, vi, tr, th, ko, zh-CN, zh-TW, ja, id, hi
       */
      public Generate setLanguageCode(java.lang.String languageCode) {
        this.languageCode = languageCode;
        return this;
      }

      @Override
      public Generate set(String parameterName, Object value) {
        return (Generate) super.set(parameterName, value);
      }
    }
    /**
     * Reports an interaction on a recommendation for a merchant.
     *
     * Create a request for the method "recommendations.reportInteraction".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link ReportInteraction#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account that wants to report an interaction.
     * @param content the {@link com.google.api.services.content.model.ReportInteractionRequest}
     * @return the request
     */
    public ReportInteraction reportInteraction(java.lang.Long merchantId, com.google.api.services.content.model.ReportInteractionRequest content) throws java.io.IOException {
      ReportInteraction result = new ReportInteraction(merchantId, content);
      initialize(result);
      return result;
    }

    public class ReportInteraction extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/recommendations/reportInteraction";

      /**
       * Reports an interaction on a recommendation for a merchant.
       *
       * Create a request for the method "recommendations.reportInteraction".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link ReportInteraction#execute()} method to invoke the remote operation.
       * <p> {@link ReportInteraction#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param merchantId Required. The ID of the account that wants to report an interaction.
       * @param content the {@link com.google.api.services.content.model.ReportInteractionRequest}
       * @since 1.13
       */
      protected ReportInteraction(java.lang.Long merchantId, com.google.api.services.content.model.ReportInteractionRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public ReportInteraction set$Xgafv(java.lang.String $Xgafv) {
        return (ReportInteraction) super.set$Xgafv($Xgafv);
      }

      @Override
      public ReportInteraction setAccessToken(java.lang.String accessToken) {
        return (ReportInteraction) super.setAccessToken(accessToken);
      }

      @Override
      public ReportInteraction setAlt(java.lang.String alt) {
        return (ReportInteraction) super.setAlt(alt);
      }

      @Override
      public ReportInteraction setCallback(java.lang.String callback) {
        return (ReportInteraction) super.setCallback(callback);
      }

      @Override
      public ReportInteraction setFields(java.lang.String fields) {
        return (ReportInteraction) super.setFields(fields);
      }

      @Override
      public ReportInteraction setKey(java.lang.String key) {
        return (ReportInteraction) super.setKey(key);
      }

      @Override
      public ReportInteraction setOauthToken(java.lang.String oauthToken) {
        return (ReportInteraction) super.setOauthToken(oauthToken);
      }

      @Override
      public ReportInteraction setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ReportInteraction) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ReportInteraction setQuotaUser(java.lang.String quotaUser) {
        return (ReportInteraction) super.setQuotaUser(quotaUser);
      }

      @Override
      public ReportInteraction setUploadType(java.lang.String uploadType) {
        return (ReportInteraction) super.setUploadType(uploadType);
      }

      @Override
      public ReportInteraction setUploadProtocol(java.lang.String uploadProtocol) {
        return (ReportInteraction) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account that wants to report an interaction. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account that wants to report an interaction.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account that wants to report an interaction. */
      public ReportInteraction setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public ReportInteraction set(String parameterName, Object value) {
        return (ReportInteraction) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Regionalinventory collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Regionalinventory.List request = content.regionalinventory().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Regionalinventory regionalinventory() {
    return new Regionalinventory();
  }

  /**
   * The "regionalinventory" collection of methods.
   */
  public class Regionalinventory {

    /**
     * Updates regional inventory for multiple products or regions in a single request.
     *
     * Create a request for the method "regionalinventory.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.RegionalinventoryCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.RegionalinventoryCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.RegionalinventoryCustomBatchResponse> {

      private static final String REST_PATH = "regionalinventory/batch";

      /**
       * Updates regional inventory for multiple products or regions in a single request.
       *
       * Create a request for the method "regionalinventory.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.RegionalinventoryCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.RegionalinventoryCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.RegionalinventoryCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Updates the regional inventory of a product in your Merchant Center account. If a regional
     * inventory with the same region ID already exists, this method updates that entry.
     *
     * Create a request for the method "regionalinventory.insert".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
     * @param productId The REST ID of the product for which to update the regional inventory.
     * @param content the {@link com.google.api.services.content.model.RegionalInventory}
     * @return the request
     */
    public Insert insert(java.math.BigInteger merchantId, java.lang.String productId, com.google.api.services.content.model.RegionalInventory content) throws java.io.IOException {
      Insert result = new Insert(merchantId, productId, content);
      initialize(result);
      return result;
    }

    public class Insert extends ShoppingContentRequest<com.google.api.services.content.model.RegionalInventory> {

      private static final String REST_PATH = "{merchantId}/products/{productId}/regionalinventory";

      /**
       * Updates the regional inventory of a product in your Merchant Center account. If a regional
       * inventory with the same region ID already exists, this method updates that entry.
       *
       * Create a request for the method "regionalinventory.insert".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account that contains the product. This account cannot be a multi-client account.
       * @param productId The REST ID of the product for which to update the regional inventory.
       * @param content the {@link com.google.api.services.content.model.RegionalInventory}
       * @since 1.13
       */
      protected Insert(java.math.BigInteger merchantId, java.lang.String productId, com.google.api.services.content.model.RegionalInventory content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.RegionalInventory.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.productId = com.google.api.client.util.Preconditions.checkNotNull(productId, "Required parameter productId must be specified.");
      }

      @Override
      public Insert set$Xgafv(java.lang.String $Xgafv) {
        return (Insert) super.set$Xgafv($Xgafv);
      }

      @Override
      public Insert setAccessToken(java.lang.String accessToken) {
        return (Insert) super.setAccessToken(accessToken);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setCallback(java.lang.String callback) {
        return (Insert) super.setCallback(callback);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUploadType(java.lang.String uploadType) {
        return (Insert) super.setUploadType(uploadType);
      }

      @Override
      public Insert setUploadProtocol(java.lang.String uploadProtocol) {
        return (Insert) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account that contains the product. This account cannot be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the account that contains the product. This account cannot be a multi-client
       * account.
       */
      public Insert setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The REST ID of the product for which to update the regional inventory. */
      @com.google.api.client.util.Key
      private java.lang.String productId;

      /** The REST ID of the product for which to update the regional inventory.
       */
      public java.lang.String getProductId() {
        return productId;
      }

      /** The REST ID of the product for which to update the regional inventory. */
      public Insert setProductId(java.lang.String productId) {
        this.productId = productId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Regions collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Regions.List request = content.regions().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Regions regions() {
    return new Regions();
  }

  /**
   * The "regions" collection of methods.
   */
  public class Regions {

    /**
     * Creates a region definition in your Merchant Center account.
     *
     * Create a request for the method "regions.create".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The id of the merchant for which to create region definition.
     * @param content the {@link com.google.api.services.content.model.Region}
     * @return the request
     */
    public Create create(java.lang.Long merchantId, com.google.api.services.content.model.Region content) throws java.io.IOException {
      Create result = new Create(merchantId, content);
      initialize(result);
      return result;
    }

    public class Create extends ShoppingContentRequest<com.google.api.services.content.model.Region> {

      private static final String REST_PATH = "{merchantId}/regions";

      /**
       * Creates a region definition in your Merchant Center account.
       *
       * Create a request for the method "regions.create".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The id of the merchant for which to create region definition.
       * @param content the {@link com.google.api.services.content.model.Region}
       * @since 1.13
       */
      protected Create(java.lang.Long merchantId, com.google.api.services.content.model.Region content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.Region.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The id of the merchant for which to create region definition. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The id of the merchant for which to create region definition.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The id of the merchant for which to create region definition. */
      public Create setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The id of the region to create. */
      @com.google.api.client.util.Key
      private java.lang.String regionId;

      /** Required. The id of the region to create.
       */
      public java.lang.String getRegionId() {
        return regionId;
      }

      /** Required. The id of the region to create. */
      public Create setRegionId(java.lang.String regionId) {
        this.regionId = regionId;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a region definition from your Merchant Center account.
     *
     * Create a request for the method "regions.delete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The id of the merchant for which to delete region definition.
     * @param regionId Required. The id of the region to delete.
     * @return the request
     */
    public Delete delete(java.lang.Long merchantId, java.lang.String regionId) throws java.io.IOException {
      Delete result = new Delete(merchantId, regionId);
      initialize(result);
      return result;
    }

    public class Delete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/regions/{regionId}";

      /**
       * Deletes a region definition from your Merchant Center account.
       *
       * Create a request for the method "regions.delete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The id of the merchant for which to delete region definition.
       * @param regionId Required. The id of the region to delete.
       * @since 1.13
       */
      protected Delete(java.lang.Long merchantId, java.lang.String regionId) {
        super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.regionId = com.google.api.client.util.Preconditions.checkNotNull(regionId, "Required parameter regionId must be specified.");
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The id of the merchant for which to delete region definition. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The id of the merchant for which to delete region definition.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The id of the merchant for which to delete region definition. */
      public Delete setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The id of the region to delete. */
      @com.google.api.client.util.Key
      private java.lang.String regionId;

      /** Required. The id of the region to delete.
       */
      public java.lang.String getRegionId() {
        return regionId;
      }

      /** Required. The id of the region to delete. */
      public Delete setRegionId(java.lang.String regionId) {
        this.regionId = regionId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a region defined in your Merchant Center account.
     *
     * Create a request for the method "regions.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The id of the merchant for which to retrieve region definition.
     * @param regionId Required. The id of the region to retrieve.
     * @return the request
     */
    public Get get(java.lang.Long merchantId, java.lang.String regionId) throws java.io.IOException {
      Get result = new Get(merchantId, regionId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.Region> {

      private static final String REST_PATH = "{merchantId}/regions/{regionId}";

      /**
       * Retrieves a region defined in your Merchant Center account.
       *
       * Create a request for the method "regions.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The id of the merchant for which to retrieve region definition.
       * @param regionId Required. The id of the region to retrieve.
       * @since 1.13
       */
      protected Get(java.lang.Long merchantId, java.lang.String regionId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.Region.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.regionId = com.google.api.client.util.Preconditions.checkNotNull(regionId, "Required parameter regionId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The id of the merchant for which to retrieve region definition. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The id of the merchant for which to retrieve region definition.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The id of the merchant for which to retrieve region definition. */
      public Get setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The id of the region to retrieve. */
      @com.google.api.client.util.Key
      private java.lang.String regionId;

      /** Required. The id of the region to retrieve.
       */
      public java.lang.String getRegionId() {
        return regionId;
      }

      /** Required. The id of the region to retrieve. */
      public Get setRegionId(java.lang.String regionId) {
        this.regionId = regionId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists the regions in your Merchant Center account.
     *
     * Create a request for the method "regions.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The id of the merchant for which to list region definitions.
     * @return the request
     */
    public List list(java.lang.Long merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ListRegionsResponse> {

      private static final String REST_PATH = "{merchantId}/regions";

      /**
       * Lists the regions in your Merchant Center account.
       *
       * Create a request for the method "regions.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The id of the merchant for which to list region definitions.
       * @since 1.13
       */
      protected List(java.lang.Long merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ListRegionsResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The id of the merchant for which to list region definitions. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The id of the merchant for which to list region definitions.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The id of the merchant for which to list region definitions. */
      public List setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * The maximum number of regions to return. The service may return fewer than this value. If
       * unspecified, at most 50 rules will be returned. The maximum value is 1000; values above
       * 1000 will be coerced to 1000.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of regions to return. The service may return fewer than this value. If
     unspecified, at most 50 rules will be returned. The maximum value is 1000; values above 1000 will
     be coerced to 1000.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of regions to return. The service may return fewer than this value. If
       * unspecified, at most 50 rules will be returned. The maximum value is 1000; values above
       * 1000 will be coerced to 1000.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListRegions` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListRegions` must match
       * the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListRegions` call. Provide this to retrieve the subsequent
     page. When paginating, all other parameters provided to `ListRegions` must match the call that
     provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListRegions` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListRegions` must match
       * the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a region definition in your Merchant Center account.
     *
     * Create a request for the method "regions.patch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The id of the merchant for which to update region definition.
     * @param regionId Required. The id of the region to update.
     * @param content the {@link com.google.api.services.content.model.Region}
     * @return the request
     */
    public Patch patch(java.lang.Long merchantId, java.lang.String regionId, com.google.api.services.content.model.Region content) throws java.io.IOException {
      Patch result = new Patch(merchantId, regionId, content);
      initialize(result);
      return result;
    }

    public class Patch extends ShoppingContentRequest<com.google.api.services.content.model.Region> {

      private static final String REST_PATH = "{merchantId}/regions/{regionId}";

      /**
       * Updates a region definition in your Merchant Center account.
       *
       * Create a request for the method "regions.patch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The id of the merchant for which to update region definition.
       * @param regionId Required. The id of the region to update.
       * @param content the {@link com.google.api.services.content.model.Region}
       * @since 1.13
       */
      protected Patch(java.lang.Long merchantId, java.lang.String regionId, com.google.api.services.content.model.Region content) {
        super(ShoppingContent.this, "PATCH", REST_PATH, content, com.google.api.services.content.model.Region.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.regionId = com.google.api.client.util.Preconditions.checkNotNull(regionId, "Required parameter regionId must be specified.");
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The id of the merchant for which to update region definition. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The id of the merchant for which to update region definition.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The id of the merchant for which to update region definition. */
      public Patch setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The id of the region to update. */
      @com.google.api.client.util.Key
      private java.lang.String regionId;

      /** Required. The id of the region to update.
       */
      public java.lang.String getRegionId() {
        return regionId;
      }

      /** Required. The id of the region to update. */
      public Patch setRegionId(java.lang.String regionId) {
        this.regionId = regionId;
        return this;
      }

      /**
       * Optional. The comma-separated field mask indicating the fields to update. Example:
       * `"displayName,postalCodeArea.regionCode"`.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Optional. The comma-separated field mask indicating the fields to update. Example:
     `"displayName,postalCodeArea.regionCode"`.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Optional. The comma-separated field mask indicating the fields to update. Example:
       * `"displayName,postalCodeArea.regionCode"`.
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Reports collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Reports.List request = content.reports().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Reports reports() {
    return new Reports();
  }

  /**
   * The "reports" collection of methods.
   */
  public class Reports {

    /**
     * Retrieves merchant performance metrics matching the search query and optionally segmented by
     * selected dimensions.
     *
     * Create a request for the method "reports.search".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. Id of the merchant making the call. Must be a standalone account or an MCA subaccount.
     * @param content the {@link com.google.api.services.content.model.SearchRequest}
     * @return the request
     */
    public Search search(java.lang.Long merchantId, com.google.api.services.content.model.SearchRequest content) throws java.io.IOException {
      Search result = new Search(merchantId, content);
      initialize(result);
      return result;
    }

    public class Search extends ShoppingContentRequest<com.google.api.services.content.model.SearchResponse> {

      private static final String REST_PATH = "{merchantId}/reports/search";

      /**
       * Retrieves merchant performance metrics matching the search query and optionally segmented by
       * selected dimensions.
       *
       * Create a request for the method "reports.search".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Search#execute()} method to invoke the remote operation. <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. Id of the merchant making the call. Must be a standalone account or an MCA subaccount.
       * @param content the {@link com.google.api.services.content.model.SearchRequest}
       * @since 1.13
       */
      protected Search(java.lang.Long merchantId, com.google.api.services.content.model.SearchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.SearchResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Search set$Xgafv(java.lang.String $Xgafv) {
        return (Search) super.set$Xgafv($Xgafv);
      }

      @Override
      public Search setAccessToken(java.lang.String accessToken) {
        return (Search) super.setAccessToken(accessToken);
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setCallback(java.lang.String callback) {
        return (Search) super.setCallback(callback);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUploadType(java.lang.String uploadType) {
        return (Search) super.setUploadType(uploadType);
      }

      @Override
      public Search setUploadProtocol(java.lang.String uploadProtocol) {
        return (Search) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Id of the merchant making the call. Must be a standalone account or an MCA
       * subaccount.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. Id of the merchant making the call. Must be a standalone account or an MCA subaccount.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. Id of the merchant making the call. Must be a standalone account or an MCA
       * subaccount.
       */
      public Search setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Returnaddress collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Returnaddress.List request = content.returnaddress().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Returnaddress returnaddress() {
    return new Returnaddress();
  }

  /**
   * The "returnaddress" collection of methods.
   */
  public class Returnaddress {

    /**
     * Batches multiple return address related calls in a single request.
     *
     * Create a request for the method "returnaddress.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.ReturnaddressCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.ReturnaddressCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.ReturnaddressCustomBatchResponse> {

      private static final String REST_PATH = "returnaddress/batch";

      /**
       * Batches multiple return address related calls in a single request.
       *
       * Create a request for the method "returnaddress.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.ReturnaddressCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.ReturnaddressCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.ReturnaddressCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a return address for the given Merchant Center account.
     *
     * Create a request for the method "returnaddress.delete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param merchantId The Merchant Center account from which to delete the given return address.
     * @param returnAddressId Return address ID generated by Google.
     * @return the request
     */
    public Delete delete(java.math.BigInteger merchantId, java.lang.String returnAddressId) throws java.io.IOException {
      Delete result = new Delete(merchantId, returnAddressId);
      initialize(result);
      return result;
    }

    public class Delete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/returnaddress/{returnAddressId}";

      /**
       * Deletes a return address for the given Merchant Center account.
       *
       * Create a request for the method "returnaddress.delete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The Merchant Center account from which to delete the given return address.
       * @param returnAddressId Return address ID generated by Google.
       * @since 1.13
       */
      protected Delete(java.math.BigInteger merchantId, java.lang.String returnAddressId) {
        super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.returnAddressId = com.google.api.client.util.Preconditions.checkNotNull(returnAddressId, "Required parameter returnAddressId must be specified.");
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /** The Merchant Center account from which to delete the given return address. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The Merchant Center account from which to delete the given return address.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The Merchant Center account from which to delete the given return address. */
      public Delete setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Return address ID generated by Google. */
      @com.google.api.client.util.Key
      private java.lang.String returnAddressId;

      /** Return address ID generated by Google.
       */
      public java.lang.String getReturnAddressId() {
        return returnAddressId;
      }

      /** Return address ID generated by Google. */
      public Delete setReturnAddressId(java.lang.String returnAddressId) {
        this.returnAddressId = returnAddressId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets a return address of the Merchant Center account.
     *
     * Create a request for the method "returnaddress.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The Merchant Center account to get a return address for.
     * @param returnAddressId Return address ID generated by Google.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.lang.String returnAddressId) throws java.io.IOException {
      Get result = new Get(merchantId, returnAddressId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.ReturnAddress> {

      private static final String REST_PATH = "{merchantId}/returnaddress/{returnAddressId}";

      /**
       * Gets a return address of the Merchant Center account.
       *
       * Create a request for the method "returnaddress.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The Merchant Center account to get a return address for.
       * @param returnAddressId Return address ID generated by Google.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.lang.String returnAddressId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ReturnAddress.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.returnAddressId = com.google.api.client.util.Preconditions.checkNotNull(returnAddressId, "Required parameter returnAddressId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The Merchant Center account to get a return address for. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The Merchant Center account to get a return address for.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The Merchant Center account to get a return address for. */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Return address ID generated by Google. */
      @com.google.api.client.util.Key
      private java.lang.String returnAddressId;

      /** Return address ID generated by Google.
       */
      public java.lang.String getReturnAddressId() {
        return returnAddressId;
      }

      /** Return address ID generated by Google. */
      public Get setReturnAddressId(java.lang.String returnAddressId) {
        this.returnAddressId = returnAddressId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Inserts a return address for the Merchant Center account.
     *
     * Create a request for the method "returnaddress.insert".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param merchantId The Merchant Center account to insert a return address for.
     * @param content the {@link com.google.api.services.content.model.ReturnAddress}
     * @return the request
     */
    public Insert insert(java.math.BigInteger merchantId, com.google.api.services.content.model.ReturnAddress content) throws java.io.IOException {
      Insert result = new Insert(merchantId, content);
      initialize(result);
      return result;
    }

    public class Insert extends ShoppingContentRequest<com.google.api.services.content.model.ReturnAddress> {

      private static final String REST_PATH = "{merchantId}/returnaddress";

      /**
       * Inserts a return address for the Merchant Center account.
       *
       * Create a request for the method "returnaddress.insert".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The Merchant Center account to insert a return address for.
       * @param content the {@link com.google.api.services.content.model.ReturnAddress}
       * @since 1.13
       */
      protected Insert(java.math.BigInteger merchantId, com.google.api.services.content.model.ReturnAddress content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.ReturnAddress.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Insert set$Xgafv(java.lang.String $Xgafv) {
        return (Insert) super.set$Xgafv($Xgafv);
      }

      @Override
      public Insert setAccessToken(java.lang.String accessToken) {
        return (Insert) super.setAccessToken(accessToken);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setCallback(java.lang.String callback) {
        return (Insert) super.setCallback(callback);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUploadType(java.lang.String uploadType) {
        return (Insert) super.setUploadType(uploadType);
      }

      @Override
      public Insert setUploadProtocol(java.lang.String uploadProtocol) {
        return (Insert) super.setUploadProtocol(uploadProtocol);
      }

      /** The Merchant Center account to insert a return address for. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The Merchant Center account to insert a return address for.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The Merchant Center account to insert a return address for. */
      public Insert setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Lists the return addresses of the Merchant Center account.
     *
     * Create a request for the method "returnaddress.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The Merchant Center account to list return addresses for.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ReturnaddressListResponse> {

      private static final String REST_PATH = "{merchantId}/returnaddress";

      /**
       * Lists the return addresses of the Merchant Center account.
       *
       * Create a request for the method "returnaddress.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The Merchant Center account to list return addresses for.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ReturnaddressListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The Merchant Center account to list return addresses for. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The Merchant Center account to list return addresses for.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The Merchant Center account to list return addresses for. */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /**
       * List only return addresses applicable to the given country of sale. When omitted, all
       * return addresses are listed.
       */
      @com.google.api.client.util.Key
      private java.lang.String country;

      /** List only return addresses applicable to the given country of sale. When omitted, all return
     addresses are listed.
       */
      public java.lang.String getCountry() {
        return country;
      }

      /**
       * List only return addresses applicable to the given country of sale. When omitted, all
       * return addresses are listed.
       */
      public List setCountry(java.lang.String country) {
        this.country = country;
        return this;
      }

      /** The maximum number of addresses in the response, used for paging. */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of addresses in the response, used for paging.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /** The maximum number of addresses in the response, used for paging. */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Returnpolicy collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Returnpolicy.List request = content.returnpolicy().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Returnpolicy returnpolicy() {
    return new Returnpolicy();
  }

  /**
   * The "returnpolicy" collection of methods.
   */
  public class Returnpolicy {

    /**
     * Batches multiple return policy related calls in a single request.
     *
     * Create a request for the method "returnpolicy.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.ReturnpolicyCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.ReturnpolicyCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.ReturnpolicyCustomBatchResponse> {

      private static final String REST_PATH = "returnpolicy/batch";

      /**
       * Batches multiple return policy related calls in a single request.
       *
       * Create a request for the method "returnpolicy.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.ReturnpolicyCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.ReturnpolicyCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.ReturnpolicyCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a return policy for the given Merchant Center account.
     *
     * Create a request for the method "returnpolicy.delete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param merchantId The Merchant Center account from which to delete the given return policy.
     * @param returnPolicyId Return policy ID generated by Google.
     * @return the request
     */
    public Delete delete(java.math.BigInteger merchantId, java.lang.String returnPolicyId) throws java.io.IOException {
      Delete result = new Delete(merchantId, returnPolicyId);
      initialize(result);
      return result;
    }

    public class Delete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/returnpolicy/{returnPolicyId}";

      /**
       * Deletes a return policy for the given Merchant Center account.
       *
       * Create a request for the method "returnpolicy.delete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The Merchant Center account from which to delete the given return policy.
       * @param returnPolicyId Return policy ID generated by Google.
       * @since 1.13
       */
      protected Delete(java.math.BigInteger merchantId, java.lang.String returnPolicyId) {
        super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.returnPolicyId = com.google.api.client.util.Preconditions.checkNotNull(returnPolicyId, "Required parameter returnPolicyId must be specified.");
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /** The Merchant Center account from which to delete the given return policy. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The Merchant Center account from which to delete the given return policy.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The Merchant Center account from which to delete the given return policy. */
      public Delete setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Return policy ID generated by Google. */
      @com.google.api.client.util.Key
      private java.lang.String returnPolicyId;

      /** Return policy ID generated by Google.
       */
      public java.lang.String getReturnPolicyId() {
        return returnPolicyId;
      }

      /** Return policy ID generated by Google. */
      public Delete setReturnPolicyId(java.lang.String returnPolicyId) {
        this.returnPolicyId = returnPolicyId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets a return policy of the Merchant Center account.
     *
     * Create a request for the method "returnpolicy.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The Merchant Center account to get a return policy for.
     * @param returnPolicyId Return policy ID generated by Google.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.lang.String returnPolicyId) throws java.io.IOException {
      Get result = new Get(merchantId, returnPolicyId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.ReturnPolicy> {

      private static final String REST_PATH = "{merchantId}/returnpolicy/{returnPolicyId}";

      /**
       * Gets a return policy of the Merchant Center account.
       *
       * Create a request for the method "returnpolicy.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The Merchant Center account to get a return policy for.
       * @param returnPolicyId Return policy ID generated by Google.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.lang.String returnPolicyId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ReturnPolicy.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.returnPolicyId = com.google.api.client.util.Preconditions.checkNotNull(returnPolicyId, "Required parameter returnPolicyId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The Merchant Center account to get a return policy for. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The Merchant Center account to get a return policy for.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The Merchant Center account to get a return policy for. */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Return policy ID generated by Google. */
      @com.google.api.client.util.Key
      private java.lang.String returnPolicyId;

      /** Return policy ID generated by Google.
       */
      public java.lang.String getReturnPolicyId() {
        return returnPolicyId;
      }

      /** Return policy ID generated by Google. */
      public Get setReturnPolicyId(java.lang.String returnPolicyId) {
        this.returnPolicyId = returnPolicyId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Inserts a return policy for the Merchant Center account.
     *
     * Create a request for the method "returnpolicy.insert".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param merchantId The Merchant Center account to insert a return policy for.
     * @param content the {@link com.google.api.services.content.model.ReturnPolicy}
     * @return the request
     */
    public Insert insert(java.math.BigInteger merchantId, com.google.api.services.content.model.ReturnPolicy content) throws java.io.IOException {
      Insert result = new Insert(merchantId, content);
      initialize(result);
      return result;
    }

    public class Insert extends ShoppingContentRequest<com.google.api.services.content.model.ReturnPolicy> {

      private static final String REST_PATH = "{merchantId}/returnpolicy";

      /**
       * Inserts a return policy for the Merchant Center account.
       *
       * Create a request for the method "returnpolicy.insert".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The Merchant Center account to insert a return policy for.
       * @param content the {@link com.google.api.services.content.model.ReturnPolicy}
       * @since 1.13
       */
      protected Insert(java.math.BigInteger merchantId, com.google.api.services.content.model.ReturnPolicy content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.ReturnPolicy.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Insert set$Xgafv(java.lang.String $Xgafv) {
        return (Insert) super.set$Xgafv($Xgafv);
      }

      @Override
      public Insert setAccessToken(java.lang.String accessToken) {
        return (Insert) super.setAccessToken(accessToken);
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setCallback(java.lang.String callback) {
        return (Insert) super.setCallback(callback);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUploadType(java.lang.String uploadType) {
        return (Insert) super.setUploadType(uploadType);
      }

      @Override
      public Insert setUploadProtocol(java.lang.String uploadProtocol) {
        return (Insert) super.setUploadProtocol(uploadProtocol);
      }

      /** The Merchant Center account to insert a return policy for. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The Merchant Center account to insert a return policy for.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The Merchant Center account to insert a return policy for. */
      public Insert setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Lists the return policies of the Merchant Center account.
     *
     * Create a request for the method "returnpolicy.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The Merchant Center account to list return policies for.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ReturnpolicyListResponse> {

      private static final String REST_PATH = "{merchantId}/returnpolicy";

      /**
       * Lists the return policies of the Merchant Center account.
       *
       * Create a request for the method "returnpolicy.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The Merchant Center account to list return policies for.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ReturnpolicyListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The Merchant Center account to list return policies for. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The Merchant Center account to list return policies for.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The Merchant Center account to list return policies for. */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Returnpolicyonline collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Returnpolicyonline.List request = content.returnpolicyonline().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Returnpolicyonline returnpolicyonline() {
    return new Returnpolicyonline();
  }

  /**
   * The "returnpolicyonline" collection of methods.
   */
  public class Returnpolicyonline {

    /**
     * Creates a new return policy.
     *
     * Create a request for the method "returnpolicyonline.create".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The id of the merchant for which to retrieve the return policy online object.
     * @param content the {@link com.google.api.services.content.model.ReturnPolicyOnline}
     * @return the request
     */
    public Create create(java.lang.Long merchantId, com.google.api.services.content.model.ReturnPolicyOnline content) throws java.io.IOException {
      Create result = new Create(merchantId, content);
      initialize(result);
      return result;
    }

    public class Create extends ShoppingContentRequest<com.google.api.services.content.model.ReturnPolicyOnline> {

      private static final String REST_PATH = "{merchantId}/returnpolicyonline";

      /**
       * Creates a new return policy.
       *
       * Create a request for the method "returnpolicyonline.create".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The id of the merchant for which to retrieve the return policy online object.
       * @param content the {@link com.google.api.services.content.model.ReturnPolicyOnline}
       * @since 1.13
       */
      protected Create(java.lang.Long merchantId, com.google.api.services.content.model.ReturnPolicyOnline content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.ReturnPolicyOnline.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The id of the merchant for which to retrieve the return policy online object.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The id of the merchant for which to retrieve the return policy online object.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The id of the merchant for which to retrieve the return policy online object.
       */
      public Create setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Deletes an existing return policy.
     *
     * Create a request for the method "returnpolicyonline.delete".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The id of the merchant for which to retrieve the return policy online object.
     * @param returnPolicyId Required. The id of the return policy to delete.
     * @return the request
     */
    public Delete delete(java.lang.Long merchantId, java.lang.String returnPolicyId) throws java.io.IOException {
      Delete result = new Delete(merchantId, returnPolicyId);
      initialize(result);
      return result;
    }

    public class Delete extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/returnpolicyonline/{returnPolicyId}";

      /**
       * Deletes an existing return policy.
       *
       * Create a request for the method "returnpolicyonline.delete".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The id of the merchant for which to retrieve the return policy online object.
       * @param returnPolicyId Required. The id of the return policy to delete.
       * @since 1.13
       */
      protected Delete(java.lang.Long merchantId, java.lang.String returnPolicyId) {
        super(ShoppingContent.this, "DELETE", REST_PATH, null, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.returnPolicyId = com.google.api.client.util.Preconditions.checkNotNull(returnPolicyId, "Required parameter returnPolicyId must be specified.");
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The id of the merchant for which to retrieve the return policy online object.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The id of the merchant for which to retrieve the return policy online object.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The id of the merchant for which to retrieve the return policy online object.
       */
      public Delete setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The id of the return policy to delete. */
      @com.google.api.client.util.Key
      private java.lang.String returnPolicyId;

      /** Required. The id of the return policy to delete.
       */
      public java.lang.String getReturnPolicyId() {
        return returnPolicyId;
      }

      /** Required. The id of the return policy to delete. */
      public Delete setReturnPolicyId(java.lang.String returnPolicyId) {
        this.returnPolicyId = returnPolicyId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets an existing return policy.
     *
     * Create a request for the method "returnpolicyonline.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The id of the merchant for which to retrieve the return policy online object.
     * @param returnPolicyId Required. The id of the return policy to retrieve.
     * @return the request
     */
    public Get get(java.lang.Long merchantId, java.lang.String returnPolicyId) throws java.io.IOException {
      Get result = new Get(merchantId, returnPolicyId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.ReturnPolicyOnline> {

      private static final String REST_PATH = "{merchantId}/returnpolicyonline/{returnPolicyId}";

      /**
       * Gets an existing return policy.
       *
       * Create a request for the method "returnpolicyonline.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The id of the merchant for which to retrieve the return policy online object.
       * @param returnPolicyId Required. The id of the return policy to retrieve.
       * @since 1.13
       */
      protected Get(java.lang.Long merchantId, java.lang.String returnPolicyId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ReturnPolicyOnline.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.returnPolicyId = com.google.api.client.util.Preconditions.checkNotNull(returnPolicyId, "Required parameter returnPolicyId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The id of the merchant for which to retrieve the return policy online object.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The id of the merchant for which to retrieve the return policy online object.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The id of the merchant for which to retrieve the return policy online object.
       */
      public Get setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The id of the return policy to retrieve. */
      @com.google.api.client.util.Key
      private java.lang.String returnPolicyId;

      /** Required. The id of the return policy to retrieve.
       */
      public java.lang.String getReturnPolicyId() {
        return returnPolicyId;
      }

      /** Required. The id of the return policy to retrieve. */
      public Get setReturnPolicyId(java.lang.String returnPolicyId) {
        this.returnPolicyId = returnPolicyId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists all existing return policies.
     *
     * Create a request for the method "returnpolicyonline.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The id of the merchant for which to retrieve the return policy online object.
     * @return the request
     */
    public List list(java.lang.Long merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ListReturnPolicyOnlineResponse> {

      private static final String REST_PATH = "{merchantId}/returnpolicyonline";

      /**
       * Lists all existing return policies.
       *
       * Create a request for the method "returnpolicyonline.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The id of the merchant for which to retrieve the return policy online object.
       * @since 1.13
       */
      protected List(java.lang.Long merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ListReturnPolicyOnlineResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The id of the merchant for which to retrieve the return policy online object.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The id of the merchant for which to retrieve the return policy online object.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The id of the merchant for which to retrieve the return policy online object.
       */
      public List setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates an existing return policy.
     *
     * Create a request for the method "returnpolicyonline.patch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The id of the merchant for which to retrieve the return policy online object.
     * @param returnPolicyId Required. The id of the return policy to update.
     * @param content the {@link com.google.api.services.content.model.ReturnPolicyOnline}
     * @return the request
     */
    public Patch patch(java.lang.Long merchantId, java.lang.String returnPolicyId, com.google.api.services.content.model.ReturnPolicyOnline content) throws java.io.IOException {
      Patch result = new Patch(merchantId, returnPolicyId, content);
      initialize(result);
      return result;
    }

    public class Patch extends ShoppingContentRequest<com.google.api.services.content.model.ReturnPolicyOnline> {

      private static final String REST_PATH = "{merchantId}/returnpolicyonline/{returnPolicyId}";

      /**
       * Updates an existing return policy.
       *
       * Create a request for the method "returnpolicyonline.patch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The id of the merchant for which to retrieve the return policy online object.
       * @param returnPolicyId Required. The id of the return policy to update.
       * @param content the {@link com.google.api.services.content.model.ReturnPolicyOnline}
       * @since 1.13
       */
      protected Patch(java.lang.Long merchantId, java.lang.String returnPolicyId, com.google.api.services.content.model.ReturnPolicyOnline content) {
        super(ShoppingContent.this, "PATCH", REST_PATH, content, com.google.api.services.content.model.ReturnPolicyOnline.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.returnPolicyId = com.google.api.client.util.Preconditions.checkNotNull(returnPolicyId, "Required parameter returnPolicyId must be specified.");
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The id of the merchant for which to retrieve the return policy online object.
       */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The id of the merchant for which to retrieve the return policy online object.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /**
       * Required. The id of the merchant for which to retrieve the return policy online object.
       */
      public Patch setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** Required. The id of the return policy to update. */
      @com.google.api.client.util.Key
      private java.lang.String returnPolicyId;

      /** Required. The id of the return policy to update.
       */
      public java.lang.String getReturnPolicyId() {
        return returnPolicyId;
      }

      /** Required. The id of the return policy to update. */
      public Patch setReturnPolicyId(java.lang.String returnPolicyId) {
        this.returnPolicyId = returnPolicyId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Shippingsettings collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Shippingsettings.List request = content.shippingsettings().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Shippingsettings shippingsettings() {
    return new Shippingsettings();
  }

  /**
   * The "shippingsettings" collection of methods.
   */
  public class Shippingsettings {

    /**
     * Retrieves and updates the shipping settings of multiple accounts in a single request.
     *
     * Create a request for the method "shippingsettings.custombatch".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.content.model.ShippingsettingsCustomBatchRequest}
     * @return the request
     */
    public Custombatch custombatch(com.google.api.services.content.model.ShippingsettingsCustomBatchRequest content) throws java.io.IOException {
      Custombatch result = new Custombatch(content);
      initialize(result);
      return result;
    }

    public class Custombatch extends ShoppingContentRequest<com.google.api.services.content.model.ShippingsettingsCustomBatchResponse> {

      private static final String REST_PATH = "shippingsettings/batch";

      /**
       * Retrieves and updates the shipping settings of multiple accounts in a single request.
       *
       * Create a request for the method "shippingsettings.custombatch".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Custombatch#execute()} method to invoke the remote operation. <p>
       * {@link
       * Custombatch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.content.model.ShippingsettingsCustomBatchRequest}
       * @since 1.13
       */
      protected Custombatch(com.google.api.services.content.model.ShippingsettingsCustomBatchRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, com.google.api.services.content.model.ShippingsettingsCustomBatchResponse.class);
      }

      @Override
      public Custombatch set$Xgafv(java.lang.String $Xgafv) {
        return (Custombatch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Custombatch setAccessToken(java.lang.String accessToken) {
        return (Custombatch) super.setAccessToken(accessToken);
      }

      @Override
      public Custombatch setAlt(java.lang.String alt) {
        return (Custombatch) super.setAlt(alt);
      }

      @Override
      public Custombatch setCallback(java.lang.String callback) {
        return (Custombatch) super.setCallback(callback);
      }

      @Override
      public Custombatch setFields(java.lang.String fields) {
        return (Custombatch) super.setFields(fields);
      }

      @Override
      public Custombatch setKey(java.lang.String key) {
        return (Custombatch) super.setKey(key);
      }

      @Override
      public Custombatch setOauthToken(java.lang.String oauthToken) {
        return (Custombatch) super.setOauthToken(oauthToken);
      }

      @Override
      public Custombatch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Custombatch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Custombatch setQuotaUser(java.lang.String quotaUser) {
        return (Custombatch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Custombatch setUploadType(java.lang.String uploadType) {
        return (Custombatch) super.setUploadType(uploadType);
      }

      @Override
      public Custombatch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Custombatch) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Custombatch set(String parameterName, Object value) {
        return (Custombatch) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves the shipping settings of the account.
     *
     * Create a request for the method "shippingsettings.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account for which to get/update shipping settings.
     * @return the request
     */
    public Get get(java.math.BigInteger merchantId, java.math.BigInteger accountId) throws java.io.IOException {
      Get result = new Get(merchantId, accountId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.ShippingSettings> {

      private static final String REST_PATH = "{merchantId}/shippingsettings/{accountId}";

      /**
       * Retrieves the shipping settings of the account.
       *
       * Create a request for the method "shippingsettings.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account for which to get/update shipping settings.
       * @since 1.13
       */
      protected Get(java.math.BigInteger merchantId, java.math.BigInteger accountId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ShippingSettings.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Get setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account for which to get/update shipping settings. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account for which to get/update shipping settings.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account for which to get/update shipping settings. */
      public Get setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves supported carriers and carrier services for an account.
     *
     * Create a request for the method "shippingsettings.getsupportedcarriers".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Getsupportedcarriers#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the account for which to retrieve the supported carriers.
     * @return the request
     */
    public Getsupportedcarriers getsupportedcarriers(java.math.BigInteger merchantId) throws java.io.IOException {
      Getsupportedcarriers result = new Getsupportedcarriers(merchantId);
      initialize(result);
      return result;
    }

    public class Getsupportedcarriers extends ShoppingContentRequest<com.google.api.services.content.model.ShippingsettingsGetSupportedCarriersResponse> {

      private static final String REST_PATH = "{merchantId}/supportedCarriers";

      /**
       * Retrieves supported carriers and carrier services for an account.
       *
       * Create a request for the method "shippingsettings.getsupportedcarriers".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Getsupportedcarriers#execute()} method to invoke the remote
       * operation. <p> {@link Getsupportedcarriers#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account for which to retrieve the supported carriers.
       * @since 1.13
       */
      protected Getsupportedcarriers(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ShippingsettingsGetSupportedCarriersResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Getsupportedcarriers set$Xgafv(java.lang.String $Xgafv) {
        return (Getsupportedcarriers) super.set$Xgafv($Xgafv);
      }

      @Override
      public Getsupportedcarriers setAccessToken(java.lang.String accessToken) {
        return (Getsupportedcarriers) super.setAccessToken(accessToken);
      }

      @Override
      public Getsupportedcarriers setAlt(java.lang.String alt) {
        return (Getsupportedcarriers) super.setAlt(alt);
      }

      @Override
      public Getsupportedcarriers setCallback(java.lang.String callback) {
        return (Getsupportedcarriers) super.setCallback(callback);
      }

      @Override
      public Getsupportedcarriers setFields(java.lang.String fields) {
        return (Getsupportedcarriers) super.setFields(fields);
      }

      @Override
      public Getsupportedcarriers setKey(java.lang.String key) {
        return (Getsupportedcarriers) super.setKey(key);
      }

      @Override
      public Getsupportedcarriers setOauthToken(java.lang.String oauthToken) {
        return (Getsupportedcarriers) super.setOauthToken(oauthToken);
      }

      @Override
      public Getsupportedcarriers setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Getsupportedcarriers) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Getsupportedcarriers setQuotaUser(java.lang.String quotaUser) {
        return (Getsupportedcarriers) super.setQuotaUser(quotaUser);
      }

      @Override
      public Getsupportedcarriers setUploadType(java.lang.String uploadType) {
        return (Getsupportedcarriers) super.setUploadType(uploadType);
      }

      @Override
      public Getsupportedcarriers setUploadProtocol(java.lang.String uploadProtocol) {
        return (Getsupportedcarriers) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the account for which to retrieve the supported carriers. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account for which to retrieve the supported carriers.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account for which to retrieve the supported carriers. */
      public Getsupportedcarriers setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Getsupportedcarriers set(String parameterName, Object value) {
        return (Getsupportedcarriers) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves supported holidays for an account.
     *
     * Create a request for the method "shippingsettings.getsupportedholidays".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Getsupportedholidays#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the account for which to retrieve the supported holidays.
     * @return the request
     */
    public Getsupportedholidays getsupportedholidays(java.math.BigInteger merchantId) throws java.io.IOException {
      Getsupportedholidays result = new Getsupportedholidays(merchantId);
      initialize(result);
      return result;
    }

    public class Getsupportedholidays extends ShoppingContentRequest<com.google.api.services.content.model.ShippingsettingsGetSupportedHolidaysResponse> {

      private static final String REST_PATH = "{merchantId}/supportedHolidays";

      /**
       * Retrieves supported holidays for an account.
       *
       * Create a request for the method "shippingsettings.getsupportedholidays".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Getsupportedholidays#execute()} method to invoke the remote
       * operation. <p> {@link Getsupportedholidays#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param merchantId The ID of the account for which to retrieve the supported holidays.
       * @since 1.13
       */
      protected Getsupportedholidays(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ShippingsettingsGetSupportedHolidaysResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Getsupportedholidays set$Xgafv(java.lang.String $Xgafv) {
        return (Getsupportedholidays) super.set$Xgafv($Xgafv);
      }

      @Override
      public Getsupportedholidays setAccessToken(java.lang.String accessToken) {
        return (Getsupportedholidays) super.setAccessToken(accessToken);
      }

      @Override
      public Getsupportedholidays setAlt(java.lang.String alt) {
        return (Getsupportedholidays) super.setAlt(alt);
      }

      @Override
      public Getsupportedholidays setCallback(java.lang.String callback) {
        return (Getsupportedholidays) super.setCallback(callback);
      }

      @Override
      public Getsupportedholidays setFields(java.lang.String fields) {
        return (Getsupportedholidays) super.setFields(fields);
      }

      @Override
      public Getsupportedholidays setKey(java.lang.String key) {
        return (Getsupportedholidays) super.setKey(key);
      }

      @Override
      public Getsupportedholidays setOauthToken(java.lang.String oauthToken) {
        return (Getsupportedholidays) super.setOauthToken(oauthToken);
      }

      @Override
      public Getsupportedholidays setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Getsupportedholidays) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Getsupportedholidays setQuotaUser(java.lang.String quotaUser) {
        return (Getsupportedholidays) super.setQuotaUser(quotaUser);
      }

      @Override
      public Getsupportedholidays setUploadType(java.lang.String uploadType) {
        return (Getsupportedholidays) super.setUploadType(uploadType);
      }

      @Override
      public Getsupportedholidays setUploadProtocol(java.lang.String uploadProtocol) {
        return (Getsupportedholidays) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the account for which to retrieve the supported holidays. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account for which to retrieve the supported holidays.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account for which to retrieve the supported holidays. */
      public Getsupportedholidays setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Getsupportedholidays set(String parameterName, Object value) {
        return (Getsupportedholidays) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves supported pickup services for an account.
     *
     * Create a request for the method "shippingsettings.getsupportedpickupservices".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Getsupportedpickupservices#execute()} method to invoke the remote
     * operation.
     *
     * @param merchantId The ID of the account for which to retrieve the supported pickup services.
     * @return the request
     */
    public Getsupportedpickupservices getsupportedpickupservices(java.math.BigInteger merchantId) throws java.io.IOException {
      Getsupportedpickupservices result = new Getsupportedpickupservices(merchantId);
      initialize(result);
      return result;
    }

    public class Getsupportedpickupservices extends ShoppingContentRequest<com.google.api.services.content.model.ShippingsettingsGetSupportedPickupServicesResponse> {

      private static final String REST_PATH = "{merchantId}/supportedPickupServices";

      /**
       * Retrieves supported pickup services for an account.
       *
       * Create a request for the method "shippingsettings.getsupportedpickupservices".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Getsupportedpickupservices#execute()} method to invoke the remote
       * operation. <p> {@link Getsupportedpickupservices#initialize(com.google.api.client.googleapis.se
       * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param merchantId The ID of the account for which to retrieve the supported pickup services.
       * @since 1.13
       */
      protected Getsupportedpickupservices(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ShippingsettingsGetSupportedPickupServicesResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Getsupportedpickupservices set$Xgafv(java.lang.String $Xgafv) {
        return (Getsupportedpickupservices) super.set$Xgafv($Xgafv);
      }

      @Override
      public Getsupportedpickupservices setAccessToken(java.lang.String accessToken) {
        return (Getsupportedpickupservices) super.setAccessToken(accessToken);
      }

      @Override
      public Getsupportedpickupservices setAlt(java.lang.String alt) {
        return (Getsupportedpickupservices) super.setAlt(alt);
      }

      @Override
      public Getsupportedpickupservices setCallback(java.lang.String callback) {
        return (Getsupportedpickupservices) super.setCallback(callback);
      }

      @Override
      public Getsupportedpickupservices setFields(java.lang.String fields) {
        return (Getsupportedpickupservices) super.setFields(fields);
      }

      @Override
      public Getsupportedpickupservices setKey(java.lang.String key) {
        return (Getsupportedpickupservices) super.setKey(key);
      }

      @Override
      public Getsupportedpickupservices setOauthToken(java.lang.String oauthToken) {
        return (Getsupportedpickupservices) super.setOauthToken(oauthToken);
      }

      @Override
      public Getsupportedpickupservices setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Getsupportedpickupservices) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Getsupportedpickupservices setQuotaUser(java.lang.String quotaUser) {
        return (Getsupportedpickupservices) super.setQuotaUser(quotaUser);
      }

      @Override
      public Getsupportedpickupservices setUploadType(java.lang.String uploadType) {
        return (Getsupportedpickupservices) super.setUploadType(uploadType);
      }

      @Override
      public Getsupportedpickupservices setUploadProtocol(java.lang.String uploadProtocol) {
        return (Getsupportedpickupservices) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the account for which to retrieve the supported pickup services. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the account for which to retrieve the supported pickup services.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the account for which to retrieve the supported pickup services. */
      public Getsupportedpickupservices setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Getsupportedpickupservices set(String parameterName, Object value) {
        return (Getsupportedpickupservices) super.set(parameterName, value);
      }
    }
    /**
     * Lists the shipping settings of the sub-accounts in your Merchant Center account.
     *
     * Create a request for the method "shippingsettings.list".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. This must be a multi-client account.
     * @return the request
     */
    public List list(java.math.BigInteger merchantId) throws java.io.IOException {
      List result = new List(merchantId);
      initialize(result);
      return result;
    }

    public class List extends ShoppingContentRequest<com.google.api.services.content.model.ShippingsettingsListResponse> {

      private static final String REST_PATH = "{merchantId}/shippingsettings";

      /**
       * Lists the shipping settings of the sub-accounts in your Merchant Center account.
       *
       * Create a request for the method "shippingsettings.list".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. This must be a multi-client account.
       * @since 1.13
       */
      protected List(java.math.BigInteger merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ShippingsettingsListResponse.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** The ID of the managing account. This must be a multi-client account. */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. This must be a multi-client account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /** The ID of the managing account. This must be a multi-client account. */
      public List setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The maximum number of shipping settings to return in the response, used for paging. */
      @com.google.api.client.util.Key
      private java.lang.Long maxResults;

      /** The maximum number of shipping settings to return in the response, used for paging.
       */
      public java.lang.Long getMaxResults() {
        return maxResults;
      }

      /** The maximum number of shipping settings to return in the response, used for paging. */
      public List setMaxResults(java.lang.Long maxResults) {
        this.maxResults = maxResults;
        return this;
      }

      /** The token returned by the previous request. */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** The token returned by the previous request.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /** The token returned by the previous request. */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates the shipping settings of the account. Any fields that are not provided are deleted from
     * the resource.
     *
     * Create a request for the method "shippingsettings.update".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
     * @param accountId The ID of the account for which to get/update shipping settings.
     * @param content the {@link com.google.api.services.content.model.ShippingSettings}
     * @return the request
     */
    public Update update(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.ShippingSettings content) throws java.io.IOException {
      Update result = new Update(merchantId, accountId, content);
      initialize(result);
      return result;
    }

    public class Update extends ShoppingContentRequest<com.google.api.services.content.model.ShippingSettings> {

      private static final String REST_PATH = "{merchantId}/shippingsettings/{accountId}";

      /**
       * Updates the shipping settings of the account. Any fields that are not provided are deleted from
       * the resource.
       *
       * Create a request for the method "shippingsettings.update".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId The ID of the managing account. If this parameter is not the same as accountId, then this account
     *        must be a multi-client account and `accountId` must be the ID of a sub-account of this
     *        account.
       * @param accountId The ID of the account for which to get/update shipping settings.
       * @param content the {@link com.google.api.services.content.model.ShippingSettings}
       * @since 1.13
       */
      protected Update(java.math.BigInteger merchantId, java.math.BigInteger accountId, com.google.api.services.content.model.ShippingSettings content) {
        super(ShoppingContent.this, "PUT", REST_PATH, content, com.google.api.services.content.model.ShippingSettings.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
        this.accountId = com.google.api.client.util.Preconditions.checkNotNull(accountId, "Required parameter accountId must be specified.");
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      @com.google.api.client.util.Key
      private java.math.BigInteger merchantId;

      /** The ID of the managing account. If this parameter is not the same as accountId, then this account
     must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
       */
      public java.math.BigInteger getMerchantId() {
        return merchantId;
      }

      /**
       * The ID of the managing account. If this parameter is not the same as accountId, then this
       * account must be a multi-client account and `accountId` must be the ID of a sub-account of
       * this account.
       */
      public Update setMerchantId(java.math.BigInteger merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      /** The ID of the account for which to get/update shipping settings. */
      @com.google.api.client.util.Key
      private java.math.BigInteger accountId;

      /** The ID of the account for which to get/update shipping settings.
       */
      public java.math.BigInteger getAccountId() {
        return accountId;
      }

      /** The ID of the account for which to get/update shipping settings. */
      public Update setAccountId(java.math.BigInteger accountId) {
        this.accountId = accountId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Shoppingadsprogram collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code ShoppingContent content = new ShoppingContent(...);}
   *   {@code ShoppingContent.Shoppingadsprogram.List request = content.shoppingadsprogram().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Shoppingadsprogram shoppingadsprogram() {
    return new Shoppingadsprogram();
  }

  /**
   * The "shoppingadsprogram" collection of methods.
   */
  public class Shoppingadsprogram {

    /**
     * Retrieves the status and review eligibility for the Shopping Ads program. Returns errors and
     * warnings if they require action to resolve, will become disapprovals, or impact impressions. Use
     * `accountstatuses` to view all issues for an account.
     *
     * Create a request for the method "shoppingadsprogram.get".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account.
     * @return the request
     */
    public Get get(java.lang.Long merchantId) throws java.io.IOException {
      Get result = new Get(merchantId);
      initialize(result);
      return result;
    }

    public class Get extends ShoppingContentRequest<com.google.api.services.content.model.ShoppingAdsProgramStatus> {

      private static final String REST_PATH = "{merchantId}/shoppingadsprogram";

      /**
       * Retrieves the status and review eligibility for the Shopping Ads program. Returns errors and
       * warnings if they require action to resolve, will become disapprovals, or impact impressions.
       * Use `accountstatuses` to view all issues for an account.
       *
       * Create a request for the method "shoppingadsprogram.get".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param merchantId Required. The ID of the account.
       * @since 1.13
       */
      protected Get(java.lang.Long merchantId) {
        super(ShoppingContent.this, "GET", REST_PATH, null, com.google.api.services.content.model.ShoppingAdsProgramStatus.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account. */
      public Get setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Requests a review of Shopping ads in a specific region. This method deprecated. Use the
     * `MerchantSupportService` to view product and account issues and request a review.
     *
     * Create a request for the method "shoppingadsprogram.requestreview".
     *
     * This request holds the parameters needed by the content server.  After setting any optional
     * parameters, call the {@link Requestreview#execute()} method to invoke the remote operation.
     *
     * @param merchantId Required. The ID of the account.
     * @param content the {@link com.google.api.services.content.model.RequestReviewShoppingAdsRequest}
     * @return the request
     */
    public Requestreview requestreview(java.lang.Long merchantId, com.google.api.services.content.model.RequestReviewShoppingAdsRequest content) throws java.io.IOException {
      Requestreview result = new Requestreview(merchantId, content);
      initialize(result);
      return result;
    }

    public class Requestreview extends ShoppingContentRequest<Void> {

      private static final String REST_PATH = "{merchantId}/shoppingadsprogram/requestreview";

      /**
       * Requests a review of Shopping ads in a specific region. This method deprecated. Use the
       * `MerchantSupportService` to view product and account issues and request a review.
       *
       * Create a request for the method "shoppingadsprogram.requestreview".
       *
       * This request holds the parameters needed by the the content server.  After setting any optional
       * parameters, call the {@link Requestreview#execute()} method to invoke the remote operation. <p>
       * {@link Requestreview#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
       * equest)} must be called to initialize this instance immediately after invoking the constructor.
       * </p>
       *
       * @param merchantId Required. The ID of the account.
       * @param content the {@link com.google.api.services.content.model.RequestReviewShoppingAdsRequest}
       * @since 1.13
       */
      protected Requestreview(java.lang.Long merchantId, com.google.api.services.content.model.RequestReviewShoppingAdsRequest content) {
        super(ShoppingContent.this, "POST", REST_PATH, content, Void.class);
        this.merchantId = com.google.api.client.util.Preconditions.checkNotNull(merchantId, "Required parameter merchantId must be specified.");
      }

      @Override
      public Requestreview set$Xgafv(java.lang.String $Xgafv) {
        return (Requestreview) super.set$Xgafv($Xgafv);
      }

      @Override
      public Requestreview setAccessToken(java.lang.String accessToken) {
        return (Requestreview) super.setAccessToken(accessToken);
      }

      @Override
      public Requestreview setAlt(java.lang.String alt) {
        return (Requestreview) super.setAlt(alt);
      }

      @Override
      public Requestreview setCallback(java.lang.String callback) {
        return (Requestreview) super.setCallback(callback);
      }

      @Override
      public Requestreview setFields(java.lang.String fields) {
        return (Requestreview) super.setFields(fields);
      }

      @Override
      public Requestreview setKey(java.lang.String key) {
        return (Requestreview) super.setKey(key);
      }

      @Override
      public Requestreview setOauthToken(java.lang.String oauthToken) {
        return (Requestreview) super.setOauthToken(oauthToken);
      }

      @Override
      public Requestreview setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Requestreview) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Requestreview setQuotaUser(java.lang.String quotaUser) {
        return (Requestreview) super.setQuotaUser(quotaUser);
      }

      @Override
      public Requestreview setUploadType(java.lang.String uploadType) {
        return (Requestreview) super.setUploadType(uploadType);
      }

      @Override
      public Requestreview setUploadProtocol(java.lang.String uploadProtocol) {
        return (Requestreview) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The ID of the account. */
      @com.google.api.client.util.Key
      private java.lang.Long merchantId;

      /** Required. The ID of the account.
       */
      public java.lang.Long getMerchantId() {
        return merchantId;
      }

      /** Required. The ID of the account. */
      public Requestreview setMerchantId(java.lang.Long merchantId) {
        this.merchantId = merchantId;
        return this;
      }

      @Override
      public Requestreview set(String parameterName, Object value) {
        return (Requestreview) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link ShoppingContent}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link ShoppingContent}. */
    @Override
    public ShoppingContent build() {
      return new ShoppingContent(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ShoppingContentRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setShoppingContentRequestInitializer(
        ShoppingContentRequestInitializer shoppingcontentRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(shoppingcontentRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
