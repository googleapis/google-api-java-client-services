/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.osconfig.v1beta.model;

/**
 * An action that can be taken as part of installing or updating a recipe.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the OS Config API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SoftwareRecipeStep extends com.google.api.client.json.GenericJson {

  /**
   * Extracts an archive into the specified directory.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SoftwareRecipeStepExtractArchive archiveExtraction;

  /**
   * Installs a deb file via dpkg.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SoftwareRecipeStepInstallDpkg dpkgInstallation;

  /**
   * Copies a file onto the instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SoftwareRecipeStepCopyFile fileCopy;

  /**
   * Executes an artifact or local file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SoftwareRecipeStepExecFile fileExec;

  /**
   * Installs an MSI file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SoftwareRecipeStepInstallMsi msiInstallation;

  /**
   * Installs an rpm file via the rpm utility.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SoftwareRecipeStepInstallRpm rpmInstallation;

  /**
   * Runs commands in a shell.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SoftwareRecipeStepRunScript scriptRun;

  /**
   * Extracts an archive into the specified directory.
   * @return value or {@code null} for none
   */
  public SoftwareRecipeStepExtractArchive getArchiveExtraction() {
    return archiveExtraction;
  }

  /**
   * Extracts an archive into the specified directory.
   * @param archiveExtraction archiveExtraction or {@code null} for none
   */
  public SoftwareRecipeStep setArchiveExtraction(SoftwareRecipeStepExtractArchive archiveExtraction) {
    this.archiveExtraction = archiveExtraction;
    return this;
  }

  /**
   * Installs a deb file via dpkg.
   * @return value or {@code null} for none
   */
  public SoftwareRecipeStepInstallDpkg getDpkgInstallation() {
    return dpkgInstallation;
  }

  /**
   * Installs a deb file via dpkg.
   * @param dpkgInstallation dpkgInstallation or {@code null} for none
   */
  public SoftwareRecipeStep setDpkgInstallation(SoftwareRecipeStepInstallDpkg dpkgInstallation) {
    this.dpkgInstallation = dpkgInstallation;
    return this;
  }

  /**
   * Copies a file onto the instance.
   * @return value or {@code null} for none
   */
  public SoftwareRecipeStepCopyFile getFileCopy() {
    return fileCopy;
  }

  /**
   * Copies a file onto the instance.
   * @param fileCopy fileCopy or {@code null} for none
   */
  public SoftwareRecipeStep setFileCopy(SoftwareRecipeStepCopyFile fileCopy) {
    this.fileCopy = fileCopy;
    return this;
  }

  /**
   * Executes an artifact or local file.
   * @return value or {@code null} for none
   */
  public SoftwareRecipeStepExecFile getFileExec() {
    return fileExec;
  }

  /**
   * Executes an artifact or local file.
   * @param fileExec fileExec or {@code null} for none
   */
  public SoftwareRecipeStep setFileExec(SoftwareRecipeStepExecFile fileExec) {
    this.fileExec = fileExec;
    return this;
  }

  /**
   * Installs an MSI file.
   * @return value or {@code null} for none
   */
  public SoftwareRecipeStepInstallMsi getMsiInstallation() {
    return msiInstallation;
  }

  /**
   * Installs an MSI file.
   * @param msiInstallation msiInstallation or {@code null} for none
   */
  public SoftwareRecipeStep setMsiInstallation(SoftwareRecipeStepInstallMsi msiInstallation) {
    this.msiInstallation = msiInstallation;
    return this;
  }

  /**
   * Installs an rpm file via the rpm utility.
   * @return value or {@code null} for none
   */
  public SoftwareRecipeStepInstallRpm getRpmInstallation() {
    return rpmInstallation;
  }

  /**
   * Installs an rpm file via the rpm utility.
   * @param rpmInstallation rpmInstallation or {@code null} for none
   */
  public SoftwareRecipeStep setRpmInstallation(SoftwareRecipeStepInstallRpm rpmInstallation) {
    this.rpmInstallation = rpmInstallation;
    return this;
  }

  /**
   * Runs commands in a shell.
   * @return value or {@code null} for none
   */
  public SoftwareRecipeStepRunScript getScriptRun() {
    return scriptRun;
  }

  /**
   * Runs commands in a shell.
   * @param scriptRun scriptRun or {@code null} for none
   */
  public SoftwareRecipeStep setScriptRun(SoftwareRecipeStepRunScript scriptRun) {
    this.scriptRun = scriptRun;
    return this;
  }

  @Override
  public SoftwareRecipeStep set(String fieldName, Object value) {
    return (SoftwareRecipeStep) super.set(fieldName, value);
  }

  @Override
  public SoftwareRecipeStep clone() {
    return (SoftwareRecipeStep) super.clone();
  }

}
