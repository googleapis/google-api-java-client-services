/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for AppsPeopleOzExternalMergedpeopleapiChannelData.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiChannelData extends com.google.api.client.json.GenericJson {

  /**
   * Unique ID that corresponds to a Youtube channel.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String channelId;

  /**
   * Number of comments for a given Youtube channel.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long commentCount;

  /**
   * Description of the channel.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long playlistCount;

  /**
   * A FIFE URL pointing to the channel's profile image (go/avatar-fife-urls) with default fife url
   * options. Also refer to go/people-api-concepts:photos for People API's FIFE best practices. The
   * image could be up to a couple of days stale, though it is much fresher in practice. If a fresh
   * image is required, contact the YouTubeAccountProfileService. The URL itself expires ~30 days
   * after generation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String profilePictureUrl;

  /**
   * URL of user's Youtube channel profile.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String profileUrl;

  /**
   * Number of subscribers for a given Youtube channel.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long subscriberCount;

  /**
   * Title of the YouTube channel
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Whether or not the channel's profile has a title/avatar that is canonical in YouTube. Used to
   * determine if the product profile card should be part of the core persona or have their own
   * persona.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean usesYoutubeNames;

  /**
   * Number of videos uploaded in a given Youtube channel.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long videoCount;

  /**
   * Unique ID that corresponds to a Youtube channel.
   * @return value or {@code null} for none
   */
  public java.lang.String getChannelId() {
    return channelId;
  }

  /**
   * Unique ID that corresponds to a Youtube channel.
   * @param channelId channelId or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiChannelData setChannelId(java.lang.String channelId) {
    this.channelId = channelId;
    return this;
  }

  /**
   * Number of comments for a given Youtube channel.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCommentCount() {
    return commentCount;
  }

  /**
   * Number of comments for a given Youtube channel.
   * @param commentCount commentCount or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiChannelData setCommentCount(java.lang.Long commentCount) {
    this.commentCount = commentCount;
    return this;
  }

  /**
   * Description of the channel.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Description of the channel.
   * @param description description or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiChannelData setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getPlaylistCount() {
    return playlistCount;
  }

  /**
   * @param playlistCount playlistCount or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiChannelData setPlaylistCount(java.lang.Long playlistCount) {
    this.playlistCount = playlistCount;
    return this;
  }

  /**
   * A FIFE URL pointing to the channel's profile image (go/avatar-fife-urls) with default fife url
   * options. Also refer to go/people-api-concepts:photos for People API's FIFE best practices. The
   * image could be up to a couple of days stale, though it is much fresher in practice. If a fresh
   * image is required, contact the YouTubeAccountProfileService. The URL itself expires ~30 days
   * after generation.
   * @return value or {@code null} for none
   */
  public java.lang.String getProfilePictureUrl() {
    return profilePictureUrl;
  }

  /**
   * A FIFE URL pointing to the channel's profile image (go/avatar-fife-urls) with default fife url
   * options. Also refer to go/people-api-concepts:photos for People API's FIFE best practices. The
   * image could be up to a couple of days stale, though it is much fresher in practice. If a fresh
   * image is required, contact the YouTubeAccountProfileService. The URL itself expires ~30 days
   * after generation.
   * @param profilePictureUrl profilePictureUrl or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiChannelData setProfilePictureUrl(java.lang.String profilePictureUrl) {
    this.profilePictureUrl = profilePictureUrl;
    return this;
  }

  /**
   * URL of user's Youtube channel profile.
   * @return value or {@code null} for none
   */
  public java.lang.String getProfileUrl() {
    return profileUrl;
  }

  /**
   * URL of user's Youtube channel profile.
   * @param profileUrl profileUrl or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiChannelData setProfileUrl(java.lang.String profileUrl) {
    this.profileUrl = profileUrl;
    return this;
  }

  /**
   * Number of subscribers for a given Youtube channel.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSubscriberCount() {
    return subscriberCount;
  }

  /**
   * Number of subscribers for a given Youtube channel.
   * @param subscriberCount subscriberCount or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiChannelData setSubscriberCount(java.lang.Long subscriberCount) {
    this.subscriberCount = subscriberCount;
    return this;
  }

  /**
   * Title of the YouTube channel
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Title of the YouTube channel
   * @param title title or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiChannelData setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * Whether or not the channel's profile has a title/avatar that is canonical in YouTube. Used to
   * determine if the product profile card should be part of the core persona or have their own
   * persona.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUsesYoutubeNames() {
    return usesYoutubeNames;
  }

  /**
   * Whether or not the channel's profile has a title/avatar that is canonical in YouTube. Used to
   * determine if the product profile card should be part of the core persona or have their own
   * persona.
   * @param usesYoutubeNames usesYoutubeNames or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiChannelData setUsesYoutubeNames(java.lang.Boolean usesYoutubeNames) {
    this.usesYoutubeNames = usesYoutubeNames;
    return this;
  }

  /**
   * Number of videos uploaded in a given Youtube channel.
   * @return value or {@code null} for none
   */
  public java.lang.Long getVideoCount() {
    return videoCount;
  }

  /**
   * Number of videos uploaded in a given Youtube channel.
   * @param videoCount videoCount or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiChannelData setVideoCount(java.lang.Long videoCount) {
    this.videoCount = videoCount;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiChannelData set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiChannelData) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiChannelData clone() {
    return (AppsPeopleOzExternalMergedpeopleapiChannelData) super.clone();
  }

}
