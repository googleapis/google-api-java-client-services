/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workloadmanager.v1.model;

/**
 * Message describing Evaluation object
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Workload Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Evaluation extends com.google.api.client.json.GenericJson {

  /**
   * Output only. [Output only] Create time stamp
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Description of the Evaluation
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Labels as key value pairs
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * name of resource names have the form
   * 'projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * annotations as key value pairs
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceFilter resourceFilter;

  /**
   * Output only. [Output only] The updated rule ids if exist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceStatus resourceStatus;

  /**
   * the name of the rule
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> ruleNames;

  /**
   * Output only. [Output only] The updated rule ids if exist.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> ruleVersions;

  /**
   * crontab format schedule for scheduled evaluation, example: 0 3 * * *
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String schedule;

  /**
   * Output only. [Output only] Update time stamp
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. [Output only] Create time stamp
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. [Output only] Create time stamp
   * @param createTime createTime or {@code null} for none
   */
  public Evaluation setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Description of the Evaluation
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Description of the Evaluation
   * @param description description or {@code null} for none
   */
  public Evaluation setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Labels as key value pairs
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels as key value pairs
   * @param labels labels or {@code null} for none
   */
  public Evaluation setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * name of resource names have the form
   * 'projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * name of resource names have the form
   * 'projects/{project_id}/locations/{location_id}/evaluations/{evaluation_id}'
   * @param name name or {@code null} for none
   */
  public Evaluation setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * annotations as key value pairs
   * @return value or {@code null} for none
   */
  public ResourceFilter getResourceFilter() {
    return resourceFilter;
  }

  /**
   * annotations as key value pairs
   * @param resourceFilter resourceFilter or {@code null} for none
   */
  public Evaluation setResourceFilter(ResourceFilter resourceFilter) {
    this.resourceFilter = resourceFilter;
    return this;
  }

  /**
   * Output only. [Output only] The updated rule ids if exist.
   * @return value or {@code null} for none
   */
  public ResourceStatus getResourceStatus() {
    return resourceStatus;
  }

  /**
   * Output only. [Output only] The updated rule ids if exist.
   * @param resourceStatus resourceStatus or {@code null} for none
   */
  public Evaluation setResourceStatus(ResourceStatus resourceStatus) {
    this.resourceStatus = resourceStatus;
    return this;
  }

  /**
   * the name of the rule
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRuleNames() {
    return ruleNames;
  }

  /**
   * the name of the rule
   * @param ruleNames ruleNames or {@code null} for none
   */
  public Evaluation setRuleNames(java.util.List<java.lang.String> ruleNames) {
    this.ruleNames = ruleNames;
    return this;
  }

  /**
   * Output only. [Output only] The updated rule ids if exist.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRuleVersions() {
    return ruleVersions;
  }

  /**
   * Output only. [Output only] The updated rule ids if exist.
   * @param ruleVersions ruleVersions or {@code null} for none
   */
  public Evaluation setRuleVersions(java.util.List<java.lang.String> ruleVersions) {
    this.ruleVersions = ruleVersions;
    return this;
  }

  /**
   * crontab format schedule for scheduled evaluation, example: 0 3 * * *
   * @return value or {@code null} for none
   */
  public java.lang.String getSchedule() {
    return schedule;
  }

  /**
   * crontab format schedule for scheduled evaluation, example: 0 3 * * *
   * @param schedule schedule or {@code null} for none
   */
  public Evaluation setSchedule(java.lang.String schedule) {
    this.schedule = schedule;
    return this;
  }

  /**
   * Output only. [Output only] Update time stamp
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. [Output only] Update time stamp
   * @param updateTime updateTime or {@code null} for none
   */
  public Evaluation setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public Evaluation set(String fieldName, Object value) {
    return (Evaluation) super.set(fieldName, value);
  }

  @Override
  public Evaluation clone() {
    return (Evaluation) super.clone();
  }

}
