/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.gkebackup.v1.model;

/**
 * A BackupChannel imposes constraints on where clusters can be backed up. The BackupChannel should
 * be in the same project and region as the cluster being backed up. The backup can be created only
 * in destination_project.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Backup for GKE API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackupChannel extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The timestamp when this BackupChannel resource was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. User specified descriptive string for this BackupChannel.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Required. Immutable. The project where Backups are allowed to be stored. The format is
   * `projects/{projectId}` or `projects/{projectNumber}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String destinationProject;

  /**
   * Output only. The project_id where Backups are allowed to be stored. Example Project ID: "my-
   * project-id". This will be an OUTPUT_ONLY field to return the project_id of the destination
   * project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String destinationProjectId;

  /**
   * Output only. `etag` is used for optimistic concurrency control as a way to help prevent
   * simultaneous updates of a BackupChannel from overwriting each other. It is strongly suggested
   * that systems make use of the 'etag' in the read-modify-write cycle to perform BackupChannel
   * updates in order to avoid race conditions: An `etag` is returned in the response to
   * `GetBackupChannel`, and systems are expected to put that etag in the request to
   * `UpdateBackupChannel` or `DeleteBackupChannel` to ensure that their change will be applied to
   * the same version of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Optional. A set of custom labels supplied by user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Identifier. The fully qualified name of the BackupChannel. `projects/locations/backupChannels`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Server generated global unique identifier of
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. The timestamp when this BackupChannel resource was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The timestamp when this BackupChannel resource was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The timestamp when this BackupChannel resource was created.
   * @param createTime createTime or {@code null} for none
   */
  public BackupChannel setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. User specified descriptive string for this BackupChannel.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. User specified descriptive string for this BackupChannel.
   * @param description description or {@code null} for none
   */
  public BackupChannel setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Required. Immutable. The project where Backups are allowed to be stored. The format is
   * `projects/{projectId}` or `projects/{projectNumber}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDestinationProject() {
    return destinationProject;
  }

  /**
   * Required. Immutable. The project where Backups are allowed to be stored. The format is
   * `projects/{projectId}` or `projects/{projectNumber}`.
   * @param destinationProject destinationProject or {@code null} for none
   */
  public BackupChannel setDestinationProject(java.lang.String destinationProject) {
    this.destinationProject = destinationProject;
    return this;
  }

  /**
   * Output only. The project_id where Backups are allowed to be stored. Example Project ID: "my-
   * project-id". This will be an OUTPUT_ONLY field to return the project_id of the destination
   * project.
   * @return value or {@code null} for none
   */
  public java.lang.String getDestinationProjectId() {
    return destinationProjectId;
  }

  /**
   * Output only. The project_id where Backups are allowed to be stored. Example Project ID: "my-
   * project-id". This will be an OUTPUT_ONLY field to return the project_id of the destination
   * project.
   * @param destinationProjectId destinationProjectId or {@code null} for none
   */
  public BackupChannel setDestinationProjectId(java.lang.String destinationProjectId) {
    this.destinationProjectId = destinationProjectId;
    return this;
  }

  /**
   * Output only. `etag` is used for optimistic concurrency control as a way to help prevent
   * simultaneous updates of a BackupChannel from overwriting each other. It is strongly suggested
   * that systems make use of the 'etag' in the read-modify-write cycle to perform BackupChannel
   * updates in order to avoid race conditions: An `etag` is returned in the response to
   * `GetBackupChannel`, and systems are expected to put that etag in the request to
   * `UpdateBackupChannel` or `DeleteBackupChannel` to ensure that their change will be applied to
   * the same version of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Output only. `etag` is used for optimistic concurrency control as a way to help prevent
   * simultaneous updates of a BackupChannel from overwriting each other. It is strongly suggested
   * that systems make use of the 'etag' in the read-modify-write cycle to perform BackupChannel
   * updates in order to avoid race conditions: An `etag` is returned in the response to
   * `GetBackupChannel`, and systems are expected to put that etag in the request to
   * `UpdateBackupChannel` or `DeleteBackupChannel` to ensure that their change will be applied to
   * the same version of the resource.
   * @param etag etag or {@code null} for none
   */
  public BackupChannel setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. A set of custom labels supplied by user.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. A set of custom labels supplied by user.
   * @param labels labels or {@code null} for none
   */
  public BackupChannel setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Identifier. The fully qualified name of the BackupChannel. `projects/locations/backupChannels`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The fully qualified name of the BackupChannel. `projects/locations/backupChannels`
   * @param name name or {@code null} for none
   */
  public BackupChannel setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Server generated global unique identifier of
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. Server generated global unique identifier of
   * [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
   * @param uid uid or {@code null} for none
   */
  public BackupChannel setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. The timestamp when this BackupChannel resource was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The timestamp when this BackupChannel resource was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public BackupChannel setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public BackupChannel set(String fieldName, Object value) {
    return (BackupChannel) super.set(fieldName, value);
  }

  @Override
  public BackupChannel clone() {
    return (BackupChannel) super.clone();
  }

}
