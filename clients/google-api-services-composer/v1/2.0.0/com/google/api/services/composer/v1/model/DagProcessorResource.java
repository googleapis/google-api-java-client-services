/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.composer.v1.model;

/**
 * Configuration for resources used by Airflow DAG processors. This field is supported for Cloud
 * Composer environments in versions composer-3-airflow-*.*.*-build.* and newer.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Composer API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DagProcessorResource extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The number of DAG processors. If not provided or set to 0, a single DAG processor
   * instance will be created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer count;

  /**
   * Optional. CPU request and limit for a single Airflow DAG processor replica.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float cpu;

  /**
   * Optional. Memory (GB) request and limit for a single Airflow DAG processor replica.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float memoryGb;

  /**
   * Optional. Storage (GB) request and limit for a single Airflow DAG processor replica.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float storageGb;

  /**
   * Optional. The number of DAG processors. If not provided or set to 0, a single DAG processor
   * instance will be created.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCount() {
    return count;
  }

  /**
   * Optional. The number of DAG processors. If not provided or set to 0, a single DAG processor
   * instance will be created.
   * @param count count or {@code null} for none
   */
  public DagProcessorResource setCount(java.lang.Integer count) {
    this.count = count;
    return this;
  }

  /**
   * Optional. CPU request and limit for a single Airflow DAG processor replica.
   * @return value or {@code null} for none
   */
  public java.lang.Float getCpu() {
    return cpu;
  }

  /**
   * Optional. CPU request and limit for a single Airflow DAG processor replica.
   * @param cpu cpu or {@code null} for none
   */
  public DagProcessorResource setCpu(java.lang.Float cpu) {
    this.cpu = cpu;
    return this;
  }

  /**
   * Optional. Memory (GB) request and limit for a single Airflow DAG processor replica.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMemoryGb() {
    return memoryGb;
  }

  /**
   * Optional. Memory (GB) request and limit for a single Airflow DAG processor replica.
   * @param memoryGb memoryGb or {@code null} for none
   */
  public DagProcessorResource setMemoryGb(java.lang.Float memoryGb) {
    this.memoryGb = memoryGb;
    return this;
  }

  /**
   * Optional. Storage (GB) request and limit for a single Airflow DAG processor replica.
   * @return value or {@code null} for none
   */
  public java.lang.Float getStorageGb() {
    return storageGb;
  }

  /**
   * Optional. Storage (GB) request and limit for a single Airflow DAG processor replica.
   * @param storageGb storageGb or {@code null} for none
   */
  public DagProcessorResource setStorageGb(java.lang.Float storageGb) {
    this.storageGb = storageGb;
    return this;
  }

  @Override
  public DagProcessorResource set(String fieldName, Object value) {
    return (DagProcessorResource) super.set(fieldName, value);
  }

  @Override
  public DagProcessorResource clone() {
    return (DagProcessorResource) super.clone();
  }

}
