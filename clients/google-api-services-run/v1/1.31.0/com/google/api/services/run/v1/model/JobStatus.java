/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.run.v1.model;

/**
 * JobStatus represents the current state of a Job.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Run Admin API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class JobStatus extends com.google.api.client.json.GenericJson {

  /**
   * The latest available observations of a job's current state. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudRunV1Condition> conditions;

  static {
    // hack to force ProGuard to consider GoogleCloudRunV1Condition used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudRunV1Condition.class);
  }

  /**
   * Number of executions created for this job.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer executionCount;

  /**
   * A pointer to the most recently created execution for this job. This is set regardless of the
   * eventual state of the execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ExecutionReference latestCreatedExecution;

  /**
   * The 'generation' of the job that was last processed by the controller.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer observedGeneration;

  /**
   * The latest available observations of a job's current state. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudRunV1Condition> getConditions() {
    return conditions;
  }

  /**
   * The latest available observations of a job's current state. More info:
   * https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
   * @param conditions conditions or {@code null} for none
   */
  public JobStatus setConditions(java.util.List<GoogleCloudRunV1Condition> conditions) {
    this.conditions = conditions;
    return this;
  }

  /**
   * Number of executions created for this job.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getExecutionCount() {
    return executionCount;
  }

  /**
   * Number of executions created for this job.
   * @param executionCount executionCount or {@code null} for none
   */
  public JobStatus setExecutionCount(java.lang.Integer executionCount) {
    this.executionCount = executionCount;
    return this;
  }

  /**
   * A pointer to the most recently created execution for this job. This is set regardless of the
   * eventual state of the execution.
   * @return value or {@code null} for none
   */
  public ExecutionReference getLatestCreatedExecution() {
    return latestCreatedExecution;
  }

  /**
   * A pointer to the most recently created execution for this job. This is set regardless of the
   * eventual state of the execution.
   * @param latestCreatedExecution latestCreatedExecution or {@code null} for none
   */
  public JobStatus setLatestCreatedExecution(ExecutionReference latestCreatedExecution) {
    this.latestCreatedExecution = latestCreatedExecution;
    return this;
  }

  /**
   * The 'generation' of the job that was last processed by the controller.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getObservedGeneration() {
    return observedGeneration;
  }

  /**
   * The 'generation' of the job that was last processed by the controller.
   * @param observedGeneration observedGeneration or {@code null} for none
   */
  public JobStatus setObservedGeneration(java.lang.Integer observedGeneration) {
    this.observedGeneration = observedGeneration;
    return this;
  }

  @Override
  public JobStatus set(String fieldName, Object value) {
    return (JobStatus) super.set(fieldName, value);
  }

  @Override
  public JobStatus clone() {
    return (JobStatus) super.clone();
  }

}
