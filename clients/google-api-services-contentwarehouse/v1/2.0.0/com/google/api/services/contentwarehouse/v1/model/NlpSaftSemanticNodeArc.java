/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * An arc contained by a source node pointing to a destination node in a directed acyclic graph.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSaftSemanticNodeArc extends com.google.api.client.json.GenericJson {

  /**
   * Human-readable description of this arc's type (for display purposes).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Indicates the arc is for an implicit semantic relation between nodes, for example one that does
   * not correspond to a grammatical relation in the text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean implicit;

  /**
   * Application-specific information about this arc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Proto2BridgeMessageSet info;

  /**
   * Index of the semantic node pointed to by this arc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer semanticNode;

  /**
   * Arc type (akin to an edge label, or semantic operator).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Human-readable description of this arc's type (for display purposes).
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Human-readable description of this arc's type (for display purposes).
   * @param description description or {@code null} for none
   */
  public NlpSaftSemanticNodeArc setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Indicates the arc is for an implicit semantic relation between nodes, for example one that does
   * not correspond to a grammatical relation in the text.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getImplicit() {
    return implicit;
  }

  /**
   * Indicates the arc is for an implicit semantic relation between nodes, for example one that does
   * not correspond to a grammatical relation in the text.
   * @param implicit implicit or {@code null} for none
   */
  public NlpSaftSemanticNodeArc setImplicit(java.lang.Boolean implicit) {
    this.implicit = implicit;
    return this;
  }

  /**
   * Application-specific information about this arc.
   * @return value or {@code null} for none
   */
  public Proto2BridgeMessageSet getInfo() {
    return info;
  }

  /**
   * Application-specific information about this arc.
   * @param info info or {@code null} for none
   */
  public NlpSaftSemanticNodeArc setInfo(Proto2BridgeMessageSet info) {
    this.info = info;
    return this;
  }

  /**
   * Index of the semantic node pointed to by this arc.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSemanticNode() {
    return semanticNode;
  }

  /**
   * Index of the semantic node pointed to by this arc.
   * @param semanticNode semanticNode or {@code null} for none
   */
  public NlpSaftSemanticNodeArc setSemanticNode(java.lang.Integer semanticNode) {
    this.semanticNode = semanticNode;
    return this;
  }

  /**
   * Arc type (akin to an edge label, or semantic operator).
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Arc type (akin to an edge label, or semantic operator).
   * @param type type or {@code null} for none
   */
  public NlpSaftSemanticNodeArc setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public NlpSaftSemanticNodeArc set(String fieldName, Object value) {
    return (NlpSaftSemanticNodeArc) super.set(fieldName, value);
  }

  @Override
  public NlpSaftSemanticNodeArc clone() {
    return (NlpSaftSemanticNodeArc) super.clone();
  }

}
