/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.chromemanagement.v1.model;

/**
 * Describes a SCEP certificate provisioning profile.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Chrome Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleChromeManagementVersionsV1ScepProfile extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The certificate template name as defined by the admin on their on-prem
   * infrastructure. The Certificate Authority uses this name to identify the certificate template.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String certificateTemplateName;

  /**
   * Output only. The country of the subject.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String country;

  /**
   * Output only. The allowed key usages for certificate's key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> keyUsages;

  /**
   * Output only. The locality of the subject.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String locality;

  /**
   * Output only. The name of the organization the subject belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String organization;

  /**
   * Output only. The organizational units of the subject.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> organizationalUnits;

  /**
   * Output only. The state of the subject.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The subject alternative names.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleChromeManagementVersionsV1SubjectAltName> subjectAltNames;

  /**
   * Output only. The common name of the subject.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subjectCommonName;

  /**
   * Output only. The certificate template name as defined by the admin on their on-prem
   * infrastructure. The Certificate Authority uses this name to identify the certificate template.
   * @return value or {@code null} for none
   */
  public java.lang.String getCertificateTemplateName() {
    return certificateTemplateName;
  }

  /**
   * Output only. The certificate template name as defined by the admin on their on-prem
   * infrastructure. The Certificate Authority uses this name to identify the certificate template.
   * @param certificateTemplateName certificateTemplateName or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ScepProfile setCertificateTemplateName(java.lang.String certificateTemplateName) {
    this.certificateTemplateName = certificateTemplateName;
    return this;
  }

  /**
   * Output only. The country of the subject.
   * @return value or {@code null} for none
   */
  public java.lang.String getCountry() {
    return country;
  }

  /**
   * Output only. The country of the subject.
   * @param country country or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ScepProfile setCountry(java.lang.String country) {
    this.country = country;
    return this;
  }

  /**
   * Output only. The allowed key usages for certificate's key.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getKeyUsages() {
    return keyUsages;
  }

  /**
   * Output only. The allowed key usages for certificate's key.
   * @param keyUsages keyUsages or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ScepProfile setKeyUsages(java.util.List<java.lang.String> keyUsages) {
    this.keyUsages = keyUsages;
    return this;
  }

  /**
   * Output only. The locality of the subject.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocality() {
    return locality;
  }

  /**
   * Output only. The locality of the subject.
   * @param locality locality or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ScepProfile setLocality(java.lang.String locality) {
    this.locality = locality;
    return this;
  }

  /**
   * Output only. The name of the organization the subject belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrganization() {
    return organization;
  }

  /**
   * Output only. The name of the organization the subject belongs to.
   * @param organization organization or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ScepProfile setOrganization(java.lang.String organization) {
    this.organization = organization;
    return this;
  }

  /**
   * Output only. The organizational units of the subject.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getOrganizationalUnits() {
    return organizationalUnits;
  }

  /**
   * Output only. The organizational units of the subject.
   * @param organizationalUnits organizationalUnits or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ScepProfile setOrganizationalUnits(java.util.List<java.lang.String> organizationalUnits) {
    this.organizationalUnits = organizationalUnits;
    return this;
  }

  /**
   * Output only. The state of the subject.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. The state of the subject.
   * @param state state or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ScepProfile setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The subject alternative names.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleChromeManagementVersionsV1SubjectAltName> getSubjectAltNames() {
    return subjectAltNames;
  }

  /**
   * Output only. The subject alternative names.
   * @param subjectAltNames subjectAltNames or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ScepProfile setSubjectAltNames(java.util.List<GoogleChromeManagementVersionsV1SubjectAltName> subjectAltNames) {
    this.subjectAltNames = subjectAltNames;
    return this;
  }

  /**
   * Output only. The common name of the subject.
   * @return value or {@code null} for none
   */
  public java.lang.String getSubjectCommonName() {
    return subjectCommonName;
  }

  /**
   * Output only. The common name of the subject.
   * @param subjectCommonName subjectCommonName or {@code null} for none
   */
  public GoogleChromeManagementVersionsV1ScepProfile setSubjectCommonName(java.lang.String subjectCommonName) {
    this.subjectCommonName = subjectCommonName;
    return this;
  }

  @Override
  public GoogleChromeManagementVersionsV1ScepProfile set(String fieldName, Object value) {
    return (GoogleChromeManagementVersionsV1ScepProfile) super.set(fieldName, value);
  }

  @Override
  public GoogleChromeManagementVersionsV1ScepProfile clone() {
    return (GoogleChromeManagementVersionsV1ScepProfile) super.clone();
  }

}
