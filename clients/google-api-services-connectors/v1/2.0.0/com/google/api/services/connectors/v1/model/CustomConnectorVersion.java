/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.connectors.v1.model;

/**
 * CustomConnectorVersion indicates a specific version of a connector.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Connectors API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CustomConnectorVersion extends com.google.api.client.json.GenericJson {

  /**
   * Required. Configuration for establishing the authentication to the connector destination.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AuthConfig authConfig;

  /**
   * Output only. Created time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Required. Configuration of the customConnector's destination.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DestinationConfig destinationConfig;

  /**
   * Optional. Whether to enable backend destination config. This is the backend server that the
   * connector connects to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enableBackendDestinationConfig;

  /**
   * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on
   * labels for more details. https://cloud.google.com/compute/docs/labeling-resources
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. Identifier. Resource name of the Version. Format: projects/{project}/locations/{lo
   * cation}/customConnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Service account needed for runtime plane to access Custom Connector secrets.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAccount;

  /**
   * Optional. Location of the custom connector spec.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String specLocation;

  /**
   * Output only. Updated time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Required. Configuration for establishing the authentication to the connector destination.
   * @return value or {@code null} for none
   */
  public AuthConfig getAuthConfig() {
    return authConfig;
  }

  /**
   * Required. Configuration for establishing the authentication to the connector destination.
   * @param authConfig authConfig or {@code null} for none
   */
  public CustomConnectorVersion setAuthConfig(AuthConfig authConfig) {
    this.authConfig = authConfig;
    return this;
  }

  /**
   * Output only. Created time.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Created time.
   * @param createTime createTime or {@code null} for none
   */
  public CustomConnectorVersion setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Required. Configuration of the customConnector's destination.
   * @return value or {@code null} for none
   */
  public DestinationConfig getDestinationConfig() {
    return destinationConfig;
  }

  /**
   * Required. Configuration of the customConnector's destination.
   * @param destinationConfig destinationConfig or {@code null} for none
   */
  public CustomConnectorVersion setDestinationConfig(DestinationConfig destinationConfig) {
    this.destinationConfig = destinationConfig;
    return this;
  }

  /**
   * Optional. Whether to enable backend destination config. This is the backend server that the
   * connector connects to.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnableBackendDestinationConfig() {
    return enableBackendDestinationConfig;
  }

  /**
   * Optional. Whether to enable backend destination config. This is the backend server that the
   * connector connects to.
   * @param enableBackendDestinationConfig enableBackendDestinationConfig or {@code null} for none
   */
  public CustomConnectorVersion setEnableBackendDestinationConfig(java.lang.Boolean enableBackendDestinationConfig) {
    this.enableBackendDestinationConfig = enableBackendDestinationConfig;
    return this;
  }

  /**
   * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on
   * labels for more details. https://cloud.google.com/compute/docs/labeling-resources
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on
   * labels for more details. https://cloud.google.com/compute/docs/labeling-resources
   * @param labels labels or {@code null} for none
   */
  public CustomConnectorVersion setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. Identifier. Resource name of the Version. Format: projects/{project}/locations/{lo
   * cation}/customConnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. Identifier. Resource name of the Version. Format: projects/{project}/locations/{lo
   * cation}/customConnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}
   * @param name name or {@code null} for none
   */
  public CustomConnectorVersion setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Service account needed for runtime plane to access Custom Connector secrets.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAccount() {
    return serviceAccount;
  }

  /**
   * Required. Service account needed for runtime plane to access Custom Connector secrets.
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public CustomConnectorVersion setServiceAccount(java.lang.String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * Optional. Location of the custom connector spec.
   * @return value or {@code null} for none
   */
  public java.lang.String getSpecLocation() {
    return specLocation;
  }

  /**
   * Optional. Location of the custom connector spec.
   * @param specLocation specLocation or {@code null} for none
   */
  public CustomConnectorVersion setSpecLocation(java.lang.String specLocation) {
    this.specLocation = specLocation;
    return this;
  }

  /**
   * Output only. Updated time.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Updated time.
   * @param updateTime updateTime or {@code null} for none
   */
  public CustomConnectorVersion setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public CustomConnectorVersion set(String fieldName, Object value) {
    return (CustomConnectorVersion) super.set(fieldName, value);
  }

  @Override
  public CustomConnectorVersion clone() {
    return (CustomConnectorVersion) super.clone();
  }

}
