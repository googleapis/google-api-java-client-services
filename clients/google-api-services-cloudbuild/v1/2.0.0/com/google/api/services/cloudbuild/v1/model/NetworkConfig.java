/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbuild.v1.model;

/**
 * Defines the network configuration for the pool.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Build API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NetworkConfig extends com.google.api.client.json.GenericJson {

  /**
   * Option to configure network egress for the workers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String egressOption;

  /**
   * Required. Immutable. The network definition that the workers are peered to. If this section is
   * left empty, the workers will be peered to `WorkerPool.project_id` on the service producer
   * network. Must be in the format `projects/{project}/global/networks/{network}`, where
   * `{project}` is a project number, such as `12345`, and `{network}` is the name of a VPC network
   * in the project. See [Understanding network configuration
   * options](https://cloud.google.com/build/docs/private-pools/set-up-private-pool-environment)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String peeredNetwork;

  /**
   * Immutable. Subnet IP range within the peered network. This is specified in CIDR notation with a
   * slash and the subnet prefix size. You can optionally specify an IP address before the subnet
   * prefix value. e.g. `192.168.0.0/29` would specify an IP range starting at 192.168.0.0 with a
   * prefix size of 29 bits. `/16` would specify a prefix size of 16 bits, with an automatically
   * determined IP within the peered VPC. If unspecified, a value of `/24` will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String peeredNetworkIpRange;

  /**
   * Option to configure network egress for the workers.
   * @return value or {@code null} for none
   */
  public java.lang.String getEgressOption() {
    return egressOption;
  }

  /**
   * Option to configure network egress for the workers.
   * @param egressOption egressOption or {@code null} for none
   */
  public NetworkConfig setEgressOption(java.lang.String egressOption) {
    this.egressOption = egressOption;
    return this;
  }

  /**
   * Required. Immutable. The network definition that the workers are peered to. If this section is
   * left empty, the workers will be peered to `WorkerPool.project_id` on the service producer
   * network. Must be in the format `projects/{project}/global/networks/{network}`, where
   * `{project}` is a project number, such as `12345`, and `{network}` is the name of a VPC network
   * in the project. See [Understanding network configuration
   * options](https://cloud.google.com/build/docs/private-pools/set-up-private-pool-environment)
   * @return value or {@code null} for none
   */
  public java.lang.String getPeeredNetwork() {
    return peeredNetwork;
  }

  /**
   * Required. Immutable. The network definition that the workers are peered to. If this section is
   * left empty, the workers will be peered to `WorkerPool.project_id` on the service producer
   * network. Must be in the format `projects/{project}/global/networks/{network}`, where
   * `{project}` is a project number, such as `12345`, and `{network}` is the name of a VPC network
   * in the project. See [Understanding network configuration
   * options](https://cloud.google.com/build/docs/private-pools/set-up-private-pool-environment)
   * @param peeredNetwork peeredNetwork or {@code null} for none
   */
  public NetworkConfig setPeeredNetwork(java.lang.String peeredNetwork) {
    this.peeredNetwork = peeredNetwork;
    return this;
  }

  /**
   * Immutable. Subnet IP range within the peered network. This is specified in CIDR notation with a
   * slash and the subnet prefix size. You can optionally specify an IP address before the subnet
   * prefix value. e.g. `192.168.0.0/29` would specify an IP range starting at 192.168.0.0 with a
   * prefix size of 29 bits. `/16` would specify a prefix size of 16 bits, with an automatically
   * determined IP within the peered VPC. If unspecified, a value of `/24` will be used.
   * @return value or {@code null} for none
   */
  public java.lang.String getPeeredNetworkIpRange() {
    return peeredNetworkIpRange;
  }

  /**
   * Immutable. Subnet IP range within the peered network. This is specified in CIDR notation with a
   * slash and the subnet prefix size. You can optionally specify an IP address before the subnet
   * prefix value. e.g. `192.168.0.0/29` would specify an IP range starting at 192.168.0.0 with a
   * prefix size of 29 bits. `/16` would specify a prefix size of 16 bits, with an automatically
   * determined IP within the peered VPC. If unspecified, a value of `/24` will be used.
   * @param peeredNetworkIpRange peeredNetworkIpRange or {@code null} for none
   */
  public NetworkConfig setPeeredNetworkIpRange(java.lang.String peeredNetworkIpRange) {
    this.peeredNetworkIpRange = peeredNetworkIpRange;
    return this;
  }

  @Override
  public NetworkConfig set(String fieldName, Object value) {
    return (NetworkConfig) super.set(fieldName, value);
  }

  @Override
  public NetworkConfig clone() {
    return (NetworkConfig) super.clone();
  }

}
