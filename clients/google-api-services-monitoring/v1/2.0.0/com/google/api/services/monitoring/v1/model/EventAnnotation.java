/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.monitoring.v1.model;

/**
 * Annotation configuration for one event type on a dashboard
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Monitoring API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class EventAnnotation extends com.google.api.client.json.GenericJson {

  /**
   * Solely for UI display. Should not be used programmatically.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Whether or not to show the events on the dashboard by default
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enabled;

  /**
   * The type of event to display.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String eventType;

  /**
   * string filtering the events - event dependant. Example values: "resource.labels.pod_name =
   * 'pod-1'" "protoPayload.authenticationInfo.principalEmail='user@example.com'"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String filter;

  /**
   * Per annotation level override for the names of logging resources to search for events.
   * Currently only projects are supported. If both this field and the per annotation field is
   * empty, it will default to the host project. Limit: 50 projects. For example: “projects/another-
   * project-id”
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> resourceNames;

  /**
   * Solely for UI display. Should not be used programmatically.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Solely for UI display. Should not be used programmatically.
   * @param displayName displayName or {@code null} for none
   */
  public EventAnnotation setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Whether or not to show the events on the dashboard by default
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnabled() {
    return enabled;
  }

  /**
   * Whether or not to show the events on the dashboard by default
   * @param enabled enabled or {@code null} for none
   */
  public EventAnnotation setEnabled(java.lang.Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * The type of event to display.
   * @return value or {@code null} for none
   */
  public java.lang.String getEventType() {
    return eventType;
  }

  /**
   * The type of event to display.
   * @param eventType eventType or {@code null} for none
   */
  public EventAnnotation setEventType(java.lang.String eventType) {
    this.eventType = eventType;
    return this;
  }

  /**
   * string filtering the events - event dependant. Example values: "resource.labels.pod_name =
   * 'pod-1'" "protoPayload.authenticationInfo.principalEmail='user@example.com'"
   * @return value or {@code null} for none
   */
  public java.lang.String getFilter() {
    return filter;
  }

  /**
   * string filtering the events - event dependant. Example values: "resource.labels.pod_name =
   * 'pod-1'" "protoPayload.authenticationInfo.principalEmail='user@example.com'"
   * @param filter filter or {@code null} for none
   */
  public EventAnnotation setFilter(java.lang.String filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Per annotation level override for the names of logging resources to search for events.
   * Currently only projects are supported. If both this field and the per annotation field is
   * empty, it will default to the host project. Limit: 50 projects. For example: “projects/another-
   * project-id”
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getResourceNames() {
    return resourceNames;
  }

  /**
   * Per annotation level override for the names of logging resources to search for events.
   * Currently only projects are supported. If both this field and the per annotation field is
   * empty, it will default to the host project. Limit: 50 projects. For example: “projects/another-
   * project-id”
   * @param resourceNames resourceNames or {@code null} for none
   */
  public EventAnnotation setResourceNames(java.util.List<java.lang.String> resourceNames) {
    this.resourceNames = resourceNames;
    return this;
  }

  @Override
  public EventAnnotation set(String fieldName, Object value) {
    return (EventAnnotation) super.set(fieldName, value);
  }

  @Override
  public EventAnnotation clone() {
    return (EventAnnotation) super.clone();
  }

}
