/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.healthcare.v1;

/**
 * Service definition for CloudHealthcare (v1).
 *
 * <p>
 * Manage, store, and access healthcare data in Google Cloud Platform.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/healthcare" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudHealthcareRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudHealthcare extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Cloud Healthcare API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://healthcare.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://healthcare.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudHealthcare(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudHealthcare(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
   *   {@code CloudHealthcare.Projects.List request = healthcare.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
     *   {@code CloudHealthcare.Locations.List request = healthcare.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the healthcare server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Location> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the healthcare server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the healthcare server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the healthcare server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** A filter to narrow down results to a preferred subset. The filtering language accepts strings like
       `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * A filter to narrow down results to a preferred subset. The filtering language accepts
         * strings like `"displayName=tokyo"`, and is documented in more detail in
         * [AIP-160](https://google.aip.dev/160).
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of results to return. If not set, the service selects a default.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of results to return. If not set, the service selects a default. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from the `next_page_token` field in the response. Send that page token to
       receive the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from the `next_page_token` field in the response. Send that page
         * token to receive the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Datasets collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
       *   {@code CloudHealthcare.Datasets.List request = healthcare.datasets().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Datasets datasets() {
        return new Datasets();
      }

      /**
       * The "datasets" collection of methods.
       */
      public class Datasets {

        /**
         * Creates a new health dataset. Results are returned through the Operation interface which returns
         * either an `Operation.response` which contains a Dataset or `Operation.error`. The metadata field
         * type is OperationMetadata.
         *
         * Create a request for the method "datasets.create".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the project where the server creates the dataset. For example,
         *        `projects/{project_id}/locations/{location_id}`.
         * @param content the {@link com.google.api.services.healthcare.v1.model.Dataset}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.healthcare.v1.model.Dataset content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+parent}/datasets";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a new health dataset. Results are returned through the Operation interface which
           * returns either an `Operation.response` which contains a Dataset or `Operation.error`. The
           * metadata field type is OperationMetadata.
           *
           * Create a request for the method "datasets.create".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the project where the server creates the dataset. For example,
         *        `projects/{project_id}/locations/{location_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.Dataset}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.healthcare.v1.model.Dataset content) {
            super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the project where the server creates the dataset. For example,
           * `projects/{project_id}/locations/{location_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the project where the server creates the dataset. For example,
         `projects/{project_id}/locations/{location_id}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the project where the server creates the dataset. For example,
           * `projects/{project_id}/locations/{location_id}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID of the dataset that is being created. The string must match the
           * following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String datasetId;

          /** Required. The ID of the dataset that is being created. The string must match the following regex:
         `[\p{L}\p{N}_\-\.]{1,256}`.
           */
          public java.lang.String getDatasetId() {
            return datasetId;
          }

          /**
           * Required. The ID of the dataset that is being created. The string must match the
           * following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
           */
          public Create setDatasetId(java.lang.String datasetId) {
            this.datasetId = datasetId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new dataset containing de-identified data from the source dataset. The metadata field
         * type is OperationMetadata. If the request is successful, the response field type is
         * DeidentifySummary. If errors occur, error is set. The LRO result may still be successful if de-
         * identification fails for some DICOM instances. The new de-identified dataset will not contain
         * these failed resources. Failed resource totals are tracked in Operation.metadata. Error details
         * are also logged to Cloud Logging. For more information, see [Viewing error logs in Cloud
         * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging).
         *
         * Create a request for the method "datasets.deidentify".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link Deidentify#execute()} method to invoke the remote operation.
         *
         * @param sourceDataset Required. Source dataset resource name. For example,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
         * @param content the {@link com.google.api.services.healthcare.v1.model.DeidentifyDatasetRequest}
         * @return the request
         */
        public Deidentify deidentify(java.lang.String sourceDataset, com.google.api.services.healthcare.v1.model.DeidentifyDatasetRequest content) throws java.io.IOException {
          Deidentify result = new Deidentify(sourceDataset, content);
          initialize(result);
          return result;
        }

        public class Deidentify extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

          private static final String REST_PATH = "v1/{+sourceDataset}:deidentify";

          private final java.util.regex.Pattern SOURCE_DATASET_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Creates a new dataset containing de-identified data from the source dataset. The metadata field
           * type is OperationMetadata. If the request is successful, the response field type is
           * DeidentifySummary. If errors occur, error is set. The LRO result may still be successful if de-
           * identification fails for some DICOM instances. The new de-identified dataset will not contain
           * these failed resources. Failed resource totals are tracked in Operation.metadata. Error details
           * are also logged to Cloud Logging. For more information, see [Viewing error logs in Cloud
           * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging).
           *
           * Create a request for the method "datasets.deidentify".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link Deidentify#execute()} method to invoke the remote
           * operation. <p> {@link
           * Deidentify#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param sourceDataset Required. Source dataset resource name. For example,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.DeidentifyDatasetRequest}
           * @since 1.13
           */
          protected Deidentify(java.lang.String sourceDataset, com.google.api.services.healthcare.v1.model.DeidentifyDatasetRequest content) {
            super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
            this.sourceDataset = com.google.api.client.util.Preconditions.checkNotNull(sourceDataset, "Required parameter sourceDataset must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SOURCE_DATASET_PATTERN.matcher(sourceDataset).matches(),
                  "Parameter sourceDataset must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public Deidentify set$Xgafv(java.lang.String $Xgafv) {
            return (Deidentify) super.set$Xgafv($Xgafv);
          }

          @Override
          public Deidentify setAccessToken(java.lang.String accessToken) {
            return (Deidentify) super.setAccessToken(accessToken);
          }

          @Override
          public Deidentify setAlt(java.lang.String alt) {
            return (Deidentify) super.setAlt(alt);
          }

          @Override
          public Deidentify setCallback(java.lang.String callback) {
            return (Deidentify) super.setCallback(callback);
          }

          @Override
          public Deidentify setFields(java.lang.String fields) {
            return (Deidentify) super.setFields(fields);
          }

          @Override
          public Deidentify setKey(java.lang.String key) {
            return (Deidentify) super.setKey(key);
          }

          @Override
          public Deidentify setOauthToken(java.lang.String oauthToken) {
            return (Deidentify) super.setOauthToken(oauthToken);
          }

          @Override
          public Deidentify setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Deidentify) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Deidentify setQuotaUser(java.lang.String quotaUser) {
            return (Deidentify) super.setQuotaUser(quotaUser);
          }

          @Override
          public Deidentify setUploadType(java.lang.String uploadType) {
            return (Deidentify) super.setUploadType(uploadType);
          }

          @Override
          public Deidentify setUploadProtocol(java.lang.String uploadProtocol) {
            return (Deidentify) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Source dataset resource name. For example,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String sourceDataset;

          /** Required. Source dataset resource name. For example,
         `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          public java.lang.String getSourceDataset() {
            return sourceDataset;
          }

          /**
           * Required. Source dataset resource name. For example,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          public Deidentify setSourceDataset(java.lang.String sourceDataset) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(SOURCE_DATASET_PATTERN.matcher(sourceDataset).matches(),
                  "Parameter sourceDataset must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.sourceDataset = sourceDataset;
            return this;
          }

          @Override
          public Deidentify set(String parameterName, Object value) {
            return (Deidentify) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the specified health dataset and all data contained in the dataset. Deleting a dataset
         * does not affect the sources from which the dataset was imported (if any).
         *
         * Create a request for the method "datasets.delete".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the dataset to delete. For example,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Deletes the specified health dataset and all data contained in the dataset. Deleting a dataset
           * does not affect the sources from which the dataset was imported (if any).
           *
           * Create a request for the method "datasets.delete".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the dataset to delete. For example,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the dataset to delete. For example,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the dataset to delete. For example,
         `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the dataset to delete. For example,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets any metadata associated with a dataset.
         *
         * Create a request for the method "datasets.get".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the dataset to read. For example,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Dataset> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Gets any metadata associated with a dataset.
           *
           * Create a request for the method "datasets.get".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the dataset to read. For example,
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Dataset.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the dataset to read. For example,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the dataset to read. For example,
         `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the dataset to read. For example,
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
         * does not have a policy set.
         *
         * Create a request for the method "datasets.getIamPolicy".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists
           * and does not have a policy set.
           *
           * Create a request for the method "datasets.getIamPolicy".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists the health datasets in the current project.
         *
         * Create a request for the method "datasets.list".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the project whose datasets should be listed. For example,
         *        `projects/{project_id}/locations/{location_id}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListDatasetsResponse> {

          private static final String REST_PATH = "v1/{+parent}/datasets";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists the health datasets in the current project.
           *
           * Create a request for the method "datasets.list".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the project whose datasets should be listed. For example,
         *        `projects/{project_id}/locations/{location_id}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListDatasetsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the project whose datasets should be listed. For example,
           * `projects/{project_id}/locations/{location_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the project whose datasets should be listed. For example,
         `projects/{project_id}/locations/{location_id}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the project whose datasets should be listed. For example,
           * `projects/{project_id}/locations/{location_id}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of items to return. If not specified, 100 is used. May not be larger
           * than 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return. If not specified, 100 is used. May not be larger than 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of items to return. If not specified, 100 is used. May not be larger
           * than 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous List request, if any.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The next_page_token value returned from a previous List request, if any. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates dataset metadata.
         *
         * Create a request for the method "datasets.patch".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. Resource name of the dataset, of the form
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
         * @param content the {@link com.google.api.services.healthcare.v1.model.Dataset}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1.model.Dataset content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Dataset> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Updates dataset metadata.
           *
           * Create a request for the method "datasets.patch".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. Resource name of the dataset, of the form
         *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.Dataset}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.healthcare.v1.model.Dataset content) {
            super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1.model.Dataset.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. Resource name of the dataset, of the form
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. Resource name of the dataset, of the form
         `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. Resource name of the dataset, of the form
           * `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. The update mask applies to the resource. For the `FieldMask` definition, see
           * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The update mask applies to the resource. For the `FieldMask` definition, see
         https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. The update mask applies to the resource. For the `FieldMask` definition, see
           * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy on the specified resource. Replaces any existing policy. Can
         * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
         *
         * Create a request for the method "datasets.setIamPolicy".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "datasets.setIamPolicy".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) {
            super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns permissions that a caller has on the specified resource. If the resource does not exist,
         * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
         * designed to be used for building permission-aware UIs and command-line tools, not for
         * authorization checking. This operation may "fail open" without warning.
         *
         * Create a request for the method "datasets.testIamPermissions".
         *
         * This request holds the parameters needed by the healthcare server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not
           * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
           * operation is designed to be used for building permission-aware UIs and command-line tools, not
           * for authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "datasets.testIamPermissions".
           *
           * This request holds the parameters needed by the the healthcare server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) {
            super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the ConsentStores collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.ConsentStores.List request = healthcare.consentStores().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public ConsentStores consentStores() {
          return new ConsentStores();
        }

        /**
         * The "consentStores" collection of methods.
         */
        public class ConsentStores {

          /**
           * Checks if a particular data_id of a User data mapping in the specified consent store is consented
           * for the specified use.
           *
           * Create a request for the method "consentStores.checkDataAccess".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link CheckDataAccess#execute()} method to invoke the remote operation.
           *
           * @param consentStore Required. Name of the consent store where the requested data_id is stored, of the form `projects/{pr
           *        oject_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.CheckDataAccessRequest}
           * @return the request
           */
          public CheckDataAccess checkDataAccess(java.lang.String consentStore, com.google.api.services.healthcare.v1.model.CheckDataAccessRequest content) throws java.io.IOException {
            CheckDataAccess result = new CheckDataAccess(consentStore, content);
            initialize(result);
            return result;
          }

          public class CheckDataAccess extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.CheckDataAccessResponse> {

            private static final String REST_PATH = "v1/{+consentStore}:checkDataAccess";

            private final java.util.regex.Pattern CONSENT_STORE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

            /**
             * Checks if a particular data_id of a User data mapping in the specified consent store is
             * consented for the specified use.
             *
             * Create a request for the method "consentStores.checkDataAccess".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link CheckDataAccess#execute()} method to invoke the remote
             * operation. <p> {@link CheckDataAccess#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param consentStore Required. Name of the consent store where the requested data_id is stored, of the form `projects/{pr
           *        oject_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.CheckDataAccessRequest}
             * @since 1.13
             */
            protected CheckDataAccess(java.lang.String consentStore, com.google.api.services.healthcare.v1.model.CheckDataAccessRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.CheckDataAccessResponse.class);
              this.consentStore = com.google.api.client.util.Preconditions.checkNotNull(consentStore, "Required parameter consentStore must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONSENT_STORE_PATTERN.matcher(consentStore).matches(),
                    "Parameter consentStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
            }

            @Override
            public CheckDataAccess set$Xgafv(java.lang.String $Xgafv) {
              return (CheckDataAccess) super.set$Xgafv($Xgafv);
            }

            @Override
            public CheckDataAccess setAccessToken(java.lang.String accessToken) {
              return (CheckDataAccess) super.setAccessToken(accessToken);
            }

            @Override
            public CheckDataAccess setAlt(java.lang.String alt) {
              return (CheckDataAccess) super.setAlt(alt);
            }

            @Override
            public CheckDataAccess setCallback(java.lang.String callback) {
              return (CheckDataAccess) super.setCallback(callback);
            }

            @Override
            public CheckDataAccess setFields(java.lang.String fields) {
              return (CheckDataAccess) super.setFields(fields);
            }

            @Override
            public CheckDataAccess setKey(java.lang.String key) {
              return (CheckDataAccess) super.setKey(key);
            }

            @Override
            public CheckDataAccess setOauthToken(java.lang.String oauthToken) {
              return (CheckDataAccess) super.setOauthToken(oauthToken);
            }

            @Override
            public CheckDataAccess setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CheckDataAccess) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CheckDataAccess setQuotaUser(java.lang.String quotaUser) {
              return (CheckDataAccess) super.setQuotaUser(quotaUser);
            }

            @Override
            public CheckDataAccess setUploadType(java.lang.String uploadType) {
              return (CheckDataAccess) super.setUploadType(uploadType);
            }

            @Override
            public CheckDataAccess setUploadProtocol(java.lang.String uploadProtocol) {
              return (CheckDataAccess) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the consent store where the requested data_id is stored, of the
             * form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStor
             * es/{consent_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String consentStore;

            /** Required. Name of the consent store where the requested data_id is stored, of the form `projects/{p
           roject_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.
             */
            public java.lang.String getConsentStore() {
              return consentStore;
            }

            /**
             * Required. Name of the consent store where the requested data_id is stored, of the
             * form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStor
             * es/{consent_store_id}`.
             */
            public CheckDataAccess setConsentStore(java.lang.String consentStore) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONSENT_STORE_PATTERN.matcher(consentStore).matches(),
                    "Parameter consentStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
              this.consentStore = consentStore;
              return this;
            }

            @Override
            public CheckDataAccess set(String parameterName, Object value) {
              return (CheckDataAccess) super.set(parameterName, value);
            }
          }
          /**
           * Creates a new consent store in the parent dataset. Attempting to create a consent store with the
           * same ID as an existing store fails with an ALREADY_EXISTS error.
           *
           * Create a request for the method "consentStores.create".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the dataset this consent store belongs to.
           * @param content the {@link com.google.api.services.healthcare.v1.model.ConsentStore}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.healthcare.v1.model.ConsentStore content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ConsentStore> {

            private static final String REST_PATH = "v1/{+parent}/consentStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Creates a new consent store in the parent dataset. Attempting to create a consent store with
             * the same ID as an existing store fails with an ALREADY_EXISTS error.
             *
             * Create a request for the method "consentStores.create".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the dataset this consent store belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1.model.ConsentStore}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.healthcare.v1.model.ConsentStore content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.ConsentStore.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the dataset this consent store belongs to. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the dataset this consent store belongs to.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The name of the dataset this consent store belongs to. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID of the consent store to create. The string must match the following
             * regex: `[\p{L}\p{N}_\-\.]{1,256}`. Cannot be changed after creation.
             */
            @com.google.api.client.util.Key
            private java.lang.String consentStoreId;

            /** Required. The ID of the consent store to create. The string must match the following regex:
           `[\p{L}\p{N}_\-\.]{1,256}`. Cannot be changed after creation.
             */
            public java.lang.String getConsentStoreId() {
              return consentStoreId;
            }

            /**
             * Required. The ID of the consent store to create. The string must match the following
             * regex: `[\p{L}\p{N}_\-\.]{1,256}`. Cannot be changed after creation.
             */
            public Create setConsentStoreId(java.lang.String consentStoreId) {
              this.consentStoreId = consentStoreId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified consent store and removes all the consent store's data.
           *
           * Create a request for the method "consentStores.delete".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the consent store to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

            /**
             * Deletes the specified consent store and removes all the consent store's data.
             *
             * Create a request for the method "consentStores.delete".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the consent store to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The resource name of the consent store to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the consent store to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The resource name of the consent store to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Evaluates the user's Consents for all matching User data mappings. Note: User data mappings are
           * indexed asynchronously, which can cause a slight delay between the time mappings are created or
           * updated and when they are included in EvaluateUserConsents results.
           *
           * Create a request for the method "consentStores.evaluateUserConsents".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link EvaluateUserConsents#execute()} method to invoke the remote
           * operation.
           *
           * @param consentStore Required. Name of the consent store to retrieve User data mappings from.
           * @param content the {@link com.google.api.services.healthcare.v1.model.EvaluateUserConsentsRequest}
           * @return the request
           */
          public EvaluateUserConsents evaluateUserConsents(java.lang.String consentStore, com.google.api.services.healthcare.v1.model.EvaluateUserConsentsRequest content) throws java.io.IOException {
            EvaluateUserConsents result = new EvaluateUserConsents(consentStore, content);
            initialize(result);
            return result;
          }

          public class EvaluateUserConsents extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.EvaluateUserConsentsResponse> {

            private static final String REST_PATH = "v1/{+consentStore}:evaluateUserConsents";

            private final java.util.regex.Pattern CONSENT_STORE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

            /**
             * Evaluates the user's Consents for all matching User data mappings. Note: User data mappings are
             * indexed asynchronously, which can cause a slight delay between the time mappings are created or
             * updated and when they are included in EvaluateUserConsents results.
             *
             * Create a request for the method "consentStores.evaluateUserConsents".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link EvaluateUserConsents#execute()} method to invoke the
             * remote operation. <p> {@link EvaluateUserConsents#initialize(com.google.api.client.googleapis.s
             * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param consentStore Required. Name of the consent store to retrieve User data mappings from.
             * @param content the {@link com.google.api.services.healthcare.v1.model.EvaluateUserConsentsRequest}
             * @since 1.13
             */
            protected EvaluateUserConsents(java.lang.String consentStore, com.google.api.services.healthcare.v1.model.EvaluateUserConsentsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.EvaluateUserConsentsResponse.class);
              this.consentStore = com.google.api.client.util.Preconditions.checkNotNull(consentStore, "Required parameter consentStore must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONSENT_STORE_PATTERN.matcher(consentStore).matches(),
                    "Parameter consentStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
            }

            @Override
            public EvaluateUserConsents set$Xgafv(java.lang.String $Xgafv) {
              return (EvaluateUserConsents) super.set$Xgafv($Xgafv);
            }

            @Override
            public EvaluateUserConsents setAccessToken(java.lang.String accessToken) {
              return (EvaluateUserConsents) super.setAccessToken(accessToken);
            }

            @Override
            public EvaluateUserConsents setAlt(java.lang.String alt) {
              return (EvaluateUserConsents) super.setAlt(alt);
            }

            @Override
            public EvaluateUserConsents setCallback(java.lang.String callback) {
              return (EvaluateUserConsents) super.setCallback(callback);
            }

            @Override
            public EvaluateUserConsents setFields(java.lang.String fields) {
              return (EvaluateUserConsents) super.setFields(fields);
            }

            @Override
            public EvaluateUserConsents setKey(java.lang.String key) {
              return (EvaluateUserConsents) super.setKey(key);
            }

            @Override
            public EvaluateUserConsents setOauthToken(java.lang.String oauthToken) {
              return (EvaluateUserConsents) super.setOauthToken(oauthToken);
            }

            @Override
            public EvaluateUserConsents setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (EvaluateUserConsents) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public EvaluateUserConsents setQuotaUser(java.lang.String quotaUser) {
              return (EvaluateUserConsents) super.setQuotaUser(quotaUser);
            }

            @Override
            public EvaluateUserConsents setUploadType(java.lang.String uploadType) {
              return (EvaluateUserConsents) super.setUploadType(uploadType);
            }

            @Override
            public EvaluateUserConsents setUploadProtocol(java.lang.String uploadProtocol) {
              return (EvaluateUserConsents) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the consent store to retrieve User data mappings from. */
            @com.google.api.client.util.Key
            private java.lang.String consentStore;

            /** Required. Name of the consent store to retrieve User data mappings from.
             */
            public java.lang.String getConsentStore() {
              return consentStore;
            }

            /** Required. Name of the consent store to retrieve User data mappings from. */
            public EvaluateUserConsents setConsentStore(java.lang.String consentStore) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONSENT_STORE_PATTERN.matcher(consentStore).matches(),
                    "Parameter consentStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
              this.consentStore = consentStore;
              return this;
            }

            @Override
            public EvaluateUserConsents set(String parameterName, Object value) {
              return (EvaluateUserConsents) super.set(parameterName, value);
            }
          }
          /**
           * Gets the specified consent store.
           *
           * Create a request for the method "consentStores.get".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the consent store to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ConsentStore> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

            /**
             * Gets the specified consent store.
             *
             * Create a request for the method "consentStores.get".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the consent store to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ConsentStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The resource name of the consent store to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the consent store to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The resource name of the consent store to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "consentStores.getIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "consentStores.getIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Lists the consent stores in the specified dataset.
           *
           * Create a request for the method "consentStores.list".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the dataset.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListConsentStoresResponse> {

            private static final String REST_PATH = "v1/{+parent}/consentStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists the consent stores in the specified dataset.
             *
             * Create a request for the method "consentStores.list".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the dataset.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListConsentStoresResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the dataset. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the dataset.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Name of the dataset. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. Restricts the stores returned to those matching a filter. Only filtering on
             * labels is supported. For example, `filter=labels.key=value`.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Optional. Restricts the stores returned to those matching a filter. Only filtering on labels is
           supported. For example, `filter=labels.key=value`.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Optional. Restricts the stores returned to those matching a filter. Only filtering on
             * labels is supported. For example, `filter=labels.key=value`.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Optional. Limit on the number of consent stores to return in a single response. If
             * not specified, 100 is used. May not be larger than 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Limit on the number of consent stores to return in a single response. If not specified,
           100 is used. May not be larger than 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Limit on the number of consent stores to return in a single response. If
             * not specified, 100 is used. May not be larger than 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. Token to retrieve the next page of results, or empty to get the first page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. Token to retrieve the next page of results, or empty to get the first page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. Token to retrieve the next page of results, or empty to get the first page.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified consent store.
           *
           * Create a request for the method "consentStores.patch".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Identifier. Resource name of the consent store, of the form `projects/{project_id}/locations/{locati
           *        on_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after
           *        creation.
           * @param content the {@link com.google.api.services.healthcare.v1.model.ConsentStore}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1.model.ConsentStore content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ConsentStore> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

            /**
             * Updates the specified consent store.
             *
             * Create a request for the method "consentStores.patch".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Identifier. Resource name of the consent store, of the form `projects/{project_id}/locations/{locati
           *        on_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after
           *        creation.
             * @param content the {@link com.google.api.services.healthcare.v1.model.ConsentStore}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.healthcare.v1.model.ConsentStore content) {
              super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1.model.ConsentStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Identifier. Resource name of the consent store, of the form `projects/{project_id}/lo
             * cations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot
             * be changed after creation.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Identifier. Resource name of the consent store, of the form `projects/{project_id}/locations/{locat
           ion_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Identifier. Resource name of the consent store, of the form `projects/{project_id}/lo
             * cations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot
             * be changed after creation.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. The update mask that applies to the resource. For the `FieldMask`
             * definition, see https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask. Only the `labels`,
             * `default_consent_ttl`, and `enable_consent_create_on_update` fields are allowed to be
             * updated.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. The update mask that applies to the resource. For the `FieldMask` definition, see
           https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask. Only the
           `labels`, `default_consent_ttl`, and `enable_consent_create_on_update` fields are allowed to be
           updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. The update mask that applies to the resource. For the `FieldMask`
             * definition, see https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask. Only the `labels`,
             * `default_consent_ttl`, and `enable_consent_create_on_update` fields are allowed to be
             * updated.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Queries all data_ids that are consented for a specified use in the given consent store and writes
           * them to a specified destination. The returned Operation includes a progress counter for the
           * number of User data mappings processed. If the request is successful, a detailed response is
           * returned of type QueryAccessibleDataResponse, contained in the response field when the operation
           * finishes. The metadata field type is OperationMetadata. Errors are logged to Cloud Logging (see
           * [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
           * For example, the following sample log entry shows a `failed to evaluate consent policy` error
           * that occurred during a QueryAccessibleData call to consent store `projects/{project_id}/locations
           * /{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. ```json jsonPayload: {
           * @type: "type.googleapis.com/google.cloud.healthcare.logging.QueryAccessibleDataLogEntry" error: {
           * code: 9 message: "failed to evaluate consent policy" } resourceName: "projects/{project_id}/locat
           * ions/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}"
           * } logName: "projects/{project_id}/logs/healthcare.googleapis.com%2Fquery_accessible_data"
           * operation: { id:
           * "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/operations/{operation_id}"
           * producer: "healthcare.googleapis.com/QueryAccessibleData" } receiveTimestamp: "TIMESTAMP"
           * resource: { labels: { consent_store_id: "{consent_store_id}" dataset_id: "{dataset_id}" location:
           * "{location_id}" project_id: "{project_id}" } type: "healthcare_consent_store" } severity: "ERROR"
           * timestamp: "TIMESTAMP" ```
           *
           * Create a request for the method "consentStores.queryAccessibleData".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link QueryAccessibleData#execute()} method to invoke the remote operation.
           *
           * @param consentStore Required. Name of the consent store to retrieve User data mappings from.
           * @param content the {@link com.google.api.services.healthcare.v1.model.QueryAccessibleDataRequest}
           * @return the request
           */
          public QueryAccessibleData queryAccessibleData(java.lang.String consentStore, com.google.api.services.healthcare.v1.model.QueryAccessibleDataRequest content) throws java.io.IOException {
            QueryAccessibleData result = new QueryAccessibleData(consentStore, content);
            initialize(result);
            return result;
          }

          public class QueryAccessibleData extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+consentStore}:queryAccessibleData";

            private final java.util.regex.Pattern CONSENT_STORE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

            /**
             * Queries all data_ids that are consented for a specified use in the given consent store and
             * writes them to a specified destination. The returned Operation includes a progress counter for
             * the number of User data mappings processed. If the request is successful, a detailed response
             * is returned of type QueryAccessibleDataResponse, contained in the response field when the
             * operation finishes. The metadata field type is OperationMetadata. Errors are logged to Cloud
             * Logging (see [Viewing error logs in Cloud
             * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). For example, the following
             * sample log entry shows a `failed to evaluate consent policy` error that occurred during a
             * QueryAccessibleData call to consent store `projects/{project_id}/locations/{location_id}/datase
             * ts/{dataset_id}/consentStores/{consent_store_id}`. ```json jsonPayload: { @type:
             * "type.googleapis.com/google.cloud.healthcare.logging.QueryAccessibleDataLogEntry" error: {
             * code: 9 message: "failed to evaluate consent policy" } resourceName: "projects/{project_id}/loc
             * ations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_i
             * d}" } logName: "projects/{project_id}/logs/healthcare.googleapis.com%2Fquery_accessible_data"
             * operation: { id:
             * "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/operations/{operation_id}"
             * producer: "healthcare.googleapis.com/QueryAccessibleData" } receiveTimestamp: "TIMESTAMP"
             * resource: { labels: { consent_store_id: "{consent_store_id}" dataset_id: "{dataset_id}"
             * location: "{location_id}" project_id: "{project_id}" } type: "healthcare_consent_store" }
             * severity: "ERROR" timestamp: "TIMESTAMP" ```
             *
             * Create a request for the method "consentStores.queryAccessibleData".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link QueryAccessibleData#execute()} method to invoke the remote
             * operation. <p> {@link QueryAccessibleData#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param consentStore Required. Name of the consent store to retrieve User data mappings from.
             * @param content the {@link com.google.api.services.healthcare.v1.model.QueryAccessibleDataRequest}
             * @since 1.13
             */
            protected QueryAccessibleData(java.lang.String consentStore, com.google.api.services.healthcare.v1.model.QueryAccessibleDataRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.consentStore = com.google.api.client.util.Preconditions.checkNotNull(consentStore, "Required parameter consentStore must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONSENT_STORE_PATTERN.matcher(consentStore).matches(),
                    "Parameter consentStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
            }

            @Override
            public QueryAccessibleData set$Xgafv(java.lang.String $Xgafv) {
              return (QueryAccessibleData) super.set$Xgafv($Xgafv);
            }

            @Override
            public QueryAccessibleData setAccessToken(java.lang.String accessToken) {
              return (QueryAccessibleData) super.setAccessToken(accessToken);
            }

            @Override
            public QueryAccessibleData setAlt(java.lang.String alt) {
              return (QueryAccessibleData) super.setAlt(alt);
            }

            @Override
            public QueryAccessibleData setCallback(java.lang.String callback) {
              return (QueryAccessibleData) super.setCallback(callback);
            }

            @Override
            public QueryAccessibleData setFields(java.lang.String fields) {
              return (QueryAccessibleData) super.setFields(fields);
            }

            @Override
            public QueryAccessibleData setKey(java.lang.String key) {
              return (QueryAccessibleData) super.setKey(key);
            }

            @Override
            public QueryAccessibleData setOauthToken(java.lang.String oauthToken) {
              return (QueryAccessibleData) super.setOauthToken(oauthToken);
            }

            @Override
            public QueryAccessibleData setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (QueryAccessibleData) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public QueryAccessibleData setQuotaUser(java.lang.String quotaUser) {
              return (QueryAccessibleData) super.setQuotaUser(quotaUser);
            }

            @Override
            public QueryAccessibleData setUploadType(java.lang.String uploadType) {
              return (QueryAccessibleData) super.setUploadType(uploadType);
            }

            @Override
            public QueryAccessibleData setUploadProtocol(java.lang.String uploadProtocol) {
              return (QueryAccessibleData) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the consent store to retrieve User data mappings from. */
            @com.google.api.client.util.Key
            private java.lang.String consentStore;

            /** Required. Name of the consent store to retrieve User data mappings from.
             */
            public java.lang.String getConsentStore() {
              return consentStore;
            }

            /** Required. Name of the consent store to retrieve User data mappings from. */
            public QueryAccessibleData setConsentStore(java.lang.String consentStore) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(CONSENT_STORE_PATTERN.matcher(consentStore).matches(),
                    "Parameter consentStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
              this.consentStore = consentStore;
              return this;
            }

            @Override
            public QueryAccessibleData set(String parameterName, Object value) {
              return (QueryAccessibleData) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "consentStores.setIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "consentStores.setIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "consentStores.testIamPermissions".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "consentStores.testIamPermissions".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the AttributeDefinitions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.AttributeDefinitions.List request = healthcare.attributeDefinitions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public AttributeDefinitions attributeDefinitions() {
            return new AttributeDefinitions();
          }

          /**
           * The "attributeDefinitions" collection of methods.
           */
          public class AttributeDefinitions {

            /**
             * Creates a new Attribute definition in the parent consent store.
             *
             * Create a request for the method "attributeDefinitions.create".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the consent store that this Attribute definition belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1.model.AttributeDefinition}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.healthcare.v1.model.AttributeDefinition content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.AttributeDefinition> {

              private static final String REST_PATH = "v1/{+parent}/attributeDefinitions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

              /**
               * Creates a new Attribute definition in the parent consent store.
               *
               * Create a request for the method "attributeDefinitions.create".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the consent store that this Attribute definition belongs to.
               * @param content the {@link com.google.api.services.healthcare.v1.model.AttributeDefinition}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.healthcare.v1.model.AttributeDefinition content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.AttributeDefinition.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the consent store that this Attribute definition belongs to.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the consent store that this Attribute definition belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the consent store that this Attribute definition belongs to.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The ID of the Attribute definition to create. The string must match the
               * following regex: `_a-zA-Z{0,255}` and must not be a reserved keyword within the
               * Common Expression Language as listed on https://github.com/google/cel-
               * spec/blob/master/doc/langdef.md.
               */
              @com.google.api.client.util.Key
              private java.lang.String attributeDefinitionId;

              /** Required. The ID of the Attribute definition to create. The string must match the following regex:
             `_a-zA-Z{0,255}` and must not be a reserved keyword within the Common Expression Language as listed
             on https://github.com/google/cel-spec/blob/master/doc/langdef.md.
               */
              public java.lang.String getAttributeDefinitionId() {
                return attributeDefinitionId;
              }

              /**
               * Required. The ID of the Attribute definition to create. The string must match the
               * following regex: `_a-zA-Z{0,255}` and must not be a reserved keyword within the
               * Common Expression Language as listed on https://github.com/google/cel-
               * spec/blob/master/doc/langdef.md.
               */
              public Create setAttributeDefinitionId(java.lang.String attributeDefinitionId) {
                this.attributeDefinitionId = attributeDefinitionId;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the specified Attribute definition. Fails if the Attribute definition is referenced by
             * any User data mapping, or the latest revision of any Consent.
             *
             * Create a request for the method "attributeDefinitions.delete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Attribute definition to delete. To preserve referential
             *        integrity, Attribute definitions referenced by a User data mapping or the latest revision
             *        of a Consent cannot be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$");

              /**
               * Deletes the specified Attribute definition. Fails if the Attribute definition is referenced by
               * any User data mapping, or the latest revision of any Consent.
               *
               * Create a request for the method "attributeDefinitions.delete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Attribute definition to delete. To preserve referential
             *        integrity, Attribute definitions referenced by a User data mapping or the latest revision
             *        of a Consent cannot be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Attribute definition to delete. To preserve
               * referential integrity, Attribute definitions referenced by a User data mapping or
               * the latest revision of a Consent cannot be deleted.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Attribute definition to delete. To preserve referential
             integrity, Attribute definitions referenced by a User data mapping or the latest revision of a
             Consent cannot be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Attribute definition to delete. To preserve
               * referential integrity, Attribute definitions referenced by a User data mapping or
               * the latest revision of a Consent cannot be deleted.
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the specified Attribute definition.
             *
             * Create a request for the method "attributeDefinitions.get".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Attribute definition to get.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.AttributeDefinition> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$");

              /**
               * Gets the specified Attribute definition.
               *
               * Create a request for the method "attributeDefinitions.get".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Attribute definition to get.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.AttributeDefinition.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The resource name of the Attribute definition to get. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Attribute definition to get.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The resource name of the Attribute definition to get. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists the Attribute definitions in the specified consent store.
             *
             * Create a request for the method "attributeDefinitions.list".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Name of the consent store to retrieve Attribute definitions from.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListAttributeDefinitionsResponse> {

              private static final String REST_PATH = "v1/{+parent}/attributeDefinitions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

              /**
               * Lists the Attribute definitions in the specified consent store.
               *
               * Create a request for the method "attributeDefinitions.list".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Name of the consent store to retrieve Attribute definitions from.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListAttributeDefinitionsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Name of the consent store to retrieve Attribute definitions from. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Name of the consent store to retrieve Attribute definitions from.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. Name of the consent store to retrieve Attribute definitions from. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. Restricts the attributes returned to those matching a filter. The only
               * field available for filtering is `category`. For example,
               * `filter=category=\"REQUEST\"`.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Optional. Restricts the attributes returned to those matching a filter. The only field available
             for filtering is `category`. For example, `filter=category=\"REQUEST\"`.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Optional. Restricts the attributes returned to those matching a filter. The only
               * field available for filtering is `category`. For example,
               * `filter=category=\"REQUEST\"`.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * Optional. Limit on the number of Attribute definitions to return in a single
               * response. If not specified, 100 is used. May not be larger than 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. Limit on the number of Attribute definitions to return in a single response. If not
             specified, 100 is used. May not be larger than 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. Limit on the number of Attribute definitions to return in a single
               * response. If not specified, 100 is used. May not be larger than 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Optional. Token to retrieve the next page of results or empty to get the first
               * page.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. Token to retrieve the next page of results or empty to get the first page.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Optional. Token to retrieve the next page of results or empty to get the first
               * page.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates the specified Attribute definition.
             *
             * Create a request for the method "attributeDefinitions.patch".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Identifier. Resource name of the Attribute definition, of the form `projects/{project_id}/locations/
             *        {location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/
             *        {attribute_definition_id}`. Cannot be changed after creation.
             * @param content the {@link com.google.api.services.healthcare.v1.model.AttributeDefinition}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1.model.AttributeDefinition content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.AttributeDefinition> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$");

              /**
               * Updates the specified Attribute definition.
               *
               * Create a request for the method "attributeDefinitions.patch".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Identifier. Resource name of the Attribute definition, of the form `projects/{project_id}/locations/
             *        {location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/
             *        {attribute_definition_id}`. Cannot be changed after creation.
               * @param content the {@link com.google.api.services.healthcare.v1.model.AttributeDefinition}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.healthcare.v1.model.AttributeDefinition content) {
                super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1.model.AttributeDefinition.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Identifier. Resource name of the Attribute definition, of the form `projects/{proje
               * ct_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_i
               * d}/attributeDefinitions/{attribute_definition_id}`. Cannot be changed after
               * creation.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Identifier. Resource name of the Attribute definition, of the form `projects/{project_id}/locations
             /{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribu
             te_definition_id}`. Cannot be changed after creation.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Identifier. Resource name of the Attribute definition, of the form `projects/{proje
               * ct_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_i
               * d}/attributeDefinitions/{attribute_definition_id}`. Cannot be changed after
               * creation.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Required. The update mask that applies to the resource. For the `FieldMask`
               * definition, see https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask. Only the `description`,
               * `allowed_values`, `consent_default_values` and `data_mapping_default_value` fields
               * can be updated. The updated `allowed_values` must contain all values from the
               * previous `allowed_values`.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Required. The update mask that applies to the resource. For the `FieldMask` definition, see
             https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask. Only the
             `description`, `allowed_values`, `consent_default_values` and `data_mapping_default_value` fields
             can be updated. The updated `allowed_values` must contain all values from the previous
             `allowed_values`.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Required. The update mask that applies to the resource. For the `FieldMask`
               * definition, see https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask. Only the `description`,
               * `allowed_values`, `consent_default_values` and `data_mapping_default_value` fields
               * can be updated. The updated `allowed_values` must contain all values from the
               * previous `allowed_values`.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the ConsentArtifacts collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.ConsentArtifacts.List request = healthcare.consentArtifacts().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public ConsentArtifacts consentArtifacts() {
            return new ConsentArtifacts();
          }

          /**
           * The "consentArtifacts" collection of methods.
           */
          public class ConsentArtifacts {

            /**
             * Creates a new Consent artifact in the parent consent store.
             *
             * Create a request for the method "consentArtifacts.create".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the consent store this Consent artifact belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1.model.ConsentArtifact}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.healthcare.v1.model.ConsentArtifact content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ConsentArtifact> {

              private static final String REST_PATH = "v1/{+parent}/consentArtifacts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

              /**
               * Creates a new Consent artifact in the parent consent store.
               *
               * Create a request for the method "consentArtifacts.create".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the consent store this Consent artifact belongs to.
               * @param content the {@link com.google.api.services.healthcare.v1.model.ConsentArtifact}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.healthcare.v1.model.ConsentArtifact content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.ConsentArtifact.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the consent store this Consent artifact belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the consent store this Consent artifact belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The name of the consent store this Consent artifact belongs to. */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the specified Consent artifact. Fails if the artifact is referenced by the latest
             * revision of any Consent.
             *
             * Create a request for the method "consentArtifacts.delete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Consent artifact to delete. To preserve referential integrity,
             *        Consent artifacts referenced by the latest revision of a Consent cannot be deleted.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consentArtifacts/[^/]+$");

              /**
               * Deletes the specified Consent artifact. Fails if the artifact is referenced by the latest
               * revision of any Consent.
               *
               * Create a request for the method "consentArtifacts.delete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Consent artifact to delete. To preserve referential integrity,
             *        Consent artifacts referenced by the latest revision of a Consent cannot be deleted.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consentArtifacts/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Consent artifact to delete. To preserve
               * referential integrity, Consent artifacts referenced by the latest revision of a
               * Consent cannot be deleted.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Consent artifact to delete. To preserve referential integrity,
             Consent artifacts referenced by the latest revision of a Consent cannot be deleted.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Consent artifact to delete. To preserve
               * referential integrity, Consent artifacts referenced by the latest revision of a
               * Consent cannot be deleted.
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consentArtifacts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the specified Consent artifact.
             *
             * Create a request for the method "consentArtifacts.get".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Consent artifact to retrieve.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ConsentArtifact> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consentArtifacts/[^/]+$");

              /**
               * Gets the specified Consent artifact.
               *
               * Create a request for the method "consentArtifacts.get".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Consent artifact to retrieve.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ConsentArtifact.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consentArtifacts/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The resource name of the Consent artifact to retrieve. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Consent artifact to retrieve.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The resource name of the Consent artifact to retrieve. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consentArtifacts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists the Consent artifacts in the specified consent store.
             *
             * Create a request for the method "consentArtifacts.list".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Name of the consent store to retrieve consent artifacts from.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListConsentArtifactsResponse> {

              private static final String REST_PATH = "v1/{+parent}/consentArtifacts";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

              /**
               * Lists the Consent artifacts in the specified consent store.
               *
               * Create a request for the method "consentArtifacts.list".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Name of the consent store to retrieve consent artifacts from.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListConsentArtifactsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Name of the consent store to retrieve consent artifacts from. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Name of the consent store to retrieve consent artifacts from.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. Name of the consent store to retrieve consent artifacts from. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. Restricts the artifacts returned to those matching a filter. The
               * following syntax is available: * A string field value can be written as text inside
               * quotation marks, for example `"query text"`. The only valid relational operation
               * for text fields is equality (`=`), where text is searched within the field, rather
               * than having the field be equal to the text. For example, `"Comment = great"`
               * returns messages with `great` in the comment field. * A number field value can be
               * written as an integer, a decimal, or an exponential. The valid relational operators
               * for number fields are the equality operator (`=`), along with the less than/greater
               * than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`)
               * operator. You can prepend the `NOT` operator to an expression to negate it. * A
               * date field value must be written in `yyyy-mm-dd` form. Fields with date and time
               * use the RFC3339 time format. Leading zeros are required for one-digit months and
               * days. The valid relational operators for date fields are the equality operator
               * (`=`) , along with the less than/greater than operators (`<`, `<=`, `>`, `>=`).
               * Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
               * operator to an expression to negate it. * Multiple field query expressions can be
               * combined in one query by adding `AND` or `OR` operators between the expressions. If
               * a boolean operator appears within a quoted string, it is not treated as special,
               * it's just another part of the character string to be matched. You can prepend the
               * `NOT` operator to an expression to negate it. The fields available for filtering
               * are: - user_id. For example, `filter=user_id=\"user123\"`. -
               * consent_content_version - metadata. For example,
               * `filter=Metadata(\"testkey\")=\"value\"` or `filter=HasMetadata(\"testkey\")`.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Optional. Restricts the artifacts returned to those matching a filter. The following syntax is
             available: * A string field value can be written as text inside quotation marks, for example
             `"query text"`. The only valid relational operation for text fields is equality (`=`), where text
             is searched within the field, rather than having the field be equal to the text. For example,
             `"Comment = great"` returns messages with `great` in the comment field. * A number field value can
             be written as an integer, a decimal, or an exponential. The valid relational operators for number
             fields are the equality operator (`=`), along with the less than/greater than operators (`<`, `<=`,
             `>`, `>=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT` operator to
             an expression to negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields with
             date and time use the RFC3339 time format. Leading zeros are required for one-digit months and
             days. The valid relational operators for date fields are the equality operator (`=`) , along with
             the less than/greater than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality
             (`!=`) operator. You can prepend the `NOT` operator to an expression to negate it. * Multiple field
             query expressions can be combined in one query by adding `AND` or `OR` operators between the
             expressions. If a boolean operator appears within a quoted string, it is not treated as special,
             it's just another part of the character string to be matched. You can prepend the `NOT` operator to
             an expression to negate it. The fields available for filtering are: - user_id. For example,
             `filter=user_id=\"user123\"`. - consent_content_version - metadata. For example,
             `filter=Metadata(\"testkey\")=\"value\"` or `filter=HasMetadata(\"testkey\")`.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Optional. Restricts the artifacts returned to those matching a filter. The
               * following syntax is available: * A string field value can be written as text inside
               * quotation marks, for example `"query text"`. The only valid relational operation
               * for text fields is equality (`=`), where text is searched within the field, rather
               * than having the field be equal to the text. For example, `"Comment = great"`
               * returns messages with `great` in the comment field. * A number field value can be
               * written as an integer, a decimal, or an exponential. The valid relational operators
               * for number fields are the equality operator (`=`), along with the less than/greater
               * than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`)
               * operator. You can prepend the `NOT` operator to an expression to negate it. * A
               * date field value must be written in `yyyy-mm-dd` form. Fields with date and time
               * use the RFC3339 time format. Leading zeros are required for one-digit months and
               * days. The valid relational operators for date fields are the equality operator
               * (`=`) , along with the less than/greater than operators (`<`, `<=`, `>`, `>=`).
               * Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
               * operator to an expression to negate it. * Multiple field query expressions can be
               * combined in one query by adding `AND` or `OR` operators between the expressions. If
               * a boolean operator appears within a quoted string, it is not treated as special,
               * it's just another part of the character string to be matched. You can prepend the
               * `NOT` operator to an expression to negate it. The fields available for filtering
               * are: - user_id. For example, `filter=user_id=\"user123\"`. -
               * consent_content_version - metadata. For example,
               * `filter=Metadata(\"testkey\")=\"value\"` or `filter=HasMetadata(\"testkey\")`.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * Optional. Limit on the number of consent artifacts to return in a single response.
               * If not specified, 100 is used. May not be larger than 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. Limit on the number of consent artifacts to return in a single response. If not
             specified, 100 is used. May not be larger than 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. Limit on the number of consent artifacts to return in a single response.
               * If not specified, 100 is used. May not be larger than 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Optional. The next_page_token value returned from the previous List request, if
               * any.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. The next_page_token value returned from the previous List request, if any.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Optional. The next_page_token value returned from the previous List request, if
               * any.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Consents collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.Consents.List request = healthcare.consents().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Consents consents() {
            return new Consents();
          }

          /**
           * The "consents" collection of methods.
           */
          public class Consents {

            /**
             * Activates the latest revision of the specified Consent by committing a new revision with `state`
             * updated to `ACTIVE`. If the latest revision of the specified Consent is in the `ACTIVE` state, no
             * new revision is committed. A FAILED_PRECONDITION error occurs if the latest revision of the
             * specified Consent is in the `REJECTED` or `REVOKED` state.
             *
             * Create a request for the method "consents.activate".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Activate#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Consent to activate, of the form `projects/{project_id}/locations
             *        /{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id
             *        }`. An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
             * @param content the {@link com.google.api.services.healthcare.v1.model.ActivateConsentRequest}
             * @return the request
             */
            public Activate activate(java.lang.String name, com.google.api.services.healthcare.v1.model.ActivateConsentRequest content) throws java.io.IOException {
              Activate result = new Activate(name, content);
              initialize(result);
              return result;
            }

            public class Activate extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Consent> {

              private static final String REST_PATH = "v1/{+name}:activate";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");

              /**
               * Activates the latest revision of the specified Consent by committing a new revision with
               * `state` updated to `ACTIVE`. If the latest revision of the specified Consent is in the `ACTIVE`
               * state, no new revision is committed. A FAILED_PRECONDITION error occurs if the latest revision
               * of the specified Consent is in the `REJECTED` or `REVOKED` state.
               *
               * Create a request for the method "consents.activate".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Activate#execute()} method to invoke the remote operation.
               * <p> {@link
               * Activate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Consent to activate, of the form `projects/{project_id}/locations
             *        /{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id
             *        }`. An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
               * @param content the {@link com.google.api.services.healthcare.v1.model.ActivateConsentRequest}
               * @since 1.13
               */
              protected Activate(java.lang.String name, com.google.api.services.healthcare.v1.model.ActivateConsentRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Consent.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
              }

              @Override
              public Activate set$Xgafv(java.lang.String $Xgafv) {
                return (Activate) super.set$Xgafv($Xgafv);
              }

              @Override
              public Activate setAccessToken(java.lang.String accessToken) {
                return (Activate) super.setAccessToken(accessToken);
              }

              @Override
              public Activate setAlt(java.lang.String alt) {
                return (Activate) super.setAlt(alt);
              }

              @Override
              public Activate setCallback(java.lang.String callback) {
                return (Activate) super.setCallback(callback);
              }

              @Override
              public Activate setFields(java.lang.String fields) {
                return (Activate) super.setFields(fields);
              }

              @Override
              public Activate setKey(java.lang.String key) {
                return (Activate) super.setKey(key);
              }

              @Override
              public Activate setOauthToken(java.lang.String oauthToken) {
                return (Activate) super.setOauthToken(oauthToken);
              }

              @Override
              public Activate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Activate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Activate setQuotaUser(java.lang.String quotaUser) {
                return (Activate) super.setQuotaUser(quotaUser);
              }

              @Override
              public Activate setUploadType(java.lang.String uploadType) {
                return (Activate) super.setUploadType(uploadType);
              }

              @Override
              public Activate setUploadProtocol(java.lang.String uploadProtocol) {
                return (Activate) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Consent to activate, of the form `projects/{proj
               * ect_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_
               * id}/consents/{consent_id}`. An INVALID_ARGUMENT error occurs if `revision_id` is
               * specified in the name.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Consent to activate, of the form `projects/{project_id}/location
             s/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. An
             INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Consent to activate, of the form `projects/{proj
               * ect_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_
               * id}/consents/{consent_id}`. An INVALID_ARGUMENT error occurs if `revision_id` is
               * specified in the name.
               */
              public Activate setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Activate set(String parameterName, Object value) {
                return (Activate) super.set(parameterName, value);
              }
            }
            /**
             * Creates a new Consent in the parent consent store.
             *
             * Create a request for the method "consents.create".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Name of the consent store.
             * @param content the {@link com.google.api.services.healthcare.v1.model.Consent}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.healthcare.v1.model.Consent content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Consent> {

              private static final String REST_PATH = "v1/{+parent}/consents";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

              /**
               * Creates a new Consent in the parent consent store.
               *
               * Create a request for the method "consents.create".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Name of the consent store.
               * @param content the {@link com.google.api.services.healthcare.v1.model.Consent}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.healthcare.v1.model.Consent content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Consent.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Name of the consent store. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Name of the consent store.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. Name of the consent store. */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the Consent and its revisions. To keep a record of the Consent but mark it inactive, see
             * [RevokeConsent]. To delete a revision of a Consent, see [DeleteConsentRevision]. This operation
             * does not delete the related Consent artifact.
             *
             * Create a request for the method "consents.delete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Consent to delete, of the form `projects/{project_id}/locations/{
             *        location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`
             *        . An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");

              /**
               * Deletes the Consent and its revisions. To keep a record of the Consent but mark it inactive,
               * see [RevokeConsent]. To delete a revision of a Consent, see [DeleteConsentRevision]. This
               * operation does not delete the related Consent artifact.
               *
               * Create a request for the method "consents.delete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Consent to delete, of the form `projects/{project_id}/locations/{
             *        location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`
             *        . An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Consent to delete, of the form `projects/{projec
               * t_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id
               * }/consents/{consent_id}`. An INVALID_ARGUMENT error occurs if `revision_id` is
               * specified in the name.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Consent to delete, of the form `projects/{project_id}/locations/
             {location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. An
             INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Consent to delete, of the form `projects/{projec
               * t_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id
               * }/consents/{consent_id}`. An INVALID_ARGUMENT error occurs if `revision_id` is
               * specified in the name.
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the specified revision of a Consent. An INVALID_ARGUMENT error occurs if the specified
             * revision is the latest revision.
             *
             * Create a request for the method "consents.deleteRevision".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link DeleteRevision#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Consent revision to delete, of the form `projects/{project_id}/lo
             *        cations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{con
             *        sent_id}@{revision_id}`. An INVALID_ARGUMENT error occurs if `revision_id` is not
             *        specified in the name.
             * @return the request
             */
            public DeleteRevision deleteRevision(java.lang.String name) throws java.io.IOException {
              DeleteRevision result = new DeleteRevision(name);
              initialize(result);
              return result;
            }

            public class DeleteRevision extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

              private static final String REST_PATH = "v1/{+name}:deleteRevision";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");

              /**
               * Deletes the specified revision of a Consent. An INVALID_ARGUMENT error occurs if the specified
               * revision is the latest revision.
               *
               * Create a request for the method "consents.deleteRevision".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link DeleteRevision#execute()} method to invoke the remote
               * operation. <p> {@link DeleteRevision#initialize(com.google.api.client.googleapis.services.Abstr
               * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param name Required. The resource name of the Consent revision to delete, of the form `projects/{project_id}/lo
             *        cations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{con
             *        sent_id}@{revision_id}`. An INVALID_ARGUMENT error occurs if `revision_id` is not
             *        specified in the name.
               * @since 1.13
               */
              protected DeleteRevision(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
              }

              @Override
              public DeleteRevision set$Xgafv(java.lang.String $Xgafv) {
                return (DeleteRevision) super.set$Xgafv($Xgafv);
              }

              @Override
              public DeleteRevision setAccessToken(java.lang.String accessToken) {
                return (DeleteRevision) super.setAccessToken(accessToken);
              }

              @Override
              public DeleteRevision setAlt(java.lang.String alt) {
                return (DeleteRevision) super.setAlt(alt);
              }

              @Override
              public DeleteRevision setCallback(java.lang.String callback) {
                return (DeleteRevision) super.setCallback(callback);
              }

              @Override
              public DeleteRevision setFields(java.lang.String fields) {
                return (DeleteRevision) super.setFields(fields);
              }

              @Override
              public DeleteRevision setKey(java.lang.String key) {
                return (DeleteRevision) super.setKey(key);
              }

              @Override
              public DeleteRevision setOauthToken(java.lang.String oauthToken) {
                return (DeleteRevision) super.setOauthToken(oauthToken);
              }

              @Override
              public DeleteRevision setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DeleteRevision) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DeleteRevision setQuotaUser(java.lang.String quotaUser) {
                return (DeleteRevision) super.setQuotaUser(quotaUser);
              }

              @Override
              public DeleteRevision setUploadType(java.lang.String uploadType) {
                return (DeleteRevision) super.setUploadType(uploadType);
              }

              @Override
              public DeleteRevision setUploadProtocol(java.lang.String uploadProtocol) {
                return (DeleteRevision) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Consent revision to delete, of the form `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent
               * _store_id}/consents/{consent_id}@{revision_id}`. An INVALID_ARGUMENT error occurs
               * if `revision_id` is not specified in the name.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Consent revision to delete, of the form `projects/{project_id}/l
             ocations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}
             @{revision_id}`. An INVALID_ARGUMENT error occurs if `revision_id` is not specified in the name.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Consent revision to delete, of the form `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent
               * _store_id}/consents/{consent_id}@{revision_id}`. An INVALID_ARGUMENT error occurs
               * if `revision_id` is not specified in the name.
               */
              public DeleteRevision setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public DeleteRevision set(String parameterName, Object value) {
                return (DeleteRevision) super.set(parameterName, value);
              }
            }
            /**
             * Gets the specified revision of a Consent, or the latest revision if `revision_id` is not
             * specified in the resource name.
             *
             * Create a request for the method "consents.get".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Consent to retrieve, of the form `projects/{project_id}/locations
             *        /{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id
             *        }`. In order to retrieve a previous revision of the Consent, also provide the revision ID:
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consen
             *        t_store_id}/consents/{consent_id}@{revision_id}`
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Consent> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");

              /**
               * Gets the specified revision of a Consent, or the latest revision if `revision_id` is not
               * specified in the resource name.
               *
               * Create a request for the method "consents.get".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Consent to retrieve, of the form `projects/{project_id}/locations
             *        /{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id
             *        }`. In order to retrieve a previous revision of the Consent, also provide the revision ID:
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consen
             *        t_store_id}/consents/{consent_id}@{revision_id}`
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Consent.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Consent to retrieve, of the form `projects/{proj
               * ect_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_
               * id}/consents/{consent_id}`. In order to retrieve a previous revision of the
               * Consent, also provide the revision ID: `projects/{project_id}/locations/{location_i
               * d}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}@{re
               * vision_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Consent to retrieve, of the form `projects/{project_id}/location
             s/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. In
             order to retrieve a previous revision of the Consent, also provide the revision ID: `projects/{proj
             ect_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{co
             nsent_id}@{revision_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Consent to retrieve, of the form `projects/{proj
               * ect_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_
               * id}/consents/{consent_id}`. In order to retrieve a previous revision of the
               * Consent, also provide the revision ID: `projects/{project_id}/locations/{location_i
               * d}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}@{re
               * vision_id}`
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists the Consent in the given consent store, returning each Consent's latest revision.
             *
             * Create a request for the method "consents.list".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Name of the consent store to retrieve Consents from.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListConsentsResponse> {

              private static final String REST_PATH = "v1/{+parent}/consents";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

              /**
               * Lists the Consent in the given consent store, returning each Consent's latest revision.
               *
               * Create a request for the method "consents.list".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Name of the consent store to retrieve Consents from.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListConsentsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Name of the consent store to retrieve Consents from. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Name of the consent store to retrieve Consents from.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. Name of the consent store to retrieve Consents from. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. Restricts the Consents returned to those matching a filter. The following
               * syntax is available: * A string field value can be written as text inside quotation
               * marks, for example `"query text"`. The only valid relational operation for text
               * fields is equality (`=`), where text is searched within the field, rather than
               * having the field be equal to the text. For example, `"Comment = great"` returns
               * messages with `great` in the comment field. * A number field value can be written
               * as an integer, a decimal, or an exponential. The valid relational operators for
               * number fields are the equality operator (`=`), along with the less than/greater
               * than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`)
               * operator. You can prepend the `NOT` operator to an expression to negate it. * A
               * date field value must be written in `yyyy-mm-dd` form. Fields with date and time
               * use the RFC3339 time format. Leading zeros are required for one-digit months and
               * days. The valid relational operators for date fields are the equality operator
               * (`=`) , along with the less than/greater than operators (`<`, `<=`, `>`, `>=`).
               * Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
               * operator to an expression to negate it. * Multiple field query expressions can be
               * combined in one query by adding `AND` or `OR` operators between the expressions. If
               * a boolean operator appears within a quoted string, it is not treated as special,
               * it's just another part of the character string to be matched. You can prepend the
               * `NOT` operator to an expression to negate it. The fields available for filtering
               * are: - user_id. For example, `filter='user_id="user123"'`. - consent_artifact -
               * state - revision_create_time - metadata. For example,
               * `filter=Metadata(\"testkey\")=\"value\"` or `filter=HasMetadata(\"testkey\")`.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Optional. Restricts the Consents returned to those matching a filter. The following syntax is
             available: * A string field value can be written as text inside quotation marks, for example
             `"query text"`. The only valid relational operation for text fields is equality (`=`), where text
             is searched within the field, rather than having the field be equal to the text. For example,
             `"Comment = great"` returns messages with `great` in the comment field. * A number field value can
             be written as an integer, a decimal, or an exponential. The valid relational operators for number
             fields are the equality operator (`=`), along with the less than/greater than operators (`<`, `<=`,
             `>`, `>=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT` operator to
             an expression to negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields with
             date and time use the RFC3339 time format. Leading zeros are required for one-digit months and
             days. The valid relational operators for date fields are the equality operator (`=`) , along with
             the less than/greater than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality
             (`!=`) operator. You can prepend the `NOT` operator to an expression to negate it. * Multiple field
             query expressions can be combined in one query by adding `AND` or `OR` operators between the
             expressions. If a boolean operator appears within a quoted string, it is not treated as special,
             it's just another part of the character string to be matched. You can prepend the `NOT` operator to
             an expression to negate it. The fields available for filtering are: - user_id. For example,
             `filter='user_id="user123"'`. - consent_artifact - state - revision_create_time - metadata. For
             example, `filter=Metadata(\"testkey\")=\"value\"` or `filter=HasMetadata(\"testkey\")`.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Optional. Restricts the Consents returned to those matching a filter. The following
               * syntax is available: * A string field value can be written as text inside quotation
               * marks, for example `"query text"`. The only valid relational operation for text
               * fields is equality (`=`), where text is searched within the field, rather than
               * having the field be equal to the text. For example, `"Comment = great"` returns
               * messages with `great` in the comment field. * A number field value can be written
               * as an integer, a decimal, or an exponential. The valid relational operators for
               * number fields are the equality operator (`=`), along with the less than/greater
               * than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`)
               * operator. You can prepend the `NOT` operator to an expression to negate it. * A
               * date field value must be written in `yyyy-mm-dd` form. Fields with date and time
               * use the RFC3339 time format. Leading zeros are required for one-digit months and
               * days. The valid relational operators for date fields are the equality operator
               * (`=`) , along with the less than/greater than operators (`<`, `<=`, `>`, `>=`).
               * Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
               * operator to an expression to negate it. * Multiple field query expressions can be
               * combined in one query by adding `AND` or `OR` operators between the expressions. If
               * a boolean operator appears within a quoted string, it is not treated as special,
               * it's just another part of the character string to be matched. You can prepend the
               * `NOT` operator to an expression to negate it. The fields available for filtering
               * are: - user_id. For example, `filter='user_id="user123"'`. - consent_artifact -
               * state - revision_create_time - metadata. For example,
               * `filter=Metadata(\"testkey\")=\"value\"` or `filter=HasMetadata(\"testkey\")`.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * Optional. Limit on the number of Consents to return in a single response. If not
               * specified, 100 is used. May not be larger than 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. Limit on the number of Consents to return in a single response. If not specified, 100 is
             used. May not be larger than 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. Limit on the number of Consents to return in a single response. If not
               * specified, 100 is used. May not be larger than 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Optional. The next_page_token value returned from the previous List request, if
               * any.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. The next_page_token value returned from the previous List request, if any.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Optional. The next_page_token value returned from the previous List request, if
               * any.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Lists the revisions of the specified Consent in reverse chronological order.
             *
             * Create a request for the method "consents.listRevisions".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link ListRevisions#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Consent to retrieve revisions for.
             * @return the request
             */
            public ListRevisions listRevisions(java.lang.String name) throws java.io.IOException {
              ListRevisions result = new ListRevisions(name);
              initialize(result);
              return result;
            }

            public class ListRevisions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListConsentRevisionsResponse> {

              private static final String REST_PATH = "v1/{+name}:listRevisions";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");

              /**
               * Lists the revisions of the specified Consent in reverse chronological order.
               *
               * Create a request for the method "consents.listRevisions".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link ListRevisions#execute()} method to invoke the remote
               * operation. <p> {@link ListRevisions#initialize(com.google.api.client.googleapis.services.Abstra
               * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param name Required. The resource name of the Consent to retrieve revisions for.
               * @since 1.13
               */
              protected ListRevisions(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListConsentRevisionsResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public ListRevisions set$Xgafv(java.lang.String $Xgafv) {
                return (ListRevisions) super.set$Xgafv($Xgafv);
              }

              @Override
              public ListRevisions setAccessToken(java.lang.String accessToken) {
                return (ListRevisions) super.setAccessToken(accessToken);
              }

              @Override
              public ListRevisions setAlt(java.lang.String alt) {
                return (ListRevisions) super.setAlt(alt);
              }

              @Override
              public ListRevisions setCallback(java.lang.String callback) {
                return (ListRevisions) super.setCallback(callback);
              }

              @Override
              public ListRevisions setFields(java.lang.String fields) {
                return (ListRevisions) super.setFields(fields);
              }

              @Override
              public ListRevisions setKey(java.lang.String key) {
                return (ListRevisions) super.setKey(key);
              }

              @Override
              public ListRevisions setOauthToken(java.lang.String oauthToken) {
                return (ListRevisions) super.setOauthToken(oauthToken);
              }

              @Override
              public ListRevisions setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ListRevisions) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ListRevisions setQuotaUser(java.lang.String quotaUser) {
                return (ListRevisions) super.setQuotaUser(quotaUser);
              }

              @Override
              public ListRevisions setUploadType(java.lang.String uploadType) {
                return (ListRevisions) super.setUploadType(uploadType);
              }

              @Override
              public ListRevisions setUploadProtocol(java.lang.String uploadProtocol) {
                return (ListRevisions) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The resource name of the Consent to retrieve revisions for. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Consent to retrieve revisions for.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The resource name of the Consent to retrieve revisions for. */
              public ListRevisions setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Optional. Restricts the revisions returned to those matching a filter. The
               * following syntax is available: * A string field value can be written as text inside
               * quotation marks, for example `"query text"`. The only valid relational operation
               * for text fields is equality (`=`), where text is searched within the field, rather
               * than having the field be equal to the text. For example, `"Comment = great"`
               * returns messages with `great` in the comment field. * A number field value can be
               * written as an integer, a decimal, or an exponential. The valid relational operators
               * for number fields are the equality operator (`=`), along with the less than/greater
               * than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`)
               * operator. You can prepend the `NOT` operator to an expression to negate it. * A
               * date field value must be written in `yyyy-mm-dd` form. Fields with date and time
               * use the RFC3339 time format. Leading zeros are required for one-digit months and
               * days. The valid relational operators for date fields are the equality operator
               * (`=`) , along with the less than/greater than operators (`<`, `<=`, `>`, `>=`).
               * Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
               * operator to an expression to negate it. * Multiple field query expressions can be
               * combined in one query by adding `AND` or `OR` operators between the expressions. If
               * a boolean operator appears within a quoted string, it is not treated as special,
               * it's just another part of the character string to be matched. You can prepend the
               * `NOT` operator to an expression to negate it. Fields available for filtering are: -
               * user_id. For example, `filter='user_id="user123"'`. - consent_artifact - state -
               * revision_create_time - metadata. For example,
               * `filter=Metadata(\"testkey\")=\"value\"` or `filter=HasMetadata(\"testkey\")`.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Optional. Restricts the revisions returned to those matching a filter. The following syntax is
             available: * A string field value can be written as text inside quotation marks, for example
             `"query text"`. The only valid relational operation for text fields is equality (`=`), where text
             is searched within the field, rather than having the field be equal to the text. For example,
             `"Comment = great"` returns messages with `great` in the comment field. * A number field value can
             be written as an integer, a decimal, or an exponential. The valid relational operators for number
             fields are the equality operator (`=`), along with the less than/greater than operators (`<`, `<=`,
             `>`, `>=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT` operator to
             an expression to negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields with
             date and time use the RFC3339 time format. Leading zeros are required for one-digit months and
             days. The valid relational operators for date fields are the equality operator (`=`) , along with
             the less than/greater than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality
             (`!=`) operator. You can prepend the `NOT` operator to an expression to negate it. * Multiple field
             query expressions can be combined in one query by adding `AND` or `OR` operators between the
             expressions. If a boolean operator appears within a quoted string, it is not treated as special,
             it's just another part of the character string to be matched. You can prepend the `NOT` operator to
             an expression to negate it. Fields available for filtering are: - user_id. For example,
             `filter='user_id="user123"'`. - consent_artifact - state - revision_create_time - metadata. For
             example, `filter=Metadata(\"testkey\")=\"value\"` or `filter=HasMetadata(\"testkey\")`.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Optional. Restricts the revisions returned to those matching a filter. The
               * following syntax is available: * A string field value can be written as text inside
               * quotation marks, for example `"query text"`. The only valid relational operation
               * for text fields is equality (`=`), where text is searched within the field, rather
               * than having the field be equal to the text. For example, `"Comment = great"`
               * returns messages with `great` in the comment field. * A number field value can be
               * written as an integer, a decimal, or an exponential. The valid relational operators
               * for number fields are the equality operator (`=`), along with the less than/greater
               * than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`)
               * operator. You can prepend the `NOT` operator to an expression to negate it. * A
               * date field value must be written in `yyyy-mm-dd` form. Fields with date and time
               * use the RFC3339 time format. Leading zeros are required for one-digit months and
               * days. The valid relational operators for date fields are the equality operator
               * (`=`) , along with the less than/greater than operators (`<`, `<=`, `>`, `>=`).
               * Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
               * operator to an expression to negate it. * Multiple field query expressions can be
               * combined in one query by adding `AND` or `OR` operators between the expressions. If
               * a boolean operator appears within a quoted string, it is not treated as special,
               * it's just another part of the character string to be matched. You can prepend the
               * `NOT` operator to an expression to negate it. Fields available for filtering are: -
               * user_id. For example, `filter='user_id="user123"'`. - consent_artifact - state -
               * revision_create_time - metadata. For example,
               * `filter=Metadata(\"testkey\")=\"value\"` or `filter=HasMetadata(\"testkey\")`.
               */
              public ListRevisions setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * Optional. Limit on the number of revisions to return in a single response. If not
               * specified, 100 is used. May not be larger than 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. Limit on the number of revisions to return in a single response. If not specified, 100 is
             used. May not be larger than 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. Limit on the number of revisions to return in a single response. If not
               * specified, 100 is used. May not be larger than 1000.
               */
              public ListRevisions setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Optional. Token to retrieve the next page of results or empty if there are no more
               * results in the list.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. Token to retrieve the next page of results or empty if there are no more results in the
             list.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Optional. Token to retrieve the next page of results or empty if there are no more
               * results in the list.
               */
              public ListRevisions setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public ListRevisions set(String parameterName, Object value) {
                return (ListRevisions) super.set(parameterName, value);
              }
            }
            /**
             * Updates the latest revision of the specified Consent by committing a new revision with the
             * changes. A FAILED_PRECONDITION error occurs if the latest revision of the specified Consent is in
             * the `REJECTED` or `REVOKED` state.
             *
             * Create a request for the method "consents.patch".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Identifier. Resource name of the Consent, of the form `projects/{project_id}/locations/{location_id}
             *        /datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. Cannot be
             *        changed after creation.
             * @param content the {@link com.google.api.services.healthcare.v1.model.Consent}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1.model.Consent content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Consent> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");

              /**
               * Updates the latest revision of the specified Consent by committing a new revision with the
               * changes. A FAILED_PRECONDITION error occurs if the latest revision of the specified Consent is
               * in the `REJECTED` or `REVOKED` state.
               *
               * Create a request for the method "consents.patch".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Identifier. Resource name of the Consent, of the form `projects/{project_id}/locations/{location_id}
             *        /datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. Cannot be
             *        changed after creation.
               * @param content the {@link com.google.api.services.healthcare.v1.model.Consent}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.healthcare.v1.model.Consent content) {
                super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1.model.Consent.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Identifier. Resource name of the Consent, of the form `projects/{project_id}/locati
               * ons/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{
               * consent_id}`. Cannot be changed after creation.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Identifier. Resource name of the Consent, of the form `projects/{project_id}/locations/{location_id
             }/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. Cannot be changed
             after creation.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Identifier. Resource name of the Consent, of the form `projects/{project_id}/locati
               * ons/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{
               * consent_id}`. Cannot be changed after creation.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Required. The update mask to apply to the resource. For the `FieldMask` definition,
               * see https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask. Only the `user_id`, `policies`,
               * `consent_artifact`, and `metadata` fields can be updated.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Required. The update mask to apply to the resource. For the `FieldMask` definition, see
             https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask. Only the
             `user_id`, `policies`, `consent_artifact`, and `metadata` fields can be updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Required. The update mask to apply to the resource. For the `FieldMask` definition,
               * see https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask. Only the `user_id`, `policies`,
               * `consent_artifact`, and `metadata` fields can be updated.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }
            /**
             * Rejects the latest revision of the specified Consent by committing a new revision with `state`
             * updated to `REJECTED`. If the latest revision of the specified Consent is in the `REJECTED`
             * state, no new revision is committed. A FAILED_PRECONDITION error occurs if the latest revision of
             * the specified Consent is in the `ACTIVE` or `REVOKED` state.
             *
             * Create a request for the method "consents.reject".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Reject#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Consent to reject, of the form `projects/{project_id}/locations/{
             *        location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`
             *        . An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
             * @param content the {@link com.google.api.services.healthcare.v1.model.RejectConsentRequest}
             * @return the request
             */
            public Reject reject(java.lang.String name, com.google.api.services.healthcare.v1.model.RejectConsentRequest content) throws java.io.IOException {
              Reject result = new Reject(name, content);
              initialize(result);
              return result;
            }

            public class Reject extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Consent> {

              private static final String REST_PATH = "v1/{+name}:reject";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");

              /**
               * Rejects the latest revision of the specified Consent by committing a new revision with `state`
               * updated to `REJECTED`. If the latest revision of the specified Consent is in the `REJECTED`
               * state, no new revision is committed. A FAILED_PRECONDITION error occurs if the latest revision
               * of the specified Consent is in the `ACTIVE` or `REVOKED` state.
               *
               * Create a request for the method "consents.reject".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Reject#execute()} method to invoke the remote operation.
               * <p> {@link
               * Reject#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Consent to reject, of the form `projects/{project_id}/locations/{
             *        location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`
             *        . An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
               * @param content the {@link com.google.api.services.healthcare.v1.model.RejectConsentRequest}
               * @since 1.13
               */
              protected Reject(java.lang.String name, com.google.api.services.healthcare.v1.model.RejectConsentRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Consent.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
              }

              @Override
              public Reject set$Xgafv(java.lang.String $Xgafv) {
                return (Reject) super.set$Xgafv($Xgafv);
              }

              @Override
              public Reject setAccessToken(java.lang.String accessToken) {
                return (Reject) super.setAccessToken(accessToken);
              }

              @Override
              public Reject setAlt(java.lang.String alt) {
                return (Reject) super.setAlt(alt);
              }

              @Override
              public Reject setCallback(java.lang.String callback) {
                return (Reject) super.setCallback(callback);
              }

              @Override
              public Reject setFields(java.lang.String fields) {
                return (Reject) super.setFields(fields);
              }

              @Override
              public Reject setKey(java.lang.String key) {
                return (Reject) super.setKey(key);
              }

              @Override
              public Reject setOauthToken(java.lang.String oauthToken) {
                return (Reject) super.setOauthToken(oauthToken);
              }

              @Override
              public Reject setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Reject) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Reject setQuotaUser(java.lang.String quotaUser) {
                return (Reject) super.setQuotaUser(quotaUser);
              }

              @Override
              public Reject setUploadType(java.lang.String uploadType) {
                return (Reject) super.setUploadType(uploadType);
              }

              @Override
              public Reject setUploadProtocol(java.lang.String uploadProtocol) {
                return (Reject) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Consent to reject, of the form `projects/{projec
               * t_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id
               * }/consents/{consent_id}`. An INVALID_ARGUMENT error occurs if `revision_id` is
               * specified in the name.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Consent to reject, of the form `projects/{project_id}/locations/
             {location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. An
             INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Consent to reject, of the form `projects/{projec
               * t_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id
               * }/consents/{consent_id}`. An INVALID_ARGUMENT error occurs if `revision_id` is
               * specified in the name.
               */
              public Reject setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Reject set(String parameterName, Object value) {
                return (Reject) super.set(parameterName, value);
              }
            }
            /**
             * Revokes the latest revision of the specified Consent by committing a new revision with `state`
             * updated to `REVOKED`. If the latest revision of the specified Consent is in the `REVOKED` state,
             * no new revision is committed. A FAILED_PRECONDITION error occurs if the latest revision of the
             * given consent is in `DRAFT` or `REJECTED` state.
             *
             * Create a request for the method "consents.revoke".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Revoke#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the Consent to revoke, of the form `projects/{project_id}/locations/{
             *        location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`
             *        . An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
             * @param content the {@link com.google.api.services.healthcare.v1.model.RevokeConsentRequest}
             * @return the request
             */
            public Revoke revoke(java.lang.String name, com.google.api.services.healthcare.v1.model.RevokeConsentRequest content) throws java.io.IOException {
              Revoke result = new Revoke(name, content);
              initialize(result);
              return result;
            }

            public class Revoke extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Consent> {

              private static final String REST_PATH = "v1/{+name}:revoke";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");

              /**
               * Revokes the latest revision of the specified Consent by committing a new revision with `state`
               * updated to `REVOKED`. If the latest revision of the specified Consent is in the `REVOKED`
               * state, no new revision is committed. A FAILED_PRECONDITION error occurs if the latest revision
               * of the given consent is in `DRAFT` or `REJECTED` state.
               *
               * Create a request for the method "consents.revoke".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Revoke#execute()} method to invoke the remote operation.
               * <p> {@link
               * Revoke#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the Consent to revoke, of the form `projects/{project_id}/locations/{
             *        location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`
             *        . An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
               * @param content the {@link com.google.api.services.healthcare.v1.model.RevokeConsentRequest}
               * @since 1.13
               */
              protected Revoke(java.lang.String name, com.google.api.services.healthcare.v1.model.RevokeConsentRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Consent.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
              }

              @Override
              public Revoke set$Xgafv(java.lang.String $Xgafv) {
                return (Revoke) super.set$Xgafv($Xgafv);
              }

              @Override
              public Revoke setAccessToken(java.lang.String accessToken) {
                return (Revoke) super.setAccessToken(accessToken);
              }

              @Override
              public Revoke setAlt(java.lang.String alt) {
                return (Revoke) super.setAlt(alt);
              }

              @Override
              public Revoke setCallback(java.lang.String callback) {
                return (Revoke) super.setCallback(callback);
              }

              @Override
              public Revoke setFields(java.lang.String fields) {
                return (Revoke) super.setFields(fields);
              }

              @Override
              public Revoke setKey(java.lang.String key) {
                return (Revoke) super.setKey(key);
              }

              @Override
              public Revoke setOauthToken(java.lang.String oauthToken) {
                return (Revoke) super.setOauthToken(oauthToken);
              }

              @Override
              public Revoke setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Revoke) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Revoke setQuotaUser(java.lang.String quotaUser) {
                return (Revoke) super.setQuotaUser(quotaUser);
              }

              @Override
              public Revoke setUploadType(java.lang.String uploadType) {
                return (Revoke) super.setUploadType(uploadType);
              }

              @Override
              public Revoke setUploadProtocol(java.lang.String uploadProtocol) {
                return (Revoke) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the Consent to revoke, of the form `projects/{projec
               * t_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id
               * }/consents/{consent_id}`. An INVALID_ARGUMENT error occurs if `revision_id` is
               * specified in the name.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the Consent to revoke, of the form `projects/{project_id}/locations/
             {location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. An
             INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The resource name of the Consent to revoke, of the form `projects/{projec
               * t_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id
               * }/consents/{consent_id}`. An INVALID_ARGUMENT error occurs if `revision_id` is
               * specified in the name.
               */
              public Revoke setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Revoke set(String parameterName, Object value) {
                return (Revoke) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the UserDataMappings collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.UserDataMappings.List request = healthcare.userDataMappings().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public UserDataMappings userDataMappings() {
            return new UserDataMappings();
          }

          /**
           * The "userDataMappings" collection of methods.
           */
          public class UserDataMappings {

            /**
             * Archives the specified User data mapping.
             *
             * Create a request for the method "userDataMappings.archive".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Archive#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the User data mapping to archive.
             * @param content the {@link com.google.api.services.healthcare.v1.model.ArchiveUserDataMappingRequest}
             * @return the request
             */
            public Archive archive(java.lang.String name, com.google.api.services.healthcare.v1.model.ArchiveUserDataMappingRequest content) throws java.io.IOException {
              Archive result = new Archive(name, content);
              initialize(result);
              return result;
            }

            public class Archive extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ArchiveUserDataMappingResponse> {

              private static final String REST_PATH = "v1/{+name}:archive";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");

              /**
               * Archives the specified User data mapping.
               *
               * Create a request for the method "userDataMappings.archive".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Archive#execute()} method to invoke the remote operation.
               * <p> {@link
               * Archive#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the User data mapping to archive.
               * @param content the {@link com.google.api.services.healthcare.v1.model.ArchiveUserDataMappingRequest}
               * @since 1.13
               */
              protected Archive(java.lang.String name, com.google.api.services.healthcare.v1.model.ArchiveUserDataMappingRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.ArchiveUserDataMappingResponse.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");
                }
              }

              @Override
              public Archive set$Xgafv(java.lang.String $Xgafv) {
                return (Archive) super.set$Xgafv($Xgafv);
              }

              @Override
              public Archive setAccessToken(java.lang.String accessToken) {
                return (Archive) super.setAccessToken(accessToken);
              }

              @Override
              public Archive setAlt(java.lang.String alt) {
                return (Archive) super.setAlt(alt);
              }

              @Override
              public Archive setCallback(java.lang.String callback) {
                return (Archive) super.setCallback(callback);
              }

              @Override
              public Archive setFields(java.lang.String fields) {
                return (Archive) super.setFields(fields);
              }

              @Override
              public Archive setKey(java.lang.String key) {
                return (Archive) super.setKey(key);
              }

              @Override
              public Archive setOauthToken(java.lang.String oauthToken) {
                return (Archive) super.setOauthToken(oauthToken);
              }

              @Override
              public Archive setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Archive) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Archive setQuotaUser(java.lang.String quotaUser) {
                return (Archive) super.setQuotaUser(quotaUser);
              }

              @Override
              public Archive setUploadType(java.lang.String uploadType) {
                return (Archive) super.setUploadType(uploadType);
              }

              @Override
              public Archive setUploadProtocol(java.lang.String uploadProtocol) {
                return (Archive) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The resource name of the User data mapping to archive. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the User data mapping to archive.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The resource name of the User data mapping to archive. */
              public Archive setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Archive set(String parameterName, Object value) {
                return (Archive) super.set(parameterName, value);
              }
            }
            /**
             * Creates a new User data mapping in the parent consent store.
             *
             * Create a request for the method "userDataMappings.create".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Name of the consent store.
             * @param content the {@link com.google.api.services.healthcare.v1.model.UserDataMapping}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.healthcare.v1.model.UserDataMapping content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.UserDataMapping> {

              private static final String REST_PATH = "v1/{+parent}/userDataMappings";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

              /**
               * Creates a new User data mapping in the parent consent store.
               *
               * Create a request for the method "userDataMappings.create".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Name of the consent store.
               * @param content the {@link com.google.api.services.healthcare.v1.model.UserDataMapping}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.healthcare.v1.model.UserDataMapping content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.UserDataMapping.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Name of the consent store. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Name of the consent store.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. Name of the consent store. */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the specified User data mapping.
             *
             * Create a request for the method "userDataMappings.delete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the User data mapping to delete.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");

              /**
               * Deletes the specified User data mapping.
               *
               * Create a request for the method "userDataMappings.delete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the User data mapping to delete.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The resource name of the User data mapping to delete. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the User data mapping to delete.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The resource name of the User data mapping to delete. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets the specified User data mapping.
             *
             * Create a request for the method "userDataMappings.get".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the User data mapping to retrieve.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.UserDataMapping> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");

              /**
               * Gets the specified User data mapping.
               *
               * Create a request for the method "userDataMappings.get".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the User data mapping to retrieve.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.UserDataMapping.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The resource name of the User data mapping to retrieve. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the User data mapping to retrieve.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The resource name of the User data mapping to retrieve. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists the User data mappings in the specified consent store.
             *
             * Create a request for the method "userDataMappings.list".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Name of the consent store to retrieve User data mappings from.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListUserDataMappingsResponse> {

              private static final String REST_PATH = "v1/{+parent}/userDataMappings";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");

              /**
               * Lists the User data mappings in the specified consent store.
               *
               * Create a request for the method "userDataMappings.list".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Name of the consent store to retrieve User data mappings from.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListUserDataMappingsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Name of the consent store to retrieve User data mappings from. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Name of the consent store to retrieve User data mappings from.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. Name of the consent store to retrieve User data mappings from. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. Restricts the User data mappings returned to those matching a filter. The
               * following syntax is available: * A string field value can be written as text inside
               * quotation marks, for example `"query text"`. The only valid relational operation
               * for text fields is equality (`=`), where text is searched within the field, rather
               * than having the field be equal to the text. For example, `"Comment = great"`
               * returns messages with `great` in the comment field. * A number field value can be
               * written as an integer, a decimal, or an exponential. The valid relational operators
               * for number fields are the equality operator (`=`), along with the less than/greater
               * than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`)
               * operator. You can prepend the `NOT` operator to an expression to negate it. * A
               * date field value must be written in `yyyy-mm-dd` form. Fields with date and time
               * use the RFC3339 time format. Leading zeros are required for one-digit months and
               * days. The valid relational operators for date fields are the equality operator
               * (`=`) , along with the less than/greater than operators (`<`, `<=`, `>`, `>=`).
               * Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
               * operator to an expression to negate it. * Multiple field query expressions can be
               * combined in one query by adding `AND` or `OR` operators between the expressions. If
               * a boolean operator appears within a quoted string, it is not treated as special,
               * it's just another part of the character string to be matched. You can prepend the
               * `NOT` operator to an expression to negate it. The fields available for filtering
               * are: - data_id - user_id. For example, `filter=user_id=\"user123\"`. - archived -
               * archive_time
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Optional. Restricts the User data mappings returned to those matching a filter. The following
             syntax is available: * A string field value can be written as text inside quotation marks, for
             example `"query text"`. The only valid relational operation for text fields is equality (`=`),
             where text is searched within the field, rather than having the field be equal to the text. For
             example, `"Comment = great"` returns messages with `great` in the comment field. * A number field
             value can be written as an integer, a decimal, or an exponential. The valid relational operators
             for number fields are the equality operator (`=`), along with the less than/greater than operators
             (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
             operator to an expression to negate it. * A date field value must be written in `yyyy-mm-dd` form.
             Fields with date and time use the RFC3339 time format. Leading zeros are required for one-digit
             months and days. The valid relational operators for date fields are the equality operator (`=`) ,
             along with the less than/greater than operators (`<`, `<=`, `>`, `>=`). Note that there is no
             inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to negate it. *
             Multiple field query expressions can be combined in one query by adding `AND` or `OR` operators
             between the expressions. If a boolean operator appears within a quoted string, it is not treated as
             special, it's just another part of the character string to be matched. You can prepend the `NOT`
             operator to an expression to negate it. The fields available for filtering are: - data_id -
             user_id. For example, `filter=user_id=\"user123\"`. - archived - archive_time
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Optional. Restricts the User data mappings returned to those matching a filter. The
               * following syntax is available: * A string field value can be written as text inside
               * quotation marks, for example `"query text"`. The only valid relational operation
               * for text fields is equality (`=`), where text is searched within the field, rather
               * than having the field be equal to the text. For example, `"Comment = great"`
               * returns messages with `great` in the comment field. * A number field value can be
               * written as an integer, a decimal, or an exponential. The valid relational operators
               * for number fields are the equality operator (`=`), along with the less than/greater
               * than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`)
               * operator. You can prepend the `NOT` operator to an expression to negate it. * A
               * date field value must be written in `yyyy-mm-dd` form. Fields with date and time
               * use the RFC3339 time format. Leading zeros are required for one-digit months and
               * days. The valid relational operators for date fields are the equality operator
               * (`=`) , along with the less than/greater than operators (`<`, `<=`, `>`, `>=`).
               * Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
               * operator to an expression to negate it. * Multiple field query expressions can be
               * combined in one query by adding `AND` or `OR` operators between the expressions. If
               * a boolean operator appears within a quoted string, it is not treated as special,
               * it's just another part of the character string to be matched. You can prepend the
               * `NOT` operator to an expression to negate it. The fields available for filtering
               * are: - data_id - user_id. For example, `filter=user_id=\"user123\"`. - archived -
               * archive_time
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * Optional. Limit on the number of User data mappings to return in a single response.
               * If not specified, 100 is used. May not be larger than 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Optional. Limit on the number of User data mappings to return in a single response. If not
             specified, 100 is used. May not be larger than 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Optional. Limit on the number of User data mappings to return in a single response.
               * If not specified, 100 is used. May not be larger than 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Optional. Token to retrieve the next page of results, or empty to get the first
               * page.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Optional. Token to retrieve the next page of results, or empty to get the first page.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Optional. Token to retrieve the next page of results, or empty to get the first
               * page.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates the specified User data mapping.
             *
             * Create a request for the method "userDataMappings.patch".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Resource name of the User data mapping, of the form `projects/{project_id}/locations/{location_id}/d
             *        atasets/{dataset_id}/consentStores/{consent_store_id}/userDataMappings/{user_data_mapping_
             *        id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.UserDataMapping}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1.model.UserDataMapping content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.UserDataMapping> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");

              /**
               * Updates the specified User data mapping.
               *
               * Create a request for the method "userDataMappings.patch".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Resource name of the User data mapping, of the form `projects/{project_id}/locations/{location_id}/d
             *        atasets/{dataset_id}/consentStores/{consent_store_id}/userDataMappings/{user_data_mapping_
             *        id}`.
               * @param content the {@link com.google.api.services.healthcare.v1.model.UserDataMapping}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.healthcare.v1.model.UserDataMapping content) {
                super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1.model.UserDataMapping.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Resource name of the User data mapping, of the form `projects/{project_id}/location
               * s/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/userDataMapp
               * ings/{user_data_mapping_id}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Resource name of the User data mapping, of the form `projects/{project_id}/locations/{location_id}/
             datasets/{dataset_id}/consentStores/{consent_store_id}/userDataMappings/{user_data_mapping_id}`.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Resource name of the User data mapping, of the form `projects/{project_id}/location
               * s/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/userDataMapp
               * ings/{user_data_mapping_id}`.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Required. The update mask that applies to the resource. For the `FieldMask`
               * definition, see https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask. Only the `data_id`, `user_id` and
               * `resource_attributes` fields can be updated.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Required. The update mask that applies to the resource. For the `FieldMask` definition, see
             https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask. Only the
             `data_id`, `user_id` and `resource_attributes` fields can be updated.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Required. The update mask that applies to the resource. For the `FieldMask`
               * definition, see https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask. Only the `data_id`, `user_id` and
               * `resource_attributes` fields can be updated.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the DataMapperWorkspaces collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.DataMapperWorkspaces.List request = healthcare.dataMapperWorkspaces().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public DataMapperWorkspaces dataMapperWorkspaces() {
          return new DataMapperWorkspaces();
        }

        /**
         * The "dataMapperWorkspaces" collection of methods.
         */
        public class DataMapperWorkspaces {

          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "dataMapperWorkspaces.getIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "dataMapperWorkspaces.getIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "dataMapperWorkspaces.setIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "dataMapperWorkspaces.setIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "dataMapperWorkspaces.testIamPermissions".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "dataMapperWorkspaces.testIamPermissions".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the DicomStores collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.DicomStores.List request = healthcare.dicomStores().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public DicomStores dicomStores() {
          return new DicomStores();
        }

        /**
         * The "dicomStores" collection of methods.
         */
        public class DicomStores {

          /**
           * Creates a new DICOM store within the parent dataset.
           *
           * Create a request for the method "dicomStores.create".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the dataset this DICOM store belongs to.
           * @param content the {@link com.google.api.services.healthcare.v1.model.DicomStore}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.healthcare.v1.model.DicomStore content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.DicomStore> {

            private static final String REST_PATH = "v1/{+parent}/dicomStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Creates a new DICOM store within the parent dataset.
             *
             * Create a request for the method "dicomStores.create".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the dataset this DICOM store belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1.model.DicomStore}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.healthcare.v1.model.DicomStore content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.DicomStore.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the dataset this DICOM store belongs to. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the dataset this DICOM store belongs to.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The name of the dataset this DICOM store belongs to. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID of the DICOM store that is being created. Any string value up to 256
             * characters in length.
             */
            @com.google.api.client.util.Key
            private java.lang.String dicomStoreId;

            /** Required. The ID of the DICOM store that is being created. Any string value up to 256 characters in
           length.
             */
            public java.lang.String getDicomStoreId() {
              return dicomStoreId;
            }

            /**
             * Required. The ID of the DICOM store that is being created. Any string value up to 256
             * characters in length.
             */
            public Create setDicomStoreId(java.lang.String dicomStoreId) {
              this.dicomStoreId = dicomStoreId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * De-identifies data from the source store and writes it to the destination store. The metadata
           * field type is OperationMetadata. If the request is successful, the response field type is
           * DeidentifyDicomStoreSummary. If errors occur, error is set. The LRO result may still be
           * successful if de-identification fails for some DICOM instances. The output DICOM store will not
           * contain these failed resources. Failed resource totals are tracked in Operation.metadata. Error
           * details are also logged to Cloud Logging (see [Viewing error logs in Cloud
           * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
           *
           * Create a request for the method "dicomStores.deidentify".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Deidentify#execute()} method to invoke the remote operation.
           *
           * @param sourceStore Required. Source DICOM store resource name. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.DeidentifyDicomStoreRequest}
           * @return the request
           */
          public Deidentify deidentify(java.lang.String sourceStore, com.google.api.services.healthcare.v1.model.DeidentifyDicomStoreRequest content) throws java.io.IOException {
            Deidentify result = new Deidentify(sourceStore, content);
            initialize(result);
            return result;
          }

          public class Deidentify extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+sourceStore}:deidentify";

            private final java.util.regex.Pattern SOURCE_STORE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * De-identifies data from the source store and writes it to the destination store. The metadata
             * field type is OperationMetadata. If the request is successful, the response field type is
             * DeidentifyDicomStoreSummary. If errors occur, error is set. The LRO result may still be
             * successful if de-identification fails for some DICOM instances. The output DICOM store will not
             * contain these failed resources. Failed resource totals are tracked in Operation.metadata. Error
             * details are also logged to Cloud Logging (see [Viewing error logs in Cloud
             * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
             *
             * Create a request for the method "dicomStores.deidentify".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Deidentify#execute()} method to invoke the remote
             * operation. <p> {@link
             * Deidentify#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param sourceStore Required. Source DICOM store resource name. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.DeidentifyDicomStoreRequest}
             * @since 1.13
             */
            protected Deidentify(java.lang.String sourceStore, com.google.api.services.healthcare.v1.model.DeidentifyDicomStoreRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.sourceStore = com.google.api.client.util.Preconditions.checkNotNull(sourceStore, "Required parameter sourceStore must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SOURCE_STORE_PATTERN.matcher(sourceStore).matches(),
                    "Parameter sourceStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public Deidentify set$Xgafv(java.lang.String $Xgafv) {
              return (Deidentify) super.set$Xgafv($Xgafv);
            }

            @Override
            public Deidentify setAccessToken(java.lang.String accessToken) {
              return (Deidentify) super.setAccessToken(accessToken);
            }

            @Override
            public Deidentify setAlt(java.lang.String alt) {
              return (Deidentify) super.setAlt(alt);
            }

            @Override
            public Deidentify setCallback(java.lang.String callback) {
              return (Deidentify) super.setCallback(callback);
            }

            @Override
            public Deidentify setFields(java.lang.String fields) {
              return (Deidentify) super.setFields(fields);
            }

            @Override
            public Deidentify setKey(java.lang.String key) {
              return (Deidentify) super.setKey(key);
            }

            @Override
            public Deidentify setOauthToken(java.lang.String oauthToken) {
              return (Deidentify) super.setOauthToken(oauthToken);
            }

            @Override
            public Deidentify setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Deidentify) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Deidentify setQuotaUser(java.lang.String quotaUser) {
              return (Deidentify) super.setQuotaUser(quotaUser);
            }

            @Override
            public Deidentify setUploadType(java.lang.String uploadType) {
              return (Deidentify) super.setUploadType(uploadType);
            }

            @Override
            public Deidentify setUploadProtocol(java.lang.String uploadProtocol) {
              return (Deidentify) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Source DICOM store resource name. For example, `projects/{project_id}/locat
             * ions/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String sourceStore;

            /** Required. Source DICOM store resource name. For example,
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public java.lang.String getSourceStore() {
              return sourceStore;
            }

            /**
             * Required. Source DICOM store resource name. For example, `projects/{project_id}/locat
             * ions/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public Deidentify setSourceStore(java.lang.String sourceStore) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SOURCE_STORE_PATTERN.matcher(sourceStore).matches(),
                    "Parameter sourceStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.sourceStore = sourceStore;
              return this;
            }

            @Override
            public Deidentify set(String parameterName, Object value) {
              return (Deidentify) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified DICOM store and removes all images that are contained within it.
           *
           * Create a request for the method "dicomStores.delete".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the DICOM store to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Deletes the specified DICOM store and removes all images that are contained within it.
             *
             * Create a request for the method "dicomStores.delete".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the DICOM store to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The resource name of the DICOM store to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the DICOM store to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The resource name of the DICOM store to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Exports data to the specified destination by copying it from the DICOM store. Errors are also
           * logged to Cloud Logging. For more information, see [Viewing error logs in Cloud
           * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging). The metadata field type is
           * OperationMetadata.
           *
           * Create a request for the method "dicomStores.export".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Export#execute()} method to invoke the remote operation.
           *
           * @param name Required. The DICOM store resource name from which to export the data. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.ExportDicomDataRequest}
           * @return the request
           */
          public Export export(java.lang.String name, com.google.api.services.healthcare.v1.model.ExportDicomDataRequest content) throws java.io.IOException {
            Export result = new Export(name, content);
            initialize(result);
            return result;
          }

          public class Export extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:export";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Exports data to the specified destination by copying it from the DICOM store. Errors are also
             * logged to Cloud Logging. For more information, see [Viewing error logs in Cloud
             * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging). The metadata field type is
             * OperationMetadata.
             *
             * Create a request for the method "dicomStores.export".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
             * <p> {@link
             * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The DICOM store resource name from which to export the data. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.ExportDicomDataRequest}
             * @since 1.13
             */
            protected Export(java.lang.String name, com.google.api.services.healthcare.v1.model.ExportDicomDataRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public Export set$Xgafv(java.lang.String $Xgafv) {
              return (Export) super.set$Xgafv($Xgafv);
            }

            @Override
            public Export setAccessToken(java.lang.String accessToken) {
              return (Export) super.setAccessToken(accessToken);
            }

            @Override
            public Export setAlt(java.lang.String alt) {
              return (Export) super.setAlt(alt);
            }

            @Override
            public Export setCallback(java.lang.String callback) {
              return (Export) super.setCallback(callback);
            }

            @Override
            public Export setFields(java.lang.String fields) {
              return (Export) super.setFields(fields);
            }

            @Override
            public Export setKey(java.lang.String key) {
              return (Export) super.setKey(key);
            }

            @Override
            public Export setOauthToken(java.lang.String oauthToken) {
              return (Export) super.setOauthToken(oauthToken);
            }

            @Override
            public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Export) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Export setQuotaUser(java.lang.String quotaUser) {
              return (Export) super.setQuotaUser(quotaUser);
            }

            @Override
            public Export setUploadType(java.lang.String uploadType) {
              return (Export) super.setUploadType(uploadType);
            }

            @Override
            public Export setUploadProtocol(java.lang.String uploadProtocol) {
              return (Export) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The DICOM store resource name from which to export the data. For example, `
             * projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dico
             * m_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The DICOM store resource name from which to export the data. For example,
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The DICOM store resource name from which to export the data. For example, `
             * projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dico
             * m_store_id}`.
             */
            public Export setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Export set(String parameterName, Object value) {
              return (Export) super.set(parameterName, value);
            }
          }
          /**
           * Gets the specified DICOM store.
           *
           * Create a request for the method "dicomStores.get".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the DICOM store to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.DicomStore> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Gets the specified DICOM store.
             *
             * Create a request for the method "dicomStores.get".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the DICOM store to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.DicomStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The resource name of the DICOM store to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the DICOM store to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The resource name of the DICOM store to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets metrics associated with the DICOM store.
           *
           * Create a request for the method "dicomStores.getDICOMStoreMetrics".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetDICOMStoreMetrics#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The resource name of the DICOM store to get metrics for.
           * @return the request
           */
          public GetDICOMStoreMetrics getDICOMStoreMetrics(java.lang.String name) throws java.io.IOException {
            GetDICOMStoreMetrics result = new GetDICOMStoreMetrics(name);
            initialize(result);
            return result;
          }

          public class GetDICOMStoreMetrics extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.DicomStoreMetrics> {

            private static final String REST_PATH = "v1/{+name}:getDICOMStoreMetrics";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Gets metrics associated with the DICOM store.
             *
             * Create a request for the method "dicomStores.getDICOMStoreMetrics".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetDICOMStoreMetrics#execute()} method to invoke the
             * remote operation. <p> {@link GetDICOMStoreMetrics#initialize(com.google.api.client.googleapis.s
             * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the DICOM store to get metrics for.
             * @since 1.13
             */
            protected GetDICOMStoreMetrics(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.DicomStoreMetrics.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetDICOMStoreMetrics set$Xgafv(java.lang.String $Xgafv) {
              return (GetDICOMStoreMetrics) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetDICOMStoreMetrics setAccessToken(java.lang.String accessToken) {
              return (GetDICOMStoreMetrics) super.setAccessToken(accessToken);
            }

            @Override
            public GetDICOMStoreMetrics setAlt(java.lang.String alt) {
              return (GetDICOMStoreMetrics) super.setAlt(alt);
            }

            @Override
            public GetDICOMStoreMetrics setCallback(java.lang.String callback) {
              return (GetDICOMStoreMetrics) super.setCallback(callback);
            }

            @Override
            public GetDICOMStoreMetrics setFields(java.lang.String fields) {
              return (GetDICOMStoreMetrics) super.setFields(fields);
            }

            @Override
            public GetDICOMStoreMetrics setKey(java.lang.String key) {
              return (GetDICOMStoreMetrics) super.setKey(key);
            }

            @Override
            public GetDICOMStoreMetrics setOauthToken(java.lang.String oauthToken) {
              return (GetDICOMStoreMetrics) super.setOauthToken(oauthToken);
            }

            @Override
            public GetDICOMStoreMetrics setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetDICOMStoreMetrics) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetDICOMStoreMetrics setQuotaUser(java.lang.String quotaUser) {
              return (GetDICOMStoreMetrics) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetDICOMStoreMetrics setUploadType(java.lang.String uploadType) {
              return (GetDICOMStoreMetrics) super.setUploadType(uploadType);
            }

            @Override
            public GetDICOMStoreMetrics setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetDICOMStoreMetrics) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The resource name of the DICOM store to get metrics for. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the DICOM store to get metrics for.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The resource name of the DICOM store to get metrics for. */
            public GetDICOMStoreMetrics setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetDICOMStoreMetrics set(String parameterName, Object value) {
              return (GetDICOMStoreMetrics) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "dicomStores.getIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "dicomStores.getIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Imports data into the DICOM store by copying it from the specified source. Errors are logged to
           * Cloud Logging. For more information, see [Viewing error logs in Cloud
           * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging). The metadata field type is
           * OperationMetadata.
           *
           * Create a request for the method "dicomStores.import".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link CloudHealthcareImport#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The name of the DICOM store resource into which the data is imported. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.ImportDicomDataRequest}
           * @return the request
           */
          public CloudHealthcareImport healthcareImport(java.lang.String name, com.google.api.services.healthcare.v1.model.ImportDicomDataRequest content) throws java.io.IOException {
            CloudHealthcareImport result = new CloudHealthcareImport(name, content);
            initialize(result);
            return result;
          }

          public class CloudHealthcareImport extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:import";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Imports data into the DICOM store by copying it from the specified source. Errors are logged to
             * Cloud Logging. For more information, see [Viewing error logs in Cloud
             * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging). The metadata field type is
             * OperationMetadata.
             *
             * Create a request for the method "dicomStores.import".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link CloudHealthcareImport#execute()} method to invoke the
             * remote operation. <p> {@link CloudHealthcareImport#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. The name of the DICOM store resource into which the data is imported. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.ImportDicomDataRequest}
             * @since 1.13
             */
            protected CloudHealthcareImport(java.lang.String name, com.google.api.services.healthcare.v1.model.ImportDicomDataRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public CloudHealthcareImport set$Xgafv(java.lang.String $Xgafv) {
              return (CloudHealthcareImport) super.set$Xgafv($Xgafv);
            }

            @Override
            public CloudHealthcareImport setAccessToken(java.lang.String accessToken) {
              return (CloudHealthcareImport) super.setAccessToken(accessToken);
            }

            @Override
            public CloudHealthcareImport setAlt(java.lang.String alt) {
              return (CloudHealthcareImport) super.setAlt(alt);
            }

            @Override
            public CloudHealthcareImport setCallback(java.lang.String callback) {
              return (CloudHealthcareImport) super.setCallback(callback);
            }

            @Override
            public CloudHealthcareImport setFields(java.lang.String fields) {
              return (CloudHealthcareImport) super.setFields(fields);
            }

            @Override
            public CloudHealthcareImport setKey(java.lang.String key) {
              return (CloudHealthcareImport) super.setKey(key);
            }

            @Override
            public CloudHealthcareImport setOauthToken(java.lang.String oauthToken) {
              return (CloudHealthcareImport) super.setOauthToken(oauthToken);
            }

            @Override
            public CloudHealthcareImport setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CloudHealthcareImport) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CloudHealthcareImport setQuotaUser(java.lang.String quotaUser) {
              return (CloudHealthcareImport) super.setQuotaUser(quotaUser);
            }

            @Override
            public CloudHealthcareImport setUploadType(java.lang.String uploadType) {
              return (CloudHealthcareImport) super.setUploadType(uploadType);
            }

            @Override
            public CloudHealthcareImport setUploadProtocol(java.lang.String uploadProtocol) {
              return (CloudHealthcareImport) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the DICOM store resource into which the data is imported. For
             * example, `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomSt
             * ores/{dicom_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the DICOM store resource into which the data is imported. For example,
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the DICOM store resource into which the data is imported. For
             * example, `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomSt
             * ores/{dicom_store_id}`.
             */
            public CloudHealthcareImport setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public CloudHealthcareImport set(String parameterName, Object value) {
              return (CloudHealthcareImport) super.set(parameterName, value);
            }
          }
          /**
           * Lists the DICOM stores in the given dataset.
           *
           * Create a request for the method "dicomStores.list".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the dataset.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListDicomStoresResponse> {

            private static final String REST_PATH = "v1/{+parent}/dicomStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists the DICOM stores in the given dataset.
             *
             * Create a request for the method "dicomStores.list".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the dataset.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListDicomStoresResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the dataset. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the dataset.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Name of the dataset. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Restricts stores returned to those matching a filter. The following syntax is
             * available: * A string field value can be written as text inside quotation marks, for
             * example `"query text"`. The only valid relational operation for text fields is
             * equality (`=`), where text is searched within the field, rather than having the field
             * be equal to the text. For example, `"Comment = great"` returns messages with `great`
             * in the comment field. * A number field value can be written as an integer, a decimal,
             * or an exponential. The valid relational operators for number fields are the equality
             * operator (`=`), along with the less than/greater than operators (`<`, `<=`, `>`,
             * `>=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
             * operator to an expression to negate it. * A date field value must be written in
             * `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time format. Leading
             * zeros are required for one-digit months and days. The valid relational operators for
             * date fields are the equality operator (`=`) , along with the less than/greater than
             * operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`) operator.
             * You can prepend the `NOT` operator to an expression to negate it. * Multiple field
             * query expressions can be combined in one query by adding `AND` or `OR` operators
             * between the expressions. If a boolean operator appears within a quoted string, it is
             * not treated as special, it's just another part of the character string to be matched.
             * You can prepend the `NOT` operator to an expression to negate it. Only filtering on
             * labels is supported. For example, `labels.key=value`.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Restricts stores returned to those matching a filter. The following syntax is available: * A string
           field value can be written as text inside quotation marks, for example `"query text"`. The only
           valid relational operation for text fields is equality (`=`), where text is searched within the
           field, rather than having the field be equal to the text. For example, `"Comment = great"` returns
           messages with `great` in the comment field. * A number field value can be written as an integer, a
           decimal, or an exponential. The valid relational operators for number fields are the equality
           operator (`=`), along with the less than/greater than operators (`<`, `<=`, `>`, `>=`). Note that
           there is no inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to
           negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields with date and time use
           the RFC3339 time format. Leading zeros are required for one-digit months and days. The valid
           relational operators for date fields are the equality operator (`=`) , along with the less
           than/greater than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`)
           operator. You can prepend the `NOT` operator to an expression to negate it. * Multiple field query
           expressions can be combined in one query by adding `AND` or `OR` operators between the expressions.
           If a boolean operator appears within a quoted string, it is not treated as special, it's just
           another part of the character string to be matched. You can prepend the `NOT` operator to an
           expression to negate it. Only filtering on labels is supported. For example, `labels.key=value`.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Restricts stores returned to those matching a filter. The following syntax is
             * available: * A string field value can be written as text inside quotation marks, for
             * example `"query text"`. The only valid relational operation for text fields is
             * equality (`=`), where text is searched within the field, rather than having the field
             * be equal to the text. For example, `"Comment = great"` returns messages with `great`
             * in the comment field. * A number field value can be written as an integer, a decimal,
             * or an exponential. The valid relational operators for number fields are the equality
             * operator (`=`), along with the less than/greater than operators (`<`, `<=`, `>`,
             * `>=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
             * operator to an expression to negate it. * A date field value must be written in
             * `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time format. Leading
             * zeros are required for one-digit months and days. The valid relational operators for
             * date fields are the equality operator (`=`) , along with the less than/greater than
             * operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`) operator.
             * You can prepend the `NOT` operator to an expression to negate it. * Multiple field
             * query expressions can be combined in one query by adding `AND` or `OR` operators
             * between the expressions. If a boolean operator appears within a quoted string, it is
             * not treated as special, it's just another part of the character string to be matched.
             * You can prepend the `NOT` operator to an expression to negate it. Only filtering on
             * labels is supported. For example, `labels.key=value`.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Limit on the number of DICOM stores to return in a single response. If not specified,
             * 100 is used. May not be larger than 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Limit on the number of DICOM stores to return in a single response. If not specified, 100 is used.
           May not be larger than 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Limit on the number of DICOM stores to return in a single response. If not specified,
             * 100 is used. May not be larger than 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from the previous List request, if any.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the specified DICOM store.
           *
           * Create a request for the method "dicomStores.patch".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Identifier. Resource name of the DICOM store, of the form
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.DicomStore}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1.model.DicomStore content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.DicomStore> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Updates the specified DICOM store.
             *
             * Create a request for the method "dicomStores.patch".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Identifier. Resource name of the DICOM store, of the form
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.DicomStore}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.healthcare.v1.model.DicomStore content) {
              super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1.model.DicomStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Identifier. Resource name of the DICOM store, of the form `projects/{project_id}/loca
             * tions/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Identifier. Resource name of the DICOM store, of the form
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Identifier. Resource name of the DICOM store, of the form `projects/{project_id}/loca
             * tions/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. The update mask applies to the resource. For the `FieldMask` definition,
             * see https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. The update mask applies to the resource. For the `FieldMask` definition, see
           https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. The update mask applies to the resource. For the `FieldMask` definition,
             * see https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * SearchForInstances returns a list of matching instances. See [Search Transaction]
           * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
           * the implementation of SearchForInstances, see [Search
           * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
           * Healthcare API conformance statement. For samples that show how to call SearchForInstances, see
           * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
           *
           * Create a request for the method "dicomStores.searchForInstances".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SearchForInstances#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the DICOM store that is being accessed. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
           * @param dicomWebPath Required. The path of the SearchForInstancesRequest DICOMweb request. For example, `instances`,
           *        `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
           * @return the request
           */
          public SearchForInstances searchForInstances(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
            SearchForInstances result = new SearchForInstances(parent, dicomWebPath);
            initialize(result);
            return result;
          }

          public class SearchForInstances extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

            private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                java.util.regex.Pattern.compile("^instances$");

            /**
             * SearchForInstances returns a list of matching instances. See [Search Transaction]
             * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
             * the implementation of SearchForInstances, see [Search
             * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
             * Healthcare API conformance statement. For samples that show how to call SearchForInstances, see
             * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-
             * dicom).
             *
             * Create a request for the method "dicomStores.searchForInstances".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SearchForInstances#execute()} method to invoke the remote
             * operation. <p> {@link SearchForInstances#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param parent Required. The name of the DICOM store that is being accessed. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
             * @param dicomWebPath Required. The path of the SearchForInstancesRequest DICOMweb request. For example, `instances`,
           *        `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
             * @since 1.13
             */
            protected SearchForInstances(java.lang.String parent, java.lang.String dicomWebPath) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                    "Parameter dicomWebPath must conform to the pattern " +
                    "^instances$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchForInstances set$Xgafv(java.lang.String $Xgafv) {
              return (SearchForInstances) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchForInstances setAccessToken(java.lang.String accessToken) {
              return (SearchForInstances) super.setAccessToken(accessToken);
            }

            @Override
            public SearchForInstances setAlt(java.lang.String alt) {
              return (SearchForInstances) super.setAlt(alt);
            }

            @Override
            public SearchForInstances setCallback(java.lang.String callback) {
              return (SearchForInstances) super.setCallback(callback);
            }

            @Override
            public SearchForInstances setFields(java.lang.String fields) {
              return (SearchForInstances) super.setFields(fields);
            }

            @Override
            public SearchForInstances setKey(java.lang.String key) {
              return (SearchForInstances) super.setKey(key);
            }

            @Override
            public SearchForInstances setOauthToken(java.lang.String oauthToken) {
              return (SearchForInstances) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchForInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchForInstances) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchForInstances setQuotaUser(java.lang.String quotaUser) {
              return (SearchForInstances) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchForInstances setUploadType(java.lang.String uploadType) {
              return (SearchForInstances) super.setUploadType(uploadType);
            }

            @Override
            public SearchForInstances setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchForInstances) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the DICOM store that is being accessed. For example, `projects/
             * {project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_i
             * d}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the DICOM store that is being accessed. For example,
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the DICOM store that is being accessed. For example, `projects/
             * {project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_i
             * d}`.
             */
            public SearchForInstances setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The path of the SearchForInstancesRequest DICOMweb request. For example,
             * `instances`, `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
             */
            @com.google.api.client.util.Key
            private java.lang.String dicomWebPath;

            /** Required. The path of the SearchForInstancesRequest DICOMweb request. For example, `instances`,
           `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
             */
            public java.lang.String getDicomWebPath() {
              return dicomWebPath;
            }

            /**
             * Required. The path of the SearchForInstancesRequest DICOMweb request. For example,
             * `instances`, `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
             */
            public SearchForInstances setDicomWebPath(java.lang.String dicomWebPath) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                    "Parameter dicomWebPath must conform to the pattern " +
                    "^instances$");
              }
              this.dicomWebPath = dicomWebPath;
              return this;
            }

            @Override
            public SearchForInstances set(String parameterName, Object value) {
              return (SearchForInstances) super.set(parameterName, value);
            }
          }
          /**
           * SearchForSeries returns a list of matching series. See [Search Transaction]
           * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
           * the implementation of SearchForSeries, see [Search
           * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
           * Healthcare API conformance statement. For samples that show how to call SearchForSeries, see
           * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
           *
           * Create a request for the method "dicomStores.searchForSeries".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SearchForSeries#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the DICOM store that is being accessed. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
           * @param dicomWebPath Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
           *        `studies/{study_uid}/series`.
           * @return the request
           */
          public SearchForSeries searchForSeries(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
            SearchForSeries result = new SearchForSeries(parent, dicomWebPath);
            initialize(result);
            return result;
          }

          public class SearchForSeries extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

            private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                java.util.regex.Pattern.compile("^series$");

            /**
             * SearchForSeries returns a list of matching series. See [Search Transaction]
             * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
             * the implementation of SearchForSeries, see [Search
             * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
             * Healthcare API conformance statement. For samples that show how to call SearchForSeries, see
             * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-
             * dicom).
             *
             * Create a request for the method "dicomStores.searchForSeries".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SearchForSeries#execute()} method to invoke the remote
             * operation. <p> {@link SearchForSeries#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param parent Required. The name of the DICOM store that is being accessed. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
             * @param dicomWebPath Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
           *        `studies/{study_uid}/series`.
             * @since 1.13
             */
            protected SearchForSeries(java.lang.String parent, java.lang.String dicomWebPath) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                    "Parameter dicomWebPath must conform to the pattern " +
                    "^series$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchForSeries set$Xgafv(java.lang.String $Xgafv) {
              return (SearchForSeries) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchForSeries setAccessToken(java.lang.String accessToken) {
              return (SearchForSeries) super.setAccessToken(accessToken);
            }

            @Override
            public SearchForSeries setAlt(java.lang.String alt) {
              return (SearchForSeries) super.setAlt(alt);
            }

            @Override
            public SearchForSeries setCallback(java.lang.String callback) {
              return (SearchForSeries) super.setCallback(callback);
            }

            @Override
            public SearchForSeries setFields(java.lang.String fields) {
              return (SearchForSeries) super.setFields(fields);
            }

            @Override
            public SearchForSeries setKey(java.lang.String key) {
              return (SearchForSeries) super.setKey(key);
            }

            @Override
            public SearchForSeries setOauthToken(java.lang.String oauthToken) {
              return (SearchForSeries) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchForSeries setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchForSeries) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchForSeries setQuotaUser(java.lang.String quotaUser) {
              return (SearchForSeries) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchForSeries setUploadType(java.lang.String uploadType) {
              return (SearchForSeries) super.setUploadType(uploadType);
            }

            @Override
            public SearchForSeries setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchForSeries) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the DICOM store that is being accessed. For example, `projects/
             * {project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_i
             * d}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the DICOM store that is being accessed. For example,
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the DICOM store that is being accessed. For example, `projects/
             * {project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_i
             * d}`.
             */
            public SearchForSeries setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
             * `studies/{study_uid}/series`.
             */
            @com.google.api.client.util.Key
            private java.lang.String dicomWebPath;

            /** Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
           `studies/{study_uid}/series`.
             */
            public java.lang.String getDicomWebPath() {
              return dicomWebPath;
            }

            /**
             * Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
             * `studies/{study_uid}/series`.
             */
            public SearchForSeries setDicomWebPath(java.lang.String dicomWebPath) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                    "Parameter dicomWebPath must conform to the pattern " +
                    "^series$");
              }
              this.dicomWebPath = dicomWebPath;
              return this;
            }

            @Override
            public SearchForSeries set(String parameterName, Object value) {
              return (SearchForSeries) super.set(parameterName, value);
            }
          }
          /**
           * SearchForStudies returns a list of matching studies. See [Search Transaction]
           * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
           * the implementation of SearchForStudies, see [Search
           * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
           * Healthcare API conformance statement. For samples that show how to call SearchForStudies, see
           * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
           *
           * Create a request for the method "dicomStores.searchForStudies".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SearchForStudies#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the DICOM store that is being accessed. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
           * @param dicomWebPath Required. The path of the SearchForStudies DICOMweb request. For example, `studies`.
           * @return the request
           */
          public SearchForStudies searchForStudies(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
            SearchForStudies result = new SearchForStudies(parent, dicomWebPath);
            initialize(result);
            return result;
          }

          public class SearchForStudies extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

            private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                java.util.regex.Pattern.compile("^studies$");

            /**
             * SearchForStudies returns a list of matching studies. See [Search Transaction]
             * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
             * the implementation of SearchForStudies, see [Search
             * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
             * Healthcare API conformance statement. For samples that show how to call SearchForStudies, see
             * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-
             * dicom).
             *
             * Create a request for the method "dicomStores.searchForStudies".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SearchForStudies#execute()} method to invoke the remote
             * operation. <p> {@link SearchForStudies#initialize(com.google.api.client.googleapis.services.Abs
             * tractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param parent Required. The name of the DICOM store that is being accessed. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
             * @param dicomWebPath Required. The path of the SearchForStudies DICOMweb request. For example, `studies`.
             * @since 1.13
             */
            protected SearchForStudies(java.lang.String parent, java.lang.String dicomWebPath) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                    "Parameter dicomWebPath must conform to the pattern " +
                    "^studies$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public SearchForStudies set$Xgafv(java.lang.String $Xgafv) {
              return (SearchForStudies) super.set$Xgafv($Xgafv);
            }

            @Override
            public SearchForStudies setAccessToken(java.lang.String accessToken) {
              return (SearchForStudies) super.setAccessToken(accessToken);
            }

            @Override
            public SearchForStudies setAlt(java.lang.String alt) {
              return (SearchForStudies) super.setAlt(alt);
            }

            @Override
            public SearchForStudies setCallback(java.lang.String callback) {
              return (SearchForStudies) super.setCallback(callback);
            }

            @Override
            public SearchForStudies setFields(java.lang.String fields) {
              return (SearchForStudies) super.setFields(fields);
            }

            @Override
            public SearchForStudies setKey(java.lang.String key) {
              return (SearchForStudies) super.setKey(key);
            }

            @Override
            public SearchForStudies setOauthToken(java.lang.String oauthToken) {
              return (SearchForStudies) super.setOauthToken(oauthToken);
            }

            @Override
            public SearchForStudies setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SearchForStudies) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SearchForStudies setQuotaUser(java.lang.String quotaUser) {
              return (SearchForStudies) super.setQuotaUser(quotaUser);
            }

            @Override
            public SearchForStudies setUploadType(java.lang.String uploadType) {
              return (SearchForStudies) super.setUploadType(uploadType);
            }

            @Override
            public SearchForStudies setUploadProtocol(java.lang.String uploadProtocol) {
              return (SearchForStudies) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the DICOM store that is being accessed. For example, `projects/
             * {project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_i
             * d}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the DICOM store that is being accessed. For example,
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the DICOM store that is being accessed. For example, `projects/
             * {project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_i
             * d}`.
             */
            public SearchForStudies setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The path of the SearchForStudies DICOMweb request. For example, `studies`.
             */
            @com.google.api.client.util.Key
            private java.lang.String dicomWebPath;

            /** Required. The path of the SearchForStudies DICOMweb request. For example, `studies`.
             */
            public java.lang.String getDicomWebPath() {
              return dicomWebPath;
            }

            /**
             * Required. The path of the SearchForStudies DICOMweb request. For example, `studies`.
             */
            public SearchForStudies setDicomWebPath(java.lang.String dicomWebPath) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                    "Parameter dicomWebPath must conform to the pattern " +
                    "^studies$");
              }
              this.dicomWebPath = dicomWebPath;
              return this;
            }

            @Override
            public SearchForStudies set(String parameterName, Object value) {
              return (SearchForStudies) super.set(parameterName, value);
            }
          }
          /**
           * SetBlobStorageSettings sets the blob storage settings of the specified resources.
           *
           * Create a request for the method "dicomStores.setBlobStorageSettings".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SetBlobStorageSettings#execute()} method to invoke the remote
           * operation.
           *
           * @param resource Required. The path of the resource to update the blob storage settings in the format of `projects/{p
           *        rojectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/
           *        studies/{studyUID}`, `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dic
           *        omStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/`, or `projects/{pr
           *        ojectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/s
           *        tudies/{studyUID}/series/{seriesUID}/instances/{instanceUID}`. If `filter_config` is
           *        specified, set the value of `resource` to the resource name of a DICOM store in the format
           *        `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreI
           *        D}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.SetBlobStorageSettingsRequest}
           * @return the request
           */
          public SetBlobStorageSettings setBlobStorageSettings(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetBlobStorageSettingsRequest content) throws java.io.IOException {
            SetBlobStorageSettings result = new SetBlobStorageSettings(resource, content);
            initialize(result);
            return result;
          }

          public class SetBlobStorageSettings extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+resource}:setBlobStorageSettings";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * SetBlobStorageSettings sets the blob storage settings of the specified resources.
             *
             * Create a request for the method "dicomStores.setBlobStorageSettings".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SetBlobStorageSettings#execute()} method to invoke the
             * remote operation. <p> {@link SetBlobStorageSettings#initialize(com.google.api.client.googleapis
             * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param resource Required. The path of the resource to update the blob storage settings in the format of `projects/{p
           *        rojectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/
           *        studies/{studyUID}`, `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dic
           *        omStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/`, or `projects/{pr
           *        ojectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/s
           *        tudies/{studyUID}/series/{seriesUID}/instances/{instanceUID}`. If `filter_config` is
           *        specified, set the value of `resource` to the resource name of a DICOM store in the format
           *        `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreI
           *        D}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.SetBlobStorageSettingsRequest}
             * @since 1.13
             */
            protected SetBlobStorageSettings(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetBlobStorageSettingsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public SetBlobStorageSettings set$Xgafv(java.lang.String $Xgafv) {
              return (SetBlobStorageSettings) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetBlobStorageSettings setAccessToken(java.lang.String accessToken) {
              return (SetBlobStorageSettings) super.setAccessToken(accessToken);
            }

            @Override
            public SetBlobStorageSettings setAlt(java.lang.String alt) {
              return (SetBlobStorageSettings) super.setAlt(alt);
            }

            @Override
            public SetBlobStorageSettings setCallback(java.lang.String callback) {
              return (SetBlobStorageSettings) super.setCallback(callback);
            }

            @Override
            public SetBlobStorageSettings setFields(java.lang.String fields) {
              return (SetBlobStorageSettings) super.setFields(fields);
            }

            @Override
            public SetBlobStorageSettings setKey(java.lang.String key) {
              return (SetBlobStorageSettings) super.setKey(key);
            }

            @Override
            public SetBlobStorageSettings setOauthToken(java.lang.String oauthToken) {
              return (SetBlobStorageSettings) super.setOauthToken(oauthToken);
            }

            @Override
            public SetBlobStorageSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetBlobStorageSettings) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetBlobStorageSettings setQuotaUser(java.lang.String quotaUser) {
              return (SetBlobStorageSettings) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetBlobStorageSettings setUploadType(java.lang.String uploadType) {
              return (SetBlobStorageSettings) super.setUploadType(uploadType);
            }

            @Override
            public SetBlobStorageSettings setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetBlobStorageSettings) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The path of the resource to update the blob storage settings in the format
             * of `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dic
             * omStoreID}/dicomWeb/studies/{studyUID}`, `projects/{projectID}/locations/{locationID}
             * /datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{
             * seriesUID}/`, or `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/di
             * comStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/instances/{in
             * stanceUID}`. If `filter_config` is specified, set the value of `resource` to the
             * resource name of a DICOM store in the format `projects/{projectID}/locations/{locatio
             * nID}/datasets/{datasetID}/dicomStores/{dicomStoreID}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** Required. The path of the resource to update the blob storage settings in the format of `projects/{
           projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/
           {studyUID}`, `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomSt
           oreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/`, or `projects/{projectID}/locations/{locati
           onID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID
           }/instances/{instanceUID}`. If `filter_config` is specified, set the value of `resource` to the
           resource name of a DICOM store in the format
           `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}`.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * Required. The path of the resource to update the blob storage settings in the format
             * of `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dic
             * omStoreID}/dicomWeb/studies/{studyUID}`, `projects/{projectID}/locations/{locationID}
             * /datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{
             * seriesUID}/`, or `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/di
             * comStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/instances/{in
             * stanceUID}`. If `filter_config` is specified, set the value of `resource` to the
             * resource name of a DICOM store in the format `projects/{projectID}/locations/{locatio
             * nID}/datasets/{datasetID}/dicomStores/{dicomStoreID}`.
             */
            public SetBlobStorageSettings setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetBlobStorageSettings set(String parameterName, Object value) {
              return (SetBlobStorageSettings) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "dicomStores.setIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "dicomStores.setIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * StoreInstances stores DICOM instances associated with study instance unique identifiers (SUID).
           * See [Store Transaction]
           * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5). For details on
           * the implementation of StoreInstances, see [Store
           * transaction](https://cloud.google.com/healthcare/docs/dicom#store_transaction) in the Cloud
           * Healthcare API conformance statement. For samples that show how to call StoreInstances, see
           * [Store DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#store-dicom).
           *
           * Create a request for the method "dicomStores.storeInstances".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link StoreInstances#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the DICOM store that is being accessed. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
           * @param dicomWebPath Required. The path of the StoreInstances DICOMweb request. For example, `studies/[{study_uid}]`.
           *        Note that the `study_uid` is optional.
           * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
           * @return the request
           */
          public StoreInstances storeInstances(java.lang.String parent, java.lang.String dicomWebPath, com.google.api.services.healthcare.v1.model.HttpBody content) throws java.io.IOException {
            StoreInstances result = new StoreInstances(parent, dicomWebPath, content);
            initialize(result);
            return result;
          }

          public class StoreInstances extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

            private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                java.util.regex.Pattern.compile("^studies$");

            /**
             * StoreInstances stores DICOM instances associated with study instance unique identifiers (SUID).
             * See [Store Transaction]
             * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5). For details on
             * the implementation of StoreInstances, see [Store
             * transaction](https://cloud.google.com/healthcare/docs/dicom#store_transaction) in the Cloud
             * Healthcare API conformance statement. For samples that show how to call StoreInstances, see
             * [Store DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#store-dicom).
             *
             * Create a request for the method "dicomStores.storeInstances".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link StoreInstances#execute()} method to invoke the remote
             * operation. <p> {@link StoreInstances#initialize(com.google.api.client.googleapis.services.Abstr
             * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param parent Required. The name of the DICOM store that is being accessed. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
           *        ore_id}`.
             * @param dicomWebPath Required. The path of the StoreInstances DICOMweb request. For example, `studies/[{study_uid}]`.
           *        Note that the `study_uid` is optional.
             * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
             * @since 1.13
             */
            protected StoreInstances(java.lang.String parent, java.lang.String dicomWebPath, com.google.api.services.healthcare.v1.model.HttpBody content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                    "Parameter dicomWebPath must conform to the pattern " +
                    "^studies$");
              }
            }

            @Override
            public StoreInstances set$Xgafv(java.lang.String $Xgafv) {
              return (StoreInstances) super.set$Xgafv($Xgafv);
            }

            @Override
            public StoreInstances setAccessToken(java.lang.String accessToken) {
              return (StoreInstances) super.setAccessToken(accessToken);
            }

            @Override
            public StoreInstances setAlt(java.lang.String alt) {
              return (StoreInstances) super.setAlt(alt);
            }

            @Override
            public StoreInstances setCallback(java.lang.String callback) {
              return (StoreInstances) super.setCallback(callback);
            }

            @Override
            public StoreInstances setFields(java.lang.String fields) {
              return (StoreInstances) super.setFields(fields);
            }

            @Override
            public StoreInstances setKey(java.lang.String key) {
              return (StoreInstances) super.setKey(key);
            }

            @Override
            public StoreInstances setOauthToken(java.lang.String oauthToken) {
              return (StoreInstances) super.setOauthToken(oauthToken);
            }

            @Override
            public StoreInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (StoreInstances) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public StoreInstances setQuotaUser(java.lang.String quotaUser) {
              return (StoreInstances) super.setQuotaUser(quotaUser);
            }

            @Override
            public StoreInstances setUploadType(java.lang.String uploadType) {
              return (StoreInstances) super.setUploadType(uploadType);
            }

            @Override
            public StoreInstances setUploadProtocol(java.lang.String uploadProtocol) {
              return (StoreInstances) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the DICOM store that is being accessed. For example, `projects/
             * {project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_i
             * d}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the DICOM store that is being accessed. For example,
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the DICOM store that is being accessed. For example, `projects/
             * {project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_i
             * d}`.
             */
            public StoreInstances setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The path of the StoreInstances DICOMweb request. For example,
             * `studies/[{study_uid}]`. Note that the `study_uid` is optional.
             */
            @com.google.api.client.util.Key
            private java.lang.String dicomWebPath;

            /** Required. The path of the StoreInstances DICOMweb request. For example, `studies/[{study_uid}]`.
           Note that the `study_uid` is optional.
             */
            public java.lang.String getDicomWebPath() {
              return dicomWebPath;
            }

            /**
             * Required. The path of the StoreInstances DICOMweb request. For example,
             * `studies/[{study_uid}]`. Note that the `study_uid` is optional.
             */
            public StoreInstances setDicomWebPath(java.lang.String dicomWebPath) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                    "Parameter dicomWebPath must conform to the pattern " +
                    "^studies$");
              }
              this.dicomWebPath = dicomWebPath;
              return this;
            }

            @Override
            public StoreInstances set(String parameterName, Object value) {
              return (StoreInstances) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "dicomStores.testIamPermissions".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "dicomStores.testIamPermissions".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the DicomWeb collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.DicomWeb.List request = healthcare.dicomWeb().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public DicomWeb dicomWeb() {
            return new DicomWeb();
          }

          /**
           * The "dicomWeb" collection of methods.
           */
          public class DicomWeb {

            /**
             * An accessor for creating requests from the Studies collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
             *   {@code CloudHealthcare.Studies.List request = healthcare.studies().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Studies studies() {
              return new Studies();
            }

            /**
             * The "studies" collection of methods.
             */
            public class Studies {

              /**
               * GetStudyMetrics returns metrics for a study.
               *
               * Create a request for the method "studies.getStudyMetrics".
               *
               * This request holds the parameters needed by the healthcare server.  After setting any optional
               * parameters, call the {@link GetStudyMetrics#execute()} method to invoke the remote operation.
               *
               * @param study Required. The study resource path. For example, `projects/{project_id}/locations/{location_id}/datas
               *        ets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}`.
               * @return the request
               */
              public GetStudyMetrics getStudyMetrics(java.lang.String study) throws java.io.IOException {
                GetStudyMetrics result = new GetStudyMetrics(study);
                initialize(result);
                return result;
              }

              public class GetStudyMetrics extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.StudyMetrics> {

                private static final String REST_PATH = "v1/{+study}:getStudyMetrics";

                private final java.util.regex.Pattern STUDY_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+$");

                /**
                 * GetStudyMetrics returns metrics for a study.
                 *
                 * Create a request for the method "studies.getStudyMetrics".
                 *
                 * This request holds the parameters needed by the the healthcare server.  After setting any
                 * optional parameters, call the {@link GetStudyMetrics#execute()} method to invoke the remote
                 * operation. <p> {@link GetStudyMetrics#initialize(com.google.api.client.googleapis.services.Abst
                 * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
                 * the constructor. </p>
                 *
                 * @param study Required. The study resource path. For example, `projects/{project_id}/locations/{location_id}/datas
               *        ets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}`.
                 * @since 1.13
                 */
                protected GetStudyMetrics(java.lang.String study) {
                  super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.StudyMetrics.class);
                  this.study = com.google.api.client.util.Preconditions.checkNotNull(study, "Required parameter study must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(STUDY_PATTERN.matcher(study).matches(),
                        "Parameter study must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public GetStudyMetrics set$Xgafv(java.lang.String $Xgafv) {
                  return (GetStudyMetrics) super.set$Xgafv($Xgafv);
                }

                @Override
                public GetStudyMetrics setAccessToken(java.lang.String accessToken) {
                  return (GetStudyMetrics) super.setAccessToken(accessToken);
                }

                @Override
                public GetStudyMetrics setAlt(java.lang.String alt) {
                  return (GetStudyMetrics) super.setAlt(alt);
                }

                @Override
                public GetStudyMetrics setCallback(java.lang.String callback) {
                  return (GetStudyMetrics) super.setCallback(callback);
                }

                @Override
                public GetStudyMetrics setFields(java.lang.String fields) {
                  return (GetStudyMetrics) super.setFields(fields);
                }

                @Override
                public GetStudyMetrics setKey(java.lang.String key) {
                  return (GetStudyMetrics) super.setKey(key);
                }

                @Override
                public GetStudyMetrics setOauthToken(java.lang.String oauthToken) {
                  return (GetStudyMetrics) super.setOauthToken(oauthToken);
                }

                @Override
                public GetStudyMetrics setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (GetStudyMetrics) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public GetStudyMetrics setQuotaUser(java.lang.String quotaUser) {
                  return (GetStudyMetrics) super.setQuotaUser(quotaUser);
                }

                @Override
                public GetStudyMetrics setUploadType(java.lang.String uploadType) {
                  return (GetStudyMetrics) super.setUploadType(uploadType);
                }

                @Override
                public GetStudyMetrics setUploadProtocol(java.lang.String uploadProtocol) {
                  return (GetStudyMetrics) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The study resource path. For example, `projects/{project_id}/locations/
                 * {location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies
                 * /{study_uid}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String study;

                /** Required. The study resource path. For example, `projects/{project_id}/locations/{location_id}/data
               sets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}`.
                 */
                public java.lang.String getStudy() {
                  return study;
                }

                /**
                 * Required. The study resource path. For example, `projects/{project_id}/locations/
                 * {location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies
                 * /{study_uid}`.
                 */
                public GetStudyMetrics setStudy(java.lang.String study) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(STUDY_PATTERN.matcher(study).matches(),
                        "Parameter study must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+$");
                  }
                  this.study = study;
                  return this;
                }

                @Override
                public GetStudyMetrics set(String parameterName, Object value) {
                  return (GetStudyMetrics) super.set(parameterName, value);
                }
              }
              /**
               * SetBlobStorageSettings sets the blob storage settings of the specified resources.
               *
               * Create a request for the method "studies.setBlobStorageSettings".
               *
               * This request holds the parameters needed by the healthcare server.  After setting any optional
               * parameters, call the {@link SetBlobStorageSettings#execute()} method to invoke the remote
               * operation.
               *
               * @param resource Required. The path of the resource to update the blob storage settings in the format of `projects/{p
               *        rojectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/
               *        studies/{studyUID}`, `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dic
               *        omStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/`, or `projects/{pr
               *        ojectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/s
               *        tudies/{studyUID}/series/{seriesUID}/instances/{instanceUID}`. If `filter_config` is
               *        specified, set the value of `resource` to the resource name of a DICOM store in the format
               *        `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreI
               *        D}`.
               * @param content the {@link com.google.api.services.healthcare.v1.model.SetBlobStorageSettingsRequest}
               * @return the request
               */
              public SetBlobStorageSettings setBlobStorageSettings(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetBlobStorageSettingsRequest content) throws java.io.IOException {
                SetBlobStorageSettings result = new SetBlobStorageSettings(resource, content);
                initialize(result);
                return result;
              }

              public class SetBlobStorageSettings extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

                private static final String REST_PATH = "v1/{+resource}:setBlobStorageSettings";

                private final java.util.regex.Pattern RESOURCE_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/.*$");

                /**
                 * SetBlobStorageSettings sets the blob storage settings of the specified resources.
                 *
                 * Create a request for the method "studies.setBlobStorageSettings".
                 *
                 * This request holds the parameters needed by the the healthcare server.  After setting any
                 * optional parameters, call the {@link SetBlobStorageSettings#execute()} method to invoke the
                 * remote operation. <p> {@link SetBlobStorageSettings#initialize(com.google.api.client.googleapis
                 * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
                 * after invoking the constructor. </p>
                 *
                 * @param resource Required. The path of the resource to update the blob storage settings in the format of `projects/{p
               *        rojectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/
               *        studies/{studyUID}`, `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dic
               *        omStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/`, or `projects/{pr
               *        ojectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/s
               *        tudies/{studyUID}/series/{seriesUID}/instances/{instanceUID}`. If `filter_config` is
               *        specified, set the value of `resource` to the resource name of a DICOM store in the format
               *        `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreI
               *        D}`.
                 * @param content the {@link com.google.api.services.healthcare.v1.model.SetBlobStorageSettingsRequest}
                 * @since 1.13
                 */
                protected SetBlobStorageSettings(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetBlobStorageSettingsRequest content) {
                  super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
                  this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                        "Parameter resource must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/.*$");
                  }
                }

                @Override
                public SetBlobStorageSettings set$Xgafv(java.lang.String $Xgafv) {
                  return (SetBlobStorageSettings) super.set$Xgafv($Xgafv);
                }

                @Override
                public SetBlobStorageSettings setAccessToken(java.lang.String accessToken) {
                  return (SetBlobStorageSettings) super.setAccessToken(accessToken);
                }

                @Override
                public SetBlobStorageSettings setAlt(java.lang.String alt) {
                  return (SetBlobStorageSettings) super.setAlt(alt);
                }

                @Override
                public SetBlobStorageSettings setCallback(java.lang.String callback) {
                  return (SetBlobStorageSettings) super.setCallback(callback);
                }

                @Override
                public SetBlobStorageSettings setFields(java.lang.String fields) {
                  return (SetBlobStorageSettings) super.setFields(fields);
                }

                @Override
                public SetBlobStorageSettings setKey(java.lang.String key) {
                  return (SetBlobStorageSettings) super.setKey(key);
                }

                @Override
                public SetBlobStorageSettings setOauthToken(java.lang.String oauthToken) {
                  return (SetBlobStorageSettings) super.setOauthToken(oauthToken);
                }

                @Override
                public SetBlobStorageSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (SetBlobStorageSettings) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public SetBlobStorageSettings setQuotaUser(java.lang.String quotaUser) {
                  return (SetBlobStorageSettings) super.setQuotaUser(quotaUser);
                }

                @Override
                public SetBlobStorageSettings setUploadType(java.lang.String uploadType) {
                  return (SetBlobStorageSettings) super.setUploadType(uploadType);
                }

                @Override
                public SetBlobStorageSettings setUploadProtocol(java.lang.String uploadProtocol) {
                  return (SetBlobStorageSettings) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The path of the resource to update the blob storage settings in the
                 * format of `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicom
                 * Stores/{dicomStoreID}/dicomWeb/studies/{studyUID}`, `projects/{projectID}/locatio
                 * ns/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/
                 * {studyUID}/series/{seriesUID}/`, or `projects/{projectID}/locations/{locationID}/
                 * datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/serie
                 * s/{seriesUID}/instances/{instanceUID}`. If `filter_config` is specified, set the
                 * value of `resource` to the resource name of a DICOM store in the format `projects
                 * /{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreI
                 * D}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String resource;

                /** Required. The path of the resource to update the blob storage settings in the format of `projects/{
               projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/
               {studyUID}`, `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomSt
               oreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/`, or `projects/{projectID}/locations/{locati
               onID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID
               }/instances/{instanceUID}`. If `filter_config` is specified, set the value of `resource` to the
               resource name of a DICOM store in the format
               `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}`.
                 */
                public java.lang.String getResource() {
                  return resource;
                }

                /**
                 * Required. The path of the resource to update the blob storage settings in the
                 * format of `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicom
                 * Stores/{dicomStoreID}/dicomWeb/studies/{studyUID}`, `projects/{projectID}/locatio
                 * ns/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/
                 * {studyUID}/series/{seriesUID}/`, or `projects/{projectID}/locations/{locationID}/
                 * datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/serie
                 * s/{seriesUID}/instances/{instanceUID}`. If `filter_config` is specified, set the
                 * value of `resource` to the resource name of a DICOM store in the format `projects
                 * /{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreI
                 * D}`.
                 */
                public SetBlobStorageSettings setResource(java.lang.String resource) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                        "Parameter resource must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/.*$");
                  }
                  this.resource = resource;
                  return this;
                }

                @Override
                public SetBlobStorageSettings set(String parameterName, Object value) {
                  return (SetBlobStorageSettings) super.set(parameterName, value);
                }
              }

              /**
               * An accessor for creating requests from the Series collection.
               *
               * <p>The typical use is:</p>
               * <pre>
               *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
               *   {@code CloudHealthcare.Series.List request = healthcare.series().list(parameters ...)}
               * </pre>
               *
               * @return the resource collection
               */
              public Series series() {
                return new Series();
              }

              /**
               * The "series" collection of methods.
               */
              public class Series {

                /**
                 * GetSeriesMetrics returns metrics for a series.
                 *
                 * Create a request for the method "series.getSeriesMetrics".
                 *
                 * This request holds the parameters needed by the healthcare server.  After setting any optional
                 * parameters, call the {@link GetSeriesMetrics#execute()} method to invoke the remote operation.
                 *
                 * @param series Required. The series resource path. For example, `projects/{project_id}/locations/{location_id}/data
                 *        sets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}/series/{series
                 *        _uid}`.
                 * @return the request
                 */
                public GetSeriesMetrics getSeriesMetrics(java.lang.String series) throws java.io.IOException {
                  GetSeriesMetrics result = new GetSeriesMetrics(series);
                  initialize(result);
                  return result;
                }

                public class GetSeriesMetrics extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.SeriesMetrics> {

                  private static final String REST_PATH = "v1/{+series}:getSeriesMetrics";

                  private final java.util.regex.Pattern SERIES_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+/series/[^/]+$");

                  /**
                   * GetSeriesMetrics returns metrics for a series.
                   *
                   * Create a request for the method "series.getSeriesMetrics".
                   *
                   * This request holds the parameters needed by the the healthcare server.  After setting any
                   * optional parameters, call the {@link GetSeriesMetrics#execute()} method to invoke the remote
                   * operation. <p> {@link GetSeriesMetrics#initialize(com.google.api.client.googleapis.services.Abs
                   * tractGoogleClientRequest)} must be called to initialize this instance immediately after
                   * invoking the constructor. </p>
                   *
                   * @param series Required. The series resource path. For example, `projects/{project_id}/locations/{location_id}/data
                 *        sets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}/series/{series
                 *        _uid}`.
                   * @since 1.13
                   */
                  protected GetSeriesMetrics(java.lang.String series) {
                    super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.SeriesMetrics.class);
                    this.series = com.google.api.client.util.Preconditions.checkNotNull(series, "Required parameter series must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(SERIES_PATTERN.matcher(series).matches(),
                          "Parameter series must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+/series/[^/]+$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public GetSeriesMetrics set$Xgafv(java.lang.String $Xgafv) {
                    return (GetSeriesMetrics) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public GetSeriesMetrics setAccessToken(java.lang.String accessToken) {
                    return (GetSeriesMetrics) super.setAccessToken(accessToken);
                  }

                  @Override
                  public GetSeriesMetrics setAlt(java.lang.String alt) {
                    return (GetSeriesMetrics) super.setAlt(alt);
                  }

                  @Override
                  public GetSeriesMetrics setCallback(java.lang.String callback) {
                    return (GetSeriesMetrics) super.setCallback(callback);
                  }

                  @Override
                  public GetSeriesMetrics setFields(java.lang.String fields) {
                    return (GetSeriesMetrics) super.setFields(fields);
                  }

                  @Override
                  public GetSeriesMetrics setKey(java.lang.String key) {
                    return (GetSeriesMetrics) super.setKey(key);
                  }

                  @Override
                  public GetSeriesMetrics setOauthToken(java.lang.String oauthToken) {
                    return (GetSeriesMetrics) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public GetSeriesMetrics setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (GetSeriesMetrics) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public GetSeriesMetrics setQuotaUser(java.lang.String quotaUser) {
                    return (GetSeriesMetrics) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public GetSeriesMetrics setUploadType(java.lang.String uploadType) {
                    return (GetSeriesMetrics) super.setUploadType(uploadType);
                  }

                  @Override
                  public GetSeriesMetrics setUploadProtocol(java.lang.String uploadProtocol) {
                    return (GetSeriesMetrics) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The series resource path. For example, `projects/{project_id}/locatio
                   * ns/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/st
                   * udies/{study_uid}/series/{series_uid}`.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String series;

                  /** Required. The series resource path. For example, `projects/{project_id}/locations/{location_id}/dat
                 asets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}/series/{series_uid}`.
                   */
                  public java.lang.String getSeries() {
                    return series;
                  }

                  /**
                   * Required. The series resource path. For example, `projects/{project_id}/locatio
                   * ns/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/st
                   * udies/{study_uid}/series/{series_uid}`.
                   */
                  public GetSeriesMetrics setSeries(java.lang.String series) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(SERIES_PATTERN.matcher(series).matches(),
                          "Parameter series must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+/series/[^/]+$");
                    }
                    this.series = series;
                    return this;
                  }

                  @Override
                  public GetSeriesMetrics set(String parameterName, Object value) {
                    return (GetSeriesMetrics) super.set(parameterName, value);
                  }
                }

                /**
                 * An accessor for creating requests from the Instances collection.
                 *
                 * <p>The typical use is:</p>
                 * <pre>
                 *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
                 *   {@code CloudHealthcare.Instances.List request = healthcare.instances().list(parameters ...)}
                 * </pre>
                 *
                 * @return the resource collection
                 */
                public Instances instances() {
                  return new Instances();
                }

                /**
                 * The "instances" collection of methods.
                 */
                public class Instances {

                  /**
                   * GetStorageInfo returns the storage info of the specified resource.
                   *
                   * Create a request for the method "instances.getStorageInfo".
                   *
                   * This request holds the parameters needed by the healthcare server.  After setting any optional
                   * parameters, call the {@link GetStorageInfo#execute()} method to invoke the remote operation.
                   *
                   * @param resource Required. The path of the instance to return storage info for, in the form: `projects/{projectID}/lo
                   *        cations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{stu
                   *        dyUID}/series/{seriesUID}/instances/{instanceUID}`
                   * @return the request
                   */
                  public GetStorageInfo getStorageInfo(java.lang.String resource) throws java.io.IOException {
                    GetStorageInfo result = new GetStorageInfo(resource);
                    initialize(result);
                    return result;
                  }

                  public class GetStorageInfo extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.StorageInfo> {

                    private static final String REST_PATH = "v1/{+resource}:getStorageInfo";

                    private final java.util.regex.Pattern RESOURCE_PATTERN =
                        java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+/series/[^/]+/instances/[^/]+$");

                    /**
                     * GetStorageInfo returns the storage info of the specified resource.
                     *
                     * Create a request for the method "instances.getStorageInfo".
                     *
                     * This request holds the parameters needed by the the healthcare server.  After setting any
                     * optional parameters, call the {@link GetStorageInfo#execute()} method to invoke the remote
                     * operation. <p> {@link GetStorageInfo#initialize(com.google.api.client.googleapis.services.Abstr
                     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
                     * the constructor. </p>
                     *
                     * @param resource Required. The path of the instance to return storage info for, in the form: `projects/{projectID}/lo
                   *        cations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{stu
                   *        dyUID}/series/{seriesUID}/instances/{instanceUID}`
                     * @since 1.13
                     */
                    protected GetStorageInfo(java.lang.String resource) {
                      super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.StorageInfo.class);
                      this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
                      if (!getSuppressPatternChecks()) {
                        com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                            "Parameter resource must conform to the pattern " +
                            "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+/series/[^/]+/instances/[^/]+$");
                      }
                    }

                    @Override
                    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                      return super.executeUsingHead();
                    }

                    @Override
                    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                      return super.buildHttpRequestUsingHead();
                    }

                    @Override
                    public GetStorageInfo set$Xgafv(java.lang.String $Xgafv) {
                      return (GetStorageInfo) super.set$Xgafv($Xgafv);
                    }

                    @Override
                    public GetStorageInfo setAccessToken(java.lang.String accessToken) {
                      return (GetStorageInfo) super.setAccessToken(accessToken);
                    }

                    @Override
                    public GetStorageInfo setAlt(java.lang.String alt) {
                      return (GetStorageInfo) super.setAlt(alt);
                    }

                    @Override
                    public GetStorageInfo setCallback(java.lang.String callback) {
                      return (GetStorageInfo) super.setCallback(callback);
                    }

                    @Override
                    public GetStorageInfo setFields(java.lang.String fields) {
                      return (GetStorageInfo) super.setFields(fields);
                    }

                    @Override
                    public GetStorageInfo setKey(java.lang.String key) {
                      return (GetStorageInfo) super.setKey(key);
                    }

                    @Override
                    public GetStorageInfo setOauthToken(java.lang.String oauthToken) {
                      return (GetStorageInfo) super.setOauthToken(oauthToken);
                    }

                    @Override
                    public GetStorageInfo setPrettyPrint(java.lang.Boolean prettyPrint) {
                      return (GetStorageInfo) super.setPrettyPrint(prettyPrint);
                    }

                    @Override
                    public GetStorageInfo setQuotaUser(java.lang.String quotaUser) {
                      return (GetStorageInfo) super.setQuotaUser(quotaUser);
                    }

                    @Override
                    public GetStorageInfo setUploadType(java.lang.String uploadType) {
                      return (GetStorageInfo) super.setUploadType(uploadType);
                    }

                    @Override
                    public GetStorageInfo setUploadProtocol(java.lang.String uploadProtocol) {
                      return (GetStorageInfo) super.setUploadProtocol(uploadProtocol);
                    }

                    /**
                     * Required. The path of the instance to return storage info for, in the form: `
                     * projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/
                     * {dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/instances/{inst
                     * anceUID}`
                     */
                    @com.google.api.client.util.Key
                    private java.lang.String resource;

                    /** Required. The path of the instance to return storage info for, in the form: `projects/{projectID}/l
                   ocations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/s
                   eries/{seriesUID}/instances/{instanceUID}`
                     */
                    public java.lang.String getResource() {
                      return resource;
                    }

                    /**
                     * Required. The path of the instance to return storage info for, in the form: `
                     * projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/
                     * {dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/instances/{inst
                     * anceUID}`
                     */
                    public GetStorageInfo setResource(java.lang.String resource) {
                      if (!getSuppressPatternChecks()) {
                        com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                            "Parameter resource must conform to the pattern " +
                            "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+/series/[^/]+/instances/[^/]+$");
                      }
                      this.resource = resource;
                      return this;
                    }

                    @Override
                    public GetStorageInfo set(String parameterName, Object value) {
                      return (GetStorageInfo) super.set(parameterName, value);
                    }
                  }

                }
              }
            }
          }
          /**
           * An accessor for creating requests from the Studies collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.Studies.List request = healthcare.studies().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Studies studies() {
            return new Studies();
          }

          /**
           * The "studies" collection of methods.
           */
          public class Studies {

            /**
             * DeleteStudy deletes all instances within the given study. Delete requests are equivalent to the
             * GET requests specified in the Retrieve transaction. The method returns an Operation which will be
             * marked successful when the deletion is complete. Warning: Instances cannot be inserted into a
             * study that is being deleted by an operation until the operation completes. For samples that show
             * how to call DeleteStudy, see [Delete a study, series, or
             * instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-dicom).
             *
             * Create a request for the method "studies.delete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param parent
             * @param dicomWebPath Required. The path of the DeleteStudy request. For example, `studies/{study_uid}`.
             * @return the request
             */
            public Delete delete(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
              Delete result = new Delete(parent, dicomWebPath);
              initialize(result);
              return result;
            }

            public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

              private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

              private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                  java.util.regex.Pattern.compile("^studies/[^/]+$");

              /**
               * DeleteStudy deletes all instances within the given study. Delete requests are equivalent to the
               * GET requests specified in the Retrieve transaction. The method returns an Operation which will
               * be marked successful when the deletion is complete. Warning: Instances cannot be inserted into
               * a study that is being deleted by an operation until the operation completes. For samples that
               * show how to call DeleteStudy, see [Delete a study, series, or
               * instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-dicom).
               *
               * Create a request for the method "studies.delete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent
               * @param dicomWebPath Required. The path of the DeleteStudy request. For example, `studies/{study_uid}`.
               * @since 1.13
               */
              protected Delete(java.lang.String parent, java.lang.String dicomWebPath) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Operation.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              @com.google.api.client.util.Key
              private java.lang.String parent;

              /**

               */
              public java.lang.String getParent() {
                return parent;
              }

              public Delete setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The path of the DeleteStudy request. For example, `studies/{study_uid}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String dicomWebPath;

              /** Required. The path of the DeleteStudy request. For example, `studies/{study_uid}`.
               */
              public java.lang.String getDicomWebPath() {
                return dicomWebPath;
              }

              /**
               * Required. The path of the DeleteStudy request. For example, `studies/{study_uid}`.
               */
              public Delete setDicomWebPath(java.lang.String dicomWebPath) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+$");
                }
                this.dicomWebPath = dicomWebPath;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * RetrieveStudyMetadata returns instance associated with the given study presented as metadata with
             * the bulk data removed. See [RetrieveTransaction]
             * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
             * the implementation of RetrieveStudyMetadata, see [Metadata
             * resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the Cloud
             * Healthcare API conformance statement. For samples that show how to call RetrieveStudyMetadata,
             * see [Retrieve metadata](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-
             * metadata).
             *
             * Create a request for the method "studies.retrieveMetadata".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link RetrieveMetadata#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the DICOM store that is being accessed. For example,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`.
             * @param dicomWebPath Required. The path of the RetrieveStudyMetadata DICOMweb request. For example,
             *        `studies/{study_uid}/metadata`.
             * @return the request
             */
            public RetrieveMetadata retrieveMetadata(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
              RetrieveMetadata result = new RetrieveMetadata(parent, dicomWebPath);
              initialize(result);
              return result;
            }

            public class RetrieveMetadata extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

              private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                  java.util.regex.Pattern.compile("^studies/[^/]+/metadata$");

              /**
               * RetrieveStudyMetadata returns instance associated with the given study presented as metadata
               * with the bulk data removed. See [RetrieveTransaction]
               * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
               * the implementation of RetrieveStudyMetadata, see [Metadata
               * resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the Cloud
               * Healthcare API conformance statement. For samples that show how to call RetrieveStudyMetadata,
               * see [Retrieve metadata](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-
               * metadata).
               *
               * Create a request for the method "studies.retrieveMetadata".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link RetrieveMetadata#execute()} method to invoke the remote
               * operation. <p> {@link RetrieveMetadata#initialize(com.google.api.client.googleapis.services.Abs
               * tractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param parent Required. The name of the DICOM store that is being accessed. For example,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`.
               * @param dicomWebPath Required. The path of the RetrieveStudyMetadata DICOMweb request. For example,
             *        `studies/{study_uid}/metadata`.
               * @since 1.13
               */
              protected RetrieveMetadata(java.lang.String parent, java.lang.String dicomWebPath) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+/metadata$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public RetrieveMetadata set$Xgafv(java.lang.String $Xgafv) {
                return (RetrieveMetadata) super.set$Xgafv($Xgafv);
              }

              @Override
              public RetrieveMetadata setAccessToken(java.lang.String accessToken) {
                return (RetrieveMetadata) super.setAccessToken(accessToken);
              }

              @Override
              public RetrieveMetadata setAlt(java.lang.String alt) {
                return (RetrieveMetadata) super.setAlt(alt);
              }

              @Override
              public RetrieveMetadata setCallback(java.lang.String callback) {
                return (RetrieveMetadata) super.setCallback(callback);
              }

              @Override
              public RetrieveMetadata setFields(java.lang.String fields) {
                return (RetrieveMetadata) super.setFields(fields);
              }

              @Override
              public RetrieveMetadata setKey(java.lang.String key) {
                return (RetrieveMetadata) super.setKey(key);
              }

              @Override
              public RetrieveMetadata setOauthToken(java.lang.String oauthToken) {
                return (RetrieveMetadata) super.setOauthToken(oauthToken);
              }

              @Override
              public RetrieveMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (RetrieveMetadata) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public RetrieveMetadata setQuotaUser(java.lang.String quotaUser) {
                return (RetrieveMetadata) super.setQuotaUser(quotaUser);
              }

              @Override
              public RetrieveMetadata setUploadType(java.lang.String uploadType) {
                return (RetrieveMetadata) super.setUploadType(uploadType);
              }

              @Override
              public RetrieveMetadata setUploadProtocol(java.lang.String uploadProtocol) {
                return (RetrieveMetadata) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the DICOM store that is being accessed. For example, `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_sto
               * re_id}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the DICOM store that is being accessed. For example,
             `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the DICOM store that is being accessed. For example, `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_sto
               * re_id}`.
               */
              public RetrieveMetadata setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The path of the RetrieveStudyMetadata DICOMweb request. For example,
               * `studies/{study_uid}/metadata`.
               */
              @com.google.api.client.util.Key
              private java.lang.String dicomWebPath;

              /** Required. The path of the RetrieveStudyMetadata DICOMweb request. For example,
             `studies/{study_uid}/metadata`.
               */
              public java.lang.String getDicomWebPath() {
                return dicomWebPath;
              }

              /**
               * Required. The path of the RetrieveStudyMetadata DICOMweb request. For example,
               * `studies/{study_uid}/metadata`.
               */
              public RetrieveMetadata setDicomWebPath(java.lang.String dicomWebPath) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+/metadata$");
                }
                this.dicomWebPath = dicomWebPath;
                return this;
              }

              @Override
              public RetrieveMetadata set(String parameterName, Object value) {
                return (RetrieveMetadata) super.set(parameterName, value);
              }
            }
            /**
             * RetrieveStudy returns all instances within the given study. See [RetrieveTransaction]
             * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
             * the implementation of RetrieveStudy, see [DICOM study/series/instances](https://cloud.google.com/
             * healthcare/docs/dicom#dicom_studyseriesinstances) in the Cloud Healthcare API conformance
             * statement. For samples that show how to call RetrieveStudy, see [Retrieve DICOM
             * data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
             *
             * Create a request for the method "studies.retrieveStudy".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link RetrieveStudy#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the DICOM store that is being accessed. For example,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`.
             * @param dicomWebPath Required. The path of the RetrieveStudy DICOMweb request. For example, `studies/{study_uid}`.
             * @return the request
             */
            public RetrieveStudy retrieveStudy(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
              RetrieveStudy result = new RetrieveStudy(parent, dicomWebPath);
              initialize(result);
              return result;
            }

            public class RetrieveStudy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

              private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                  java.util.regex.Pattern.compile("^studies/[^/]+$");

              /**
               * RetrieveStudy returns all instances within the given study. See [RetrieveTransaction]
               * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
               * the implementation of RetrieveStudy, see [DICOM study/series/instances](https://cloud.google.co
               * m/healthcare/docs/dicom#dicom_studyseriesinstances) in the Cloud Healthcare API conformance
               * statement. For samples that show how to call RetrieveStudy, see [Retrieve DICOM
               * data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
               *
               * Create a request for the method "studies.retrieveStudy".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link RetrieveStudy#execute()} method to invoke the remote
               * operation. <p> {@link RetrieveStudy#initialize(com.google.api.client.googleapis.services.Abstra
               * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param parent Required. The name of the DICOM store that is being accessed. For example,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`.
               * @param dicomWebPath Required. The path of the RetrieveStudy DICOMweb request. For example, `studies/{study_uid}`.
               * @since 1.13
               */
              protected RetrieveStudy(java.lang.String parent, java.lang.String dicomWebPath) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public RetrieveStudy set$Xgafv(java.lang.String $Xgafv) {
                return (RetrieveStudy) super.set$Xgafv($Xgafv);
              }

              @Override
              public RetrieveStudy setAccessToken(java.lang.String accessToken) {
                return (RetrieveStudy) super.setAccessToken(accessToken);
              }

              @Override
              public RetrieveStudy setAlt(java.lang.String alt) {
                return (RetrieveStudy) super.setAlt(alt);
              }

              @Override
              public RetrieveStudy setCallback(java.lang.String callback) {
                return (RetrieveStudy) super.setCallback(callback);
              }

              @Override
              public RetrieveStudy setFields(java.lang.String fields) {
                return (RetrieveStudy) super.setFields(fields);
              }

              @Override
              public RetrieveStudy setKey(java.lang.String key) {
                return (RetrieveStudy) super.setKey(key);
              }

              @Override
              public RetrieveStudy setOauthToken(java.lang.String oauthToken) {
                return (RetrieveStudy) super.setOauthToken(oauthToken);
              }

              @Override
              public RetrieveStudy setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (RetrieveStudy) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public RetrieveStudy setQuotaUser(java.lang.String quotaUser) {
                return (RetrieveStudy) super.setQuotaUser(quotaUser);
              }

              @Override
              public RetrieveStudy setUploadType(java.lang.String uploadType) {
                return (RetrieveStudy) super.setUploadType(uploadType);
              }

              @Override
              public RetrieveStudy setUploadProtocol(java.lang.String uploadProtocol) {
                return (RetrieveStudy) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the DICOM store that is being accessed. For example, `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_sto
               * re_id}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the DICOM store that is being accessed. For example,
             `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the DICOM store that is being accessed. For example, `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_sto
               * re_id}`.
               */
              public RetrieveStudy setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The path of the RetrieveStudy DICOMweb request. For example,
               * `studies/{study_uid}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String dicomWebPath;

              /** Required. The path of the RetrieveStudy DICOMweb request. For example, `studies/{study_uid}`.
               */
              public java.lang.String getDicomWebPath() {
                return dicomWebPath;
              }

              /**
               * Required. The path of the RetrieveStudy DICOMweb request. For example,
               * `studies/{study_uid}`.
               */
              public RetrieveStudy setDicomWebPath(java.lang.String dicomWebPath) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+$");
                }
                this.dicomWebPath = dicomWebPath;
                return this;
              }

              @Override
              public RetrieveStudy set(String parameterName, Object value) {
                return (RetrieveStudy) super.set(parameterName, value);
              }
            }
            /**
             * SearchForInstances returns a list of matching instances. See [Search Transaction]
             * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
             * the implementation of SearchForInstances, see [Search
             * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
             * Healthcare API conformance statement. For samples that show how to call SearchForInstances, see
             * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
             *
             * Create a request for the method "studies.searchForInstances".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link SearchForInstances#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the DICOM store that is being accessed. For example,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`.
             * @param dicomWebPath Required. The path of the SearchForInstancesRequest DICOMweb request. For example, `instances`,
             *        `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
             * @return the request
             */
            public SearchForInstances searchForInstances(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
              SearchForInstances result = new SearchForInstances(parent, dicomWebPath);
              initialize(result);
              return result;
            }

            public class SearchForInstances extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

              private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                  java.util.regex.Pattern.compile("^studies/[^/]+/instances$");

              /**
               * SearchForInstances returns a list of matching instances. See [Search Transaction]
               * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
               * the implementation of SearchForInstances, see [Search
               * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
               * Healthcare API conformance statement. For samples that show how to call SearchForInstances, see
               * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-
               * dicom).
               *
               * Create a request for the method "studies.searchForInstances".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link SearchForInstances#execute()} method to invoke the remote
               * operation. <p> {@link SearchForInstances#initialize(com.google.api.client.googleapis.services.A
               * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param parent Required. The name of the DICOM store that is being accessed. For example,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`.
               * @param dicomWebPath Required. The path of the SearchForInstancesRequest DICOMweb request. For example, `instances`,
             *        `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
               * @since 1.13
               */
              protected SearchForInstances(java.lang.String parent, java.lang.String dicomWebPath) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+/instances$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public SearchForInstances set$Xgafv(java.lang.String $Xgafv) {
                return (SearchForInstances) super.set$Xgafv($Xgafv);
              }

              @Override
              public SearchForInstances setAccessToken(java.lang.String accessToken) {
                return (SearchForInstances) super.setAccessToken(accessToken);
              }

              @Override
              public SearchForInstances setAlt(java.lang.String alt) {
                return (SearchForInstances) super.setAlt(alt);
              }

              @Override
              public SearchForInstances setCallback(java.lang.String callback) {
                return (SearchForInstances) super.setCallback(callback);
              }

              @Override
              public SearchForInstances setFields(java.lang.String fields) {
                return (SearchForInstances) super.setFields(fields);
              }

              @Override
              public SearchForInstances setKey(java.lang.String key) {
                return (SearchForInstances) super.setKey(key);
              }

              @Override
              public SearchForInstances setOauthToken(java.lang.String oauthToken) {
                return (SearchForInstances) super.setOauthToken(oauthToken);
              }

              @Override
              public SearchForInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SearchForInstances) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SearchForInstances setQuotaUser(java.lang.String quotaUser) {
                return (SearchForInstances) super.setQuotaUser(quotaUser);
              }

              @Override
              public SearchForInstances setUploadType(java.lang.String uploadType) {
                return (SearchForInstances) super.setUploadType(uploadType);
              }

              @Override
              public SearchForInstances setUploadProtocol(java.lang.String uploadProtocol) {
                return (SearchForInstances) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the DICOM store that is being accessed. For example, `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_sto
               * re_id}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the DICOM store that is being accessed. For example,
             `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the DICOM store that is being accessed. For example, `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_sto
               * re_id}`.
               */
              public SearchForInstances setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The path of the SearchForInstancesRequest DICOMweb request. For example,
               * `instances`, `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
               */
              @com.google.api.client.util.Key
              private java.lang.String dicomWebPath;

              /** Required. The path of the SearchForInstancesRequest DICOMweb request. For example, `instances`,
             `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
               */
              public java.lang.String getDicomWebPath() {
                return dicomWebPath;
              }

              /**
               * Required. The path of the SearchForInstancesRequest DICOMweb request. For example,
               * `instances`, `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
               */
              public SearchForInstances setDicomWebPath(java.lang.String dicomWebPath) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+/instances$");
                }
                this.dicomWebPath = dicomWebPath;
                return this;
              }

              @Override
              public SearchForInstances set(String parameterName, Object value) {
                return (SearchForInstances) super.set(parameterName, value);
              }
            }
            /**
             * SearchForSeries returns a list of matching series. See [Search Transaction]
             * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
             * the implementation of SearchForSeries, see [Search
             * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
             * Healthcare API conformance statement. For samples that show how to call SearchForSeries, see
             * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
             *
             * Create a request for the method "studies.searchForSeries".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link SearchForSeries#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the DICOM store that is being accessed. For example,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`.
             * @param dicomWebPath Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
             *        `studies/{study_uid}/series`.
             * @return the request
             */
            public SearchForSeries searchForSeries(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
              SearchForSeries result = new SearchForSeries(parent, dicomWebPath);
              initialize(result);
              return result;
            }

            public class SearchForSeries extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

              private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                  java.util.regex.Pattern.compile("^studies/[^/]+/series$");

              /**
               * SearchForSeries returns a list of matching series. See [Search Transaction]
               * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
               * the implementation of SearchForSeries, see [Search
               * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
               * Healthcare API conformance statement. For samples that show how to call SearchForSeries, see
               * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-
               * dicom).
               *
               * Create a request for the method "studies.searchForSeries".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link SearchForSeries#execute()} method to invoke the remote
               * operation. <p> {@link SearchForSeries#initialize(com.google.api.client.googleapis.services.Abst
               * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param parent Required. The name of the DICOM store that is being accessed. For example,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`.
               * @param dicomWebPath Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
             *        `studies/{study_uid}/series`.
               * @since 1.13
               */
              protected SearchForSeries(java.lang.String parent, java.lang.String dicomWebPath) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+/series$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public SearchForSeries set$Xgafv(java.lang.String $Xgafv) {
                return (SearchForSeries) super.set$Xgafv($Xgafv);
              }

              @Override
              public SearchForSeries setAccessToken(java.lang.String accessToken) {
                return (SearchForSeries) super.setAccessToken(accessToken);
              }

              @Override
              public SearchForSeries setAlt(java.lang.String alt) {
                return (SearchForSeries) super.setAlt(alt);
              }

              @Override
              public SearchForSeries setCallback(java.lang.String callback) {
                return (SearchForSeries) super.setCallback(callback);
              }

              @Override
              public SearchForSeries setFields(java.lang.String fields) {
                return (SearchForSeries) super.setFields(fields);
              }

              @Override
              public SearchForSeries setKey(java.lang.String key) {
                return (SearchForSeries) super.setKey(key);
              }

              @Override
              public SearchForSeries setOauthToken(java.lang.String oauthToken) {
                return (SearchForSeries) super.setOauthToken(oauthToken);
              }

              @Override
              public SearchForSeries setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SearchForSeries) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SearchForSeries setQuotaUser(java.lang.String quotaUser) {
                return (SearchForSeries) super.setQuotaUser(quotaUser);
              }

              @Override
              public SearchForSeries setUploadType(java.lang.String uploadType) {
                return (SearchForSeries) super.setUploadType(uploadType);
              }

              @Override
              public SearchForSeries setUploadProtocol(java.lang.String uploadProtocol) {
                return (SearchForSeries) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the DICOM store that is being accessed. For example, `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_sto
               * re_id}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the DICOM store that is being accessed. For example,
             `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the DICOM store that is being accessed. For example, `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_sto
               * re_id}`.
               */
              public SearchForSeries setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The path of the SearchForSeries DICOMweb request. For example, `series`
               * or `studies/{study_uid}/series`.
               */
              @com.google.api.client.util.Key
              private java.lang.String dicomWebPath;

              /** Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
             `studies/{study_uid}/series`.
               */
              public java.lang.String getDicomWebPath() {
                return dicomWebPath;
              }

              /**
               * Required. The path of the SearchForSeries DICOMweb request. For example, `series`
               * or `studies/{study_uid}/series`.
               */
              public SearchForSeries setDicomWebPath(java.lang.String dicomWebPath) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+/series$");
                }
                this.dicomWebPath = dicomWebPath;
                return this;
              }

              @Override
              public SearchForSeries set(String parameterName, Object value) {
                return (SearchForSeries) super.set(parameterName, value);
              }
            }
            /**
             * StoreInstances stores DICOM instances associated with study instance unique identifiers (SUID).
             * See [Store Transaction]
             * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5). For details on
             * the implementation of StoreInstances, see [Store
             * transaction](https://cloud.google.com/healthcare/docs/dicom#store_transaction) in the Cloud
             * Healthcare API conformance statement. For samples that show how to call StoreInstances, see
             * [Store DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#store-dicom).
             *
             * Create a request for the method "studies.storeInstances".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link StoreInstances#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the DICOM store that is being accessed. For example,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`.
             * @param dicomWebPath Required. The path of the StoreInstances DICOMweb request. For example, `studies/[{study_uid}]`.
             *        Note that the `study_uid` is optional.
             * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
             * @return the request
             */
            public StoreInstances storeInstances(java.lang.String parent, java.lang.String dicomWebPath, com.google.api.services.healthcare.v1.model.HttpBody content) throws java.io.IOException {
              StoreInstances result = new StoreInstances(parent, dicomWebPath, content);
              initialize(result);
              return result;
            }

            public class StoreInstances extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

              private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                  java.util.regex.Pattern.compile("^studies/[^/]+$");

              /**
               * StoreInstances stores DICOM instances associated with study instance unique identifiers (SUID).
               * See [Store Transaction]
               * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5). For details on
               * the implementation of StoreInstances, see [Store
               * transaction](https://cloud.google.com/healthcare/docs/dicom#store_transaction) in the Cloud
               * Healthcare API conformance statement. For samples that show how to call StoreInstances, see
               * [Store DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#store-dicom).
               *
               * Create a request for the method "studies.storeInstances".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link StoreInstances#execute()} method to invoke the remote
               * operation. <p> {@link StoreInstances#initialize(com.google.api.client.googleapis.services.Abstr
               * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param parent Required. The name of the DICOM store that is being accessed. For example,
             *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
             *        ore_id}`.
               * @param dicomWebPath Required. The path of the StoreInstances DICOMweb request. For example, `studies/[{study_uid}]`.
             *        Note that the `study_uid` is optional.
               * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
               * @since 1.13
               */
              protected StoreInstances(java.lang.String parent, java.lang.String dicomWebPath, com.google.api.services.healthcare.v1.model.HttpBody content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+$");
                }
              }

              @Override
              public StoreInstances set$Xgafv(java.lang.String $Xgafv) {
                return (StoreInstances) super.set$Xgafv($Xgafv);
              }

              @Override
              public StoreInstances setAccessToken(java.lang.String accessToken) {
                return (StoreInstances) super.setAccessToken(accessToken);
              }

              @Override
              public StoreInstances setAlt(java.lang.String alt) {
                return (StoreInstances) super.setAlt(alt);
              }

              @Override
              public StoreInstances setCallback(java.lang.String callback) {
                return (StoreInstances) super.setCallback(callback);
              }

              @Override
              public StoreInstances setFields(java.lang.String fields) {
                return (StoreInstances) super.setFields(fields);
              }

              @Override
              public StoreInstances setKey(java.lang.String key) {
                return (StoreInstances) super.setKey(key);
              }

              @Override
              public StoreInstances setOauthToken(java.lang.String oauthToken) {
                return (StoreInstances) super.setOauthToken(oauthToken);
              }

              @Override
              public StoreInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (StoreInstances) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public StoreInstances setQuotaUser(java.lang.String quotaUser) {
                return (StoreInstances) super.setQuotaUser(quotaUser);
              }

              @Override
              public StoreInstances setUploadType(java.lang.String uploadType) {
                return (StoreInstances) super.setUploadType(uploadType);
              }

              @Override
              public StoreInstances setUploadProtocol(java.lang.String uploadProtocol) {
                return (StoreInstances) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the DICOM store that is being accessed. For example, `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_sto
               * re_id}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the DICOM store that is being accessed. For example,
             `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the DICOM store that is being accessed. For example, `project
               * s/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_sto
               * re_id}`.
               */
              public StoreInstances setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The path of the StoreInstances DICOMweb request. For example,
               * `studies/[{study_uid}]`. Note that the `study_uid` is optional.
               */
              @com.google.api.client.util.Key
              private java.lang.String dicomWebPath;

              /** Required. The path of the StoreInstances DICOMweb request. For example, `studies/[{study_uid}]`.
             Note that the `study_uid` is optional.
               */
              public java.lang.String getDicomWebPath() {
                return dicomWebPath;
              }

              /**
               * Required. The path of the StoreInstances DICOMweb request. For example,
               * `studies/[{study_uid}]`. Note that the `study_uid` is optional.
               */
              public StoreInstances setDicomWebPath(java.lang.String dicomWebPath) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                      "Parameter dicomWebPath must conform to the pattern " +
                      "^studies/[^/]+$");
                }
                this.dicomWebPath = dicomWebPath;
                return this;
              }

              @Override
              public StoreInstances set(String parameterName, Object value) {
                return (StoreInstances) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Series collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
             *   {@code CloudHealthcare.Series.List request = healthcare.series().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Series series() {
              return new Series();
            }

            /**
             * The "series" collection of methods.
             */
            public class Series {

              /**
               * DeleteSeries deletes all instances within the given study and series. Delete requests are
               * equivalent to the GET requests specified in the Retrieve transaction. The method returns an
               * Operation which will be marked successful when the deletion is complete. Warning: Instances
               * cannot be inserted into a series that is being deleted by an operation until the operation
               * completes. For samples that show how to call DeleteSeries, see [Delete a study, series, or
               * instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-dicom).
               *
               * Create a request for the method "series.delete".
               *
               * This request holds the parameters needed by the healthcare server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The name of the DICOM store that is being accessed. For example,
               *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
               *        ore_id}`.
               * @param dicomWebPath Required. The path of the DeleteSeries request. For example,
               *        `studies/{study_uid}/series/{series_uid}`.
               * @return the request
               */
              public Delete delete(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
                Delete result = new Delete(parent, dicomWebPath);
                initialize(result);
                return result;
              }

              public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

                private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

                private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                    java.util.regex.Pattern.compile("^studies/[^/]+/series/[^/]+$");

                /**
                 * DeleteSeries deletes all instances within the given study and series. Delete requests are
                 * equivalent to the GET requests specified in the Retrieve transaction. The method returns an
                 * Operation which will be marked successful when the deletion is complete. Warning: Instances
                 * cannot be inserted into a series that is being deleted by an operation until the operation
                 * completes. For samples that show how to call DeleteSeries, see [Delete a study, series, or
                 * instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-dicom).
                 *
                 * Create a request for the method "series.delete".
                 *
                 * This request holds the parameters needed by the the healthcare server.  After setting any
                 * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 * <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The name of the DICOM store that is being accessed. For example,
               *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
               *        ore_id}`.
                 * @param dicomWebPath Required. The path of the DeleteSeries request. For example,
               *        `studies/{study_uid}/series/{series_uid}`.
                 * @since 1.13
                 */
                protected Delete(java.lang.String parent, java.lang.String dicomWebPath) {
                  super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Operation.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                  }
                  this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                        "Parameter dicomWebPath must conform to the pattern " +
                        "^studies/[^/]+/series/[^/]+$");
                  }
                }

                @Override
                public Delete set$Xgafv(java.lang.String $Xgafv) {
                  return (Delete) super.set$Xgafv($Xgafv);
                }

                @Override
                public Delete setAccessToken(java.lang.String accessToken) {
                  return (Delete) super.setAccessToken(accessToken);
                }

                @Override
                public Delete setAlt(java.lang.String alt) {
                  return (Delete) super.setAlt(alt);
                }

                @Override
                public Delete setCallback(java.lang.String callback) {
                  return (Delete) super.setCallback(callback);
                }

                @Override
                public Delete setFields(java.lang.String fields) {
                  return (Delete) super.setFields(fields);
                }

                @Override
                public Delete setKey(java.lang.String key) {
                  return (Delete) super.setKey(key);
                }

                @Override
                public Delete setOauthToken(java.lang.String oauthToken) {
                  return (Delete) super.setOauthToken(oauthToken);
                }

                @Override
                public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Delete) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Delete setQuotaUser(java.lang.String quotaUser) {
                  return (Delete) super.setQuotaUser(quotaUser);
                }

                @Override
                public Delete setUploadType(java.lang.String uploadType) {
                  return (Delete) super.setUploadType(uploadType);
                }

                @Override
                public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Delete) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the DICOM store that is being accessed. For example, `proje
                 * cts/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom
                 * _store_id}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The name of the DICOM store that is being accessed. For example,
               `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The name of the DICOM store that is being accessed. For example, `proje
                 * cts/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom
                 * _store_id}`.
                 */
                public Delete setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Required. The path of the DeleteSeries request. For example,
                 * `studies/{study_uid}/series/{series_uid}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String dicomWebPath;

                /** Required. The path of the DeleteSeries request. For example,
               `studies/{study_uid}/series/{series_uid}`.
                 */
                public java.lang.String getDicomWebPath() {
                  return dicomWebPath;
                }

                /**
                 * Required. The path of the DeleteSeries request. For example,
                 * `studies/{study_uid}/series/{series_uid}`.
                 */
                public Delete setDicomWebPath(java.lang.String dicomWebPath) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                        "Parameter dicomWebPath must conform to the pattern " +
                        "^studies/[^/]+/series/[^/]+$");
                  }
                  this.dicomWebPath = dicomWebPath;
                  return this;
                }

                @Override
                public Delete set(String parameterName, Object value) {
                  return (Delete) super.set(parameterName, value);
                }
              }
              /**
               * RetrieveSeriesMetadata returns instance associated with the given study and series, presented as
               * metadata with the bulk data removed. See [RetrieveTransaction]
               * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
               * the implementation of RetrieveSeriesMetadata, see [Metadata
               * resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the Cloud
               * Healthcare API conformance statement. For samples that show how to call RetrieveSeriesMetadata,
               * see [Retrieve metadata](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-
               * metadata).
               *
               * Create a request for the method "series.retrieveMetadata".
               *
               * This request holds the parameters needed by the healthcare server.  After setting any optional
               * parameters, call the {@link RetrieveMetadata#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The name of the DICOM store that is being accessed. For example,
               *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
               *        ore_id}`.
               * @param dicomWebPath Required. The path of the RetrieveSeriesMetadata DICOMweb request. For example,
               *        `studies/{study_uid}/series/{series_uid}/metadata`.
               * @return the request
               */
              public RetrieveMetadata retrieveMetadata(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
                RetrieveMetadata result = new RetrieveMetadata(parent, dicomWebPath);
                initialize(result);
                return result;
              }

              public class RetrieveMetadata extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

                private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

                private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                    java.util.regex.Pattern.compile("^studies/[^/]+/series/[^/]+/metadata$");

                /**
                 * RetrieveSeriesMetadata returns instance associated with the given study and series, presented
                 * as metadata with the bulk data removed. See [RetrieveTransaction]
                 * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
                 * the implementation of RetrieveSeriesMetadata, see [Metadata
                 * resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the Cloud
                 * Healthcare API conformance statement. For samples that show how to call RetrieveSeriesMetadata,
                 * see [Retrieve metadata](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-
                 * metadata).
                 *
                 * Create a request for the method "series.retrieveMetadata".
                 *
                 * This request holds the parameters needed by the the healthcare server.  After setting any
                 * optional parameters, call the {@link RetrieveMetadata#execute()} method to invoke the remote
                 * operation. <p> {@link RetrieveMetadata#initialize(com.google.api.client.googleapis.services.Abs
                 * tractGoogleClientRequest)} must be called to initialize this instance immediately after
                 * invoking the constructor. </p>
                 *
                 * @param parent Required. The name of the DICOM store that is being accessed. For example,
               *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
               *        ore_id}`.
                 * @param dicomWebPath Required. The path of the RetrieveSeriesMetadata DICOMweb request. For example,
               *        `studies/{study_uid}/series/{series_uid}/metadata`.
                 * @since 1.13
                 */
                protected RetrieveMetadata(java.lang.String parent, java.lang.String dicomWebPath) {
                  super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                  }
                  this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                        "Parameter dicomWebPath must conform to the pattern " +
                        "^studies/[^/]+/series/[^/]+/metadata$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public RetrieveMetadata set$Xgafv(java.lang.String $Xgafv) {
                  return (RetrieveMetadata) super.set$Xgafv($Xgafv);
                }

                @Override
                public RetrieveMetadata setAccessToken(java.lang.String accessToken) {
                  return (RetrieveMetadata) super.setAccessToken(accessToken);
                }

                @Override
                public RetrieveMetadata setAlt(java.lang.String alt) {
                  return (RetrieveMetadata) super.setAlt(alt);
                }

                @Override
                public RetrieveMetadata setCallback(java.lang.String callback) {
                  return (RetrieveMetadata) super.setCallback(callback);
                }

                @Override
                public RetrieveMetadata setFields(java.lang.String fields) {
                  return (RetrieveMetadata) super.setFields(fields);
                }

                @Override
                public RetrieveMetadata setKey(java.lang.String key) {
                  return (RetrieveMetadata) super.setKey(key);
                }

                @Override
                public RetrieveMetadata setOauthToken(java.lang.String oauthToken) {
                  return (RetrieveMetadata) super.setOauthToken(oauthToken);
                }

                @Override
                public RetrieveMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (RetrieveMetadata) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public RetrieveMetadata setQuotaUser(java.lang.String quotaUser) {
                  return (RetrieveMetadata) super.setQuotaUser(quotaUser);
                }

                @Override
                public RetrieveMetadata setUploadType(java.lang.String uploadType) {
                  return (RetrieveMetadata) super.setUploadType(uploadType);
                }

                @Override
                public RetrieveMetadata setUploadProtocol(java.lang.String uploadProtocol) {
                  return (RetrieveMetadata) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the DICOM store that is being accessed. For example, `proje
                 * cts/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom
                 * _store_id}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The name of the DICOM store that is being accessed. For example,
               `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The name of the DICOM store that is being accessed. For example, `proje
                 * cts/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom
                 * _store_id}`.
                 */
                public RetrieveMetadata setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Required. The path of the RetrieveSeriesMetadata DICOMweb request. For example,
                 * `studies/{study_uid}/series/{series_uid}/metadata`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String dicomWebPath;

                /** Required. The path of the RetrieveSeriesMetadata DICOMweb request. For example,
               `studies/{study_uid}/series/{series_uid}/metadata`.
                 */
                public java.lang.String getDicomWebPath() {
                  return dicomWebPath;
                }

                /**
                 * Required. The path of the RetrieveSeriesMetadata DICOMweb request. For example,
                 * `studies/{study_uid}/series/{series_uid}/metadata`.
                 */
                public RetrieveMetadata setDicomWebPath(java.lang.String dicomWebPath) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                        "Parameter dicomWebPath must conform to the pattern " +
                        "^studies/[^/]+/series/[^/]+/metadata$");
                  }
                  this.dicomWebPath = dicomWebPath;
                  return this;
                }

                @Override
                public RetrieveMetadata set(String parameterName, Object value) {
                  return (RetrieveMetadata) super.set(parameterName, value);
                }
              }
              /**
               * RetrieveSeries returns all instances within the given study and series. See [RetrieveTransaction]
               * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
               * the implementation of RetrieveSeries, see [DICOM study/series/instances](https://cloud.google.com
               * /healthcare/docs/dicom#dicom_studyseriesinstances) in the Cloud Healthcare API conformance
               * statement. For samples that show how to call RetrieveSeries, see [Retrieve DICOM
               * data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
               *
               * Create a request for the method "series.retrieveSeries".
               *
               * This request holds the parameters needed by the healthcare server.  After setting any optional
               * parameters, call the {@link RetrieveSeries#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The name of the DICOM store that is being accessed. For example,
               *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
               *        ore_id}`.
               * @param dicomWebPath Required. The path of the RetrieveSeries DICOMweb request. For example,
               *        `studies/{study_uid}/series/{series_uid}`.
               * @return the request
               */
              public RetrieveSeries retrieveSeries(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
                RetrieveSeries result = new RetrieveSeries(parent, dicomWebPath);
                initialize(result);
                return result;
              }

              public class RetrieveSeries extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

                private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

                private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                    java.util.regex.Pattern.compile("^studies/[^/]+/series/[^/]+$");

                /**
                 * RetrieveSeries returns all instances within the given study and series. See
                 * [RetrieveTransaction]
                 * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
                 * the implementation of RetrieveSeries, see [DICOM study/series/instances](https://cloud.google.c
                 * om/healthcare/docs/dicom#dicom_studyseriesinstances) in the Cloud Healthcare API conformance
                 * statement. For samples that show how to call RetrieveSeries, see [Retrieve DICOM
                 * data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
                 *
                 * Create a request for the method "series.retrieveSeries".
                 *
                 * This request holds the parameters needed by the the healthcare server.  After setting any
                 * optional parameters, call the {@link RetrieveSeries#execute()} method to invoke the remote
                 * operation. <p> {@link RetrieveSeries#initialize(com.google.api.client.googleapis.services.Abstr
                 * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
                 * the constructor. </p>
                 *
                 * @param parent Required. The name of the DICOM store that is being accessed. For example,
               *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
               *        ore_id}`.
                 * @param dicomWebPath Required. The path of the RetrieveSeries DICOMweb request. For example,
               *        `studies/{study_uid}/series/{series_uid}`.
                 * @since 1.13
                 */
                protected RetrieveSeries(java.lang.String parent, java.lang.String dicomWebPath) {
                  super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                  }
                  this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                        "Parameter dicomWebPath must conform to the pattern " +
                        "^studies/[^/]+/series/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public RetrieveSeries set$Xgafv(java.lang.String $Xgafv) {
                  return (RetrieveSeries) super.set$Xgafv($Xgafv);
                }

                @Override
                public RetrieveSeries setAccessToken(java.lang.String accessToken) {
                  return (RetrieveSeries) super.setAccessToken(accessToken);
                }

                @Override
                public RetrieveSeries setAlt(java.lang.String alt) {
                  return (RetrieveSeries) super.setAlt(alt);
                }

                @Override
                public RetrieveSeries setCallback(java.lang.String callback) {
                  return (RetrieveSeries) super.setCallback(callback);
                }

                @Override
                public RetrieveSeries setFields(java.lang.String fields) {
                  return (RetrieveSeries) super.setFields(fields);
                }

                @Override
                public RetrieveSeries setKey(java.lang.String key) {
                  return (RetrieveSeries) super.setKey(key);
                }

                @Override
                public RetrieveSeries setOauthToken(java.lang.String oauthToken) {
                  return (RetrieveSeries) super.setOauthToken(oauthToken);
                }

                @Override
                public RetrieveSeries setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (RetrieveSeries) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public RetrieveSeries setQuotaUser(java.lang.String quotaUser) {
                  return (RetrieveSeries) super.setQuotaUser(quotaUser);
                }

                @Override
                public RetrieveSeries setUploadType(java.lang.String uploadType) {
                  return (RetrieveSeries) super.setUploadType(uploadType);
                }

                @Override
                public RetrieveSeries setUploadProtocol(java.lang.String uploadProtocol) {
                  return (RetrieveSeries) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the DICOM store that is being accessed. For example, `proje
                 * cts/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom
                 * _store_id}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The name of the DICOM store that is being accessed. For example,
               `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The name of the DICOM store that is being accessed. For example, `proje
                 * cts/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom
                 * _store_id}`.
                 */
                public RetrieveSeries setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Required. The path of the RetrieveSeries DICOMweb request. For example,
                 * `studies/{study_uid}/series/{series_uid}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String dicomWebPath;

                /** Required. The path of the RetrieveSeries DICOMweb request. For example,
               `studies/{study_uid}/series/{series_uid}`.
                 */
                public java.lang.String getDicomWebPath() {
                  return dicomWebPath;
                }

                /**
                 * Required. The path of the RetrieveSeries DICOMweb request. For example,
                 * `studies/{study_uid}/series/{series_uid}`.
                 */
                public RetrieveSeries setDicomWebPath(java.lang.String dicomWebPath) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                        "Parameter dicomWebPath must conform to the pattern " +
                        "^studies/[^/]+/series/[^/]+$");
                  }
                  this.dicomWebPath = dicomWebPath;
                  return this;
                }

                @Override
                public RetrieveSeries set(String parameterName, Object value) {
                  return (RetrieveSeries) super.set(parameterName, value);
                }
              }
              /**
               * SearchForInstances returns a list of matching instances. See [Search Transaction]
               * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
               * the implementation of SearchForInstances, see [Search
               * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
               * Healthcare API conformance statement. For samples that show how to call SearchForInstances, see
               * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
               *
               * Create a request for the method "series.searchForInstances".
               *
               * This request holds the parameters needed by the healthcare server.  After setting any optional
               * parameters, call the {@link SearchForInstances#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The name of the DICOM store that is being accessed. For example,
               *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
               *        ore_id}`.
               * @param dicomWebPath Required. The path of the SearchForInstancesRequest DICOMweb request. For example, `instances`,
               *        `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
               * @return the request
               */
              public SearchForInstances searchForInstances(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
                SearchForInstances result = new SearchForInstances(parent, dicomWebPath);
                initialize(result);
                return result;
              }

              public class SearchForInstances extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

                private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

                private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                    java.util.regex.Pattern.compile("^studies/[^/]+/series/[^/]+/instances$");

                /**
                 * SearchForInstances returns a list of matching instances. See [Search Transaction]
                 * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
                 * the implementation of SearchForInstances, see [Search
                 * transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
                 * Healthcare API conformance statement. For samples that show how to call SearchForInstances, see
                 * [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-
                 * dicom).
                 *
                 * Create a request for the method "series.searchForInstances".
                 *
                 * This request holds the parameters needed by the the healthcare server.  After setting any
                 * optional parameters, call the {@link SearchForInstances#execute()} method to invoke the remote
                 * operation. <p> {@link SearchForInstances#initialize(com.google.api.client.googleapis.services.A
                 * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
                 * invoking the constructor. </p>
                 *
                 * @param parent Required. The name of the DICOM store that is being accessed. For example,
               *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
               *        ore_id}`.
                 * @param dicomWebPath Required. The path of the SearchForInstancesRequest DICOMweb request. For example, `instances`,
               *        `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
                 * @since 1.13
                 */
                protected SearchForInstances(java.lang.String parent, java.lang.String dicomWebPath) {
                  super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                  }
                  this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                        "Parameter dicomWebPath must conform to the pattern " +
                        "^studies/[^/]+/series/[^/]+/instances$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public SearchForInstances set$Xgafv(java.lang.String $Xgafv) {
                  return (SearchForInstances) super.set$Xgafv($Xgafv);
                }

                @Override
                public SearchForInstances setAccessToken(java.lang.String accessToken) {
                  return (SearchForInstances) super.setAccessToken(accessToken);
                }

                @Override
                public SearchForInstances setAlt(java.lang.String alt) {
                  return (SearchForInstances) super.setAlt(alt);
                }

                @Override
                public SearchForInstances setCallback(java.lang.String callback) {
                  return (SearchForInstances) super.setCallback(callback);
                }

                @Override
                public SearchForInstances setFields(java.lang.String fields) {
                  return (SearchForInstances) super.setFields(fields);
                }

                @Override
                public SearchForInstances setKey(java.lang.String key) {
                  return (SearchForInstances) super.setKey(key);
                }

                @Override
                public SearchForInstances setOauthToken(java.lang.String oauthToken) {
                  return (SearchForInstances) super.setOauthToken(oauthToken);
                }

                @Override
                public SearchForInstances setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (SearchForInstances) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public SearchForInstances setQuotaUser(java.lang.String quotaUser) {
                  return (SearchForInstances) super.setQuotaUser(quotaUser);
                }

                @Override
                public SearchForInstances setUploadType(java.lang.String uploadType) {
                  return (SearchForInstances) super.setUploadType(uploadType);
                }

                @Override
                public SearchForInstances setUploadProtocol(java.lang.String uploadProtocol) {
                  return (SearchForInstances) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the DICOM store that is being accessed. For example, `proje
                 * cts/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom
                 * _store_id}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The name of the DICOM store that is being accessed. For example,
               `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The name of the DICOM store that is being accessed. For example, `proje
                 * cts/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom
                 * _store_id}`.
                 */
                public SearchForInstances setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Required. The path of the SearchForInstancesRequest DICOMweb request. For
                 * example, `instances`, `series/{series_uid}/instances`, or
                 * `studies/{study_uid}/instances`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String dicomWebPath;

                /** Required. The path of the SearchForInstancesRequest DICOMweb request. For example, `instances`,
               `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
                 */
                public java.lang.String getDicomWebPath() {
                  return dicomWebPath;
                }

                /**
                 * Required. The path of the SearchForInstancesRequest DICOMweb request. For
                 * example, `instances`, `series/{series_uid}/instances`, or
                 * `studies/{study_uid}/instances`.
                 */
                public SearchForInstances setDicomWebPath(java.lang.String dicomWebPath) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                        "Parameter dicomWebPath must conform to the pattern " +
                        "^studies/[^/]+/series/[^/]+/instances$");
                  }
                  this.dicomWebPath = dicomWebPath;
                  return this;
                }

                @Override
                public SearchForInstances set(String parameterName, Object value) {
                  return (SearchForInstances) super.set(parameterName, value);
                }
              }

              /**
               * An accessor for creating requests from the Instances collection.
               *
               * <p>The typical use is:</p>
               * <pre>
               *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
               *   {@code CloudHealthcare.Instances.List request = healthcare.instances().list(parameters ...)}
               * </pre>
               *
               * @return the resource collection
               */
              public Instances instances() {
                return new Instances();
              }

              /**
               * The "instances" collection of methods.
               */
              public class Instances {

                /**
                 * DeleteInstance deletes an instance associated with the given study, series, and SOP Instance UID.
                 * Delete requests are equivalent to the GET requests specified in the Retrieve transaction. Study
                 * and series search results can take a few seconds to be updated after an instance is deleted using
                 * DeleteInstance. For samples that show how to call DeleteInstance, see [Delete a study, series, or
                 * instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-dicom).
                 *
                 * Create a request for the method "instances.delete".
                 *
                 * This request holds the parameters needed by the healthcare server.  After setting any optional
                 * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                 *
                 * @param parent Required. The name of the DICOM store that is being accessed. For example,
                 *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                 *        ore_id}`.
                 * @param dicomWebPath Required. The path of the DeleteInstance request. For example,
                 *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                 * @return the request
                 */
                public Delete delete(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
                  Delete result = new Delete(parent, dicomWebPath);
                  initialize(result);
                  return result;
                }

                public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

                  private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                  private final java.util.regex.Pattern PARENT_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

                  private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                      java.util.regex.Pattern.compile("^studies/[^/]+/series/[^/]+/instances/[^/]+$");

                  /**
                   * DeleteInstance deletes an instance associated with the given study, series, and SOP Instance
                   * UID. Delete requests are equivalent to the GET requests specified in the Retrieve transaction.
                   * Study and series search results can take a few seconds to be updated after an instance is
                   * deleted using DeleteInstance. For samples that show how to call DeleteInstance, see [Delete a
                   * study, series, or instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-
                   * dicom).
                   *
                   * Create a request for the method "instances.delete".
                   *
                   * This request holds the parameters needed by the the healthcare server.  After setting any
                   * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
                   * <p> {@link
                   * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                   * be called to initialize this instance immediately after invoking the constructor. </p>
                   *
                   * @param parent Required. The name of the DICOM store that is being accessed. For example,
                 *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                 *        ore_id}`.
                   * @param dicomWebPath Required. The path of the DeleteInstance request. For example,
                 *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                   * @since 1.13
                   */
                  protected Delete(java.lang.String parent, java.lang.String dicomWebPath) {
                    super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
                    this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                    }
                    this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                          "Parameter dicomWebPath must conform to the pattern " +
                          "^studies/[^/]+/series/[^/]+/instances/[^/]+$");
                    }
                  }

                  @Override
                  public Delete set$Xgafv(java.lang.String $Xgafv) {
                    return (Delete) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public Delete setAccessToken(java.lang.String accessToken) {
                    return (Delete) super.setAccessToken(accessToken);
                  }

                  @Override
                  public Delete setAlt(java.lang.String alt) {
                    return (Delete) super.setAlt(alt);
                  }

                  @Override
                  public Delete setCallback(java.lang.String callback) {
                    return (Delete) super.setCallback(callback);
                  }

                  @Override
                  public Delete setFields(java.lang.String fields) {
                    return (Delete) super.setFields(fields);
                  }

                  @Override
                  public Delete setKey(java.lang.String key) {
                    return (Delete) super.setKey(key);
                  }

                  @Override
                  public Delete setOauthToken(java.lang.String oauthToken) {
                    return (Delete) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (Delete) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public Delete setQuotaUser(java.lang.String quotaUser) {
                    return (Delete) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public Delete setUploadType(java.lang.String uploadType) {
                    return (Delete) super.setUploadType(uploadType);
                  }

                  @Override
                  public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                    return (Delete) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The name of the DICOM store that is being accessed. For example, `pro
                   * jects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{d
                   * icom_store_id}`.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String parent;

                  /** Required. The name of the DICOM store that is being accessed. For example,
                 `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                   */
                  public java.lang.String getParent() {
                    return parent;
                  }

                  /**
                   * Required. The name of the DICOM store that is being accessed. For example, `pro
                   * jects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{d
                   * icom_store_id}`.
                   */
                  public Delete setParent(java.lang.String parent) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                    }
                    this.parent = parent;
                    return this;
                  }

                  /**
                   * Required. The path of the DeleteInstance request. For example,
                   * `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String dicomWebPath;

                  /** Required. The path of the DeleteInstance request. For example,
                 `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                   */
                  public java.lang.String getDicomWebPath() {
                    return dicomWebPath;
                  }

                  /**
                   * Required. The path of the DeleteInstance request. For example,
                   * `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                   */
                  public Delete setDicomWebPath(java.lang.String dicomWebPath) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                          "Parameter dicomWebPath must conform to the pattern " +
                          "^studies/[^/]+/series/[^/]+/instances/[^/]+$");
                    }
                    this.dicomWebPath = dicomWebPath;
                    return this;
                  }

                  @Override
                  public Delete set(String parameterName, Object value) {
                    return (Delete) super.set(parameterName, value);
                  }
                }
                /**
                 * RetrieveInstance returns instance associated with the given study, series, and SOP Instance UID.
                 * See [RetrieveTransaction]
                 * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
                 * the implementation of RetrieveInstance, see [DICOM study/series/instances](https://cloud.google.c
                 * om/healthcare/docs/dicom#dicom_studyseriesinstances) and [DICOM
                 * instances](https://cloud.google.com/healthcare/docs/dicom#dicom_instances) in the Cloud
                 * Healthcare API conformance statement. For samples that show how to call RetrieveInstance, see
                 * [Retrieve an instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-
                 * instance).
                 *
                 * Create a request for the method "instances.retrieveInstance".
                 *
                 * This request holds the parameters needed by the healthcare server.  After setting any optional
                 * parameters, call the {@link RetrieveInstance#execute()} method to invoke the remote operation.
                 *
                 * @param parent Required. The name of the DICOM store that is being accessed. For example,
                 *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                 *        ore_id}`.
                 * @param dicomWebPath Required. The path of the RetrieveInstance DICOMweb request. For example,
                 *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                 * @return the request
                 */
                public RetrieveInstance retrieveInstance(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
                  RetrieveInstance result = new RetrieveInstance(parent, dicomWebPath);
                  initialize(result);
                  return result;
                }

                public class RetrieveInstance extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

                  private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                  private final java.util.regex.Pattern PARENT_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

                  private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                      java.util.regex.Pattern.compile("^studies/[^/]+/series/[^/]+/instances/[^/]+$");

                  /**
                   * RetrieveInstance returns instance associated with the given study, series, and SOP Instance
                   * UID. See [RetrieveTransaction]
                   * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
                   * the implementation of RetrieveInstance, see [DICOM study/series/instances](https://cloud.google
                   * .com/healthcare/docs/dicom#dicom_studyseriesinstances) and [DICOM
                   * instances](https://cloud.google.com/healthcare/docs/dicom#dicom_instances) in the Cloud
                   * Healthcare API conformance statement. For samples that show how to call RetrieveInstance, see
                   * [Retrieve an instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-
                   * instance).
                   *
                   * Create a request for the method "instances.retrieveInstance".
                   *
                   * This request holds the parameters needed by the the healthcare server.  After setting any
                   * optional parameters, call the {@link RetrieveInstance#execute()} method to invoke the remote
                   * operation. <p> {@link RetrieveInstance#initialize(com.google.api.client.googleapis.services.Abs
                   * tractGoogleClientRequest)} must be called to initialize this instance immediately after
                   * invoking the constructor. </p>
                   *
                   * @param parent Required. The name of the DICOM store that is being accessed. For example,
                 *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                 *        ore_id}`.
                   * @param dicomWebPath Required. The path of the RetrieveInstance DICOMweb request. For example,
                 *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                   * @since 1.13
                   */
                  protected RetrieveInstance(java.lang.String parent, java.lang.String dicomWebPath) {
                    super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                    this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                    }
                    this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                          "Parameter dicomWebPath must conform to the pattern " +
                          "^studies/[^/]+/series/[^/]+/instances/[^/]+$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public RetrieveInstance set$Xgafv(java.lang.String $Xgafv) {
                    return (RetrieveInstance) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public RetrieveInstance setAccessToken(java.lang.String accessToken) {
                    return (RetrieveInstance) super.setAccessToken(accessToken);
                  }

                  @Override
                  public RetrieveInstance setAlt(java.lang.String alt) {
                    return (RetrieveInstance) super.setAlt(alt);
                  }

                  @Override
                  public RetrieveInstance setCallback(java.lang.String callback) {
                    return (RetrieveInstance) super.setCallback(callback);
                  }

                  @Override
                  public RetrieveInstance setFields(java.lang.String fields) {
                    return (RetrieveInstance) super.setFields(fields);
                  }

                  @Override
                  public RetrieveInstance setKey(java.lang.String key) {
                    return (RetrieveInstance) super.setKey(key);
                  }

                  @Override
                  public RetrieveInstance setOauthToken(java.lang.String oauthToken) {
                    return (RetrieveInstance) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public RetrieveInstance setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (RetrieveInstance) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public RetrieveInstance setQuotaUser(java.lang.String quotaUser) {
                    return (RetrieveInstance) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public RetrieveInstance setUploadType(java.lang.String uploadType) {
                    return (RetrieveInstance) super.setUploadType(uploadType);
                  }

                  @Override
                  public RetrieveInstance setUploadProtocol(java.lang.String uploadProtocol) {
                    return (RetrieveInstance) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The name of the DICOM store that is being accessed. For example, `pro
                   * jects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{d
                   * icom_store_id}`.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String parent;

                  /** Required. The name of the DICOM store that is being accessed. For example,
                 `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                   */
                  public java.lang.String getParent() {
                    return parent;
                  }

                  /**
                   * Required. The name of the DICOM store that is being accessed. For example, `pro
                   * jects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{d
                   * icom_store_id}`.
                   */
                  public RetrieveInstance setParent(java.lang.String parent) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                    }
                    this.parent = parent;
                    return this;
                  }

                  /**
                   * Required. The path of the RetrieveInstance DICOMweb request. For example,
                   * `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String dicomWebPath;

                  /** Required. The path of the RetrieveInstance DICOMweb request. For example,
                 `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                   */
                  public java.lang.String getDicomWebPath() {
                    return dicomWebPath;
                  }

                  /**
                   * Required. The path of the RetrieveInstance DICOMweb request. For example,
                   * `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                   */
                  public RetrieveInstance setDicomWebPath(java.lang.String dicomWebPath) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                          "Parameter dicomWebPath must conform to the pattern " +
                          "^studies/[^/]+/series/[^/]+/instances/[^/]+$");
                    }
                    this.dicomWebPath = dicomWebPath;
                    return this;
                  }

                  @Override
                  public RetrieveInstance set(String parameterName, Object value) {
                    return (RetrieveInstance) super.set(parameterName, value);
                  }
                }
                /**
                 * RetrieveInstanceMetadata returns instance associated with the given study, series, and SOP
                 * Instance UID presented as metadata with the bulk data removed. See [RetrieveTransaction]
                 * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
                 * the implementation of RetrieveInstanceMetadata, see [Metadata
                 * resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the Cloud
                 * Healthcare API conformance statement. For samples that show how to call RetrieveInstanceMetadata,
                 * see [Retrieve metadata](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-
                 * metadata).
                 *
                 * Create a request for the method "instances.retrieveMetadata".
                 *
                 * This request holds the parameters needed by the healthcare server.  After setting any optional
                 * parameters, call the {@link RetrieveMetadata#execute()} method to invoke the remote operation.
                 *
                 * @param parent Required. The name of the DICOM store that is being accessed. For example,
                 *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                 *        ore_id}`.
                 * @param dicomWebPath Required. The path of the RetrieveInstanceMetadata DICOMweb request. For example,
                 *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/metadata`.
                 * @return the request
                 */
                public RetrieveMetadata retrieveMetadata(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
                  RetrieveMetadata result = new RetrieveMetadata(parent, dicomWebPath);
                  initialize(result);
                  return result;
                }

                public class RetrieveMetadata extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

                  private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                  private final java.util.regex.Pattern PARENT_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

                  private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                      java.util.regex.Pattern.compile("^studies/[^/]+/series/[^/]+/instances/[^/]+/metadata$");

                  /**
                   * RetrieveInstanceMetadata returns instance associated with the given study, series, and SOP
                   * Instance UID presented as metadata with the bulk data removed. See [RetrieveTransaction]
                   * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
                   * the implementation of RetrieveInstanceMetadata, see [Metadata
                   * resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the Cloud
                   * Healthcare API conformance statement. For samples that show how to call
                   * RetrieveInstanceMetadata, see [Retrieve metadata](https://cloud.google.com/healthcare/docs/how-
                   * tos/dicomweb#retrieve-metadata).
                   *
                   * Create a request for the method "instances.retrieveMetadata".
                   *
                   * This request holds the parameters needed by the the healthcare server.  After setting any
                   * optional parameters, call the {@link RetrieveMetadata#execute()} method to invoke the remote
                   * operation. <p> {@link RetrieveMetadata#initialize(com.google.api.client.googleapis.services.Abs
                   * tractGoogleClientRequest)} must be called to initialize this instance immediately after
                   * invoking the constructor. </p>
                   *
                   * @param parent Required. The name of the DICOM store that is being accessed. For example,
                 *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                 *        ore_id}`.
                   * @param dicomWebPath Required. The path of the RetrieveInstanceMetadata DICOMweb request. For example,
                 *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/metadata`.
                   * @since 1.13
                   */
                  protected RetrieveMetadata(java.lang.String parent, java.lang.String dicomWebPath) {
                    super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                    this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                    }
                    this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                          "Parameter dicomWebPath must conform to the pattern " +
                          "^studies/[^/]+/series/[^/]+/instances/[^/]+/metadata$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public RetrieveMetadata set$Xgafv(java.lang.String $Xgafv) {
                    return (RetrieveMetadata) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public RetrieveMetadata setAccessToken(java.lang.String accessToken) {
                    return (RetrieveMetadata) super.setAccessToken(accessToken);
                  }

                  @Override
                  public RetrieveMetadata setAlt(java.lang.String alt) {
                    return (RetrieveMetadata) super.setAlt(alt);
                  }

                  @Override
                  public RetrieveMetadata setCallback(java.lang.String callback) {
                    return (RetrieveMetadata) super.setCallback(callback);
                  }

                  @Override
                  public RetrieveMetadata setFields(java.lang.String fields) {
                    return (RetrieveMetadata) super.setFields(fields);
                  }

                  @Override
                  public RetrieveMetadata setKey(java.lang.String key) {
                    return (RetrieveMetadata) super.setKey(key);
                  }

                  @Override
                  public RetrieveMetadata setOauthToken(java.lang.String oauthToken) {
                    return (RetrieveMetadata) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public RetrieveMetadata setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (RetrieveMetadata) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public RetrieveMetadata setQuotaUser(java.lang.String quotaUser) {
                    return (RetrieveMetadata) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public RetrieveMetadata setUploadType(java.lang.String uploadType) {
                    return (RetrieveMetadata) super.setUploadType(uploadType);
                  }

                  @Override
                  public RetrieveMetadata setUploadProtocol(java.lang.String uploadProtocol) {
                    return (RetrieveMetadata) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The name of the DICOM store that is being accessed. For example, `pro
                   * jects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{d
                   * icom_store_id}`.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String parent;

                  /** Required. The name of the DICOM store that is being accessed. For example,
                 `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                   */
                  public java.lang.String getParent() {
                    return parent;
                  }

                  /**
                   * Required. The name of the DICOM store that is being accessed. For example, `pro
                   * jects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{d
                   * icom_store_id}`.
                   */
                  public RetrieveMetadata setParent(java.lang.String parent) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                    }
                    this.parent = parent;
                    return this;
                  }

                  /**
                   * Required. The path of the RetrieveInstanceMetadata DICOMweb request. For
                   * example,
                   * `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/metadata`.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String dicomWebPath;

                  /** Required. The path of the RetrieveInstanceMetadata DICOMweb request. For example,
                 `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/metadata`.
                   */
                  public java.lang.String getDicomWebPath() {
                    return dicomWebPath;
                  }

                  /**
                   * Required. The path of the RetrieveInstanceMetadata DICOMweb request. For
                   * example,
                   * `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/metadata`.
                   */
                  public RetrieveMetadata setDicomWebPath(java.lang.String dicomWebPath) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                          "Parameter dicomWebPath must conform to the pattern " +
                          "^studies/[^/]+/series/[^/]+/instances/[^/]+/metadata$");
                    }
                    this.dicomWebPath = dicomWebPath;
                    return this;
                  }

                  @Override
                  public RetrieveMetadata set(String parameterName, Object value) {
                    return (RetrieveMetadata) super.set(parameterName, value);
                  }
                }
                /**
                 * RetrieveRenderedInstance returns instance associated with the given study, series, and SOP
                 * Instance UID in an acceptable Rendered Media Type. See [RetrieveTransaction]
                 * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
                 * the implementation of RetrieveRenderedInstance, see [Rendered
                 * resources](https://cloud.google.com/healthcare/docs/dicom#rendered_resources) in the Cloud
                 * Healthcare API conformance statement. For samples that show how to call RetrieveRenderedInstance,
                 * see [Retrieve consumer image formats](https://cloud.google.com/healthcare/docs/how-
                 * tos/dicomweb#retrieve-consumer).
                 *
                 * Create a request for the method "instances.retrieveRendered".
                 *
                 * This request holds the parameters needed by the healthcare server.  After setting any optional
                 * parameters, call the {@link RetrieveRendered#execute()} method to invoke the remote operation.
                 *
                 * @param parent Required. The name of the DICOM store that is being accessed. For example,
                 *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                 *        ore_id}`.
                 * @param dicomWebPath Required. The path of the RetrieveRenderedInstance DICOMweb request. For example,
                 *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/rendered`.
                 * @return the request
                 */
                public RetrieveRendered retrieveRendered(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
                  RetrieveRendered result = new RetrieveRendered(parent, dicomWebPath);
                  initialize(result);
                  return result;
                }

                public class RetrieveRendered extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

                  private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                  private final java.util.regex.Pattern PARENT_PATTERN =
                      java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

                  private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                      java.util.regex.Pattern.compile("^studies/[^/]+/series/[^/]+/instances/[^/]+/rendered$");

                  /**
                   * RetrieveRenderedInstance returns instance associated with the given study, series, and SOP
                   * Instance UID in an acceptable Rendered Media Type. See [RetrieveTransaction]
                   * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
                   * the implementation of RetrieveRenderedInstance, see [Rendered
                   * resources](https://cloud.google.com/healthcare/docs/dicom#rendered_resources) in the Cloud
                   * Healthcare API conformance statement. For samples that show how to call
                   * RetrieveRenderedInstance, see [Retrieve consumer image
                   * formats](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-consumer).
                   *
                   * Create a request for the method "instances.retrieveRendered".
                   *
                   * This request holds the parameters needed by the the healthcare server.  After setting any
                   * optional parameters, call the {@link RetrieveRendered#execute()} method to invoke the remote
                   * operation. <p> {@link RetrieveRendered#initialize(com.google.api.client.googleapis.services.Abs
                   * tractGoogleClientRequest)} must be called to initialize this instance immediately after
                   * invoking the constructor. </p>
                   *
                   * @param parent Required. The name of the DICOM store that is being accessed. For example,
                 *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                 *        ore_id}`.
                   * @param dicomWebPath Required. The path of the RetrieveRenderedInstance DICOMweb request. For example,
                 *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/rendered`.
                   * @since 1.13
                   */
                  protected RetrieveRendered(java.lang.String parent, java.lang.String dicomWebPath) {
                    super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                    this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                    }
                    this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                          "Parameter dicomWebPath must conform to the pattern " +
                          "^studies/[^/]+/series/[^/]+/instances/[^/]+/rendered$");
                    }
                  }

                  @Override
                  public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                    return super.executeUsingHead();
                  }

                  @Override
                  public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                    return super.buildHttpRequestUsingHead();
                  }

                  @Override
                  public RetrieveRendered set$Xgafv(java.lang.String $Xgafv) {
                    return (RetrieveRendered) super.set$Xgafv($Xgafv);
                  }

                  @Override
                  public RetrieveRendered setAccessToken(java.lang.String accessToken) {
                    return (RetrieveRendered) super.setAccessToken(accessToken);
                  }

                  @Override
                  public RetrieveRendered setAlt(java.lang.String alt) {
                    return (RetrieveRendered) super.setAlt(alt);
                  }

                  @Override
                  public RetrieveRendered setCallback(java.lang.String callback) {
                    return (RetrieveRendered) super.setCallback(callback);
                  }

                  @Override
                  public RetrieveRendered setFields(java.lang.String fields) {
                    return (RetrieveRendered) super.setFields(fields);
                  }

                  @Override
                  public RetrieveRendered setKey(java.lang.String key) {
                    return (RetrieveRendered) super.setKey(key);
                  }

                  @Override
                  public RetrieveRendered setOauthToken(java.lang.String oauthToken) {
                    return (RetrieveRendered) super.setOauthToken(oauthToken);
                  }

                  @Override
                  public RetrieveRendered setPrettyPrint(java.lang.Boolean prettyPrint) {
                    return (RetrieveRendered) super.setPrettyPrint(prettyPrint);
                  }

                  @Override
                  public RetrieveRendered setQuotaUser(java.lang.String quotaUser) {
                    return (RetrieveRendered) super.setQuotaUser(quotaUser);
                  }

                  @Override
                  public RetrieveRendered setUploadType(java.lang.String uploadType) {
                    return (RetrieveRendered) super.setUploadType(uploadType);
                  }

                  @Override
                  public RetrieveRendered setUploadProtocol(java.lang.String uploadProtocol) {
                    return (RetrieveRendered) super.setUploadProtocol(uploadProtocol);
                  }

                  /**
                   * Required. The name of the DICOM store that is being accessed. For example, `pro
                   * jects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{d
                   * icom_store_id}`.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String parent;

                  /** Required. The name of the DICOM store that is being accessed. For example,
                 `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                   */
                  public java.lang.String getParent() {
                    return parent;
                  }

                  /**
                   * Required. The name of the DICOM store that is being accessed. For example, `pro
                   * jects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{d
                   * icom_store_id}`.
                   */
                  public RetrieveRendered setParent(java.lang.String parent) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                          "Parameter parent must conform to the pattern " +
                          "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                    }
                    this.parent = parent;
                    return this;
                  }

                  /**
                   * Required. The path of the RetrieveRenderedInstance DICOMweb request. For
                   * example,
                   * `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/rendered`.
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String dicomWebPath;

                  /** Required. The path of the RetrieveRenderedInstance DICOMweb request. For example,
                 `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/rendered`.
                   */
                  public java.lang.String getDicomWebPath() {
                    return dicomWebPath;
                  }

                  /**
                   * Required. The path of the RetrieveRenderedInstance DICOMweb request. For
                   * example,
                   * `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/rendered`.
                   */
                  public RetrieveRendered setDicomWebPath(java.lang.String dicomWebPath) {
                    if (!getSuppressPatternChecks()) {
                      com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                          "Parameter dicomWebPath must conform to the pattern " +
                          "^studies/[^/]+/series/[^/]+/instances/[^/]+/rendered$");
                    }
                    this.dicomWebPath = dicomWebPath;
                    return this;
                  }

                  /**
                   * Optional. The viewport setting to use as specified in https://dicom.nema.org/me
                   * dical/dicom/current/output/chtml/part18/sect_8.3.5.html#sect_8.3.5.1.3
                   */
                  @com.google.api.client.util.Key
                  private java.lang.String viewport;

                  /** Optional. The viewport setting to use as specified in
                 https://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_8.3.5.html#sect_8.3.5.1.3
                   */
                  public java.lang.String getViewport() {
                    return viewport;
                  }

                  /**
                   * Optional. The viewport setting to use as specified in https://dicom.nema.org/me
                   * dical/dicom/current/output/chtml/part18/sect_8.3.5.html#sect_8.3.5.1.3
                   */
                  public RetrieveRendered setViewport(java.lang.String viewport) {
                    this.viewport = viewport;
                    return this;
                  }

                  @Override
                  public RetrieveRendered set(String parameterName, Object value) {
                    return (RetrieveRendered) super.set(parameterName, value);
                  }
                }

                /**
                 * An accessor for creating requests from the Frames collection.
                 *
                 * <p>The typical use is:</p>
                 * <pre>
                 *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
                 *   {@code CloudHealthcare.Frames.List request = healthcare.frames().list(parameters ...)}
                 * </pre>
                 *
                 * @return the resource collection
                 */
                public Frames frames() {
                  return new Frames();
                }

                /**
                 * The "frames" collection of methods.
                 */
                public class Frames {

                  /**
                   * RetrieveFrames returns instances associated with the given study, series, SOP Instance UID and
                   * frame numbers. See [RetrieveTransaction]
                   * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4}. For details on
                   * the implementation of RetrieveFrames, see [DICOM
                   * frames](https://cloud.google.com/healthcare/docs/dicom#dicom_frames) in the Cloud Healthcare API
                   * conformance statement. For samples that show how to call RetrieveFrames, see [Retrieve DICOM
                   * data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
                   *
                   * Create a request for the method "frames.retrieveFrames".
                   *
                   * This request holds the parameters needed by the healthcare server.  After setting any optional
                   * parameters, call the {@link RetrieveFrames#execute()} method to invoke the remote operation.
                   *
                   * @param parent Required. The name of the DICOM store that is being accessed. For example,
                   *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                   *        ore_id}`.
                   * @param dicomWebPath Required. The path of the RetrieveFrames DICOMweb request. For example,
                   *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}`.
                   * @return the request
                   */
                  public RetrieveFrames retrieveFrames(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
                    RetrieveFrames result = new RetrieveFrames(parent, dicomWebPath);
                    initialize(result);
                    return result;
                  }

                  public class RetrieveFrames extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

                    private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                    private final java.util.regex.Pattern PARENT_PATTERN =
                        java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

                    private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                        java.util.regex.Pattern.compile("^studies/[^/]+/series/[^/]+/instances/[^/]+/frames/[^/]+$");

                    /**
                     * RetrieveFrames returns instances associated with the given study, series, SOP Instance UID and
                     * frame numbers. See [RetrieveTransaction]
                     * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4}. For details on
                     * the implementation of RetrieveFrames, see [DICOM
                     * frames](https://cloud.google.com/healthcare/docs/dicom#dicom_frames) in the Cloud Healthcare
                     * API conformance statement. For samples that show how to call RetrieveFrames, see [Retrieve
                     * DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
                     *
                     * Create a request for the method "frames.retrieveFrames".
                     *
                     * This request holds the parameters needed by the the healthcare server.  After setting any
                     * optional parameters, call the {@link RetrieveFrames#execute()} method to invoke the remote
                     * operation. <p> {@link RetrieveFrames#initialize(com.google.api.client.googleapis.services.Abstr
                     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
                     * the constructor. </p>
                     *
                     * @param parent Required. The name of the DICOM store that is being accessed. For example,
                   *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                   *        ore_id}`.
                     * @param dicomWebPath Required. The path of the RetrieveFrames DICOMweb request. For example,
                   *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}`.
                     * @since 1.13
                     */
                    protected RetrieveFrames(java.lang.String parent, java.lang.String dicomWebPath) {
                      super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                      this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                      if (!getSuppressPatternChecks()) {
                        com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                            "Parameter parent must conform to the pattern " +
                            "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                      }
                      this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                      if (!getSuppressPatternChecks()) {
                        com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                            "Parameter dicomWebPath must conform to the pattern " +
                            "^studies/[^/]+/series/[^/]+/instances/[^/]+/frames/[^/]+$");
                      }
                    }

                    @Override
                    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                      return super.executeUsingHead();
                    }

                    @Override
                    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                      return super.buildHttpRequestUsingHead();
                    }

                    @Override
                    public RetrieveFrames set$Xgafv(java.lang.String $Xgafv) {
                      return (RetrieveFrames) super.set$Xgafv($Xgafv);
                    }

                    @Override
                    public RetrieveFrames setAccessToken(java.lang.String accessToken) {
                      return (RetrieveFrames) super.setAccessToken(accessToken);
                    }

                    @Override
                    public RetrieveFrames setAlt(java.lang.String alt) {
                      return (RetrieveFrames) super.setAlt(alt);
                    }

                    @Override
                    public RetrieveFrames setCallback(java.lang.String callback) {
                      return (RetrieveFrames) super.setCallback(callback);
                    }

                    @Override
                    public RetrieveFrames setFields(java.lang.String fields) {
                      return (RetrieveFrames) super.setFields(fields);
                    }

                    @Override
                    public RetrieveFrames setKey(java.lang.String key) {
                      return (RetrieveFrames) super.setKey(key);
                    }

                    @Override
                    public RetrieveFrames setOauthToken(java.lang.String oauthToken) {
                      return (RetrieveFrames) super.setOauthToken(oauthToken);
                    }

                    @Override
                    public RetrieveFrames setPrettyPrint(java.lang.Boolean prettyPrint) {
                      return (RetrieveFrames) super.setPrettyPrint(prettyPrint);
                    }

                    @Override
                    public RetrieveFrames setQuotaUser(java.lang.String quotaUser) {
                      return (RetrieveFrames) super.setQuotaUser(quotaUser);
                    }

                    @Override
                    public RetrieveFrames setUploadType(java.lang.String uploadType) {
                      return (RetrieveFrames) super.setUploadType(uploadType);
                    }

                    @Override
                    public RetrieveFrames setUploadProtocol(java.lang.String uploadProtocol) {
                      return (RetrieveFrames) super.setUploadProtocol(uploadProtocol);
                    }

                    /**
                     * Required. The name of the DICOM store that is being accessed. For example, `p
                     * rojects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStore
                     * s/{dicom_store_id}`.
                     */
                    @com.google.api.client.util.Key
                    private java.lang.String parent;

                    /** Required. The name of the DICOM store that is being accessed. For example,
                   `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                     */
                    public java.lang.String getParent() {
                      return parent;
                    }

                    /**
                     * Required. The name of the DICOM store that is being accessed. For example, `p
                     * rojects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStore
                     * s/{dicom_store_id}`.
                     */
                    public RetrieveFrames setParent(java.lang.String parent) {
                      if (!getSuppressPatternChecks()) {
                        com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                            "Parameter parent must conform to the pattern " +
                            "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                      }
                      this.parent = parent;
                      return this;
                    }

                    /**
                     * Required. The path of the RetrieveFrames DICOMweb request. For example, `stud
                     * ies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_li
                     * st}`.
                     */
                    @com.google.api.client.util.Key
                    private java.lang.String dicomWebPath;

                    /** Required. The path of the RetrieveFrames DICOMweb request. For example,
                   `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}`.
                     */
                    public java.lang.String getDicomWebPath() {
                      return dicomWebPath;
                    }

                    /**
                     * Required. The path of the RetrieveFrames DICOMweb request. For example, `stud
                     * ies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_li
                     * st}`.
                     */
                    public RetrieveFrames setDicomWebPath(java.lang.String dicomWebPath) {
                      if (!getSuppressPatternChecks()) {
                        com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                            "Parameter dicomWebPath must conform to the pattern " +
                            "^studies/[^/]+/series/[^/]+/instances/[^/]+/frames/[^/]+$");
                      }
                      this.dicomWebPath = dicomWebPath;
                      return this;
                    }

                    @Override
                    public RetrieveFrames set(String parameterName, Object value) {
                      return (RetrieveFrames) super.set(parameterName, value);
                    }
                  }
                  /**
                   * RetrieveRenderedFrames returns instances associated with the given study, series, SOP Instance
                   * UID and frame numbers in an acceptable Rendered Media Type. See [RetrieveTransaction]
                   * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
                   * the implementation of RetrieveRenderedFrames, see [Rendered
                   * resources](https://cloud.google.com/healthcare/docs/dicom#rendered_resources) in the Cloud
                   * Healthcare API conformance statement. For samples that show how to call RetrieveRenderedFrames,
                   * see [Retrieve consumer image formats](https://cloud.google.com/healthcare/docs/how-
                   * tos/dicomweb#retrieve-consumer).
                   *
                   * Create a request for the method "frames.retrieveRendered".
                   *
                   * This request holds the parameters needed by the healthcare server.  After setting any optional
                   * parameters, call the {@link RetrieveRendered#execute()} method to invoke the remote operation.
                   *
                   * @param parent Required. The name of the DICOM store that is being accessed. For example,
                   *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                   *        ore_id}`.
                   * @param dicomWebPath Required. The path of the RetrieveRenderedFrames DICOMweb request. For example,
                   *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}/rend
                   *        ered`.
                   * @return the request
                   */
                  public RetrieveRendered retrieveRendered(java.lang.String parent, java.lang.String dicomWebPath) throws java.io.IOException {
                    RetrieveRendered result = new RetrieveRendered(parent, dicomWebPath);
                    initialize(result);
                    return result;
                  }

                  public class RetrieveRendered extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

                    private static final String REST_PATH = "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                    private final java.util.regex.Pattern PARENT_PATTERN =
                        java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");

                    private final java.util.regex.Pattern DICOM_WEB_PATH_PATTERN =
                        java.util.regex.Pattern.compile("^studies/[^/]+/series/[^/]+/instances/[^/]+/frames/[^/]+/rendered$");

                    /**
                     * RetrieveRenderedFrames returns instances associated with the given study, series, SOP Instance
                     * UID and frame numbers in an acceptable Rendered Media Type. See [RetrieveTransaction]
                     * (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details on
                     * the implementation of RetrieveRenderedFrames, see [Rendered
                     * resources](https://cloud.google.com/healthcare/docs/dicom#rendered_resources) in the Cloud
                     * Healthcare API conformance statement. For samples that show how to call RetrieveRenderedFrames,
                     * see [Retrieve consumer image formats](https://cloud.google.com/healthcare/docs/how-
                     * tos/dicomweb#retrieve-consumer).
                     *
                     * Create a request for the method "frames.retrieveRendered".
                     *
                     * This request holds the parameters needed by the the healthcare server.  After setting any
                     * optional parameters, call the {@link RetrieveRendered#execute()} method to invoke the remote
                     * operation. <p> {@link RetrieveRendered#initialize(com.google.api.client.googleapis.services.Abs
                     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
                     * invoking the constructor. </p>
                     *
                     * @param parent Required. The name of the DICOM store that is being accessed. For example,
                   *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_st
                   *        ore_id}`.
                     * @param dicomWebPath Required. The path of the RetrieveRenderedFrames DICOMweb request. For example,
                   *        `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}/rend
                   *        ered`.
                     * @since 1.13
                     */
                    protected RetrieveRendered(java.lang.String parent, java.lang.String dicomWebPath) {
                      super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                      this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                      if (!getSuppressPatternChecks()) {
                        com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                            "Parameter parent must conform to the pattern " +
                            "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                      }
                      this.dicomWebPath = com.google.api.client.util.Preconditions.checkNotNull(dicomWebPath, "Required parameter dicomWebPath must be specified.");
                      if (!getSuppressPatternChecks()) {
                        com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                            "Parameter dicomWebPath must conform to the pattern " +
                            "^studies/[^/]+/series/[^/]+/instances/[^/]+/frames/[^/]+/rendered$");
                      }
                    }

                    @Override
                    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                      return super.executeUsingHead();
                    }

                    @Override
                    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                      return super.buildHttpRequestUsingHead();
                    }

                    @Override
                    public RetrieveRendered set$Xgafv(java.lang.String $Xgafv) {
                      return (RetrieveRendered) super.set$Xgafv($Xgafv);
                    }

                    @Override
                    public RetrieveRendered setAccessToken(java.lang.String accessToken) {
                      return (RetrieveRendered) super.setAccessToken(accessToken);
                    }

                    @Override
                    public RetrieveRendered setAlt(java.lang.String alt) {
                      return (RetrieveRendered) super.setAlt(alt);
                    }

                    @Override
                    public RetrieveRendered setCallback(java.lang.String callback) {
                      return (RetrieveRendered) super.setCallback(callback);
                    }

                    @Override
                    public RetrieveRendered setFields(java.lang.String fields) {
                      return (RetrieveRendered) super.setFields(fields);
                    }

                    @Override
                    public RetrieveRendered setKey(java.lang.String key) {
                      return (RetrieveRendered) super.setKey(key);
                    }

                    @Override
                    public RetrieveRendered setOauthToken(java.lang.String oauthToken) {
                      return (RetrieveRendered) super.setOauthToken(oauthToken);
                    }

                    @Override
                    public RetrieveRendered setPrettyPrint(java.lang.Boolean prettyPrint) {
                      return (RetrieveRendered) super.setPrettyPrint(prettyPrint);
                    }

                    @Override
                    public RetrieveRendered setQuotaUser(java.lang.String quotaUser) {
                      return (RetrieveRendered) super.setQuotaUser(quotaUser);
                    }

                    @Override
                    public RetrieveRendered setUploadType(java.lang.String uploadType) {
                      return (RetrieveRendered) super.setUploadType(uploadType);
                    }

                    @Override
                    public RetrieveRendered setUploadProtocol(java.lang.String uploadProtocol) {
                      return (RetrieveRendered) super.setUploadProtocol(uploadProtocol);
                    }

                    /**
                     * Required. The name of the DICOM store that is being accessed. For example, `p
                     * rojects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStore
                     * s/{dicom_store_id}`.
                     */
                    @com.google.api.client.util.Key
                    private java.lang.String parent;

                    /** Required. The name of the DICOM store that is being accessed. For example,
                   `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                     */
                    public java.lang.String getParent() {
                      return parent;
                    }

                    /**
                     * Required. The name of the DICOM store that is being accessed. For example, `p
                     * rojects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStore
                     * s/{dicom_store_id}`.
                     */
                    public RetrieveRendered setParent(java.lang.String parent) {
                      if (!getSuppressPatternChecks()) {
                        com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                            "Parameter parent must conform to the pattern " +
                            "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$");
                      }
                      this.parent = parent;
                      return this;
                    }

                    /**
                     * Required. The path of the RetrieveRenderedFrames DICOMweb request. For
                     * example, `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/fr
                     * ames/{frame_list}/rendered`.
                     */
                    @com.google.api.client.util.Key
                    private java.lang.String dicomWebPath;

                    /** Required. The path of the RetrieveRenderedFrames DICOMweb request. For example,
                   `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}/rendered`.
                     */
                    public java.lang.String getDicomWebPath() {
                      return dicomWebPath;
                    }

                    /**
                     * Required. The path of the RetrieveRenderedFrames DICOMweb request. For
                     * example, `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/fr
                     * ames/{frame_list}/rendered`.
                     */
                    public RetrieveRendered setDicomWebPath(java.lang.String dicomWebPath) {
                      if (!getSuppressPatternChecks()) {
                        com.google.api.client.util.Preconditions.checkArgument(DICOM_WEB_PATH_PATTERN.matcher(dicomWebPath).matches(),
                            "Parameter dicomWebPath must conform to the pattern " +
                            "^studies/[^/]+/series/[^/]+/instances/[^/]+/frames/[^/]+/rendered$");
                      }
                      this.dicomWebPath = dicomWebPath;
                      return this;
                    }

                    /**
                     * Optional. The viewport setting to use as specified in https://dicom.nema.org/
                     * medical/dicom/current/output/chtml/part18/sect_8.3.5.html#sect_8.3.5.1.3
                     */
                    @com.google.api.client.util.Key
                    private java.lang.String viewport;

                    /** Optional. The viewport setting to use as specified in
                   https://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_8.3.5.html#sect_8.3.5.1.3
                     */
                    public java.lang.String getViewport() {
                      return viewport;
                    }

                    /**
                     * Optional. The viewport setting to use as specified in https://dicom.nema.org/
                     * medical/dicom/current/output/chtml/part18/sect_8.3.5.html#sect_8.3.5.1.3
                     */
                    public RetrieveRendered setViewport(java.lang.String viewport) {
                      this.viewport = viewport;
                      return this;
                    }

                    @Override
                    public RetrieveRendered set(String parameterName, Object value) {
                      return (RetrieveRendered) super.set(parameterName, value);
                    }
                  }

                }
              }
            }
          }
        }
        /**
         * An accessor for creating requests from the FhirStores collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.FhirStores.List request = healthcare.fhirStores().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public FhirStores fhirStores() {
          return new FhirStores();
        }

        /**
         * The "fhirStores" collection of methods.
         */
        public class FhirStores {

          /**
           * Applies the admin Consent resources for the FHIR store and reindexes the underlying resources in
           * the FHIR store according to the aggregate consents. This method also updates the
           * `consent_config.enforced_admin_consents` field of the FhirStore unless `validate_only=true` in
           * ApplyAdminConsentsRequest. Any admin Consent resource change after this operation execution
           * (including deletion) requires you to call ApplyAdminConsents again for the change to take effect.
           * This method returns an Operation that can be used to track the progress of the resources that
           * were reindexed, by calling GetOperation. Upon completion, the ApplyAdminConsentsResponse
           * additionally contains the number of resources that were reindexed. If at least one Consent
           * resource contains an error or fails be be enforced for any reason, the method returns an error
           * instead of an Operation. No resources will be reindexed and the
           * `consent_config.enforced_admin_consents` field will be unchanged. To enforce a consent check for
           * data access, `consent_config.access_enforced` must be set to true for the FhirStore.
           *
           * Create a request for the method "fhirStores.applyAdminConsents".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link ApplyAdminConsents#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the FHIR store to enforce, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.ApplyAdminConsentsRequest}
           * @return the request
           */
          public ApplyAdminConsents applyAdminConsents(java.lang.String name, com.google.api.services.healthcare.v1.model.ApplyAdminConsentsRequest content) throws java.io.IOException {
            ApplyAdminConsents result = new ApplyAdminConsents(name, content);
            initialize(result);
            return result;
          }

          public class ApplyAdminConsents extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:applyAdminConsents";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Applies the admin Consent resources for the FHIR store and reindexes the underlying resources
             * in the FHIR store according to the aggregate consents. This method also updates the
             * `consent_config.enforced_admin_consents` field of the FhirStore unless `validate_only=true` in
             * ApplyAdminConsentsRequest. Any admin Consent resource change after this operation execution
             * (including deletion) requires you to call ApplyAdminConsents again for the change to take
             * effect. This method returns an Operation that can be used to track the progress of the
             * resources that were reindexed, by calling GetOperation. Upon completion, the
             * ApplyAdminConsentsResponse additionally contains the number of resources that were reindexed.
             * If at least one Consent resource contains an error or fails be be enforced for any reason, the
             * method returns an error instead of an Operation. No resources will be reindexed and the
             * `consent_config.enforced_admin_consents` field will be unchanged. To enforce a consent check
             * for data access, `consent_config.access_enforced` must be set to true for the FhirStore.
             *
             * Create a request for the method "fhirStores.applyAdminConsents".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link ApplyAdminConsents#execute()} method to invoke the remote
             * operation. <p> {@link ApplyAdminConsents#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The name of the FHIR store to enforce, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.ApplyAdminConsentsRequest}
             * @since 1.13
             */
            protected ApplyAdminConsents(java.lang.String name, com.google.api.services.healthcare.v1.model.ApplyAdminConsentsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public ApplyAdminConsents set$Xgafv(java.lang.String $Xgafv) {
              return (ApplyAdminConsents) super.set$Xgafv($Xgafv);
            }

            @Override
            public ApplyAdminConsents setAccessToken(java.lang.String accessToken) {
              return (ApplyAdminConsents) super.setAccessToken(accessToken);
            }

            @Override
            public ApplyAdminConsents setAlt(java.lang.String alt) {
              return (ApplyAdminConsents) super.setAlt(alt);
            }

            @Override
            public ApplyAdminConsents setCallback(java.lang.String callback) {
              return (ApplyAdminConsents) super.setCallback(callback);
            }

            @Override
            public ApplyAdminConsents setFields(java.lang.String fields) {
              return (ApplyAdminConsents) super.setFields(fields);
            }

            @Override
            public ApplyAdminConsents setKey(java.lang.String key) {
              return (ApplyAdminConsents) super.setKey(key);
            }

            @Override
            public ApplyAdminConsents setOauthToken(java.lang.String oauthToken) {
              return (ApplyAdminConsents) super.setOauthToken(oauthToken);
            }

            @Override
            public ApplyAdminConsents setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ApplyAdminConsents) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ApplyAdminConsents setQuotaUser(java.lang.String quotaUser) {
              return (ApplyAdminConsents) super.setQuotaUser(quotaUser);
            }

            @Override
            public ApplyAdminConsents setUploadType(java.lang.String uploadType) {
              return (ApplyAdminConsents) super.setUploadType(uploadType);
            }

            @Override
            public ApplyAdminConsents setUploadProtocol(java.lang.String uploadProtocol) {
              return (ApplyAdminConsents) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the FHIR store to enforce, in the format `projects/{project_id}
             * /locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the FHIR store to enforce, in the format
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the FHIR store to enforce, in the format `projects/{project_id}
             * /locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public ApplyAdminConsents setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public ApplyAdminConsents set(String parameterName, Object value) {
              return (ApplyAdminConsents) super.set(parameterName, value);
            }
          }
          /**
           * Apply the Consent resources for the FHIR store and reindex the underlying resources in the FHIR
           * store according to the aggregate consent. The aggregate consent of the patient in scope in this
           * request replaces any previous call of this method. Any Consent resource change after this
           * operation execution (including deletion) requires you to call ApplyConsents again to have effect.
           * This method returns an Operation that can be used to track the progress of the consent resources
           * that were processed by calling GetOperation. Upon completion, the ApplyConsentsResponse
           * additionally contains the number of resources that was reindexed. Errors are logged to Cloud
           * Logging (see [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-
           * tos/logging)). To enforce consent check for data access, `consent_config.access_enforced` must be
           * set to true for the FhirStore.
           *
           * Create a request for the method "fhirStores.applyConsents".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link ApplyConsents#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the FHIR store to enforce, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.ApplyConsentsRequest}
           * @return the request
           */
          public ApplyConsents applyConsents(java.lang.String name, com.google.api.services.healthcare.v1.model.ApplyConsentsRequest content) throws java.io.IOException {
            ApplyConsents result = new ApplyConsents(name, content);
            initialize(result);
            return result;
          }

          public class ApplyConsents extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:applyConsents";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Apply the Consent resources for the FHIR store and reindex the underlying resources in the FHIR
             * store according to the aggregate consent. The aggregate consent of the patient in scope in this
             * request replaces any previous call of this method. Any Consent resource change after this
             * operation execution (including deletion) requires you to call ApplyConsents again to have
             * effect. This method returns an Operation that can be used to track the progress of the consent
             * resources that were processed by calling GetOperation. Upon completion, the
             * ApplyConsentsResponse additionally contains the number of resources that was reindexed. Errors
             * are logged to Cloud Logging (see [Viewing error logs in Cloud
             * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). To enforce consent check
             * for data access, `consent_config.access_enforced` must be set to true for the FhirStore.
             *
             * Create a request for the method "fhirStores.applyConsents".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link ApplyConsents#execute()} method to invoke the remote
             * operation. <p> {@link ApplyConsents#initialize(com.google.api.client.googleapis.services.Abstra
             * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param name Required. The name of the FHIR store to enforce, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.ApplyConsentsRequest}
             * @since 1.13
             */
            protected ApplyConsents(java.lang.String name, com.google.api.services.healthcare.v1.model.ApplyConsentsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public ApplyConsents set$Xgafv(java.lang.String $Xgafv) {
              return (ApplyConsents) super.set$Xgafv($Xgafv);
            }

            @Override
            public ApplyConsents setAccessToken(java.lang.String accessToken) {
              return (ApplyConsents) super.setAccessToken(accessToken);
            }

            @Override
            public ApplyConsents setAlt(java.lang.String alt) {
              return (ApplyConsents) super.setAlt(alt);
            }

            @Override
            public ApplyConsents setCallback(java.lang.String callback) {
              return (ApplyConsents) super.setCallback(callback);
            }

            @Override
            public ApplyConsents setFields(java.lang.String fields) {
              return (ApplyConsents) super.setFields(fields);
            }

            @Override
            public ApplyConsents setKey(java.lang.String key) {
              return (ApplyConsents) super.setKey(key);
            }

            @Override
            public ApplyConsents setOauthToken(java.lang.String oauthToken) {
              return (ApplyConsents) super.setOauthToken(oauthToken);
            }

            @Override
            public ApplyConsents setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ApplyConsents) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ApplyConsents setQuotaUser(java.lang.String quotaUser) {
              return (ApplyConsents) super.setQuotaUser(quotaUser);
            }

            @Override
            public ApplyConsents setUploadType(java.lang.String uploadType) {
              return (ApplyConsents) super.setUploadType(uploadType);
            }

            @Override
            public ApplyConsents setUploadProtocol(java.lang.String uploadProtocol) {
              return (ApplyConsents) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the FHIR store to enforce, in the format `projects/{project_id}
             * /locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the FHIR store to enforce, in the format
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the FHIR store to enforce, in the format `projects/{project_id}
             * /locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public ApplyConsents setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public ApplyConsents set(String parameterName, Object value) {
              return (ApplyConsents) super.set(parameterName, value);
            }
          }
          /**
           * Creates a new FHIR store within the parent dataset.
           *
           * Create a request for the method "fhirStores.create".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the dataset this FHIR store belongs to.
           * @param content the {@link com.google.api.services.healthcare.v1.model.FhirStore}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.healthcare.v1.model.FhirStore content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.FhirStore> {

            private static final String REST_PATH = "v1/{+parent}/fhirStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Creates a new FHIR store within the parent dataset.
             *
             * Create a request for the method "fhirStores.create".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the dataset this FHIR store belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1.model.FhirStore}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.healthcare.v1.model.FhirStore content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.FhirStore.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the dataset this FHIR store belongs to. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the dataset this FHIR store belongs to.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The name of the dataset this FHIR store belongs to. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID of the FHIR store that is being created. The string must match the
             * following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String fhirStoreId;

            /** Required. The ID of the FHIR store that is being created. The string must match the following
           regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public java.lang.String getFhirStoreId() {
              return fhirStoreId;
            }

            /**
             * Required. The ID of the FHIR store that is being created. The string must match the
             * following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public Create setFhirStoreId(java.lang.String fhirStoreId) {
              this.fhirStoreId = fhirStoreId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * De-identifies data from the source store and writes it to the destination store. The metadata
           * field type is OperationMetadata. If the request is successful, the response field type is
           * DeidentifyFhirStoreSummary. If errors occur, error is set. Error details are also logged to Cloud
           * Logging (see [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-
           * tos/logging)).
           *
           * Create a request for the method "fhirStores.deidentify".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Deidentify#execute()} method to invoke the remote operation.
           *
           * @param sourceStore Required. Source FHIR store resource name. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.DeidentifyFhirStoreRequest}
           * @return the request
           */
          public Deidentify deidentify(java.lang.String sourceStore, com.google.api.services.healthcare.v1.model.DeidentifyFhirStoreRequest content) throws java.io.IOException {
            Deidentify result = new Deidentify(sourceStore, content);
            initialize(result);
            return result;
          }

          public class Deidentify extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+sourceStore}:deidentify";

            private final java.util.regex.Pattern SOURCE_STORE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * De-identifies data from the source store and writes it to the destination store. The metadata
             * field type is OperationMetadata. If the request is successful, the response field type is
             * DeidentifyFhirStoreSummary. If errors occur, error is set. Error details are also logged to
             * Cloud Logging (see [Viewing error logs in Cloud
             * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
             *
             * Create a request for the method "fhirStores.deidentify".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Deidentify#execute()} method to invoke the remote
             * operation. <p> {@link
             * Deidentify#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param sourceStore Required. Source FHIR store resource name. For example,
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.DeidentifyFhirStoreRequest}
             * @since 1.13
             */
            protected Deidentify(java.lang.String sourceStore, com.google.api.services.healthcare.v1.model.DeidentifyFhirStoreRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.sourceStore = com.google.api.client.util.Preconditions.checkNotNull(sourceStore, "Required parameter sourceStore must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SOURCE_STORE_PATTERN.matcher(sourceStore).matches(),
                    "Parameter sourceStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public Deidentify set$Xgafv(java.lang.String $Xgafv) {
              return (Deidentify) super.set$Xgafv($Xgafv);
            }

            @Override
            public Deidentify setAccessToken(java.lang.String accessToken) {
              return (Deidentify) super.setAccessToken(accessToken);
            }

            @Override
            public Deidentify setAlt(java.lang.String alt) {
              return (Deidentify) super.setAlt(alt);
            }

            @Override
            public Deidentify setCallback(java.lang.String callback) {
              return (Deidentify) super.setCallback(callback);
            }

            @Override
            public Deidentify setFields(java.lang.String fields) {
              return (Deidentify) super.setFields(fields);
            }

            @Override
            public Deidentify setKey(java.lang.String key) {
              return (Deidentify) super.setKey(key);
            }

            @Override
            public Deidentify setOauthToken(java.lang.String oauthToken) {
              return (Deidentify) super.setOauthToken(oauthToken);
            }

            @Override
            public Deidentify setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Deidentify) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Deidentify setQuotaUser(java.lang.String quotaUser) {
              return (Deidentify) super.setQuotaUser(quotaUser);
            }

            @Override
            public Deidentify setUploadType(java.lang.String uploadType) {
              return (Deidentify) super.setUploadType(uploadType);
            }

            @Override
            public Deidentify setUploadProtocol(java.lang.String uploadProtocol) {
              return (Deidentify) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Source FHIR store resource name. For example, `projects/{project_id}/locati
             * ons/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String sourceStore;

            /** Required. Source FHIR store resource name. For example,
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public java.lang.String getSourceStore() {
              return sourceStore;
            }

            /**
             * Required. Source FHIR store resource name. For example, `projects/{project_id}/locati
             * ons/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public Deidentify setSourceStore(java.lang.String sourceStore) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(SOURCE_STORE_PATTERN.matcher(sourceStore).matches(),
                    "Parameter sourceStore must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.sourceStore = sourceStore;
              return this;
            }

            @Override
            public Deidentify set(String parameterName, Object value) {
              return (Deidentify) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified FHIR store and removes all resources within it.
           *
           * Create a request for the method "fhirStores.delete".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the FHIR store to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Deletes the specified FHIR store and removes all resources within it.
             *
             * Create a request for the method "fhirStores.delete".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the FHIR store to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The resource name of the FHIR store to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the FHIR store to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The resource name of the FHIR store to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Explains all the permitted/denied actor, purpose and environment for a given resource.
           *
           * Create a request for the method "fhirStores.explainDataAccess".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link ExplainDataAccess#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the FHIR store to enforce, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
           * @return the request
           */
          public ExplainDataAccess explainDataAccess(java.lang.String name) throws java.io.IOException {
            ExplainDataAccess result = new ExplainDataAccess(name);
            initialize(result);
            return result;
          }

          public class ExplainDataAccess extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ExplainDataAccessResponse> {

            private static final String REST_PATH = "v1/{+name}:explainDataAccess";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Explains all the permitted/denied actor, purpose and environment for a given resource.
             *
             * Create a request for the method "fhirStores.explainDataAccess".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link ExplainDataAccess#execute()} method to invoke the remote
             * operation. <p> {@link ExplainDataAccess#initialize(com.google.api.client.googleapis.services.Ab
             * stractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The name of the FHIR store to enforce, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
             * @since 1.13
             */
            protected ExplainDataAccess(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ExplainDataAccessResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public ExplainDataAccess set$Xgafv(java.lang.String $Xgafv) {
              return (ExplainDataAccess) super.set$Xgafv($Xgafv);
            }

            @Override
            public ExplainDataAccess setAccessToken(java.lang.String accessToken) {
              return (ExplainDataAccess) super.setAccessToken(accessToken);
            }

            @Override
            public ExplainDataAccess setAlt(java.lang.String alt) {
              return (ExplainDataAccess) super.setAlt(alt);
            }

            @Override
            public ExplainDataAccess setCallback(java.lang.String callback) {
              return (ExplainDataAccess) super.setCallback(callback);
            }

            @Override
            public ExplainDataAccess setFields(java.lang.String fields) {
              return (ExplainDataAccess) super.setFields(fields);
            }

            @Override
            public ExplainDataAccess setKey(java.lang.String key) {
              return (ExplainDataAccess) super.setKey(key);
            }

            @Override
            public ExplainDataAccess setOauthToken(java.lang.String oauthToken) {
              return (ExplainDataAccess) super.setOauthToken(oauthToken);
            }

            @Override
            public ExplainDataAccess setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ExplainDataAccess) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ExplainDataAccess setQuotaUser(java.lang.String quotaUser) {
              return (ExplainDataAccess) super.setQuotaUser(quotaUser);
            }

            @Override
            public ExplainDataAccess setUploadType(java.lang.String uploadType) {
              return (ExplainDataAccess) super.setUploadType(uploadType);
            }

            @Override
            public ExplainDataAccess setUploadProtocol(java.lang.String uploadProtocol) {
              return (ExplainDataAccess) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the FHIR store to enforce, in the format `projects/{project_id}
             * /locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the FHIR store to enforce, in the format
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the FHIR store to enforce, in the format `projects/{project_id}
             * /locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public ExplainDataAccess setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. The ID (`{resourceType}/{id}`) of the resource to explain data access on.
             */
            @com.google.api.client.util.Key
            private java.lang.String resourceId;

            /** Required. The ID (`{resourceType}/{id}`) of the resource to explain data access on.
             */
            public java.lang.String getResourceId() {
              return resourceId;
            }

            /**
             * Required. The ID (`{resourceType}/{id}`) of the resource to explain data access on.
             */
            public ExplainDataAccess setResourceId(java.lang.String resourceId) {
              this.resourceId = resourceId;
              return this;
            }

            @Override
            public ExplainDataAccess set(String parameterName, Object value) {
              return (ExplainDataAccess) super.set(parameterName, value);
            }
          }
          /**
           * Export resources from the FHIR store to the specified destination. This method returns an
           * Operation that can be used to track the status of the export by calling GetOperation. Immediate
           * fatal errors appear in the error field, errors are also logged to Cloud Logging (see [Viewing
           * error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
           * Otherwise, when the operation finishes, a detailed response of type ExportResourcesResponse is
           * returned in the response field. The metadata field type for this operation is OperationMetadata.
           *
           * Create a request for the method "fhirStores.export".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Export#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the FHIR store to export resource from, in the format of
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.ExportResourcesRequest}
           * @return the request
           */
          public Export export(java.lang.String name, com.google.api.services.healthcare.v1.model.ExportResourcesRequest content) throws java.io.IOException {
            Export result = new Export(name, content);
            initialize(result);
            return result;
          }

          public class Export extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:export";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Export resources from the FHIR store to the specified destination. This method returns an
             * Operation that can be used to track the status of the export by calling GetOperation. Immediate
             * fatal errors appear in the error field, errors are also logged to Cloud Logging (see [Viewing
             * error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
             * Otherwise, when the operation finishes, a detailed response of type ExportResourcesResponse is
             * returned in the response field. The metadata field type for this operation is
             * OperationMetadata.
             *
             * Create a request for the method "fhirStores.export".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
             * <p> {@link
             * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the FHIR store to export resource from, in the format of
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.ExportResourcesRequest}
             * @since 1.13
             */
            protected Export(java.lang.String name, com.google.api.services.healthcare.v1.model.ExportResourcesRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public Export set$Xgafv(java.lang.String $Xgafv) {
              return (Export) super.set$Xgafv($Xgafv);
            }

            @Override
            public Export setAccessToken(java.lang.String accessToken) {
              return (Export) super.setAccessToken(accessToken);
            }

            @Override
            public Export setAlt(java.lang.String alt) {
              return (Export) super.setAlt(alt);
            }

            @Override
            public Export setCallback(java.lang.String callback) {
              return (Export) super.setCallback(callback);
            }

            @Override
            public Export setFields(java.lang.String fields) {
              return (Export) super.setFields(fields);
            }

            @Override
            public Export setKey(java.lang.String key) {
              return (Export) super.setKey(key);
            }

            @Override
            public Export setOauthToken(java.lang.String oauthToken) {
              return (Export) super.setOauthToken(oauthToken);
            }

            @Override
            public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Export) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Export setQuotaUser(java.lang.String quotaUser) {
              return (Export) super.setQuotaUser(quotaUser);
            }

            @Override
            public Export setUploadType(java.lang.String uploadType) {
              return (Export) super.setUploadType(uploadType);
            }

            @Override
            public Export setUploadProtocol(java.lang.String uploadProtocol) {
              return (Export) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the FHIR store to export resource from, in the format of `proje
             * cts/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store
             * _id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the FHIR store to export resource from, in the format of
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the FHIR store to export resource from, in the format of `proje
             * cts/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store
             * _id}`.
             */
            public Export setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Export set(String parameterName, Object value) {
              return (Export) super.set(parameterName, value);
            }
          }
          /**
           * Gets the configuration of the specified FHIR store.
           *
           * Create a request for the method "fhirStores.get".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the FHIR store to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.FhirStore> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Gets the configuration of the specified FHIR store.
             *
             * Create a request for the method "fhirStores.get".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the FHIR store to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.FhirStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The resource name of the FHIR store to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the FHIR store to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The resource name of the FHIR store to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets metrics associated with the FHIR store.
           *
           * Create a request for the method "fhirStores.getFHIRStoreMetrics".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetFHIRStoreMetrics#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the FHIR store to get metrics for.
           * @return the request
           */
          public GetFHIRStoreMetrics getFHIRStoreMetrics(java.lang.String name) throws java.io.IOException {
            GetFHIRStoreMetrics result = new GetFHIRStoreMetrics(name);
            initialize(result);
            return result;
          }

          public class GetFHIRStoreMetrics extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.FhirStoreMetrics> {

            private static final String REST_PATH = "v1/{+name}:getFHIRStoreMetrics";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Gets metrics associated with the FHIR store.
             *
             * Create a request for the method "fhirStores.getFHIRStoreMetrics".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetFHIRStoreMetrics#execute()} method to invoke the remote
             * operation. <p> {@link GetFHIRStoreMetrics#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. The resource name of the FHIR store to get metrics for.
             * @since 1.13
             */
            protected GetFHIRStoreMetrics(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.FhirStoreMetrics.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetFHIRStoreMetrics set$Xgafv(java.lang.String $Xgafv) {
              return (GetFHIRStoreMetrics) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetFHIRStoreMetrics setAccessToken(java.lang.String accessToken) {
              return (GetFHIRStoreMetrics) super.setAccessToken(accessToken);
            }

            @Override
            public GetFHIRStoreMetrics setAlt(java.lang.String alt) {
              return (GetFHIRStoreMetrics) super.setAlt(alt);
            }

            @Override
            public GetFHIRStoreMetrics setCallback(java.lang.String callback) {
              return (GetFHIRStoreMetrics) super.setCallback(callback);
            }

            @Override
            public GetFHIRStoreMetrics setFields(java.lang.String fields) {
              return (GetFHIRStoreMetrics) super.setFields(fields);
            }

            @Override
            public GetFHIRStoreMetrics setKey(java.lang.String key) {
              return (GetFHIRStoreMetrics) super.setKey(key);
            }

            @Override
            public GetFHIRStoreMetrics setOauthToken(java.lang.String oauthToken) {
              return (GetFHIRStoreMetrics) super.setOauthToken(oauthToken);
            }

            @Override
            public GetFHIRStoreMetrics setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetFHIRStoreMetrics) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetFHIRStoreMetrics setQuotaUser(java.lang.String quotaUser) {
              return (GetFHIRStoreMetrics) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetFHIRStoreMetrics setUploadType(java.lang.String uploadType) {
              return (GetFHIRStoreMetrics) super.setUploadType(uploadType);
            }

            @Override
            public GetFHIRStoreMetrics setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetFHIRStoreMetrics) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The resource name of the FHIR store to get metrics for. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the FHIR store to get metrics for.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The resource name of the FHIR store to get metrics for. */
            public GetFHIRStoreMetrics setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetFHIRStoreMetrics set(String parameterName, Object value) {
              return (GetFHIRStoreMetrics) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "fhirStores.getIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "fhirStores.getIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Imports resources to the FHIR store by loading data from the specified sources. This method is
           * optimized to load large quantities of data using import semantics that ignore some FHIR store
           * configuration options and are not suitable for all use cases. It is primarily intended to load
           * data into an empty FHIR store that is not being used by other clients. In cases where this method
           * is not appropriate, consider using ExecuteBundle to load data. Every resource in the input must
           * contain a client-supplied ID. Each resource is stored using the supplied ID regardless of the
           * enable_update_create setting on the FHIR store. It is strongly advised not to include or encode
           * any sensitive data such as patient identifiers in client-specified resource IDs. Those IDs are
           * part of the FHIR resource path recorded in Cloud Audit Logs and Cloud Pub/Sub notifications.
           * Those IDs can also be contained in reference fields within other resources. The import process
           * does not enforce referential integrity, regardless of the disable_referential_integrity setting
           * on the FHIR store. This allows the import of resources with arbitrary interdependencies without
           * considering grouping or ordering, but if the input data contains invalid references or if some
           * resources fail to be imported, the FHIR store might be left in a state that violates referential
           * integrity. The import process does not trigger Pub/Sub notification or BigQuery streaming update,
           * regardless of how those are configured on the FHIR store. If a resource with the specified ID
           * already exists, the most recent version of the resource is overwritten without creating a new
           * historical version, regardless of the disable_resource_versioning setting on the FHIR store. If
           * transient failures occur during the import, it's possible that successfully imported resources
           * will be overwritten more than once. The import operation is idempotent unless the input data
           * contains multiple valid resources with the same ID but different contents. In that case, after
           * the import completes, the store contains exactly one resource with that ID but there is no
           * ordering guarantee on which version of the contents it will have. The operation result counters
           * do not count duplicate IDs as an error and count one success for each resource in the input,
           * which might result in a success count larger than the number of resources in the FHIR store. This
           * often occurs when importing data organized in bundles produced by Patient-everything where each
           * bundle contains its own copy of a resource such as Practitioner that might be referred to by many
           * patients. If some resources fail to import, for example due to parsing errors, successfully
           * imported resources are not rolled back. The location and format of the input data is specified by
           * the parameters in ImportResourcesRequest. Note that if no format is specified, this method
           * assumes the `BUNDLE` format. When using the `BUNDLE` format this method ignores the `Bundle.type`
           * field, except that `history` bundles are rejected, and does not apply any of the bundle
           * processing semantics for batch or transaction bundles. Unlike in ExecuteBundle, transaction
           * bundles are not executed as a single transaction and bundle-internal references are not
           * rewritten. The bundle is treated as a collection of resources to be written as provided in
           * `Bundle.entry.resource`, ignoring `Bundle.entry.request`. As an example, this allows the import
           * of `searchset` bundles produced by a FHIR search or Patient-everything operation. This method
           * returns an Operation that can be used to track the status of the import by calling GetOperation.
           * Immediate fatal errors appear in the error field, errors are also logged to Cloud Logging (see
           * [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
           * Otherwise, when the operation finishes, a detailed response of type ImportResourcesResponse is
           * returned in the response field. The metadata field type for this operation is OperationMetadata.
           *
           * Create a request for the method "fhirStores.import".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link CloudHealthcareImport#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The name of the FHIR store to import FHIR resources to, in the format of
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.ImportResourcesRequest}
           * @return the request
           */
          public CloudHealthcareImport healthcareImport(java.lang.String name, com.google.api.services.healthcare.v1.model.ImportResourcesRequest content) throws java.io.IOException {
            CloudHealthcareImport result = new CloudHealthcareImport(name, content);
            initialize(result);
            return result;
          }

          public class CloudHealthcareImport extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:import";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Imports resources to the FHIR store by loading data from the specified sources. This method is
             * optimized to load large quantities of data using import semantics that ignore some FHIR store
             * configuration options and are not suitable for all use cases. It is primarily intended to load
             * data into an empty FHIR store that is not being used by other clients. In cases where this
             * method is not appropriate, consider using ExecuteBundle to load data. Every resource in the
             * input must contain a client-supplied ID. Each resource is stored using the supplied ID
             * regardless of the enable_update_create setting on the FHIR store. It is strongly advised not to
             * include or encode any sensitive data such as patient identifiers in client-specified resource
             * IDs. Those IDs are part of the FHIR resource path recorded in Cloud Audit Logs and Cloud
             * Pub/Sub notifications. Those IDs can also be contained in reference fields within other
             * resources. The import process does not enforce referential integrity, regardless of the
             * disable_referential_integrity setting on the FHIR store. This allows the import of resources
             * with arbitrary interdependencies without considering grouping or ordering, but if the input
             * data contains invalid references or if some resources fail to be imported, the FHIR store might
             * be left in a state that violates referential integrity. The import process does not trigger
             * Pub/Sub notification or BigQuery streaming update, regardless of how those are configured on
             * the FHIR store. If a resource with the specified ID already exists, the most recent version of
             * the resource is overwritten without creating a new historical version, regardless of the
             * disable_resource_versioning setting on the FHIR store. If transient failures occur during the
             * import, it's possible that successfully imported resources will be overwritten more than once.
             * The import operation is idempotent unless the input data contains multiple valid resources with
             * the same ID but different contents. In that case, after the import completes, the store
             * contains exactly one resource with that ID but there is no ordering guarantee on which version
             * of the contents it will have. The operation result counters do not count duplicate IDs as an
             * error and count one success for each resource in the input, which might result in a success
             * count larger than the number of resources in the FHIR store. This often occurs when importing
             * data organized in bundles produced by Patient-everything where each bundle contains its own
             * copy of a resource such as Practitioner that might be referred to by many patients. If some
             * resources fail to import, for example due to parsing errors, successfully imported resources
             * are not rolled back. The location and format of the input data is specified by the parameters
             * in ImportResourcesRequest. Note that if no format is specified, this method assumes the
             * `BUNDLE` format. When using the `BUNDLE` format this method ignores the `Bundle.type` field,
             * except that `history` bundles are rejected, and does not apply any of the bundle processing
             * semantics for batch or transaction bundles. Unlike in ExecuteBundle, transaction bundles are
             * not executed as a single transaction and bundle-internal references are not rewritten. The
             * bundle is treated as a collection of resources to be written as provided in
             * `Bundle.entry.resource`, ignoring `Bundle.entry.request`. As an example, this allows the import
             * of `searchset` bundles produced by a FHIR search or Patient-everything operation. This method
             * returns an Operation that can be used to track the status of the import by calling
             * GetOperation. Immediate fatal errors appear in the error field, errors are also logged to Cloud
             * Logging (see [Viewing error logs in Cloud
             * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise, when the
             * operation finishes, a detailed response of type ImportResourcesResponse is returned in the
             * response field. The metadata field type for this operation is OperationMetadata.
             *
             * Create a request for the method "fhirStores.import".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link CloudHealthcareImport#execute()} method to invoke the
             * remote operation. <p> {@link CloudHealthcareImport#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. The name of the FHIR store to import FHIR resources to, in the format of
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_stor
           *        e_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.ImportResourcesRequest}
             * @since 1.13
             */
            protected CloudHealthcareImport(java.lang.String name, com.google.api.services.healthcare.v1.model.ImportResourcesRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public CloudHealthcareImport set$Xgafv(java.lang.String $Xgafv) {
              return (CloudHealthcareImport) super.set$Xgafv($Xgafv);
            }

            @Override
            public CloudHealthcareImport setAccessToken(java.lang.String accessToken) {
              return (CloudHealthcareImport) super.setAccessToken(accessToken);
            }

            @Override
            public CloudHealthcareImport setAlt(java.lang.String alt) {
              return (CloudHealthcareImport) super.setAlt(alt);
            }

            @Override
            public CloudHealthcareImport setCallback(java.lang.String callback) {
              return (CloudHealthcareImport) super.setCallback(callback);
            }

            @Override
            public CloudHealthcareImport setFields(java.lang.String fields) {
              return (CloudHealthcareImport) super.setFields(fields);
            }

            @Override
            public CloudHealthcareImport setKey(java.lang.String key) {
              return (CloudHealthcareImport) super.setKey(key);
            }

            @Override
            public CloudHealthcareImport setOauthToken(java.lang.String oauthToken) {
              return (CloudHealthcareImport) super.setOauthToken(oauthToken);
            }

            @Override
            public CloudHealthcareImport setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CloudHealthcareImport) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CloudHealthcareImport setQuotaUser(java.lang.String quotaUser) {
              return (CloudHealthcareImport) super.setQuotaUser(quotaUser);
            }

            @Override
            public CloudHealthcareImport setUploadType(java.lang.String uploadType) {
              return (CloudHealthcareImport) super.setUploadType(uploadType);
            }

            @Override
            public CloudHealthcareImport setUploadProtocol(java.lang.String uploadProtocol) {
              return (CloudHealthcareImport) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the FHIR store to import FHIR resources to, in the format of `p
             * rojects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_s
             * tore_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the FHIR store to import FHIR resources to, in the format of
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the FHIR store to import FHIR resources to, in the format of `p
             * rojects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_s
             * tore_id}`.
             */
            public CloudHealthcareImport setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public CloudHealthcareImport set(String parameterName, Object value) {
              return (CloudHealthcareImport) super.set(parameterName, value);
            }
          }
          /**
           * Lists the FHIR stores in the given dataset.
           *
           * Create a request for the method "fhirStores.list".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the dataset.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListFhirStoresResponse> {

            private static final String REST_PATH = "v1/{+parent}/fhirStores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists the FHIR stores in the given dataset.
             *
             * Create a request for the method "fhirStores.list".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the dataset.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListFhirStoresResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the dataset. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the dataset.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Name of the dataset. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Restricts stores returned to those matching a filter. The following syntax is
             * available: * A string field value can be written as text inside quotation marks, for
             * example `"query text"`. The only valid relational operation for text fields is
             * equality (`=`), where text is searched within the field, rather than having the field
             * be equal to the text. For example, `"Comment = great"` returns messages with `great`
             * in the comment field. * A number field value can be written as an integer, a decimal,
             * or an exponential. The valid relational operators for number fields are the equality
             * operator (`=`), along with the less than/greater than operators (`<`, `<=`, `>`,
             * `>=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
             * operator to an expression to negate it. * A date field value must be written in
             * `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time format. Leading
             * zeros are required for one-digit months and days. The valid relational operators for
             * date fields are the equality operator (`=`) , along with the less than/greater than
             * operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`) operator.
             * You can prepend the `NOT` operator to an expression to negate it. * Multiple field
             * query expressions can be combined in one query by adding `AND` or `OR` operators
             * between the expressions. If a boolean operator appears within a quoted string, it is
             * not treated as special, it's just another part of the character string to be matched.
             * You can prepend the `NOT` operator to an expression to negate it. Only filtering on
             * labels is supported, for example `labels.key=value`.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Restricts stores returned to those matching a filter. The following syntax is available: * A string
           field value can be written as text inside quotation marks, for example `"query text"`. The only
           valid relational operation for text fields is equality (`=`), where text is searched within the
           field, rather than having the field be equal to the text. For example, `"Comment = great"` returns
           messages with `great` in the comment field. * A number field value can be written as an integer, a
           decimal, or an exponential. The valid relational operators for number fields are the equality
           operator (`=`), along with the less than/greater than operators (`<`, `<=`, `>`, `>=`). Note that
           there is no inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to
           negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields with date and time use
           the RFC3339 time format. Leading zeros are required for one-digit months and days. The valid
           relational operators for date fields are the equality operator (`=`) , along with the less
           than/greater than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`)
           operator. You can prepend the `NOT` operator to an expression to negate it. * Multiple field query
           expressions can be combined in one query by adding `AND` or `OR` operators between the expressions.
           If a boolean operator appears within a quoted string, it is not treated as special, it's just
           another part of the character string to be matched. You can prepend the `NOT` operator to an
           expression to negate it. Only filtering on labels is supported, for example `labels.key=value`.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Restricts stores returned to those matching a filter. The following syntax is
             * available: * A string field value can be written as text inside quotation marks, for
             * example `"query text"`. The only valid relational operation for text fields is
             * equality (`=`), where text is searched within the field, rather than having the field
             * be equal to the text. For example, `"Comment = great"` returns messages with `great`
             * in the comment field. * A number field value can be written as an integer, a decimal,
             * or an exponential. The valid relational operators for number fields are the equality
             * operator (`=`), along with the less than/greater than operators (`<`, `<=`, `>`,
             * `>=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
             * operator to an expression to negate it. * A date field value must be written in
             * `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time format. Leading
             * zeros are required for one-digit months and days. The valid relational operators for
             * date fields are the equality operator (`=`) , along with the less than/greater than
             * operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`) operator.
             * You can prepend the `NOT` operator to an expression to negate it. * Multiple field
             * query expressions can be combined in one query by adding `AND` or `OR` operators
             * between the expressions. If a boolean operator appears within a quoted string, it is
             * not treated as special, it's just another part of the character string to be matched.
             * You can prepend the `NOT` operator to an expression to negate it. Only filtering on
             * labels is supported, for example `labels.key=value`.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Limit on the number of FHIR stores to return in a single response. If not specified,
             * 100 is used. May not be larger than 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Limit on the number of FHIR stores to return in a single response. If not specified, 100 is used.
           May not be larger than 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Limit on the number of FHIR stores to return in a single response. If not specified,
             * 100 is used. May not be larger than 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from the previous List request, if any.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the configuration of the specified FHIR store.
           *
           * Create a request for the method "fhirStores.patch".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. Identifier. Resource name of the FHIR store, of the form
           *        `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_i
           *        d}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.FhirStore}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1.model.FhirStore content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.FhirStore> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Updates the configuration of the specified FHIR store.
             *
             * Create a request for the method "fhirStores.patch".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. Identifier. Resource name of the FHIR store, of the form
           *        `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_i
           *        d}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.FhirStore}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.healthcare.v1.model.FhirStore content) {
              super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1.model.FhirStore.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Output only. Identifier. Resource name of the FHIR store, of the form `projects/{proj
             * ect_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. Identifier. Resource name of the FHIR store, of the form
           `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Output only. Identifier. Resource name of the FHIR store, of the form `projects/{proj
             * ect_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. The update mask applies to the resource. For the `FieldMask` definition,
             * see https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. The update mask applies to the resource. For the `FieldMask` definition, see
           https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. The update mask applies to the resource. For the `FieldMask` definition,
             * see https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Rolls back resources from the FHIR store to the specified time. This method returns an Operation
           * that can be used to track the status of the rollback by calling GetOperation. Immediate fatal
           * errors appear in the error field, errors are also logged to Cloud Logging (see [Viewing error
           * logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise,
           * when the operation finishes, a detailed response of type RollbackFhirResourcesResponse is
           * returned in the response field. The metadata field type for this operation is OperationMetadata.
           *
           * Create a request for the method "fhirStores.rollback".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Rollback#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the FHIR store to rollback, in the format of
           *        "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
           *        /fhirStores/{fhir_store_id}".
           * @param content the {@link com.google.api.services.healthcare.v1.model.RollbackFhirResourcesRequest}
           * @return the request
           */
          public Rollback rollback(java.lang.String name, com.google.api.services.healthcare.v1.model.RollbackFhirResourcesRequest content) throws java.io.IOException {
            Rollback result = new Rollback(name, content);
            initialize(result);
            return result;
          }

          public class Rollback extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:rollback";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Rolls back resources from the FHIR store to the specified time. This method returns an
             * Operation that can be used to track the status of the rollback by calling GetOperation.
             * Immediate fatal errors appear in the error field, errors are also logged to Cloud Logging (see
             * [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-
             * tos/logging)). Otherwise, when the operation finishes, a detailed response of type
             * RollbackFhirResourcesResponse is returned in the response field. The metadata field type for
             * this operation is OperationMetadata.
             *
             * Create a request for the method "fhirStores.rollback".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Rollback#execute()} method to invoke the remote operation.
             * <p> {@link
             * Rollback#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the FHIR store to rollback, in the format of
           *        "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
           *        /fhirStores/{fhir_store_id}".
             * @param content the {@link com.google.api.services.healthcare.v1.model.RollbackFhirResourcesRequest}
             * @since 1.13
             */
            protected Rollback(java.lang.String name, com.google.api.services.healthcare.v1.model.RollbackFhirResourcesRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public Rollback set$Xgafv(java.lang.String $Xgafv) {
              return (Rollback) super.set$Xgafv($Xgafv);
            }

            @Override
            public Rollback setAccessToken(java.lang.String accessToken) {
              return (Rollback) super.setAccessToken(accessToken);
            }

            @Override
            public Rollback setAlt(java.lang.String alt) {
              return (Rollback) super.setAlt(alt);
            }

            @Override
            public Rollback setCallback(java.lang.String callback) {
              return (Rollback) super.setCallback(callback);
            }

            @Override
            public Rollback setFields(java.lang.String fields) {
              return (Rollback) super.setFields(fields);
            }

            @Override
            public Rollback setKey(java.lang.String key) {
              return (Rollback) super.setKey(key);
            }

            @Override
            public Rollback setOauthToken(java.lang.String oauthToken) {
              return (Rollback) super.setOauthToken(oauthToken);
            }

            @Override
            public Rollback setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Rollback) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Rollback setQuotaUser(java.lang.String quotaUser) {
              return (Rollback) super.setQuotaUser(quotaUser);
            }

            @Override
            public Rollback setUploadType(java.lang.String uploadType) {
              return (Rollback) super.setUploadType(uploadType);
            }

            @Override
            public Rollback setUploadProtocol(java.lang.String uploadProtocol) {
              return (Rollback) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the FHIR store to rollback, in the format of
             * "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
             * /fhirStores/{fhir_store_id}".
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the FHIR store to rollback, in the format of
           "projects/{project_id}/locations/{location_id}/datasets/{dataset_id} /fhirStores/{fhir_store_id}".
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the FHIR store to rollback, in the format of
             * "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
             * /fhirStores/{fhir_store_id}".
             */
            public Rollback setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Rollback set(String parameterName, Object value) {
              return (Rollback) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "fhirStores.setIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "fhirStores.setIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "fhirStores.testIamPermissions".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "fhirStores.testIamPermissions".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Fhir collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.Fhir.List request = healthcare.fhir().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Fhir fhir() {
            return new Fhir();
          }

          /**
           * The "fhir" collection of methods.
           */
          public class Fhir {

            /**
             * Creates a FHIR Binary resource. This method can be used to create a Binary resource either by
             * using one of the accepted FHIR JSON content types, or as a raw data stream. If a resource is
             * created with this method using the FHIR content type this method's behavior is the same as
             * [`fhir.create`](https://cloud.google.com/healthcare-
             * api/docs/reference/rest/v1/projects.locations.datasets.fhirStores.fhir/create). If a resource
             * type other than Binary is used in the request it's treated in the same way as non-FHIR data
             * (e.g., images, zip archives, pdf files, documents). When a non-FHIR content type is used in the
             * request, a Binary resource will be generated, and the uploaded data will be stored in the
             * `content` field (`DSTU2` and `STU3`), or the `data` field (`R4`). The Binary resource's
             * `contentType` will be filled in using the value of the `Content-Type` header, and the
             * `securityContext` field (not present in `DSTU2`) will be populated from the `X-Security-Context`
             * header if it exists. At this time `securityContext` has no special behavior in the Cloud
             * Healthcare API. Note: the limit on data ingested through this method is 1 GB. For best
             * performance, use a non-FHIR data type instead of wrapping the data in a Binary resource. Some of
             * the Healthcare API features, such as [exporting to BigQuery](https://cloud.google.com/healthcare-
             * api/docs/how-tos/fhir-export-bigquery) or [Pub/Sub
             * notifications](https://cloud.google.com/healthcare-api/docs/fhir-
             * pubsub#behavior_when_a_fhir_resource_is_too_large_or_traffic_is_high) with full resource content,
             * do not support Binary resources that are larger than 10 MB. In these cases the resource's `data`
             * field will be omitted. Instead, the "http://hl7.org/fhir/StructureDefinition/data-absent-reason"
             * extension will be present to indicate that including the data is `unsupported`. On success, an
             * empty `201 Created` response is returned. The newly created resource's ID and version are
             * returned in the Location header. Using `Prefer: representation=resource` is not allowed for this
             * method. The definition of the Binary REST API can be found at
             * https://hl7.org/fhir/binary.html#rest.
             *
             * Create a request for the method "fhir.Binary-create".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link BinaryCreate#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the FHIR store this resource belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
             * @return the request
             */
            public BinaryCreate binaryCreate(java.lang.String parent, com.google.api.services.healthcare.v1.model.HttpBody content) throws java.io.IOException {
              BinaryCreate result = new BinaryCreate(parent, content);
              initialize(result);
              return result;
            }

            public class BinaryCreate extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/fhir/Binary";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              /**
               * Creates a FHIR Binary resource. This method can be used to create a Binary resource either by
               * using one of the accepted FHIR JSON content types, or as a raw data stream. If a resource is
               * created with this method using the FHIR content type this method's behavior is the same as
               * [`fhir.create`](https://cloud.google.com/healthcare-
               * api/docs/reference/rest/v1/projects.locations.datasets.fhirStores.fhir/create). If a resource
               * type other than Binary is used in the request it's treated in the same way as non-FHIR data
               * (e.g., images, zip archives, pdf files, documents). When a non-FHIR content type is used in the
               * request, a Binary resource will be generated, and the uploaded data will be stored in the
               * `content` field (`DSTU2` and `STU3`), or the `data` field (`R4`). The Binary resource's
               * `contentType` will be filled in using the value of the `Content-Type` header, and the
               * `securityContext` field (not present in `DSTU2`) will be populated from the `X-Security-
               * Context` header if it exists. At this time `securityContext` has no special behavior in the
               * Cloud Healthcare API. Note: the limit on data ingested through this method is 1 GB. For best
               * performance, use a non-FHIR data type instead of wrapping the data in a Binary resource. Some
               * of the Healthcare API features, such as [exporting to
               * BigQuery](https://cloud.google.com/healthcare-api/docs/how-tos/fhir-export-bigquery) or
               * [Pub/Sub notifications](https://cloud.google.com/healthcare-api/docs/fhir-
               * pubsub#behavior_when_a_fhir_resource_is_too_large_or_traffic_is_high) with full resource
               * content, do not support Binary resources that are larger than 10 MB. In these cases the
               * resource's `data` field will be omitted. Instead, the
               * "http://hl7.org/fhir/StructureDefinition/data-absent-reason" extension will be present to
               * indicate that including the data is `unsupported`. On success, an empty `201 Created` response
               * is returned. The newly created resource's ID and version are returned in the Location header.
               * Using `Prefer: representation=resource` is not allowed for this method. The definition of the
               * Binary REST API can be found at https://hl7.org/fhir/binary.html#rest.
               *
               * Create a request for the method "fhir.Binary-create".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link BinaryCreate#execute()} method to invoke the remote
               * operation. <p> {@link
               * BinaryCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the FHIR store this resource belongs to.
               * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
               * @since 1.13
               */
              protected BinaryCreate(java.lang.String parent, com.google.api.services.healthcare.v1.model.HttpBody content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
              }

              @Override
              public BinaryCreate set$Xgafv(java.lang.String $Xgafv) {
                return (BinaryCreate) super.set$Xgafv($Xgafv);
              }

              @Override
              public BinaryCreate setAccessToken(java.lang.String accessToken) {
                return (BinaryCreate) super.setAccessToken(accessToken);
              }

              @Override
              public BinaryCreate setAlt(java.lang.String alt) {
                return (BinaryCreate) super.setAlt(alt);
              }

              @Override
              public BinaryCreate setCallback(java.lang.String callback) {
                return (BinaryCreate) super.setCallback(callback);
              }

              @Override
              public BinaryCreate setFields(java.lang.String fields) {
                return (BinaryCreate) super.setFields(fields);
              }

              @Override
              public BinaryCreate setKey(java.lang.String key) {
                return (BinaryCreate) super.setKey(key);
              }

              @Override
              public BinaryCreate setOauthToken(java.lang.String oauthToken) {
                return (BinaryCreate) super.setOauthToken(oauthToken);
              }

              @Override
              public BinaryCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BinaryCreate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BinaryCreate setQuotaUser(java.lang.String quotaUser) {
                return (BinaryCreate) super.setQuotaUser(quotaUser);
              }

              @Override
              public BinaryCreate setUploadType(java.lang.String uploadType) {
                return (BinaryCreate) super.setUploadType(uploadType);
              }

              @Override
              public BinaryCreate setUploadProtocol(java.lang.String uploadProtocol) {
                return (BinaryCreate) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the FHIR store this resource belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the FHIR store this resource belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The name of the FHIR store this resource belongs to. */
              public BinaryCreate setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public BinaryCreate set(String parameterName, Object value) {
                return (BinaryCreate) super.set(parameterName, value);
              }
            }
            /**
             * Gets the contents of a FHIR Binary resource. This method can be used to retrieve a Binary
             * resource either by using the FHIR JSON mimetype as the value for the Accept header, or as a raw
             * data stream. If the FHIR Accept type is used this method will return a Binary resource with the
             * data base64-encoded, regardless of how the resource was created. The resource data can be
             * retrieved in base64-decoded form if the Accept type of the request matches the value of the
             * resource's `contentType` field. The definition of the Binary REST API can be found at
             * https://hl7.org/fhir/binary.html#rest.
             *
             * Create a request for the method "fhir.Binary-read".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link BinaryRead#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the Binary resource to retrieve.
             * @return the request
             */
            public BinaryRead binaryRead(java.lang.String name) throws java.io.IOException {
              BinaryRead result = new BinaryRead(name);
              initialize(result);
              return result;
            }

            public class BinaryRead extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+$");

              /**
               * Gets the contents of a FHIR Binary resource. This method can be used to retrieve a Binary
               * resource either by using the FHIR JSON mimetype as the value for the Accept header, or as a raw
               * data stream. If the FHIR Accept type is used this method will return a Binary resource with the
               * data base64-encoded, regardless of how the resource was created. The resource data can be
               * retrieved in base64-decoded form if the Accept type of the request matches the value of the
               * resource's `contentType` field. The definition of the Binary REST API can be found at
               * https://hl7.org/fhir/binary.html#rest.
               *
               * Create a request for the method "fhir.Binary-read".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link BinaryRead#execute()} method to invoke the remote
               * operation. <p> {@link
               * BinaryRead#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the Binary resource to retrieve.
               * @since 1.13
               */
              protected BinaryRead(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public BinaryRead set$Xgafv(java.lang.String $Xgafv) {
                return (BinaryRead) super.set$Xgafv($Xgafv);
              }

              @Override
              public BinaryRead setAccessToken(java.lang.String accessToken) {
                return (BinaryRead) super.setAccessToken(accessToken);
              }

              @Override
              public BinaryRead setAlt(java.lang.String alt) {
                return (BinaryRead) super.setAlt(alt);
              }

              @Override
              public BinaryRead setCallback(java.lang.String callback) {
                return (BinaryRead) super.setCallback(callback);
              }

              @Override
              public BinaryRead setFields(java.lang.String fields) {
                return (BinaryRead) super.setFields(fields);
              }

              @Override
              public BinaryRead setKey(java.lang.String key) {
                return (BinaryRead) super.setKey(key);
              }

              @Override
              public BinaryRead setOauthToken(java.lang.String oauthToken) {
                return (BinaryRead) super.setOauthToken(oauthToken);
              }

              @Override
              public BinaryRead setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BinaryRead) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BinaryRead setQuotaUser(java.lang.String quotaUser) {
                return (BinaryRead) super.setQuotaUser(quotaUser);
              }

              @Override
              public BinaryRead setUploadType(java.lang.String uploadType) {
                return (BinaryRead) super.setUploadType(uploadType);
              }

              @Override
              public BinaryRead setUploadProtocol(java.lang.String uploadProtocol) {
                return (BinaryRead) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the Binary resource to retrieve. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the Binary resource to retrieve.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the Binary resource to retrieve. */
              public BinaryRead setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public BinaryRead set(String parameterName, Object value) {
                return (BinaryRead) super.set(parameterName, value);
              }
            }
            /**
             * Updates the entire contents of a Binary resource. If the specified resource does not exist and
             * the FHIR store has enable_update_create set, creates the resource with the client-specified ID.
             * It is strongly advised not to include or encode any sensitive data such as patient identifiers in
             * client-specified resource IDs. Those IDs are part of the FHIR resource path recorded in Cloud
             * Audit Logs and Pub/Sub notifications. Those IDs can also be contained in reference fields within
             * other resources. This method can be used to update a Binary resource either by using one of the
             * accepted FHIR JSON content types, or as a raw data stream. If a resource is updated with this
             * method using the FHIR content type this method's behavior is the same as `update`. If a resource
             * type other than Binary is used in the request it will be treated in the same way as non-FHIR
             * data. When a non-FHIR content type is used in the request, a Binary resource will be generated
             * using the ID from the resource path, and the uploaded data will be stored in the `content` field
             * (`DSTU2` and `STU3`), or the `data` field (`R4`). The Binary resource's `contentType` will be
             * filled in using the value of the `Content-Type` header, and the `securityContext` field (not
             * present in `DSTU2`) will be populated from the `X-Security-Context` header if it exists. At this
             * time `securityContext` has no special behavior in the Cloud Healthcare API. Note: the limit on
             * data ingested through this method is 2 GB. For best performance, use a non-FHIR data type instead
             * of wrapping the data in a Binary resource. Some of the Healthcare API features, such as
             * [exporting to BigQuery](https://cloud.google.com/healthcare-api/docs/how-tos/fhir-export-
             * bigquery) or [Pub/Sub notifications](https://cloud.google.com/healthcare-api/docs/fhir-
             * pubsub#behavior_when_a_fhir_resource_is_too_large_or_traffic_is_high) with full resource content,
             * do not support Binary resources that are larger than 10 MB. In these cases the resource's `data`
             * field will be omitted. Instead, the "http://hl7.org/fhir/StructureDefinition/data-absent-reason"
             * extension will be present to indicate that including the data is `unsupported`. On success, an
             * empty 200 OK response will be returned, or a 201 Created if the resource did not exit. The
             * resource's ID and version are returned in the Location header. Using `Prefer:
             * representation=resource` is not allowed for this method. The definition of the Binary REST API
             * can be found at https://hl7.org/fhir/binary.html#rest.
             *
             * Create a request for the method "fhir.Binary-update".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link BinaryUpdate#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the resource to update.
             * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
             * @return the request
             */
            public BinaryUpdate binaryUpdate(java.lang.String name, com.google.api.services.healthcare.v1.model.HttpBody content) throws java.io.IOException {
              BinaryUpdate result = new BinaryUpdate(name, content);
              initialize(result);
              return result;
            }

            public class BinaryUpdate extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+$");

              /**
               * Updates the entire contents of a Binary resource. If the specified resource does not exist and
               * the FHIR store has enable_update_create set, creates the resource with the client-specified ID.
               * It is strongly advised not to include or encode any sensitive data such as patient identifiers
               * in client-specified resource IDs. Those IDs are part of the FHIR resource path recorded in
               * Cloud Audit Logs and Pub/Sub notifications. Those IDs can also be contained in reference fields
               * within other resources. This method can be used to update a Binary resource either by using one
               * of the accepted FHIR JSON content types, or as a raw data stream. If a resource is updated with
               * this method using the FHIR content type this method's behavior is the same as `update`. If a
               * resource type other than Binary is used in the request it will be treated in the same way as
               * non-FHIR data. When a non-FHIR content type is used in the request, a Binary resource will be
               * generated using the ID from the resource path, and the uploaded data will be stored in the
               * `content` field (`DSTU2` and `STU3`), or the `data` field (`R4`). The Binary resource's
               * `contentType` will be filled in using the value of the `Content-Type` header, and the
               * `securityContext` field (not present in `DSTU2`) will be populated from the `X-Security-
               * Context` header if it exists. At this time `securityContext` has no special behavior in the
               * Cloud Healthcare API. Note: the limit on data ingested through this method is 2 GB. For best
               * performance, use a non-FHIR data type instead of wrapping the data in a Binary resource. Some
               * of the Healthcare API features, such as [exporting to
               * BigQuery](https://cloud.google.com/healthcare-api/docs/how-tos/fhir-export-bigquery) or
               * [Pub/Sub notifications](https://cloud.google.com/healthcare-api/docs/fhir-
               * pubsub#behavior_when_a_fhir_resource_is_too_large_or_traffic_is_high) with full resource
               * content, do not support Binary resources that are larger than 10 MB. In these cases the
               * resource's `data` field will be omitted. Instead, the
               * "http://hl7.org/fhir/StructureDefinition/data-absent-reason" extension will be present to
               * indicate that including the data is `unsupported`. On success, an empty 200 OK response will be
               * returned, or a 201 Created if the resource did not exit. The resource's ID and version are
               * returned in the Location header. Using `Prefer: representation=resource` is not allowed for
               * this method. The definition of the Binary REST API can be found at
               * https://hl7.org/fhir/binary.html#rest.
               *
               * Create a request for the method "fhir.Binary-update".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link BinaryUpdate#execute()} method to invoke the remote
               * operation. <p> {@link
               * BinaryUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the resource to update.
               * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
               * @since 1.13
               */
              protected BinaryUpdate(java.lang.String name, com.google.api.services.healthcare.v1.model.HttpBody content) {
                super(CloudHealthcare.this, "PUT", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+$");
                }
              }

              @Override
              public BinaryUpdate set$Xgafv(java.lang.String $Xgafv) {
                return (BinaryUpdate) super.set$Xgafv($Xgafv);
              }

              @Override
              public BinaryUpdate setAccessToken(java.lang.String accessToken) {
                return (BinaryUpdate) super.setAccessToken(accessToken);
              }

              @Override
              public BinaryUpdate setAlt(java.lang.String alt) {
                return (BinaryUpdate) super.setAlt(alt);
              }

              @Override
              public BinaryUpdate setCallback(java.lang.String callback) {
                return (BinaryUpdate) super.setCallback(callback);
              }

              @Override
              public BinaryUpdate setFields(java.lang.String fields) {
                return (BinaryUpdate) super.setFields(fields);
              }

              @Override
              public BinaryUpdate setKey(java.lang.String key) {
                return (BinaryUpdate) super.setKey(key);
              }

              @Override
              public BinaryUpdate setOauthToken(java.lang.String oauthToken) {
                return (BinaryUpdate) super.setOauthToken(oauthToken);
              }

              @Override
              public BinaryUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BinaryUpdate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BinaryUpdate setQuotaUser(java.lang.String quotaUser) {
                return (BinaryUpdate) super.setQuotaUser(quotaUser);
              }

              @Override
              public BinaryUpdate setUploadType(java.lang.String uploadType) {
                return (BinaryUpdate) super.setUploadType(uploadType);
              }

              @Override
              public BinaryUpdate setUploadProtocol(java.lang.String uploadProtocol) {
                return (BinaryUpdate) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the resource to update. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the resource to update.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the resource to update. */
              public BinaryUpdate setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public BinaryUpdate set(String parameterName, Object value) {
                return (BinaryUpdate) super.set(parameterName, value);
              }
            }
            /**
             * Gets the contents of a version (current or historical) of a FHIR Binary resource by version ID.
             * This method can be used to retrieve a Binary resource version either by using the FHIR JSON
             * mimetype as the value for the Accept header, or as a raw data stream. If the FHIR Accept type is
             * used this method will return a Binary resource with the data base64-encoded, regardless of how
             * the resource version was created. The resource data can be retrieved in base64-decoded form if
             * the Accept type of the request matches the value of the resource version's `contentType` field.
             * The definition of the Binary REST API can be found at https://hl7.org/fhir/binary.html#rest.
             *
             * Create a request for the method "fhir.Binary-vread".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link BinaryVread#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the Binary resource version to retrieve.
             * @return the request
             */
            public BinaryVread binaryVread(java.lang.String name) throws java.io.IOException {
              BinaryVread result = new BinaryVread(name);
              initialize(result);
              return result;
            }

            public class BinaryVread extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+/_history/[^/]+$");

              /**
               * Gets the contents of a version (current or historical) of a FHIR Binary resource by version ID.
               * This method can be used to retrieve a Binary resource version either by using the FHIR JSON
               * mimetype as the value for the Accept header, or as a raw data stream. If the FHIR Accept type
               * is used this method will return a Binary resource with the data base64-encoded, regardless of
               * how the resource version was created. The resource data can be retrieved in base64-decoded form
               * if the Accept type of the request matches the value of the resource version's `contentType`
               * field. The definition of the Binary REST API can be found at
               * https://hl7.org/fhir/binary.html#rest.
               *
               * Create a request for the method "fhir.Binary-vread".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link BinaryVread#execute()} method to invoke the remote
               * operation. <p> {@link
               * BinaryVread#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the Binary resource version to retrieve.
               * @since 1.13
               */
              protected BinaryVread(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+/_history/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public BinaryVread set$Xgafv(java.lang.String $Xgafv) {
                return (BinaryVread) super.set$Xgafv($Xgafv);
              }

              @Override
              public BinaryVread setAccessToken(java.lang.String accessToken) {
                return (BinaryVread) super.setAccessToken(accessToken);
              }

              @Override
              public BinaryVread setAlt(java.lang.String alt) {
                return (BinaryVread) super.setAlt(alt);
              }

              @Override
              public BinaryVread setCallback(java.lang.String callback) {
                return (BinaryVread) super.setCallback(callback);
              }

              @Override
              public BinaryVread setFields(java.lang.String fields) {
                return (BinaryVread) super.setFields(fields);
              }

              @Override
              public BinaryVread setKey(java.lang.String key) {
                return (BinaryVread) super.setKey(key);
              }

              @Override
              public BinaryVread setOauthToken(java.lang.String oauthToken) {
                return (BinaryVread) super.setOauthToken(oauthToken);
              }

              @Override
              public BinaryVread setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (BinaryVread) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public BinaryVread setQuotaUser(java.lang.String quotaUser) {
                return (BinaryVread) super.setQuotaUser(quotaUser);
              }

              @Override
              public BinaryVread setUploadType(java.lang.String uploadType) {
                return (BinaryVread) super.setUploadType(uploadType);
              }

              @Override
              public BinaryVread setUploadProtocol(java.lang.String uploadProtocol) {
                return (BinaryVread) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the Binary resource version to retrieve. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the Binary resource version to retrieve.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the Binary resource version to retrieve. */
              public BinaryVread setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+/_history/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public BinaryVread set(String parameterName, Object value) {
                return (BinaryVread) super.set(parameterName, value);
              }
            }
            /**
             * Returns the consent enforcement status of a single consent resource. On success, the response
             * body contains a JSON-encoded representation of a `Parameters`
             * (http://hl7.org/fhir/parameters.html) FHIR resource, containing the current enforcement status.
             * Does not support DSTU2.
             *
             * Create a request for the method "fhir.Consent-enforcement-status".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link ConsentEnforcementStatus#execute()} method to invoke the remote
             * operation.
             *
             * @param name Required. The name of the consent resource to find enforcement status, in the format `projects/{proj
             *        ect_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Cons
             *        ent/{consent_id}`
             * @return the request
             */
            public ConsentEnforcementStatus consentEnforcementStatus(java.lang.String name) throws java.io.IOException {
              ConsentEnforcementStatus result = new ConsentEnforcementStatus(name);
              initialize(result);
              return result;
            }

            public class ConsentEnforcementStatus extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}/$consent-enforcement-status";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Consent/[^/]+$");

              /**
               * Returns the consent enforcement status of a single consent resource. On success, the response
               * body contains a JSON-encoded representation of a `Parameters`
               * (http://hl7.org/fhir/parameters.html) FHIR resource, containing the current enforcement status.
               * Does not support DSTU2.
               *
               * Create a request for the method "fhir.Consent-enforcement-status".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link ConsentEnforcementStatus#execute()} method to invoke the
               * remote operation. <p> {@link ConsentEnforcementStatus#initialize(com.google.api.client.googleap
               * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
               * immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the consent resource to find enforcement status, in the format `projects/{proj
             *        ect_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Cons
             *        ent/{consent_id}`
               * @since 1.13
               */
              protected ConsentEnforcementStatus(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Consent/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public ConsentEnforcementStatus set$Xgafv(java.lang.String $Xgafv) {
                return (ConsentEnforcementStatus) super.set$Xgafv($Xgafv);
              }

              @Override
              public ConsentEnforcementStatus setAccessToken(java.lang.String accessToken) {
                return (ConsentEnforcementStatus) super.setAccessToken(accessToken);
              }

              @Override
              public ConsentEnforcementStatus setAlt(java.lang.String alt) {
                return (ConsentEnforcementStatus) super.setAlt(alt);
              }

              @Override
              public ConsentEnforcementStatus setCallback(java.lang.String callback) {
                return (ConsentEnforcementStatus) super.setCallback(callback);
              }

              @Override
              public ConsentEnforcementStatus setFields(java.lang.String fields) {
                return (ConsentEnforcementStatus) super.setFields(fields);
              }

              @Override
              public ConsentEnforcementStatus setKey(java.lang.String key) {
                return (ConsentEnforcementStatus) super.setKey(key);
              }

              @Override
              public ConsentEnforcementStatus setOauthToken(java.lang.String oauthToken) {
                return (ConsentEnforcementStatus) super.setOauthToken(oauthToken);
              }

              @Override
              public ConsentEnforcementStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ConsentEnforcementStatus) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ConsentEnforcementStatus setQuotaUser(java.lang.String quotaUser) {
                return (ConsentEnforcementStatus) super.setQuotaUser(quotaUser);
              }

              @Override
              public ConsentEnforcementStatus setUploadType(java.lang.String uploadType) {
                return (ConsentEnforcementStatus) super.setUploadType(uploadType);
              }

              @Override
              public ConsentEnforcementStatus setUploadProtocol(java.lang.String uploadProtocol) {
                return (ConsentEnforcementStatus) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the consent resource to find enforcement status, in the
               * format `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirSto
               * res/{fhir_store_id}/fhir/Consent/{consent_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the consent resource to find enforcement status, in the format `projects/{pro
             ject_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Consent/{con
             sent_id}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the consent resource to find enforcement status, in the
               * format `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirSto
               * res/{fhir_store_id}/fhir/Consent/{consent_id}`
               */
              public ConsentEnforcementStatus setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Consent/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public ConsentEnforcementStatus set(String parameterName, Object value) {
                return (ConsentEnforcementStatus) super.set(parameterName, value);
              }
            }
            /**
             * Returns the consent enforcement status of all consent resources for a patient. On success, the
             * response body contains a JSON-encoded representation of a bundle of `Parameters`
             * (http://hl7.org/fhir/parameters.html) FHIR resources, containing the current enforcement status
             * for each consent resource of the patient. Does not support DSTU2.
             *
             * Create a request for the method "fhir.Patient-consent-enforcement-status".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link PatientConsentEnforcementStatus#execute()} method to invoke the
             * remote operation.
             *
             * @param name Required. The name of the patient to find enforcement statuses, in the format `projects/{project_id}
             *        /locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Patient/{pa
             *        tient_id}`
             * @return the request
             */
            public PatientConsentEnforcementStatus patientConsentEnforcementStatus(java.lang.String name) throws java.io.IOException {
              PatientConsentEnforcementStatus result = new PatientConsentEnforcementStatus(name);
              initialize(result);
              return result;
            }

            public class PatientConsentEnforcementStatus extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}/$consent-enforcement-status";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Patient/[^/]+$");

              /**
               * Returns the consent enforcement status of all consent resources for a patient. On success, the
               * response body contains a JSON-encoded representation of a bundle of `Parameters`
               * (http://hl7.org/fhir/parameters.html) FHIR resources, containing the current enforcement status
               * for each consent resource of the patient. Does not support DSTU2.
               *
               * Create a request for the method "fhir.Patient-consent-enforcement-status".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link PatientConsentEnforcementStatus#execute()} method to
               * invoke the remote operation. <p> {@link PatientConsentEnforcementStatus#initialize(com.google.a
               * pi.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
               * instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the patient to find enforcement statuses, in the format `projects/{project_id}
             *        /locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Patient/{pa
             *        tient_id}`
               * @since 1.13
               */
              protected PatientConsentEnforcementStatus(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Patient/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public PatientConsentEnforcementStatus set$Xgafv(java.lang.String $Xgafv) {
                return (PatientConsentEnforcementStatus) super.set$Xgafv($Xgafv);
              }

              @Override
              public PatientConsentEnforcementStatus setAccessToken(java.lang.String accessToken) {
                return (PatientConsentEnforcementStatus) super.setAccessToken(accessToken);
              }

              @Override
              public PatientConsentEnforcementStatus setAlt(java.lang.String alt) {
                return (PatientConsentEnforcementStatus) super.setAlt(alt);
              }

              @Override
              public PatientConsentEnforcementStatus setCallback(java.lang.String callback) {
                return (PatientConsentEnforcementStatus) super.setCallback(callback);
              }

              @Override
              public PatientConsentEnforcementStatus setFields(java.lang.String fields) {
                return (PatientConsentEnforcementStatus) super.setFields(fields);
              }

              @Override
              public PatientConsentEnforcementStatus setKey(java.lang.String key) {
                return (PatientConsentEnforcementStatus) super.setKey(key);
              }

              @Override
              public PatientConsentEnforcementStatus setOauthToken(java.lang.String oauthToken) {
                return (PatientConsentEnforcementStatus) super.setOauthToken(oauthToken);
              }

              @Override
              public PatientConsentEnforcementStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (PatientConsentEnforcementStatus) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public PatientConsentEnforcementStatus setQuotaUser(java.lang.String quotaUser) {
                return (PatientConsentEnforcementStatus) super.setQuotaUser(quotaUser);
              }

              @Override
              public PatientConsentEnforcementStatus setUploadType(java.lang.String uploadType) {
                return (PatientConsentEnforcementStatus) super.setUploadType(uploadType);
              }

              @Override
              public PatientConsentEnforcementStatus setUploadProtocol(java.lang.String uploadProtocol) {
                return (PatientConsentEnforcementStatus) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the patient to find enforcement statuses, in the format `proj
               * ects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_st
               * ore_id}/fhir/Patient/{patient_id}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the patient to find enforcement statuses, in the format `projects/{project_id
             }/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Patient/{patient_id
             }`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the patient to find enforcement statuses, in the format `proj
               * ects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_st
               * ore_id}/fhir/Patient/{patient_id}`
               */
              public PatientConsentEnforcementStatus setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Patient/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Optional. The maximum number of results on a page. If not specified, 100 is used.
               * May not be larger than 1000.
               */
              @com.google.api.client.util.Key("_count")
              private java.lang.Integer count;

              /** Optional. The maximum number of results on a page. If not specified, 100 is used. May not be larger
             than 1000.
               */
              public java.lang.Integer getCount() {
                return count;
              }

              /**
               * Optional. The maximum number of results on a page. If not specified, 100 is used.
               * May not be larger than 1000.
               */
              public PatientConsentEnforcementStatus setCount(java.lang.Integer count) {
                this.count = count;
                return this;
              }

              /**
               * Optional. Used to retrieve the first, previous, next, or last page of consent
               * enforcement statuses when using pagination. Value should be set to the value of
               * `_page_token` set in next or previous page links' URLs. Next and previous page are
               * returned in the response bundle's links field, where `link.relation` is "previous"
               * or "next". Omit `_page_token` if no previous request has been made.
               */
              @com.google.api.client.util.Key("_page_token")
              private java.lang.String pageToken;

              /** Optional. Used to retrieve the first, previous, next, or last page of consent enforcement statuses
             when using pagination. Value should be set to the value of `_page_token` set in next or previous
             page links' URLs. Next and previous page are returned in the response bundle's links field, where
             `link.relation` is "previous" or "next". Omit `_page_token` if no previous request has been made.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Optional. Used to retrieve the first, previous, next, or last page of consent
               * enforcement statuses when using pagination. Value should be set to the value of
               * `_page_token` set in next or previous page links' URLs. Next and previous page are
               * returned in the response bundle's links field, where `link.relation` is "previous"
               * or "next". Omit `_page_token` if no previous request has been made.
               */
              public PatientConsentEnforcementStatus setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public PatientConsentEnforcementStatus set(String parameterName, Object value) {
                return (PatientConsentEnforcementStatus) super.set(parameterName, value);
              }
            }
            /**
             * Retrieves a Patient resource and resources related to that patient. Implements the FHIR extended
             * operation Patient-everything ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/patient-
             * operations.html#everything), [STU3](http://hl7.org/implement/standards/fhir/STU3/patient-
             * operations.html#everything), [R4](http://hl7.org/implement/standards/fhir/R4/patient-
             * operations.html#everything)). On success, the response body contains a JSON-encoded
             * representation of a `Bundle` resource of type `searchset`, containing the results of the
             * operation. Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource
             * describing the reason for the error. If the request cannot be mapped to a valid API method on a
             * FHIR store, a generic GCP error might be returned instead. The resources in scope for the
             * response are: * The patient resource itself. * All the resources directly referenced by the
             * patient resource. * Resources directly referencing the patient resource that meet the inclusion
             * criteria. The inclusion criteria are based on the membership rules in the patient compartment
             * definition ([DSTU2](http://hl7.org/fhir/DSTU2/compartment-patient.html),
             * [STU3](http://www.hl7.org/fhir/stu3/compartmentdefinition-patient.html),
             * [R4](http://hl7.org/fhir/R4/compartmentdefinition-patient.html)), which details the eligible
             * resource types and referencing search parameters. For samples that show how to call `Patient-
             * everything`, see [Getting all patient compartment
             * resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-
             * resources#getting_all_patient_compartment_resources).
             *
             * Create a request for the method "fhir.Patient-everything".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link PatientEverything#execute()} method to invoke the remote operation.
             *
             * @param name Required. Name of the `Patient` resource for which the information is required.
             * @return the request
             */
            public PatientEverything patientEverything(java.lang.String name) throws java.io.IOException {
              PatientEverything result = new PatientEverything(name);
              initialize(result);
              return result;
            }

            public class PatientEverything extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}/$everything";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Patient/[^/]+$");

              /**
               * Retrieves a Patient resource and resources related to that patient. Implements the FHIR
               * extended operation Patient-everything
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/patient-operations.html#everything),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/patient-operations.html#everything),
               * [R4](http://hl7.org/implement/standards/fhir/R4/patient-operations.html#everything)). On
               * success, the response body contains a JSON-encoded representation of a `Bundle` resource of
               * type `searchset`, containing the results of the operation. Errors generated by the FHIR store
               * contain a JSON-encoded `OperationOutcome` resource describing the reason for the error. If the
               * request cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be
               * returned instead. The resources in scope for the response are: * The patient resource itself. *
               * All the resources directly referenced by the patient resource. * Resources directly referencing
               * the patient resource that meet the inclusion criteria. The inclusion criteria are based on the
               * membership rules in the patient compartment definition
               * ([DSTU2](http://hl7.org/fhir/DSTU2/compartment-patient.html),
               * [STU3](http://www.hl7.org/fhir/stu3/compartmentdefinition-patient.html),
               * [R4](http://hl7.org/fhir/R4/compartmentdefinition-patient.html)), which details the eligible
               * resource types and referencing search parameters. For samples that show how to call `Patient-
               * everything`, see [Getting all patient compartment
               * resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#getting_all_patient_compartment_resources).
               *
               * Create a request for the method "fhir.Patient-everything".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link PatientEverything#execute()} method to invoke the remote
               * operation. <p> {@link PatientEverything#initialize(com.google.api.client.googleapis.services.Ab
               * stractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param name Required. Name of the `Patient` resource for which the information is required.
               * @since 1.13
               */
              protected PatientEverything(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Patient/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public PatientEverything set$Xgafv(java.lang.String $Xgafv) {
                return (PatientEverything) super.set$Xgafv($Xgafv);
              }

              @Override
              public PatientEverything setAccessToken(java.lang.String accessToken) {
                return (PatientEverything) super.setAccessToken(accessToken);
              }

              @Override
              public PatientEverything setAlt(java.lang.String alt) {
                return (PatientEverything) super.setAlt(alt);
              }

              @Override
              public PatientEverything setCallback(java.lang.String callback) {
                return (PatientEverything) super.setCallback(callback);
              }

              @Override
              public PatientEverything setFields(java.lang.String fields) {
                return (PatientEverything) super.setFields(fields);
              }

              @Override
              public PatientEverything setKey(java.lang.String key) {
                return (PatientEverything) super.setKey(key);
              }

              @Override
              public PatientEverything setOauthToken(java.lang.String oauthToken) {
                return (PatientEverything) super.setOauthToken(oauthToken);
              }

              @Override
              public PatientEverything setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (PatientEverything) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public PatientEverything setQuotaUser(java.lang.String quotaUser) {
                return (PatientEverything) super.setQuotaUser(quotaUser);
              }

              @Override
              public PatientEverything setUploadType(java.lang.String uploadType) {
                return (PatientEverything) super.setUploadType(uploadType);
              }

              @Override
              public PatientEverything setUploadProtocol(java.lang.String uploadProtocol) {
                return (PatientEverything) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Name of the `Patient` resource for which the information is required.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Name of the `Patient` resource for which the information is required.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Name of the `Patient` resource for which the information is required.
               */
              public PatientEverything setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Patient/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Optional. Maximum number of resources in a page. If not specified, 100 is used. May
               * not be larger than 1000.
               */
              @com.google.api.client.util.Key("_count")
              private java.lang.Integer count;

              /** Optional. Maximum number of resources in a page. If not specified, 100 is used. May not be larger
             than 1000.
               */
              public java.lang.Integer getCount() {
                return count;
              }

              /**
               * Optional. Maximum number of resources in a page. If not specified, 100 is used. May
               * not be larger than 1000.
               */
              public PatientEverything setCount(java.lang.Integer count) {
                this.count = count;
                return this;
              }

              /**
               * Used to retrieve the next or previous page of results when using pagination. Set
               * `_page_token` to the value of _page_token set in next or previous page links' url.
               * Next and previous page are returned in the response bundle's links field, where
               * `link.relation` is "previous" or "next". Omit `_page_token` if no previous request
               * has been made.
               */
              @com.google.api.client.util.Key("_page_token")
              private java.lang.String pageToken;

              /** Used to retrieve the next or previous page of results when using pagination. Set `_page_token` to
             the value of _page_token set in next or previous page links' url. Next and previous page are
             returned in the response bundle's links field, where `link.relation` is "previous" or "next". Omit
             `_page_token` if no previous request has been made.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Used to retrieve the next or previous page of results when using pagination. Set
               * `_page_token` to the value of _page_token set in next or previous page links' url.
               * Next and previous page are returned in the response bundle's links field, where
               * `link.relation` is "previous" or "next". Omit `_page_token` if no previous request
               * has been made.
               */
              public PatientEverything setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              /**
               * Optional. If provided, only resources updated after this time are returned. The
               * time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz. For example,
               * `2015-02-07T13:28:17.239+02:00` or `2017-01-01T00:00:00Z`. The time must be
               * specified to the second and include a time zone.
               */
              @com.google.api.client.util.Key("_since")
              private java.lang.String since;

              /** Optional. If provided, only resources updated after this time are returned. The time uses the
             format YYYY-MM-DDThh:mm:ss.sss+zz:zz. For example, `2015-02-07T13:28:17.239+02:00` or
             `2017-01-01T00:00:00Z`. The time must be specified to the second and include a time zone.
               */
              public java.lang.String getSince() {
                return since;
              }

              /**
               * Optional. If provided, only resources updated after this time are returned. The
               * time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz. For example,
               * `2015-02-07T13:28:17.239+02:00` or `2017-01-01T00:00:00Z`. The time must be
               * specified to the second and include a time zone.
               */
              public PatientEverything setSince(java.lang.String since) {
                this.since = since;
                return this;
              }

              /**
               * Optional. String of comma-delimited FHIR resource types. If provided, only
               * resources of the specified resource type(s) are returned. Specifying multiple
               * `_type` parameters isn't supported. For example, the result of
               * `_type=Observation&_type=Encounter` is undefined. Use `_type=Observation,Encounter`
               * instead.
               */
              @com.google.api.client.util.Key("_type")
              private java.lang.String type;

              /** Optional. String of comma-delimited FHIR resource types. If provided, only resources of the
             specified resource type(s) are returned. Specifying multiple `_type` parameters isn't supported.
             For example, the result of `_type=Observation&_type=Encounter` is undefined. Use
             `_type=Observation,Encounter` instead.
               */
              public java.lang.String getType() {
                return type;
              }

              /**
               * Optional. String of comma-delimited FHIR resource types. If provided, only
               * resources of the specified resource type(s) are returned. Specifying multiple
               * `_type` parameters isn't supported. For example, the result of
               * `_type=Observation&_type=Encounter` is undefined. Use `_type=Observation,Encounter`
               * instead.
               */
              public PatientEverything setType(java.lang.String type) {
                this.type = type;
                return this;
              }

              /**
               * Optional. The response includes records prior to the end date. The date uses the
               * format YYYY-MM-DD. If no end date is provided, all records subsequent to the start
               * date are in scope.
               */
              @com.google.api.client.util.Key
              private java.lang.String end;

              /** Optional. The response includes records prior to the end date. The date uses the format YYYY-MM-DD.
             If no end date is provided, all records subsequent to the start date are in scope.
               */
              public java.lang.String getEnd() {
                return end;
              }

              /**
               * Optional. The response includes records prior to the end date. The date uses the
               * format YYYY-MM-DD. If no end date is provided, all records subsequent to the start
               * date are in scope.
               */
              public PatientEverything setEnd(java.lang.String end) {
                this.end = end;
                return this;
              }

              /**
               * Optional. The response includes records subsequent to the start date. The date uses
               * the format YYYY-MM-DD. If no start date is provided, all records prior to the end
               * date are in scope.
               */
              @com.google.api.client.util.Key
              private java.lang.String start;

              /** Optional. The response includes records subsequent to the start date. The date uses the format
             YYYY-MM-DD. If no start date is provided, all records prior to the end date are in scope.
               */
              public java.lang.String getStart() {
                return start;
              }

              /**
               * Optional. The response includes records subsequent to the start date. The date uses
               * the format YYYY-MM-DD. If no start date is provided, all records prior to the end
               * date are in scope.
               */
              public PatientEverything setStart(java.lang.String start) {
                this.start = start;
                return this;
              }

              @Override
              public PatientEverything set(String parameterName, Object value) {
                return (PatientEverything) super.set(parameterName, value);
              }
            }
            /**
             * Deletes all the historical versions of a resource (excluding the current version) from the FHIR
             * store. To remove all versions of a resource, first delete the current version and then call this
             * method. This is not a FHIR standard operation. For samples that show how to call `Resource-
             * purge`, see [Deleting historical versions of a FHIR
             * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
             * resources#deleting_historical_versions_of_a_fhir_resource).
             *
             * Create a request for the method "fhir.Resource-purge".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link ResourcePurge#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the resource to purge.
             * @return the request
             */
            public ResourcePurge resourcePurge(java.lang.String name) throws java.io.IOException {
              ResourcePurge result = new ResourcePurge(name);
              initialize(result);
              return result;
            }

            public class ResourcePurge extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

              private static final String REST_PATH = "v1/{+name}/$purge";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");

              /**
               * Deletes all the historical versions of a resource (excluding the current version) from the FHIR
               * store. To remove all versions of a resource, first delete the current version and then call
               * this method. This is not a FHIR standard operation. For samples that show how to call
               * `Resource-purge`, see [Deleting historical versions of a FHIR
               * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#deleting_historical_versions_of_a_fhir_resource).
               *
               * Create a request for the method "fhir.Resource-purge".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link ResourcePurge#execute()} method to invoke the remote
               * operation. <p> {@link ResourcePurge#initialize(com.google.api.client.googleapis.services.Abstra
               * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param name Required. The name of the resource to purge.
               * @since 1.13
               */
              protected ResourcePurge(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
              }

              @Override
              public ResourcePurge set$Xgafv(java.lang.String $Xgafv) {
                return (ResourcePurge) super.set$Xgafv($Xgafv);
              }

              @Override
              public ResourcePurge setAccessToken(java.lang.String accessToken) {
                return (ResourcePurge) super.setAccessToken(accessToken);
              }

              @Override
              public ResourcePurge setAlt(java.lang.String alt) {
                return (ResourcePurge) super.setAlt(alt);
              }

              @Override
              public ResourcePurge setCallback(java.lang.String callback) {
                return (ResourcePurge) super.setCallback(callback);
              }

              @Override
              public ResourcePurge setFields(java.lang.String fields) {
                return (ResourcePurge) super.setFields(fields);
              }

              @Override
              public ResourcePurge setKey(java.lang.String key) {
                return (ResourcePurge) super.setKey(key);
              }

              @Override
              public ResourcePurge setOauthToken(java.lang.String oauthToken) {
                return (ResourcePurge) super.setOauthToken(oauthToken);
              }

              @Override
              public ResourcePurge setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ResourcePurge) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ResourcePurge setQuotaUser(java.lang.String quotaUser) {
                return (ResourcePurge) super.setQuotaUser(quotaUser);
              }

              @Override
              public ResourcePurge setUploadType(java.lang.String uploadType) {
                return (ResourcePurge) super.setUploadType(uploadType);
              }

              @Override
              public ResourcePurge setUploadProtocol(java.lang.String uploadProtocol) {
                return (ResourcePurge) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the resource to purge. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the resource to purge.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the resource to purge. */
              public ResourcePurge setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public ResourcePurge set(String parameterName, Object value) {
                return (ResourcePurge) super.set(parameterName, value);
              }
            }
            /**
             * Validates an input FHIR resource's conformance to its profiles and the profiles configured on the
             * FHIR store. Implements the FHIR extended operation $validate
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resource-operations.html#validate),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/resource-operations.html#validate), or
             * [R4](http://hl7.org/implement/standards/fhir/R4/resource-operation-validate.html)). The request
             * body must contain a JSON-encoded FHIR resource, and the request headers must contain `Content-
             * Type: application/fhir+json`. The `Parameters` input syntax is not supported. The `profile` query
             * parameter can be used to request that the resource only be validated against a specific profile.
             * If a profile with the given URL cannot be found in the FHIR store then an error is returned.
             * Errors generated by validation contain a JSON-encoded `OperationOutcome` resource describing the
             * reason for the error. If the request cannot be mapped to a valid API method on a FHIR store, a
             * generic GCP error might be returned instead.
             *
             * Create a request for the method "fhir.Resource-validate".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link ResourceValidate#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the FHIR store that holds the profiles being used for validation.
             * @param type Required. The FHIR resource type of the resource being validated. For a complete list, see the FHIR
             *        Resource Index ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html), or
             *        [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
             *        resource type in the provided content.
             * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
             * @return the request
             */
            public ResourceValidate resourceValidate(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1.model.HttpBody content) throws java.io.IOException {
              ResourceValidate result = new ResourceValidate(parent, type, content);
              initialize(result);
              return result;
            }

            public class ResourceValidate extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/fhir/{+type}/$validate";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              private final java.util.regex.Pattern TYPE_PATTERN =
                  java.util.regex.Pattern.compile("^[^/]+$");

              /**
               * Validates an input FHIR resource's conformance to its profiles and the profiles configured on
               * the FHIR store. Implements the FHIR extended operation $validate
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resource-operations.html#validate),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/resource-operations.html#validate), or
               * [R4](http://hl7.org/implement/standards/fhir/R4/resource-operation-validate.html)). The request
               * body must contain a JSON-encoded FHIR resource, and the request headers must contain `Content-
               * Type: application/fhir+json`. The `Parameters` input syntax is not supported. The `profile`
               * query parameter can be used to request that the resource only be validated against a specific
               * profile. If a profile with the given URL cannot be found in the FHIR store then an error is
               * returned. Errors generated by validation contain a JSON-encoded `OperationOutcome` resource
               * describing the reason for the error. If the request cannot be mapped to a valid API method on a
               * FHIR store, a generic GCP error might be returned instead.
               *
               * Create a request for the method "fhir.Resource-validate".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link ResourceValidate#execute()} method to invoke the remote
               * operation. <p> {@link ResourceValidate#initialize(com.google.api.client.googleapis.services.Abs
               * tractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param parent Required. The name of the FHIR store that holds the profiles being used for validation.
               * @param type Required. The FHIR resource type of the resource being validated. For a complete list, see the FHIR
             *        Resource Index ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html), or
             *        [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
             *        resource type in the provided content.
               * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
               * @since 1.13
               */
              protected ResourceValidate(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1.model.HttpBody content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
              }

              @Override
              public ResourceValidate set$Xgafv(java.lang.String $Xgafv) {
                return (ResourceValidate) super.set$Xgafv($Xgafv);
              }

              @Override
              public ResourceValidate setAccessToken(java.lang.String accessToken) {
                return (ResourceValidate) super.setAccessToken(accessToken);
              }

              @Override
              public ResourceValidate setAlt(java.lang.String alt) {
                return (ResourceValidate) super.setAlt(alt);
              }

              @Override
              public ResourceValidate setCallback(java.lang.String callback) {
                return (ResourceValidate) super.setCallback(callback);
              }

              @Override
              public ResourceValidate setFields(java.lang.String fields) {
                return (ResourceValidate) super.setFields(fields);
              }

              @Override
              public ResourceValidate setKey(java.lang.String key) {
                return (ResourceValidate) super.setKey(key);
              }

              @Override
              public ResourceValidate setOauthToken(java.lang.String oauthToken) {
                return (ResourceValidate) super.setOauthToken(oauthToken);
              }

              @Override
              public ResourceValidate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ResourceValidate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ResourceValidate setQuotaUser(java.lang.String quotaUser) {
                return (ResourceValidate) super.setQuotaUser(quotaUser);
              }

              @Override
              public ResourceValidate setUploadType(java.lang.String uploadType) {
                return (ResourceValidate) super.setUploadType(uploadType);
              }

              @Override
              public ResourceValidate setUploadProtocol(java.lang.String uploadProtocol) {
                return (ResourceValidate) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the FHIR store that holds the profiles being used for
               * validation.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the FHIR store that holds the profiles being used for validation.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the FHIR store that holds the profiles being used for
               * validation.
               */
              public ResourceValidate setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The FHIR resource type of the resource being validated. For a complete
               * list, see the FHIR Resource Index
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html), or
               * [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
               * resource type in the provided content.
               */
              @com.google.api.client.util.Key
              private java.lang.String type;

              /** Required. The FHIR resource type of the resource being validated. For a complete list, see the FHIR
             Resource Index ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html), or
             [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the resource type
             in the provided content.
               */
              public java.lang.String getType() {
                return type;
              }

              /**
               * Required. The FHIR resource type of the resource being validated. For a complete
               * list, see the FHIR Resource Index
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html), or
               * [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
               * resource type in the provided content.
               */
              public ResourceValidate setType(java.lang.String type) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
                this.type = type;
                return this;
              }

              /**
               * Optional. The canonical URL of a profile that this resource should be validated
               * against. For example, to validate a Patient resource against the US Core Patient
               * profile this parameter would be
               * `http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient`. A
               * StructureDefinition with this canonical URL must exist in the FHIR store.
               */
              @com.google.api.client.util.Key
              private java.lang.String profile;

              /** Optional. The canonical URL of a profile that this resource should be validated against. For
             example, to validate a Patient resource against the US Core Patient profile this parameter would be
             `http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient`. A StructureDefinition with this
             canonical URL must exist in the FHIR store.
               */
              public java.lang.String getProfile() {
                return profile;
              }

              /**
               * Optional. The canonical URL of a profile that this resource should be validated
               * against. For example, to validate a Patient resource against the US Core Patient
               * profile this parameter would be
               * `http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient`. A
               * StructureDefinition with this canonical URL must exist in the FHIR store.
               */
              public ResourceValidate setProfile(java.lang.String profile) {
                this.profile = profile;
                return this;
              }

              @Override
              public ResourceValidate set(String parameterName, Object value) {
                return (ResourceValidate) super.set(parameterName, value);
              }
            }
            /**
             * Gets the FHIR capability statement
             * ([STU3](http://hl7.org/implement/standards/fhir/STU3/capabilitystatement.html),
             * [R4](http://hl7.org/implement/standards/fhir/R4/capabilitystatement.html)), or the [conformance
             * statement](http://hl7.org/implement/standards/fhir/DSTU2/conformance.html) in the DSTU2 case for
             * the store, which contains a description of functionality supported by the server. Implements the
             * FHIR standard capabilities interaction
             * ([STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#capabilities),
             * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#capabilities)), or the [conformance
             * interaction](http://hl7.org/implement/standards/fhir/DSTU2/http.html#conformance) in the DSTU2
             * case. On success, the response body contains a JSON-encoded representation of a
             * `CapabilityStatement` resource.
             *
             * Create a request for the method "fhir.capabilities".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Capabilities#execute()} method to invoke the remote operation.
             *
             * @param name Required. Name of the FHIR store to retrieve the capabilities for.
             * @return the request
             */
            public Capabilities capabilities(java.lang.String name) throws java.io.IOException {
              Capabilities result = new Capabilities(name);
              initialize(result);
              return result;
            }

            public class Capabilities extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}/fhir/metadata";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              /**
               * Gets the FHIR capability statement
               * ([STU3](http://hl7.org/implement/standards/fhir/STU3/capabilitystatement.html),
               * [R4](http://hl7.org/implement/standards/fhir/R4/capabilitystatement.html)), or the [conformance
               * statement](http://hl7.org/implement/standards/fhir/DSTU2/conformance.html) in the DSTU2 case
               * for the store, which contains a description of functionality supported by the server.
               * Implements the FHIR standard capabilities interaction
               * ([STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#capabilities),
               * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#capabilities)), or the [conformance
               * interaction](http://hl7.org/implement/standards/fhir/DSTU2/http.html#conformance) in the DSTU2
               * case. On success, the response body contains a JSON-encoded representation of a
               * `CapabilityStatement` resource.
               *
               * Create a request for the method "fhir.capabilities".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Capabilities#execute()} method to invoke the remote
               * operation. <p> {@link
               * Capabilities#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. Name of the FHIR store to retrieve the capabilities for.
               * @since 1.13
               */
              protected Capabilities(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Capabilities set$Xgafv(java.lang.String $Xgafv) {
                return (Capabilities) super.set$Xgafv($Xgafv);
              }

              @Override
              public Capabilities setAccessToken(java.lang.String accessToken) {
                return (Capabilities) super.setAccessToken(accessToken);
              }

              @Override
              public Capabilities setAlt(java.lang.String alt) {
                return (Capabilities) super.setAlt(alt);
              }

              @Override
              public Capabilities setCallback(java.lang.String callback) {
                return (Capabilities) super.setCallback(callback);
              }

              @Override
              public Capabilities setFields(java.lang.String fields) {
                return (Capabilities) super.setFields(fields);
              }

              @Override
              public Capabilities setKey(java.lang.String key) {
                return (Capabilities) super.setKey(key);
              }

              @Override
              public Capabilities setOauthToken(java.lang.String oauthToken) {
                return (Capabilities) super.setOauthToken(oauthToken);
              }

              @Override
              public Capabilities setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Capabilities) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Capabilities setQuotaUser(java.lang.String quotaUser) {
                return (Capabilities) super.setQuotaUser(quotaUser);
              }

              @Override
              public Capabilities setUploadType(java.lang.String uploadType) {
                return (Capabilities) super.setUploadType(uploadType);
              }

              @Override
              public Capabilities setUploadProtocol(java.lang.String uploadProtocol) {
                return (Capabilities) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Name of the FHIR store to retrieve the capabilities for. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Name of the FHIR store to retrieve the capabilities for.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. Name of the FHIR store to retrieve the capabilities for. */
              public Capabilities setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Capabilities set(String parameterName, Object value) {
                return (Capabilities) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a FHIR resource that match an identifier search query. Implements the FHIR standard
             * conditional delete interaction, limited to searching by resource identifier. If multiple
             * resources match, 412 Precondition Failed error will be returned. Search term for identifier
             * should be in the pattern `identifier=system|value` or `identifier=value` - similar to the
             * `search` method on resources with a specific identifier. Note: Unless resource versioning is
             * disabled by setting the disable_resource_versioning flag on the FHIR store, the deleted resource
             * is moved to a history repository that can still be retrieved through vread and related methods,
             * unless they are removed by the purge method. For samples that show how to call
             * `conditionalDelete`, see [Conditionally deleting a FHIR
             * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
             * resources#conditionally_deleting_a_fhir_resource).
             *
             * Create a request for the method "fhir.conditionalDelete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link ConditionalDelete#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the FHIR store this resource belongs to.
             * @param type Required. The FHIR resource type to delete, such as Patient or Observation. For a complete list, see
             *        the FHIR Resource Index
             *        ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             *        [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
             * @return the request
             */
            public ConditionalDelete conditionalDelete(java.lang.String parent, java.lang.String type) throws java.io.IOException {
              ConditionalDelete result = new ConditionalDelete(parent, type);
              initialize(result);
              return result;
            }

            public class ConditionalDelete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

              private static final String REST_PATH = "v1/{+parent}/fhir/{+type}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              private final java.util.regex.Pattern TYPE_PATTERN =
                  java.util.regex.Pattern.compile("^[^/]+$");

              /**
               * Deletes a FHIR resource that match an identifier search query. Implements the FHIR standard
               * conditional delete interaction, limited to searching by resource identifier. If multiple
               * resources match, 412 Precondition Failed error will be returned. Search term for identifier
               * should be in the pattern `identifier=system|value` or `identifier=value` - similar to the
               * `search` method on resources with a specific identifier. Note: Unless resource versioning is
               * disabled by setting the disable_resource_versioning flag on the FHIR store, the deleted
               * resource is moved to a history repository that can still be retrieved through vread and related
               * methods, unless they are removed by the purge method. For samples that show how to call
               * `conditionalDelete`, see [Conditionally deleting a FHIR
               * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#conditionally_deleting_a_fhir_resource).
               *
               * Create a request for the method "fhir.conditionalDelete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link ConditionalDelete#execute()} method to invoke the remote
               * operation. <p> {@link ConditionalDelete#initialize(com.google.api.client.googleapis.services.Ab
               * stractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param parent Required. The name of the FHIR store this resource belongs to.
               * @param type Required. The FHIR resource type to delete, such as Patient or Observation. For a complete list, see
             *        the FHIR Resource Index
             *        ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             *        [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               * @since 1.13
               */
              protected ConditionalDelete(java.lang.String parent, java.lang.String type) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
              }

              @Override
              public ConditionalDelete set$Xgafv(java.lang.String $Xgafv) {
                return (ConditionalDelete) super.set$Xgafv($Xgafv);
              }

              @Override
              public ConditionalDelete setAccessToken(java.lang.String accessToken) {
                return (ConditionalDelete) super.setAccessToken(accessToken);
              }

              @Override
              public ConditionalDelete setAlt(java.lang.String alt) {
                return (ConditionalDelete) super.setAlt(alt);
              }

              @Override
              public ConditionalDelete setCallback(java.lang.String callback) {
                return (ConditionalDelete) super.setCallback(callback);
              }

              @Override
              public ConditionalDelete setFields(java.lang.String fields) {
                return (ConditionalDelete) super.setFields(fields);
              }

              @Override
              public ConditionalDelete setKey(java.lang.String key) {
                return (ConditionalDelete) super.setKey(key);
              }

              @Override
              public ConditionalDelete setOauthToken(java.lang.String oauthToken) {
                return (ConditionalDelete) super.setOauthToken(oauthToken);
              }

              @Override
              public ConditionalDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ConditionalDelete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ConditionalDelete setQuotaUser(java.lang.String quotaUser) {
                return (ConditionalDelete) super.setQuotaUser(quotaUser);
              }

              @Override
              public ConditionalDelete setUploadType(java.lang.String uploadType) {
                return (ConditionalDelete) super.setUploadType(uploadType);
              }

              @Override
              public ConditionalDelete setUploadProtocol(java.lang.String uploadProtocol) {
                return (ConditionalDelete) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the FHIR store this resource belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the FHIR store this resource belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The name of the FHIR store this resource belongs to. */
              public ConditionalDelete setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The FHIR resource type to delete, such as Patient or Observation. For a
               * complete list, see the FHIR Resource Index
               * ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
               * [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               */
              @com.google.api.client.util.Key
              private java.lang.String type;

              /** Required. The FHIR resource type to delete, such as Patient or Observation. For a complete list,
             see the FHIR Resource Index
             ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               */
              public java.lang.String getType() {
                return type;
              }

              /**
               * Required. The FHIR resource type to delete, such as Patient or Observation. For a
               * complete list, see the FHIR Resource Index
               * ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
               * [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               */
              public ConditionalDelete setType(java.lang.String type) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
                this.type = type;
                return this;
              }

              @Override
              public ConditionalDelete set(String parameterName, Object value) {
                return (ConditionalDelete) super.set(parameterName, value);
              }
            }
            /**
             * If a resource is found with the identifier specified in the query parameters, updates part of
             * that resource by applying the operations specified in a [JSON Patch](http://jsonpatch.com/)
             * document. Implements the FHIR standard conditional patch interaction, limited to searching by
             * resource identifier. DSTU2 doesn't define a conditional patch method, but the server supports it
             * in the same way it supports STU3. Search term for identifier should be in the pattern
             * `identifier=system|value` or `identifier=value` - similar to the `search` method on resources
             * with a specific identifier. If the search criteria identify more than one match, the request
             * returns a `412 Precondition Failed` error. The request body must contain a JSON Patch document,
             * and the request headers must contain `Content-Type: application/json-patch+json`. On success, the
             * response body contains a JSON-encoded representation of the updated resource, including the
             * server-assigned version ID. Errors generated by the FHIR store contain a JSON-encoded
             * `OperationOutcome` resource describing the reason for the error. If the request cannot be mapped
             * to a valid API method on a FHIR store, a generic GCP error might be returned instead. For samples
             * that show how to call `conditionalPatch`, see [Conditionally patching a FHIR
             * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
             * resources#conditionally_patching_a_fhir_resource).
             *
             * Create a request for the method "fhir.conditionalPatch".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link ConditionalPatch#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the FHIR store this resource belongs to.
             * @param type Required. The FHIR resource type to update, such as Patient or Observation. For a complete list, see
             *        the FHIR Resource Index
             *        ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             *        [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
             * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
             * @return the request
             */
            public ConditionalPatch conditionalPatch(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1.model.HttpBody content) throws java.io.IOException {
              ConditionalPatch result = new ConditionalPatch(parent, type, content);
              initialize(result);
              return result;
            }

            public class ConditionalPatch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/fhir/{+type}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              private final java.util.regex.Pattern TYPE_PATTERN =
                  java.util.regex.Pattern.compile("^[^/]+$");

              /**
               * If a resource is found with the identifier specified in the query parameters, updates part of
               * that resource by applying the operations specified in a [JSON Patch](http://jsonpatch.com/)
               * document. Implements the FHIR standard conditional patch interaction, limited to searching by
               * resource identifier. DSTU2 doesn't define a conditional patch method, but the server supports
               * it in the same way it supports STU3. Search term for identifier should be in the pattern
               * `identifier=system|value` or `identifier=value` - similar to the `search` method on resources
               * with a specific identifier. If the search criteria identify more than one match, the request
               * returns a `412 Precondition Failed` error. The request body must contain a JSON Patch document,
               * and the request headers must contain `Content-Type: application/json-patch+json`. On success,
               * the response body contains a JSON-encoded representation of the updated resource, including the
               * server-assigned version ID. Errors generated by the FHIR store contain a JSON-encoded
               * `OperationOutcome` resource describing the reason for the error. If the request cannot be
               * mapped to a valid API method on a FHIR store, a generic GCP error might be returned instead.
               * For samples that show how to call `conditionalPatch`, see [Conditionally patching a FHIR
               * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#conditionally_patching_a_fhir_resource).
               *
               * Create a request for the method "fhir.conditionalPatch".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link ConditionalPatch#execute()} method to invoke the remote
               * operation. <p> {@link ConditionalPatch#initialize(com.google.api.client.googleapis.services.Abs
               * tractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param parent Required. The name of the FHIR store this resource belongs to.
               * @param type Required. The FHIR resource type to update, such as Patient or Observation. For a complete list, see
             *        the FHIR Resource Index
             *        ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             *        [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
               * @since 1.13
               */
              protected ConditionalPatch(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1.model.HttpBody content) {
                super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
              }

              @Override
              public ConditionalPatch set$Xgafv(java.lang.String $Xgafv) {
                return (ConditionalPatch) super.set$Xgafv($Xgafv);
              }

              @Override
              public ConditionalPatch setAccessToken(java.lang.String accessToken) {
                return (ConditionalPatch) super.setAccessToken(accessToken);
              }

              @Override
              public ConditionalPatch setAlt(java.lang.String alt) {
                return (ConditionalPatch) super.setAlt(alt);
              }

              @Override
              public ConditionalPatch setCallback(java.lang.String callback) {
                return (ConditionalPatch) super.setCallback(callback);
              }

              @Override
              public ConditionalPatch setFields(java.lang.String fields) {
                return (ConditionalPatch) super.setFields(fields);
              }

              @Override
              public ConditionalPatch setKey(java.lang.String key) {
                return (ConditionalPatch) super.setKey(key);
              }

              @Override
              public ConditionalPatch setOauthToken(java.lang.String oauthToken) {
                return (ConditionalPatch) super.setOauthToken(oauthToken);
              }

              @Override
              public ConditionalPatch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ConditionalPatch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ConditionalPatch setQuotaUser(java.lang.String quotaUser) {
                return (ConditionalPatch) super.setQuotaUser(quotaUser);
              }

              @Override
              public ConditionalPatch setUploadType(java.lang.String uploadType) {
                return (ConditionalPatch) super.setUploadType(uploadType);
              }

              @Override
              public ConditionalPatch setUploadProtocol(java.lang.String uploadProtocol) {
                return (ConditionalPatch) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the FHIR store this resource belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the FHIR store this resource belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The name of the FHIR store this resource belongs to. */
              public ConditionalPatch setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The FHIR resource type to update, such as Patient or Observation. For a
               * complete list, see the FHIR Resource Index
               * ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
               * [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               */
              @com.google.api.client.util.Key
              private java.lang.String type;

              /** Required. The FHIR resource type to update, such as Patient or Observation. For a complete list,
             see the FHIR Resource Index
             ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               */
              public java.lang.String getType() {
                return type;
              }

              /**
               * Required. The FHIR resource type to update, such as Patient or Observation. For a
               * complete list, see the FHIR Resource Index
               * ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
               * [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               */
              public ConditionalPatch setType(java.lang.String type) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
                this.type = type;
                return this;
              }

              @Override
              public ConditionalPatch set(String parameterName, Object value) {
                return (ConditionalPatch) super.set(parameterName, value);
              }
            }
            /**
             * If a resource is found with the identifier specified in the query parameters, updates the entire
             * contents of that resource. Implements the FHIR standard conditional update interaction, limited
             * to searching by resource identifier. Search term for identifier should be in the pattern
             * `identifier=system|value` or `identifier=value` - similar to the `search` method on resources
             * with a specific identifier. If the search criteria identify more than one match, the request
             * returns a `412 Precondition Failed` error. If the search criteria identify zero matches, and the
             * supplied resource body contains an `id`, and the FHIR store has enable_update_create set, creates
             * the resource with the client-specified ID. It is strongly advised not to include or encode any
             * sensitive data such as patient identifiers in client-specified resource IDs. Those IDs are part
             * of the FHIR resource path recorded in Cloud Audit Logs and Pub/Sub notifications. Those IDs can
             * also be contained in reference fields within other resources. If the search criteria identify
             * zero matches, and the supplied resource body does not contain an `id`, the resource is created
             * with a server-assigned ID as per the create method. The request body must contain a JSON-encoded
             * FHIR resource, and the request headers must contain `Content-Type: application/fhir+json`. On
             * success, the response body contains a JSON-encoded representation of the updated resource,
             * including the server-assigned version ID. Errors generated by the FHIR store contain a JSON-
             * encoded `OperationOutcome` resource describing the reason for the error. If the request cannot be
             * mapped to a valid API method on a FHIR store, a generic GCP error might be returned instead. For
             * samples that show how to call `conditionalUpdate`, see [Conditionally updating a FHIR
             * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
             * resources#conditionally_updating_a_fhir_resource).
             *
             * Create a request for the method "fhir.conditionalUpdate".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link ConditionalUpdate#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the FHIR store this resource belongs to.
             * @param type Required. The FHIR resource type to update, such as Patient or Observation. For a complete list, see
             *        the FHIR Resource Index
             *        ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             *        [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
             *        resource type in the provided content.
             * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
             * @return the request
             */
            public ConditionalUpdate conditionalUpdate(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1.model.HttpBody content) throws java.io.IOException {
              ConditionalUpdate result = new ConditionalUpdate(parent, type, content);
              initialize(result);
              return result;
            }

            public class ConditionalUpdate extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/fhir/{+type}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              private final java.util.regex.Pattern TYPE_PATTERN =
                  java.util.regex.Pattern.compile("^[^/]+$");

              /**
               * If a resource is found with the identifier specified in the query parameters, updates the
               * entire contents of that resource. Implements the FHIR standard conditional update interaction,
               * limited to searching by resource identifier. Search term for identifier should be in the
               * pattern `identifier=system|value` or `identifier=value` - similar to the `search` method on
               * resources with a specific identifier. If the search criteria identify more than one match, the
               * request returns a `412 Precondition Failed` error. If the search criteria identify zero
               * matches, and the supplied resource body contains an `id`, and the FHIR store has
               * enable_update_create set, creates the resource with the client-specified ID. It is strongly
               * advised not to include or encode any sensitive data such as patient identifiers in client-
               * specified resource IDs. Those IDs are part of the FHIR resource path recorded in Cloud Audit
               * Logs and Pub/Sub notifications. Those IDs can also be contained in reference fields within
               * other resources. If the search criteria identify zero matches, and the supplied resource body
               * does not contain an `id`, the resource is created with a server-assigned ID as per the create
               * method. The request body must contain a JSON-encoded FHIR resource, and the request headers
               * must contain `Content-Type: application/fhir+json`. On success, the response body contains a
               * JSON-encoded representation of the updated resource, including the server-assigned version ID.
               * Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource
               * describing the reason for the error. If the request cannot be mapped to a valid API method on a
               * FHIR store, a generic GCP error might be returned instead. For samples that show how to call
               * `conditionalUpdate`, see [Conditionally updating a FHIR
               * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#conditionally_updating_a_fhir_resource).
               *
               * Create a request for the method "fhir.conditionalUpdate".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link ConditionalUpdate#execute()} method to invoke the remote
               * operation. <p> {@link ConditionalUpdate#initialize(com.google.api.client.googleapis.services.Ab
               * stractGoogleClientRequest)} must be called to initialize this instance immediately after
               * invoking the constructor. </p>
               *
               * @param parent Required. The name of the FHIR store this resource belongs to.
               * @param type Required. The FHIR resource type to update, such as Patient or Observation. For a complete list, see
             *        the FHIR Resource Index
             *        ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             *        [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
             *        resource type in the provided content.
               * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
               * @since 1.13
               */
              protected ConditionalUpdate(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1.model.HttpBody content) {
                super(CloudHealthcare.this, "PUT", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
              }

              @Override
              public ConditionalUpdate set$Xgafv(java.lang.String $Xgafv) {
                return (ConditionalUpdate) super.set$Xgafv($Xgafv);
              }

              @Override
              public ConditionalUpdate setAccessToken(java.lang.String accessToken) {
                return (ConditionalUpdate) super.setAccessToken(accessToken);
              }

              @Override
              public ConditionalUpdate setAlt(java.lang.String alt) {
                return (ConditionalUpdate) super.setAlt(alt);
              }

              @Override
              public ConditionalUpdate setCallback(java.lang.String callback) {
                return (ConditionalUpdate) super.setCallback(callback);
              }

              @Override
              public ConditionalUpdate setFields(java.lang.String fields) {
                return (ConditionalUpdate) super.setFields(fields);
              }

              @Override
              public ConditionalUpdate setKey(java.lang.String key) {
                return (ConditionalUpdate) super.setKey(key);
              }

              @Override
              public ConditionalUpdate setOauthToken(java.lang.String oauthToken) {
                return (ConditionalUpdate) super.setOauthToken(oauthToken);
              }

              @Override
              public ConditionalUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ConditionalUpdate) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ConditionalUpdate setQuotaUser(java.lang.String quotaUser) {
                return (ConditionalUpdate) super.setQuotaUser(quotaUser);
              }

              @Override
              public ConditionalUpdate setUploadType(java.lang.String uploadType) {
                return (ConditionalUpdate) super.setUploadType(uploadType);
              }

              @Override
              public ConditionalUpdate setUploadProtocol(java.lang.String uploadProtocol) {
                return (ConditionalUpdate) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the FHIR store this resource belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the FHIR store this resource belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The name of the FHIR store this resource belongs to. */
              public ConditionalUpdate setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The FHIR resource type to update, such as Patient or Observation. For a
               * complete list, see the FHIR Resource Index
               * ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
               * [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match
               * the resource type in the provided content.
               */
              @com.google.api.client.util.Key
              private java.lang.String type;

              /** Required. The FHIR resource type to update, such as Patient or Observation. For a complete list,
             see the FHIR Resource Index
             ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the resource type
             in the provided content.
               */
              public java.lang.String getType() {
                return type;
              }

              /**
               * Required. The FHIR resource type to update, such as Patient or Observation. For a
               * complete list, see the FHIR Resource Index
               * ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
               * [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match
               * the resource type in the provided content.
               */
              public ConditionalUpdate setType(java.lang.String type) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
                this.type = type;
                return this;
              }

              @Override
              public ConditionalUpdate set(String parameterName, Object value) {
                return (ConditionalUpdate) super.set(parameterName, value);
              }
            }
            /**
             * Creates a FHIR resource. Implements the FHIR standard create interaction
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#create),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#create),
             * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#create)), which creates a new resource
             * with a server-assigned resource ID. Also supports the FHIR standard conditional create
             * interaction ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#ccreate),
             * [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#ccreate),
             * [R4](https://hl7.org/implement/standards/fhir/R4/http.html#ccreate)), specified by supplying an
             * `If-None-Exist` header containing a FHIR search query, limited to searching by resource
             * identifier. If no resources match this search query, the server processes the create operation as
             * normal. When using conditional create, the search term for identifier should be in the pattern
             * `identifier=system|value` or `identifier=value` - similar to the `search` method on resources
             * with a specific identifier. The request body must contain a JSON-encoded FHIR resource, and the
             * request headers must contain `Content-Type: application/fhir+json`. On success, the response body
             * contains a JSON-encoded representation of the resource as it was created on the server, including
             * the server-assigned resource ID and version ID. Errors generated by the FHIR store contain a
             * JSON-encoded `OperationOutcome` resource describing the reason for the error. If the request
             * cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be returned
             * instead. For samples that show how to call `create`, see [Creating a FHIR
             * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
             * resources#creating_a_fhir_resource).
             *
             * Create a request for the method "fhir.create".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the FHIR store this resource belongs to.
             * @param type Required. The FHIR resource type to create, such as Patient or Observation. For a complete list, see
             *        the FHIR Resource Index
             *        ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             *        [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
             *        resource type in the provided content.
             * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
             * @return the request
             */
            public Create create(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1.model.HttpBody content) throws java.io.IOException {
              Create result = new Create(parent, type, content);
              initialize(result);
              return result;
            }

            public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/fhir/{+type}";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              private final java.util.regex.Pattern TYPE_PATTERN =
                  java.util.regex.Pattern.compile("^[^/]+$");

              /**
               * Creates a FHIR resource. Implements the FHIR standard create interaction
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#create),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#create),
               * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#create)), which creates a new
               * resource with a server-assigned resource ID. Also supports the FHIR standard conditional create
               * interaction ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#ccreate),
               * [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#ccreate),
               * [R4](https://hl7.org/implement/standards/fhir/R4/http.html#ccreate)), specified by supplying an
               * `If-None-Exist` header containing a FHIR search query, limited to searching by resource
               * identifier. If no resources match this search query, the server processes the create operation
               * as normal. When using conditional create, the search term for identifier should be in the
               * pattern `identifier=system|value` or `identifier=value` - similar to the `search` method on
               * resources with a specific identifier. The request body must contain a JSON-encoded FHIR
               * resource, and the request headers must contain `Content-Type: application/fhir+json`. On
               * success, the response body contains a JSON-encoded representation of the resource as it was
               * created on the server, including the server-assigned resource ID and version ID. Errors
               * generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing the
               * reason for the error. If the request cannot be mapped to a valid API method on a FHIR store, a
               * generic GCP error might be returned instead. For samples that show how to call `create`, see
               * [Creating a FHIR resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#creating_a_fhir_resource).
               *
               * Create a request for the method "fhir.create".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the FHIR store this resource belongs to.
               * @param type Required. The FHIR resource type to create, such as Patient or Observation. For a complete list, see
             *        the FHIR Resource Index
             *        ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             *        [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
             *        resource type in the provided content.
               * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
               * @since 1.13
               */
              protected Create(java.lang.String parent, java.lang.String type, com.google.api.services.healthcare.v1.model.HttpBody content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the FHIR store this resource belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the FHIR store this resource belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The name of the FHIR store this resource belongs to. */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Required. The FHIR resource type to create, such as Patient or Observation. For a
               * complete list, see the FHIR Resource Index
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
               * [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
               * resource type in the provided content.
               */
              @com.google.api.client.util.Key
              private java.lang.String type;

              /** Required. The FHIR resource type to create, such as Patient or Observation. For a complete list,
             see the FHIR Resource Index
             ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the resource type
             in the provided content.
               */
              public java.lang.String getType() {
                return type;
              }

              /**
               * Required. The FHIR resource type to create, such as Patient or Observation. For a
               * complete list, see the FHIR Resource Index
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
               * [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
               * resource type in the provided content.
               */
              public Create setType(java.lang.String type) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(TYPE_PATTERN.matcher(type).matches(),
                      "Parameter type must conform to the pattern " +
                      "^[^/]+$");
                }
                this.type = type;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a FHIR resource. Implements the FHIR standard delete interaction
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#delete),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#delete),
             * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#delete)). Note: Unless resource
             * versioning is disabled by setting the disable_resource_versioning flag on the FHIR store, the
             * deleted resources will be moved to a history repository that can still be retrieved through vread
             * and related methods, unless they are removed by the purge method. For samples that show how to
             * call `delete`, see [Deleting a FHIR resource](https://cloud.google.com/healthcare/docs/how-
             * tos/fhir-resources#deleting_a_fhir_resource).
             *
             * Create a request for the method "fhir.delete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the resource to delete.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");

              /**
               * Deletes a FHIR resource. Implements the FHIR standard delete interaction
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#delete),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#delete),
               * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#delete)). Note: Unless resource
               * versioning is disabled by setting the disable_resource_versioning flag on the FHIR store, the
               * deleted resources will be moved to a history repository that can still be retrieved through
               * vread and related methods, unless they are removed by the purge method. For samples that show
               * how to call `delete`, see [Deleting a FHIR
               * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#deleting_a_fhir_resource).
               *
               * Create a request for the method "fhir.delete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the resource to delete.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the resource to delete. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the resource to delete.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the resource to delete. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Executes all the requests in the given Bundle. Implements the FHIR standard batch/transaction
             * interaction ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#transaction),
             * [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#transaction),
             * [R4](https://hl7.org/implement/standards/fhir/R4/http.html#transaction)). Supports all
             * interactions within a bundle, except search. This method accepts Bundles of type `batch` and
             * `transaction`, processing them according to the batch processing rules
             * ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.1),
             * [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.1),
             * [R4](https://hl7.org/implement/standards/fhir/R4/http.html#brules)) and transaction processing
             * rules ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.2),
             * [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.2),
             * [R4](https://hl7.org/implement/standards/fhir/R4/http.html#trules)). The request body must
             * contain a JSON-encoded FHIR `Bundle` resource, and the request headers must contain `Content-
             * Type: application/fhir+json`. For a batch bundle or a successful transaction, the response body
             * contains a JSON-encoded representation of a `Bundle` resource of type `batch-response` or
             * `transaction-response` containing one entry for each entry in the request, with the outcome of
             * processing the entry. In the case of an error for a transaction bundle, the response body
             * contains a JSON-encoded `OperationOutcome` resource describing the reason for the error. If the
             * request cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be
             * returned instead. This method checks permissions for each request in the bundle. The
             * `executeBundle` permission is required to call this method, but you must also grant sufficient
             * permissions to execute the individual requests in the bundle. For example, if the bundle contains
             * a request to create a FHIR resource, the caller must also have been granted the
             * `healthcare.fhirResources.create` permission. You can use audit logs to view the permissions for
             * `executeBundle` and each request in the bundle. For more information, see [Viewing Cloud Audit
             * logs](https://cloud.google.com/healthcare-api/docs/how-tos/audit-logging). For samples that show
             * how to call `executeBundle`, see [Managing FHIR resources using FHIR
             * bundles](https://cloud.google.com/healthcare/docs/how-tos/fhir-bundles).
             *
             * Create a request for the method "fhir.executeBundle".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link ExecuteBundle#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Name of the FHIR store in which this bundle will be executed.
             * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
             * @return the request
             */
            public ExecuteBundle executeBundle(java.lang.String parent, com.google.api.services.healthcare.v1.model.HttpBody content) throws java.io.IOException {
              ExecuteBundle result = new ExecuteBundle(parent, content);
              initialize(result);
              return result;
            }

            public class ExecuteBundle extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/fhir";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              /**
               * Executes all the requests in the given Bundle. Implements the FHIR standard batch/transaction
               * interaction ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#transaction),
               * [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#transaction),
               * [R4](https://hl7.org/implement/standards/fhir/R4/http.html#transaction)). Supports all
               * interactions within a bundle, except search. This method accepts Bundles of type `batch` and
               * `transaction`, processing them according to the batch processing rules
               * ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.1),
               * [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.1),
               * [R4](https://hl7.org/implement/standards/fhir/R4/http.html#brules)) and transaction processing
               * rules ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.2),
               * [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.2),
               * [R4](https://hl7.org/implement/standards/fhir/R4/http.html#trules)). The request body must
               * contain a JSON-encoded FHIR `Bundle` resource, and the request headers must contain `Content-
               * Type: application/fhir+json`. For a batch bundle or a successful transaction, the response body
               * contains a JSON-encoded representation of a `Bundle` resource of type `batch-response` or
               * `transaction-response` containing one entry for each entry in the request, with the outcome of
               * processing the entry. In the case of an error for a transaction bundle, the response body
               * contains a JSON-encoded `OperationOutcome` resource describing the reason for the error. If the
               * request cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be
               * returned instead. This method checks permissions for each request in the bundle. The
               * `executeBundle` permission is required to call this method, but you must also grant sufficient
               * permissions to execute the individual requests in the bundle. For example, if the bundle
               * contains a request to create a FHIR resource, the caller must also have been granted the
               * `healthcare.fhirResources.create` permission. You can use audit logs to view the permissions
               * for `executeBundle` and each request in the bundle. For more information, see [Viewing Cloud
               * Audit logs](https://cloud.google.com/healthcare-api/docs/how-tos/audit-logging). For samples
               * that show how to call `executeBundle`, see [Managing FHIR resources using FHIR
               * bundles](https://cloud.google.com/healthcare/docs/how-tos/fhir-bundles).
               *
               * Create a request for the method "fhir.executeBundle".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link ExecuteBundle#execute()} method to invoke the remote
               * operation. <p> {@link ExecuteBundle#initialize(com.google.api.client.googleapis.services.Abstra
               * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
               * the constructor. </p>
               *
               * @param parent Required. Name of the FHIR store in which this bundle will be executed.
               * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
               * @since 1.13
               */
              protected ExecuteBundle(java.lang.String parent, com.google.api.services.healthcare.v1.model.HttpBody content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
              }

              @Override
              public ExecuteBundle set$Xgafv(java.lang.String $Xgafv) {
                return (ExecuteBundle) super.set$Xgafv($Xgafv);
              }

              @Override
              public ExecuteBundle setAccessToken(java.lang.String accessToken) {
                return (ExecuteBundle) super.setAccessToken(accessToken);
              }

              @Override
              public ExecuteBundle setAlt(java.lang.String alt) {
                return (ExecuteBundle) super.setAlt(alt);
              }

              @Override
              public ExecuteBundle setCallback(java.lang.String callback) {
                return (ExecuteBundle) super.setCallback(callback);
              }

              @Override
              public ExecuteBundle setFields(java.lang.String fields) {
                return (ExecuteBundle) super.setFields(fields);
              }

              @Override
              public ExecuteBundle setKey(java.lang.String key) {
                return (ExecuteBundle) super.setKey(key);
              }

              @Override
              public ExecuteBundle setOauthToken(java.lang.String oauthToken) {
                return (ExecuteBundle) super.setOauthToken(oauthToken);
              }

              @Override
              public ExecuteBundle setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (ExecuteBundle) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public ExecuteBundle setQuotaUser(java.lang.String quotaUser) {
                return (ExecuteBundle) super.setQuotaUser(quotaUser);
              }

              @Override
              public ExecuteBundle setUploadType(java.lang.String uploadType) {
                return (ExecuteBundle) super.setUploadType(uploadType);
              }

              @Override
              public ExecuteBundle setUploadProtocol(java.lang.String uploadProtocol) {
                return (ExecuteBundle) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Name of the FHIR store in which this bundle will be executed. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Name of the FHIR store in which this bundle will be executed.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. Name of the FHIR store in which this bundle will be executed. */
              public ExecuteBundle setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public ExecuteBundle set(String parameterName, Object value) {
                return (ExecuteBundle) super.set(parameterName, value);
              }
            }
            /**
             * Lists all the versions of a resource (including the current version and deleted versions) from
             * the FHIR store. Implements the per-resource form of the FHIR standard history interaction
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#history),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#history),
             * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#history)). On success, the response
             * body contains a JSON-encoded representation of a `Bundle` resource of type `history`, containing
             * the version history sorted from most recent to oldest versions. Errors generated by the FHIR
             * store contain a JSON-encoded `OperationOutcome` resource describing the reason for the error. If
             * the request cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be
             * returned instead. For samples that show how to call `history`, see [Listing FHIR resource
             * versions](https://cloud.google.com/healthcare/docs/how-tos/fhir-
             * resources#listing_fhir_resource_versions).
             *
             * Create a request for the method "fhir.history".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link History#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the resource to retrieve.
             * @return the request
             */
            public History history(java.lang.String name) throws java.io.IOException {
              History result = new History(name);
              initialize(result);
              return result;
            }

            public class History extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}/_history";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");

              /**
               * Lists all the versions of a resource (including the current version and deleted versions) from
               * the FHIR store. Implements the per-resource form of the FHIR standard history interaction
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#history),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#history),
               * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#history)). On success, the response
               * body contains a JSON-encoded representation of a `Bundle` resource of type `history`,
               * containing the version history sorted from most recent to oldest versions. Errors generated by
               * the FHIR store contain a JSON-encoded `OperationOutcome` resource describing the reason for the
               * error. If the request cannot be mapped to a valid API method on a FHIR store, a generic GCP
               * error might be returned instead. For samples that show how to call `history`, see [Listing FHIR
               * resource versions](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#listing_fhir_resource_versions).
               *
               * Create a request for the method "fhir.history".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link History#execute()} method to invoke the remote operation.
               * <p> {@link
               * History#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the resource to retrieve.
               * @since 1.13
               */
              protected History(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public History set$Xgafv(java.lang.String $Xgafv) {
                return (History) super.set$Xgafv($Xgafv);
              }

              @Override
              public History setAccessToken(java.lang.String accessToken) {
                return (History) super.setAccessToken(accessToken);
              }

              @Override
              public History setAlt(java.lang.String alt) {
                return (History) super.setAlt(alt);
              }

              @Override
              public History setCallback(java.lang.String callback) {
                return (History) super.setCallback(callback);
              }

              @Override
              public History setFields(java.lang.String fields) {
                return (History) super.setFields(fields);
              }

              @Override
              public History setKey(java.lang.String key) {
                return (History) super.setKey(key);
              }

              @Override
              public History setOauthToken(java.lang.String oauthToken) {
                return (History) super.setOauthToken(oauthToken);
              }

              @Override
              public History setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (History) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public History setQuotaUser(java.lang.String quotaUser) {
                return (History) super.setQuotaUser(quotaUser);
              }

              @Override
              public History setUploadType(java.lang.String uploadType) {
                return (History) super.setUploadType(uploadType);
              }

              @Override
              public History setUploadProtocol(java.lang.String uploadProtocol) {
                return (History) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the resource to retrieve. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the resource to retrieve.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the resource to retrieve. */
              public History setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Only include resource versions that were current at some point during the time
               * period specified in the date time value. The date parameter format is yyyy-mm-
               * ddThh:mm:ss[Z|(+|-)hh:mm] Clients may specify any of the following: * An entire
               * year: `_at=2019` * An entire month: `_at=2019-01` * A specific day:
               * `_at=2019-01-20` * A specific second: `_at=2018-12-31T23:59:58Z`
               */
              @com.google.api.client.util.Key("_at")
              private java.lang.String at;

              /** Only include resource versions that were current at some point during the time period specified in
             the date time value. The date parameter format is yyyy-mm-ddThh:mm:ss[Z|(+|-)hh:mm] Clients may
             specify any of the following: * An entire year: `_at=2019` * An entire month: `_at=2019-01` * A
             specific day: `_at=2019-01-20` * A specific second: `_at=2018-12-31T23:59:58Z`
               */
              public java.lang.String getAt() {
                return at;
              }

              /**
               * Only include resource versions that were current at some point during the time
               * period specified in the date time value. The date parameter format is yyyy-mm-
               * ddThh:mm:ss[Z|(+|-)hh:mm] Clients may specify any of the following: * An entire
               * year: `_at=2019` * An entire month: `_at=2019-01` * A specific day:
               * `_at=2019-01-20` * A specific second: `_at=2018-12-31T23:59:58Z`
               */
              public History setAt(java.lang.String at) {
                this.at = at;
                return this;
              }

              /**
               * The maximum number of search results on a page. If not specified, 100 is used. May
               * not be larger than 1000.
               */
              @com.google.api.client.util.Key("_count")
              private java.lang.Integer count;

              /** The maximum number of search results on a page. If not specified, 100 is used. May not be larger
             than 1000.
               */
              public java.lang.Integer getCount() {
                return count;
              }

              /**
               * The maximum number of search results on a page. If not specified, 100 is used. May
               * not be larger than 1000.
               */
              public History setCount(java.lang.Integer count) {
                this.count = count;
                return this;
              }

              /**
               * Used to retrieve the first, previous, next, or last page of resource versions when
               * using pagination. Value should be set to the value of `_page_token` set in next or
               * previous page links' URLs. Next and previous page are returned in the response
               * bundle's links field, where `link.relation` is "previous" or "next". Omit
               * `_page_token` if no previous request has been made.
               */
              @com.google.api.client.util.Key("_page_token")
              private java.lang.String pageToken;

              /** Used to retrieve the first, previous, next, or last page of resource versions when using
             pagination. Value should be set to the value of `_page_token` set in next or previous page links'
             URLs. Next and previous page are returned in the response bundle's links field, where
             `link.relation` is "previous" or "next". Omit `_page_token` if no previous request has been made.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Used to retrieve the first, previous, next, or last page of resource versions when
               * using pagination. Value should be set to the value of `_page_token` set in next or
               * previous page links' URLs. Next and previous page are returned in the response
               * bundle's links field, where `link.relation` is "previous" or "next". Omit
               * `_page_token` if no previous request has been made.
               */
              public History setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              /**
               * Only include resource versions that were created at or after the given instant in
               * time. The instant in time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz (for
               * example 2015-02-07T13:28:17.239+02:00 or 2017-01-01T00:00:00Z). The time must be
               * specified to the second and include a time zone.
               */
              @com.google.api.client.util.Key("_since")
              private java.lang.String since;

              /** Only include resource versions that were created at or after the given instant in time. The instant
             in time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz (for example 2015-02-07T13:28:17.239+02:00 or
             2017-01-01T00:00:00Z). The time must be specified to the second and include a time zone.
               */
              public java.lang.String getSince() {
                return since;
              }

              /**
               * Only include resource versions that were created at or after the given instant in
               * time. The instant in time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz (for
               * example 2015-02-07T13:28:17.239+02:00 or 2017-01-01T00:00:00Z). The time must be
               * specified to the second and include a time zone.
               */
              public History setSince(java.lang.String since) {
                this.since = since;
                return this;
              }

              @Override
              public History set(String parameterName, Object value) {
                return (History) super.set(parameterName, value);
              }
            }
            /**
             * Updates part of an existing resource by applying the operations specified in a [JSON
             * Patch](http://jsonpatch.com/) document. Implements the FHIR standard patch interaction
             * ([STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#patch),
             * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#patch)). DSTU2 doesn't define a patch
             * method, but the server supports it in the same way it supports STU3. The request body must
             * contain a JSON Patch document, and the request headers must contain `Content-Type:
             * application/json-patch+json`. On success, the response body contains a JSON-encoded
             * representation of the updated resource, including the server-assigned version ID. Errors
             * generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing the
             * reason for the error. If the request cannot be mapped to a valid API method on a FHIR store, a
             * generic GCP error might be returned instead. For samples that show how to call `patch`, see
             * [Patching a FHIR resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
             * resources#patching_a_fhir_resource).
             *
             * Create a request for the method "fhir.patch".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the resource to update.
             * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1.model.HttpBody content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");

              /**
               * Updates part of an existing resource by applying the operations specified in a [JSON
               * Patch](http://jsonpatch.com/) document. Implements the FHIR standard patch interaction
               * ([STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#patch),
               * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#patch)). DSTU2 doesn't define a patch
               * method, but the server supports it in the same way it supports STU3. The request body must
               * contain a JSON Patch document, and the request headers must contain `Content-Type:
               * application/json-patch+json`. On success, the response body contains a JSON-encoded
               * representation of the updated resource, including the server-assigned version ID. Errors
               * generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing the
               * reason for the error. If the request cannot be mapped to a valid API method on a FHIR store, a
               * generic GCP error might be returned instead. For samples that show how to call `patch`, see
               * [Patching a FHIR resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#patching_a_fhir_resource).
               *
               * Create a request for the method "fhir.patch".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the resource to update.
               * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.healthcare.v1.model.HttpBody content) {
                super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the resource to update. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the resource to update.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the resource to update. */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }
            /**
             * Gets the contents of a FHIR resource. Implements the FHIR standard read interaction
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#read),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#read),
             * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#read)). Also supports the FHIR standard
             * conditional read interaction
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#cread),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#cread),
             * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#cread)) specified by supplying an `If-
             * Modified-Since` header with a date/time value or an `If-None-Match` header with an ETag value. On
             * success, the response body contains a JSON-encoded representation of the resource. Errors
             * generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing the
             * reason for the error. If the request cannot be mapped to a valid API method on a FHIR store, a
             * generic GCP error might be returned instead. For samples that show how to call `read`, see
             * [Getting a FHIR resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
             * resources#getting_a_fhir_resource).
             *
             * Create a request for the method "fhir.read".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Read#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the resource to retrieve.
             * @return the request
             */
            public Read read(java.lang.String name) throws java.io.IOException {
              Read result = new Read(name);
              initialize(result);
              return result;
            }

            public class Read extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");

              /**
               * Gets the contents of a FHIR resource. Implements the FHIR standard read interaction
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#read),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#read),
               * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#read)). Also supports the FHIR
               * standard conditional read interaction
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#cread),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#cread),
               * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#cread)) specified by supplying an
               * `If-Modified-Since` header with a date/time value or an `If-None-Match` header with an ETag
               * value. On success, the response body contains a JSON-encoded representation of the resource.
               * Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource
               * describing the reason for the error. If the request cannot be mapped to a valid API method on a
               * FHIR store, a generic GCP error might be returned instead. For samples that show how to call
               * `read`, see [Getting a FHIR resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#getting_a_fhir_resource).
               *
               * Create a request for the method "fhir.read".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Read#execute()} method to invoke the remote operation. <p>
               * {@link Read#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the resource to retrieve.
               * @since 1.13
               */
              protected Read(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Read set$Xgafv(java.lang.String $Xgafv) {
                return (Read) super.set$Xgafv($Xgafv);
              }

              @Override
              public Read setAccessToken(java.lang.String accessToken) {
                return (Read) super.setAccessToken(accessToken);
              }

              @Override
              public Read setAlt(java.lang.String alt) {
                return (Read) super.setAlt(alt);
              }

              @Override
              public Read setCallback(java.lang.String callback) {
                return (Read) super.setCallback(callback);
              }

              @Override
              public Read setFields(java.lang.String fields) {
                return (Read) super.setFields(fields);
              }

              @Override
              public Read setKey(java.lang.String key) {
                return (Read) super.setKey(key);
              }

              @Override
              public Read setOauthToken(java.lang.String oauthToken) {
                return (Read) super.setOauthToken(oauthToken);
              }

              @Override
              public Read setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Read) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Read setQuotaUser(java.lang.String quotaUser) {
                return (Read) super.setQuotaUser(quotaUser);
              }

              @Override
              public Read setUploadType(java.lang.String uploadType) {
                return (Read) super.setUploadType(uploadType);
              }

              @Override
              public Read setUploadProtocol(java.lang.String uploadProtocol) {
                return (Read) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the resource to retrieve. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the resource to retrieve.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the resource to retrieve. */
              public Read setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Read set(String parameterName, Object value) {
                return (Read) super.set(parameterName, value);
              }
            }
            /**
             * Searches for resources in the given FHIR store according to criteria specified as query
             * parameters. Implements the FHIR standard search interaction
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#search),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#search),
             * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#search)) using the search semantics
             * described in the FHIR Search specification
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/search.html),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/search.html),
             * [R4](http://hl7.org/implement/standards/fhir/R4/search.html)). Supports four methods of search
             * defined by the specification: * `GET [base]?[parameters]` to search across all resources. * `GET
             * [base]/[type]?[parameters]` to search resources of a specified type. * `POST
             * [base]/_search?[parameters]` as an alternate form having the same semantics as the `GET` method
             * across all resources. * `POST [base]/[type]/_search?[parameters]` as an alternate form having the
             * same semantics as the `GET` method for the specified type. The `GET` and `POST` methods do not
             * support compartment searches. The `POST` method does not support `application/x-www-form-
             * urlencoded` search parameters. On success, the response body contains a JSON-encoded
             * representation of a `Bundle` resource of type `searchset`, containing the results of the search.
             * Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing
             * the reason for the error. If the request cannot be mapped to a valid API method on a FHIR store,
             * a generic GCP error might be returned instead. The server's capability statement, retrieved
             * through capabilities, indicates what search parameters are supported on each FHIR resource. A
             * list of all search parameters defined by the specification can be found in the FHIR Search
             * Parameter Registry ([STU3](http://hl7.org/implement/standards/fhir/STU3/searchparameter-
             * registry.html), [R4](http://hl7.org/implement/standards/fhir/R4/searchparameter-registry.html)).
             * FHIR search parameters for DSTU2 can be found on each resource's definition page. Supported
             * search modifiers: `:missing`, `:exact`, `:contains`, `:text`, `:in`, `:not-in`, `:above`,
             * `:below`, `:[type]`, `:not`, and `recurse` (DSTU2 and STU3) or `:iterate` (R4). Supported search
             * result parameters: `_sort`, `_count`, `_include`, `_revinclude`, `_summary=text`,
             * `_summary=data`, and `_elements`. The maximum number of search results returned defaults to 100,
             * which can be overridden by the `_count` parameter up to a maximum limit of 1000. The server might
             * return fewer resources than requested to prevent excessively large responses. If there are
             * additional results, the returned `Bundle` contains a link of `relation` "next", which has a
             * `_page_token` parameter for an opaque pagination token that can be used to retrieve the next
             * page. Resources with a total size larger than 5MB or a field count larger than 50,000 might not
             * be fully searchable as the server might trim its generated search index in those cases. Note:
             * FHIR resources are indexed asynchronously, so there might be a slight delay between the time a
             * resource is created or changed, and the time when the change reflects in search results. The only
             * exception is resource identifier data, which is indexed synchronously as a special index. As a
             * result, searching using resource identifier is not subject to indexing delay. To use the special
             * synchronous index, the search term for identifier should be in the pattern
             * `identifier=[system]|[value]` or `identifier=[value]`, and any of the following search result
             * parameters can be used: * `_count` * `_include` * `_revinclude` * `_summary` * `_elements` If
             * your query contains any other search parameters, the standard asynchronous index will be used
             * instead. Note that searching against the special index is optimized for resolving a small number
             * of matches. The search isn't optimized if your identifier search criteria matches a large number
             * (i.e. more than 2,000) of resources. For a search query that will match a large number of
             * resources, you can avoiding using the special synchronous index by including an additional
             * `_sort` parameter in your query. Use `_sort=-_lastUpdated` if you want to keep the default
             * sorting order. Note: The special synchronous identifier index are currently disabled for
             * DocumentReference and DocumentManifest searches. For samples and detailed information, see
             * [Searching for FHIR resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-search) and
             * [Advanced FHIR search features](https://cloud.google.com/healthcare/docs/how-tos/fhir-advanced-
             * search).
             *
             * Create a request for the method "fhir.search".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Search#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Name of the FHIR store to retrieve resources from.
             * @param content the {@link com.google.api.services.healthcare.v1.model.SearchResourcesRequest}
             * @return the request
             */
            public Search search(java.lang.String parent, com.google.api.services.healthcare.v1.model.SearchResourcesRequest content) throws java.io.IOException {
              Search result = new Search(parent, content);
              initialize(result);
              return result;
            }

            public class Search extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/fhir/_search";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              /**
               * Searches for resources in the given FHIR store according to criteria specified as query
               * parameters. Implements the FHIR standard search interaction
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#search),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#search),
               * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#search)) using the search semantics
               * described in the FHIR Search specification
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/search.html),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/search.html),
               * [R4](http://hl7.org/implement/standards/fhir/R4/search.html)). Supports four methods of search
               * defined by the specification: * `GET [base]?[parameters]` to search across all resources. *
               * `GET [base]/[type]?[parameters]` to search resources of a specified type. * `POST
               * [base]/_search?[parameters]` as an alternate form having the same semantics as the `GET` method
               * across all resources. * `POST [base]/[type]/_search?[parameters]` as an alternate form having
               * the same semantics as the `GET` method for the specified type. The `GET` and `POST` methods do
               * not support compartment searches. The `POST` method does not support `application/x-www-form-
               * urlencoded` search parameters. On success, the response body contains a JSON-encoded
               * representation of a `Bundle` resource of type `searchset`, containing the results of the
               * search. Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource
               * describing the reason for the error. If the request cannot be mapped to a valid API method on a
               * FHIR store, a generic GCP error might be returned instead. The server's capability statement,
               * retrieved through capabilities, indicates what search parameters are supported on each FHIR
               * resource. A list of all search parameters defined by the specification can be found in the FHIR
               * Search Parameter Registry ([STU3](http://hl7.org/implement/standards/fhir/STU3/searchparameter-
               * registry.html), [R4](http://hl7.org/implement/standards/fhir/R4/searchparameter-
               * registry.html)). FHIR search parameters for DSTU2 can be found on each resource's definition
               * page. Supported search modifiers: `:missing`, `:exact`, `:contains`, `:text`, `:in`, `:not-in`,
               * `:above`, `:below`, `:[type]`, `:not`, and `recurse` (DSTU2 and STU3) or `:iterate` (R4).
               * Supported search result parameters: `_sort`, `_count`, `_include`, `_revinclude`,
               * `_summary=text`, `_summary=data`, and `_elements`. The maximum number of search results
               * returned defaults to 100, which can be overridden by the `_count` parameter up to a maximum
               * limit of 1000. The server might return fewer resources than requested to prevent excessively
               * large responses. If there are additional results, the returned `Bundle` contains a link of
               * `relation` "next", which has a `_page_token` parameter for an opaque pagination token that can
               * be used to retrieve the next page. Resources with a total size larger than 5MB or a field count
               * larger than 50,000 might not be fully searchable as the server might trim its generated search
               * index in those cases. Note: FHIR resources are indexed asynchronously, so there might be a
               * slight delay between the time a resource is created or changed, and the time when the change
               * reflects in search results. The only exception is resource identifier data, which is indexed
               * synchronously as a special index. As a result, searching using resource identifier is not
               * subject to indexing delay. To use the special synchronous index, the search term for identifier
               * should be in the pattern `identifier=[system]|[value]` or `identifier=[value]`, and any of the
               * following search result parameters can be used: * `_count` * `_include` * `_revinclude` *
               * `_summary` * `_elements` If your query contains any other search parameters, the standard
               * asynchronous index will be used instead. Note that searching against the special index is
               * optimized for resolving a small number of matches. The search isn't optimized if your
               * identifier search criteria matches a large number (i.e. more than 2,000) of resources. For a
               * search query that will match a large number of resources, you can avoiding using the special
               * synchronous index by including an additional `_sort` parameter in your query. Use
               * `_sort=-_lastUpdated` if you want to keep the default sorting order. Note: The special
               * synchronous identifier index are currently disabled for DocumentReference and DocumentManifest
               * searches. For samples and detailed information, see [Searching for FHIR
               * resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-search) and [Advanced FHIR
               * search features](https://cloud.google.com/healthcare/docs/how-tos/fhir-advanced-search).
               *
               * Create a request for the method "fhir.search".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
               * <p> {@link
               * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Name of the FHIR store to retrieve resources from.
               * @param content the {@link com.google.api.services.healthcare.v1.model.SearchResourcesRequest}
               * @since 1.13
               */
              protected Search(java.lang.String parent, com.google.api.services.healthcare.v1.model.SearchResourcesRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
              }

              @Override
              public Search set$Xgafv(java.lang.String $Xgafv) {
                return (Search) super.set$Xgafv($Xgafv);
              }

              @Override
              public Search setAccessToken(java.lang.String accessToken) {
                return (Search) super.setAccessToken(accessToken);
              }

              @Override
              public Search setAlt(java.lang.String alt) {
                return (Search) super.setAlt(alt);
              }

              @Override
              public Search setCallback(java.lang.String callback) {
                return (Search) super.setCallback(callback);
              }

              @Override
              public Search setFields(java.lang.String fields) {
                return (Search) super.setFields(fields);
              }

              @Override
              public Search setKey(java.lang.String key) {
                return (Search) super.setKey(key);
              }

              @Override
              public Search setOauthToken(java.lang.String oauthToken) {
                return (Search) super.setOauthToken(oauthToken);
              }

              @Override
              public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Search) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Search setQuotaUser(java.lang.String quotaUser) {
                return (Search) super.setQuotaUser(quotaUser);
              }

              @Override
              public Search setUploadType(java.lang.String uploadType) {
                return (Search) super.setUploadType(uploadType);
              }

              @Override
              public Search setUploadProtocol(java.lang.String uploadProtocol) {
                return (Search) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Name of the FHIR store to retrieve resources from. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Name of the FHIR store to retrieve resources from.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. Name of the FHIR store to retrieve resources from. */
              public Search setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Search set(String parameterName, Object value) {
                return (Search) super.set(parameterName, value);
              }
            }
            /**
             * Searches for resources in the given FHIR store according to criteria specified as query
             * parameters. Implements the FHIR standard search interaction
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#search),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#search),
             * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#search)) using the search semantics
             * described in the FHIR Search specification
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/search.html),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/search.html),
             * [R4](http://hl7.org/implement/standards/fhir/R4/search.html)). Supports four methods of search
             * defined by the specification: * `GET [base]?[parameters]` to search across all resources. * `GET
             * [base]/[type]?[parameters]` to search resources of a specified type. * `POST
             * [base]/_search?[parameters]` as an alternate form having the same semantics as the `GET` method
             * across all resources. * `POST [base]/[type]/_search?[parameters]` as an alternate form having the
             * same semantics as the `GET` method for the specified type. The `GET` and `POST` methods do not
             * support compartment searches. The `POST` method does not support `application/x-www-form-
             * urlencoded` search parameters. On success, the response body contains a JSON-encoded
             * representation of a `Bundle` resource of type `searchset`, containing the results of the search.
             * Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing
             * the reason for the error. If the request cannot be mapped to a valid API method on a FHIR store,
             * a generic GCP error might be returned instead. The server's capability statement, retrieved
             * through capabilities, indicates what search parameters are supported on each FHIR resource. A
             * list of all search parameters defined by the specification can be found in the FHIR Search
             * Parameter Registry ([STU3](http://hl7.org/implement/standards/fhir/STU3/searchparameter-
             * registry.html), [R4](http://hl7.org/implement/standards/fhir/R4/searchparameter-registry.html)).
             * FHIR search parameters for DSTU2 can be found on each resource's definition page. Supported
             * search modifiers: `:missing`, `:exact`, `:contains`, `:text`, `:in`, `:not-in`, `:above`,
             * `:below`, `:[type]`, `:not`, and `recurse` (DSTU2 and STU3) or `:iterate` (R4). Supported search
             * result parameters: `_sort`, `_count`, `_include`, `_revinclude`, `_summary=text`,
             * `_summary=data`, and `_elements`. The maximum number of search results returned defaults to 100,
             * which can be overridden by the `_count` parameter up to a maximum limit of 1000. The server might
             * return fewer resources than requested to prevent excessively large responses. If there are
             * additional results, the returned `Bundle` contains a link of `relation` "next", which has a
             * `_page_token` parameter for an opaque pagination token that can be used to retrieve the next
             * page. Resources with a total size larger than 5MB or a field count larger than 50,000 might not
             * be fully searchable as the server might trim its generated search index in those cases. Note:
             * FHIR resources are indexed asynchronously, so there might be a slight delay between the time a
             * resource is created or changed, and the time when the change reflects in search results. The only
             * exception is resource identifier data, which is indexed synchronously as a special index. As a
             * result, searching using resource identifier is not subject to indexing delay. To use the special
             * synchronous index, the search term for identifier should be in the pattern
             * `identifier=[system]|[value]` or `identifier=[value]`, and any of the following search result
             * parameters can be used: * `_count` * `_include` * `_revinclude` * `_summary` * `_elements` If
             * your query contains any other search parameters, the standard asynchronous index will be used
             * instead. Note that searching against the special index is optimized for resolving a small number
             * of matches. The search isn't optimized if your identifier search criteria matches a large number
             * (i.e. more than 2,000) of resources. For a search query that will match a large number of
             * resources, you can avoiding using the special synchronous index by including an additional
             * `_sort` parameter in your query. Use `_sort=-_lastUpdated` if you want to keep the default
             * sorting order. Note: The special synchronous identifier index are currently disabled for
             * DocumentReference and DocumentManifest searches. For samples and detailed information, see
             * [Searching for FHIR resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-search) and
             * [Advanced FHIR search features](https://cloud.google.com/healthcare/docs/how-tos/fhir-advanced-
             * search).
             *
             * Create a request for the method "fhir.search-type".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link SearchType#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Name of the FHIR store to retrieve resources from.
             * @param resourceType Optional. The FHIR resource type to search, such as Patient or Observation. For a complete list, see
             *        the FHIR Resource Index
             *        ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             *        [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
             * @param content the {@link com.google.api.services.healthcare.v1.model.SearchResourcesRequest}
             * @return the request
             */
            public SearchType searchType(java.lang.String parent, java.lang.String resourceType, com.google.api.services.healthcare.v1.model.SearchResourcesRequest content) throws java.io.IOException {
              SearchType result = new SearchType(parent, resourceType, content);
              initialize(result);
              return result;
            }

            public class SearchType extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+parent}/fhir/{resourceType}/_search";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");

              /**
               * Searches for resources in the given FHIR store according to criteria specified as query
               * parameters. Implements the FHIR standard search interaction
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#search),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#search),
               * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#search)) using the search semantics
               * described in the FHIR Search specification
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/search.html),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/search.html),
               * [R4](http://hl7.org/implement/standards/fhir/R4/search.html)). Supports four methods of search
               * defined by the specification: * `GET [base]?[parameters]` to search across all resources. *
               * `GET [base]/[type]?[parameters]` to search resources of a specified type. * `POST
               * [base]/_search?[parameters]` as an alternate form having the same semantics as the `GET` method
               * across all resources. * `POST [base]/[type]/_search?[parameters]` as an alternate form having
               * the same semantics as the `GET` method for the specified type. The `GET` and `POST` methods do
               * not support compartment searches. The `POST` method does not support `application/x-www-form-
               * urlencoded` search parameters. On success, the response body contains a JSON-encoded
               * representation of a `Bundle` resource of type `searchset`, containing the results of the
               * search. Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource
               * describing the reason for the error. If the request cannot be mapped to a valid API method on a
               * FHIR store, a generic GCP error might be returned instead. The server's capability statement,
               * retrieved through capabilities, indicates what search parameters are supported on each FHIR
               * resource. A list of all search parameters defined by the specification can be found in the FHIR
               * Search Parameter Registry ([STU3](http://hl7.org/implement/standards/fhir/STU3/searchparameter-
               * registry.html), [R4](http://hl7.org/implement/standards/fhir/R4/searchparameter-
               * registry.html)). FHIR search parameters for DSTU2 can be found on each resource's definition
               * page. Supported search modifiers: `:missing`, `:exact`, `:contains`, `:text`, `:in`, `:not-in`,
               * `:above`, `:below`, `:[type]`, `:not`, and `recurse` (DSTU2 and STU3) or `:iterate` (R4).
               * Supported search result parameters: `_sort`, `_count`, `_include`, `_revinclude`,
               * `_summary=text`, `_summary=data`, and `_elements`. The maximum number of search results
               * returned defaults to 100, which can be overridden by the `_count` parameter up to a maximum
               * limit of 1000. The server might return fewer resources than requested to prevent excessively
               * large responses. If there are additional results, the returned `Bundle` contains a link of
               * `relation` "next", which has a `_page_token` parameter for an opaque pagination token that can
               * be used to retrieve the next page. Resources with a total size larger than 5MB or a field count
               * larger than 50,000 might not be fully searchable as the server might trim its generated search
               * index in those cases. Note: FHIR resources are indexed asynchronously, so there might be a
               * slight delay between the time a resource is created or changed, and the time when the change
               * reflects in search results. The only exception is resource identifier data, which is indexed
               * synchronously as a special index. As a result, searching using resource identifier is not
               * subject to indexing delay. To use the special synchronous index, the search term for identifier
               * should be in the pattern `identifier=[system]|[value]` or `identifier=[value]`, and any of the
               * following search result parameters can be used: * `_count` * `_include` * `_revinclude` *
               * `_summary` * `_elements` If your query contains any other search parameters, the standard
               * asynchronous index will be used instead. Note that searching against the special index is
               * optimized for resolving a small number of matches. The search isn't optimized if your
               * identifier search criteria matches a large number (i.e. more than 2,000) of resources. For a
               * search query that will match a large number of resources, you can avoiding using the special
               * synchronous index by including an additional `_sort` parameter in your query. Use
               * `_sort=-_lastUpdated` if you want to keep the default sorting order. Note: The special
               * synchronous identifier index are currently disabled for DocumentReference and DocumentManifest
               * searches. For samples and detailed information, see [Searching for FHIR
               * resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-search) and [Advanced FHIR
               * search features](https://cloud.google.com/healthcare/docs/how-tos/fhir-advanced-search).
               *
               * Create a request for the method "fhir.search-type".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link SearchType#execute()} method to invoke the remote
               * operation. <p> {@link
               * SearchType#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Name of the FHIR store to retrieve resources from.
               * @param resourceType Optional. The FHIR resource type to search, such as Patient or Observation. For a complete list, see
             *        the FHIR Resource Index
             *        ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             *        [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             *        [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               * @param content the {@link com.google.api.services.healthcare.v1.model.SearchResourcesRequest}
               * @since 1.13
               */
              protected SearchType(java.lang.String parent, java.lang.String resourceType, com.google.api.services.healthcare.v1.model.SearchResourcesRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.resourceType = com.google.api.client.util.Preconditions.checkNotNull(resourceType, "Required parameter resourceType must be specified.");
              }

              @Override
              public SearchType set$Xgafv(java.lang.String $Xgafv) {
                return (SearchType) super.set$Xgafv($Xgafv);
              }

              @Override
              public SearchType setAccessToken(java.lang.String accessToken) {
                return (SearchType) super.setAccessToken(accessToken);
              }

              @Override
              public SearchType setAlt(java.lang.String alt) {
                return (SearchType) super.setAlt(alt);
              }

              @Override
              public SearchType setCallback(java.lang.String callback) {
                return (SearchType) super.setCallback(callback);
              }

              @Override
              public SearchType setFields(java.lang.String fields) {
                return (SearchType) super.setFields(fields);
              }

              @Override
              public SearchType setKey(java.lang.String key) {
                return (SearchType) super.setKey(key);
              }

              @Override
              public SearchType setOauthToken(java.lang.String oauthToken) {
                return (SearchType) super.setOauthToken(oauthToken);
              }

              @Override
              public SearchType setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (SearchType) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public SearchType setQuotaUser(java.lang.String quotaUser) {
                return (SearchType) super.setQuotaUser(quotaUser);
              }

              @Override
              public SearchType setUploadType(java.lang.String uploadType) {
                return (SearchType) super.setUploadType(uploadType);
              }

              @Override
              public SearchType setUploadProtocol(java.lang.String uploadProtocol) {
                return (SearchType) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Name of the FHIR store to retrieve resources from. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Name of the FHIR store to retrieve resources from.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. Name of the FHIR store to retrieve resources from. */
              public SearchType setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. The FHIR resource type to search, such as Patient or Observation. For a
               * complete list, see the FHIR Resource Index
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
               * [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               */
              @com.google.api.client.util.Key
              private java.lang.String resourceType;

              /** Optional. The FHIR resource type to search, such as Patient or Observation. For a complete list,
             see the FHIR Resource Index
             ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
             [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
             [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               */
              public java.lang.String getResourceType() {
                return resourceType;
              }

              /**
               * Optional. The FHIR resource type to search, such as Patient or Observation. For a
               * complete list, see the FHIR Resource Index
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
               * [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
               */
              public SearchType setResourceType(java.lang.String resourceType) {
                this.resourceType = resourceType;
                return this;
              }

              @Override
              public SearchType set(String parameterName, Object value) {
                return (SearchType) super.set(parameterName, value);
              }
            }
            /**
             * Updates the entire contents of a resource. Implements the FHIR standard update interaction
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#update),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#update),
             * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#update)). If the specified resource
             * does not exist and the FHIR store has enable_update_create set, creates the resource with the
             * client-specified ID. It is strongly advised not to include or encode any sensitive data such as
             * patient identifiers in client-specified resource IDs. Those IDs are part of the FHIR resource
             * path recorded in Cloud Audit Logs and Pub/Sub notifications. Those IDs can also be contained in
             * reference fields within other resources. The request body must contain a JSON-encoded FHIR
             * resource, and the request headers must contain `Content-Type: application/fhir+json`. The
             * resource must contain an `id` element having an identical value to the ID in the REST path of the
             * request. On success, the response body contains a JSON-encoded representation of the updated
             * resource, including the server-assigned version ID. Errors generated by the FHIR store contain a
             * JSON-encoded `OperationOutcome` resource describing the reason for the error. If the request
             * cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be returned
             * instead. For samples that show how to call `update`, see [Updating a FHIR
             * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
             * resources#updating_a_fhir_resource).
             *
             * Create a request for the method "fhir.update".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the resource to update.
             * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
             * @return the request
             */
            public Update update(java.lang.String name, com.google.api.services.healthcare.v1.model.HttpBody content) throws java.io.IOException {
              Update result = new Update(name, content);
              initialize(result);
              return result;
            }

            public class Update extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");

              /**
               * Updates the entire contents of a resource. Implements the FHIR standard update interaction
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#update),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#update),
               * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#update)). If the specified resource
               * does not exist and the FHIR store has enable_update_create set, creates the resource with the
               * client-specified ID. It is strongly advised not to include or encode any sensitive data such as
               * patient identifiers in client-specified resource IDs. Those IDs are part of the FHIR resource
               * path recorded in Cloud Audit Logs and Pub/Sub notifications. Those IDs can also be contained in
               * reference fields within other resources. The request body must contain a JSON-encoded FHIR
               * resource, and the request headers must contain `Content-Type: application/fhir+json`. The
               * resource must contain an `id` element having an identical value to the ID in the REST path of
               * the request. On success, the response body contains a JSON-encoded representation of the
               * updated resource, including the server-assigned version ID. Errors generated by the FHIR store
               * contain a JSON-encoded `OperationOutcome` resource describing the reason for the error. If the
               * request cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be
               * returned instead. For samples that show how to call `update`, see [Updating a FHIR
               * resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#updating_a_fhir_resource).
               *
               * Create a request for the method "fhir.update".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
               * <p> {@link
               * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the resource to update.
               * @param content the {@link com.google.api.services.healthcare.v1.model.HttpBody}
               * @since 1.13
               */
              protected Update(java.lang.String name, com.google.api.services.healthcare.v1.model.HttpBody content) {
                super(CloudHealthcare.this, "PUT", REST_PATH, content, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
              }

              @Override
              public Update set$Xgafv(java.lang.String $Xgafv) {
                return (Update) super.set$Xgafv($Xgafv);
              }

              @Override
              public Update setAccessToken(java.lang.String accessToken) {
                return (Update) super.setAccessToken(accessToken);
              }

              @Override
              public Update setAlt(java.lang.String alt) {
                return (Update) super.setAlt(alt);
              }

              @Override
              public Update setCallback(java.lang.String callback) {
                return (Update) super.setCallback(callback);
              }

              @Override
              public Update setFields(java.lang.String fields) {
                return (Update) super.setFields(fields);
              }

              @Override
              public Update setKey(java.lang.String key) {
                return (Update) super.setKey(key);
              }

              @Override
              public Update setOauthToken(java.lang.String oauthToken) {
                return (Update) super.setOauthToken(oauthToken);
              }

              @Override
              public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Update) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Update setQuotaUser(java.lang.String quotaUser) {
                return (Update) super.setQuotaUser(quotaUser);
              }

              @Override
              public Update setUploadType(java.lang.String uploadType) {
                return (Update) super.setUploadType(uploadType);
              }

              @Override
              public Update setUploadProtocol(java.lang.String uploadProtocol) {
                return (Update) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the resource to update. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the resource to update.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the resource to update. */
              public Update setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Update set(String parameterName, Object value) {
                return (Update) super.set(parameterName, value);
              }
            }
            /**
             * Gets the contents of a version (current or historical) of a FHIR resource by version ID.
             * Implements the FHIR standard vread interaction
             * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#vread),
             * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#vread),
             * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#vread)). On success, the response body
             * contains a JSON-encoded representation of the resource. Errors generated by the FHIR store
             * contain a JSON-encoded `OperationOutcome` resource describing the reason for the error. If the
             * request cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be
             * returned instead. For samples that show how to call `vread`, see [Retrieving a FHIR resource
             * version](https://cloud.google.com/healthcare/docs/how-tos/fhir-
             * resources#retrieving_a_fhir_resource_version).
             *
             * Create a request for the method "fhir.vread".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Vread#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the resource version to retrieve.
             * @return the request
             */
            public Vread vread(java.lang.String name) throws java.io.IOException {
              Vread result = new Vread(name);
              initialize(result);
              return result;
            }

            public class Vread extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.HttpBody> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+/_history/[^/]+$");

              /**
               * Gets the contents of a version (current or historical) of a FHIR resource by version ID.
               * Implements the FHIR standard vread interaction
               * ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#vread),
               * [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#vread),
               * [R4](http://hl7.org/implement/standards/fhir/R4/http.html#vread)). On success, the response
               * body contains a JSON-encoded representation of the resource. Errors generated by the FHIR store
               * contain a JSON-encoded `OperationOutcome` resource describing the reason for the error. If the
               * request cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be
               * returned instead. For samples that show how to call `vread`, see [Retrieving a FHIR resource
               * version](https://cloud.google.com/healthcare/docs/how-tos/fhir-
               * resources#retrieving_a_fhir_resource_version).
               *
               * Create a request for the method "fhir.vread".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Vread#execute()} method to invoke the remote operation.
               * <p> {@link
               * Vread#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the resource version to retrieve.
               * @since 1.13
               */
              protected Vread(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.HttpBody.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+/_history/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Vread set$Xgafv(java.lang.String $Xgafv) {
                return (Vread) super.set$Xgafv($Xgafv);
              }

              @Override
              public Vread setAccessToken(java.lang.String accessToken) {
                return (Vread) super.setAccessToken(accessToken);
              }

              @Override
              public Vread setAlt(java.lang.String alt) {
                return (Vread) super.setAlt(alt);
              }

              @Override
              public Vread setCallback(java.lang.String callback) {
                return (Vread) super.setCallback(callback);
              }

              @Override
              public Vread setFields(java.lang.String fields) {
                return (Vread) super.setFields(fields);
              }

              @Override
              public Vread setKey(java.lang.String key) {
                return (Vread) super.setKey(key);
              }

              @Override
              public Vread setOauthToken(java.lang.String oauthToken) {
                return (Vread) super.setOauthToken(oauthToken);
              }

              @Override
              public Vread setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Vread) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Vread setQuotaUser(java.lang.String quotaUser) {
                return (Vread) super.setQuotaUser(quotaUser);
              }

              @Override
              public Vread setUploadType(java.lang.String uploadType) {
                return (Vread) super.setUploadType(uploadType);
              }

              @Override
              public Vread setUploadProtocol(java.lang.String uploadProtocol) {
                return (Vread) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the resource version to retrieve. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the resource version to retrieve.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The name of the resource version to retrieve. */
              public Vread setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+/_history/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Vread set(String parameterName, Object value) {
                return (Vread) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Hl7V2Stores collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.Hl7V2Stores.List request = healthcare.hl7V2Stores().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Hl7V2Stores hl7V2Stores() {
          return new Hl7V2Stores();
        }

        /**
         * The "hl7V2Stores" collection of methods.
         */
        public class Hl7V2Stores {

          /**
           * Creates a new HL7v2 store within the parent dataset.
           *
           * Create a request for the method "hl7V2Stores.create".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the dataset this HL7v2 store belongs to.
           * @param content the {@link com.google.api.services.healthcare.v1.model.Hl7V2Store}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.healthcare.v1.model.Hl7V2Store content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Hl7V2Store> {

            private static final String REST_PATH = "v1/{+parent}/hl7V2Stores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Creates a new HL7v2 store within the parent dataset.
             *
             * Create a request for the method "hl7V2Stores.create".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the dataset this HL7v2 store belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1.model.Hl7V2Store}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.healthcare.v1.model.Hl7V2Store content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Hl7V2Store.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The name of the dataset this HL7v2 store belongs to. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the dataset this HL7v2 store belongs to.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. The name of the dataset this HL7v2 store belongs to. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID of the HL7v2 store that is being created. The string must match the
             * following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String hl7V2StoreId;

            /** Required. The ID of the HL7v2 store that is being created. The string must match the following
           regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public java.lang.String getHl7V2StoreId() {
              return hl7V2StoreId;
            }

            /**
             * Required. The ID of the HL7v2 store that is being created. The string must match the
             * following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
             */
            public Create setHl7V2StoreId(java.lang.String hl7V2StoreId) {
              this.hl7V2StoreId = hl7V2StoreId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes the specified HL7v2 store and removes all messages that it contains.
           *
           * Create a request for the method "hl7V2Stores.delete".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the HL7v2 store to delete.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Deletes the specified HL7v2 store and removes all messages that it contains.
             *
             * Create a request for the method "hl7V2Stores.delete".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the HL7v2 store to delete.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The resource name of the HL7v2 store to delete. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the HL7v2 store to delete.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The resource name of the HL7v2 store to delete. */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Exports the messages to a destination. To filter messages to be exported, define a filter using
           * the start and end time, relative to the message generation time (MSH.7). This API returns an
           * Operation that can be used to track the status of the job by calling GetOperation. Immediate
           * fatal errors appear in the error field. Otherwise, when the operation finishes, a detailed
           * response of type ExportMessagesResponse is returned in the response field. The metadata field
           * type for this operation is OperationMetadata.
           *
           * Create a request for the method "hl7V2Stores.export".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Export#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the source HL7v2 store, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_st
           *        ore_id}`
           * @param content the {@link com.google.api.services.healthcare.v1.model.ExportMessagesRequest}
           * @return the request
           */
          public Export export(java.lang.String name, com.google.api.services.healthcare.v1.model.ExportMessagesRequest content) throws java.io.IOException {
            Export result = new Export(name, content);
            initialize(result);
            return result;
          }

          public class Export extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:export";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Exports the messages to a destination. To filter messages to be exported, define a filter using
             * the start and end time, relative to the message generation time (MSH.7). This API returns an
             * Operation that can be used to track the status of the job by calling GetOperation. Immediate
             * fatal errors appear in the error field. Otherwise, when the operation finishes, a detailed
             * response of type ExportMessagesResponse is returned in the response field. The metadata field
             * type for this operation is OperationMetadata.
             *
             * Create a request for the method "hl7V2Stores.export".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
             * <p> {@link
             * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the source HL7v2 store, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_st
           *        ore_id}`
             * @param content the {@link com.google.api.services.healthcare.v1.model.ExportMessagesRequest}
             * @since 1.13
             */
            protected Export(java.lang.String name, com.google.api.services.healthcare.v1.model.ExportMessagesRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public Export set$Xgafv(java.lang.String $Xgafv) {
              return (Export) super.set$Xgafv($Xgafv);
            }

            @Override
            public Export setAccessToken(java.lang.String accessToken) {
              return (Export) super.setAccessToken(accessToken);
            }

            @Override
            public Export setAlt(java.lang.String alt) {
              return (Export) super.setAlt(alt);
            }

            @Override
            public Export setCallback(java.lang.String callback) {
              return (Export) super.setCallback(callback);
            }

            @Override
            public Export setFields(java.lang.String fields) {
              return (Export) super.setFields(fields);
            }

            @Override
            public Export setKey(java.lang.String key) {
              return (Export) super.setKey(key);
            }

            @Override
            public Export setOauthToken(java.lang.String oauthToken) {
              return (Export) super.setOauthToken(oauthToken);
            }

            @Override
            public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Export) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Export setQuotaUser(java.lang.String quotaUser) {
              return (Export) super.setQuotaUser(quotaUser);
            }

            @Override
            public Export setUploadType(java.lang.String uploadType) {
              return (Export) super.setUploadType(uploadType);
            }

            @Override
            public Export setUploadProtocol(java.lang.String uploadProtocol) {
              return (Export) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the source HL7v2 store, in the format `projects/{project_id}/lo
             * cations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the source HL7v2 store, in the format
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the source HL7v2 store, in the format `projects/{project_id}/lo
             * cations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`
             */
            public Export setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Export set(String parameterName, Object value) {
              return (Export) super.set(parameterName, value);
            }
          }
          /**
           * Gets the specified HL7v2 store.
           *
           * Create a request for the method "hl7V2Stores.get".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The resource name of the HL7v2 store to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Hl7V2Store> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Gets the specified HL7v2 store.
             *
             * Create a request for the method "hl7V2Stores.get".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the HL7v2 store to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Hl7V2Store.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. The resource name of the HL7v2 store to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the HL7v2 store to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. The resource name of the HL7v2 store to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets metrics associated with the HL7v2 store.
           *
           * Create a request for the method "hl7V2Stores.getHL7v2StoreMetrics".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetHL7v2StoreMetrics#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The resource name of the HL7v2 store to get metrics for, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_st
           *        ore_id}`.
           * @return the request
           */
          public GetHL7v2StoreMetrics getHL7v2StoreMetrics(java.lang.String name) throws java.io.IOException {
            GetHL7v2StoreMetrics result = new GetHL7v2StoreMetrics(name);
            initialize(result);
            return result;
          }

          public class GetHL7v2StoreMetrics extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Hl7V2StoreMetrics> {

            private static final String REST_PATH = "v1/{+name}:getHL7v2StoreMetrics";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Gets metrics associated with the HL7v2 store.
             *
             * Create a request for the method "hl7V2Stores.getHL7v2StoreMetrics".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetHL7v2StoreMetrics#execute()} method to invoke the
             * remote operation. <p> {@link GetHL7v2StoreMetrics#initialize(com.google.api.client.googleapis.s
             * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. The resource name of the HL7v2 store to get metrics for, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_st
           *        ore_id}`.
             * @since 1.13
             */
            protected GetHL7v2StoreMetrics(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Hl7V2StoreMetrics.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetHL7v2StoreMetrics set$Xgafv(java.lang.String $Xgafv) {
              return (GetHL7v2StoreMetrics) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetHL7v2StoreMetrics setAccessToken(java.lang.String accessToken) {
              return (GetHL7v2StoreMetrics) super.setAccessToken(accessToken);
            }

            @Override
            public GetHL7v2StoreMetrics setAlt(java.lang.String alt) {
              return (GetHL7v2StoreMetrics) super.setAlt(alt);
            }

            @Override
            public GetHL7v2StoreMetrics setCallback(java.lang.String callback) {
              return (GetHL7v2StoreMetrics) super.setCallback(callback);
            }

            @Override
            public GetHL7v2StoreMetrics setFields(java.lang.String fields) {
              return (GetHL7v2StoreMetrics) super.setFields(fields);
            }

            @Override
            public GetHL7v2StoreMetrics setKey(java.lang.String key) {
              return (GetHL7v2StoreMetrics) super.setKey(key);
            }

            @Override
            public GetHL7v2StoreMetrics setOauthToken(java.lang.String oauthToken) {
              return (GetHL7v2StoreMetrics) super.setOauthToken(oauthToken);
            }

            @Override
            public GetHL7v2StoreMetrics setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetHL7v2StoreMetrics) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetHL7v2StoreMetrics setQuotaUser(java.lang.String quotaUser) {
              return (GetHL7v2StoreMetrics) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetHL7v2StoreMetrics setUploadType(java.lang.String uploadType) {
              return (GetHL7v2StoreMetrics) super.setUploadType(uploadType);
            }

            @Override
            public GetHL7v2StoreMetrics setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetHL7v2StoreMetrics) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The resource name of the HL7v2 store to get metrics for, in the format `pro
             * jects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_s
             * tore_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The resource name of the HL7v2 store to get metrics for, in the format
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The resource name of the HL7v2 store to get metrics for, in the format `pro
             * jects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_s
             * tore_id}`.
             */
            public GetHL7v2StoreMetrics setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetHL7v2StoreMetrics set(String parameterName, Object value) {
              return (GetHL7v2StoreMetrics) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. Returns an empty policy if the resource exists and
           * does not have a policy set.
           *
           * Create a request for the method "hl7V2Stores.getIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Gets the access control policy for a resource. Returns an empty policy if the resource exists
             * and does not have a policy set.
             *
             * Create a request for the method "hl7V2Stores.getIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            @com.google.api.client.util.Key("options.requestedPolicyVersion")
            private java.lang.Integer optionsRequestedPolicyVersion;

            /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
           and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
           conditional role bindings must specify version 3. Policies with no conditional role bindings may
           specify any valid value or leave the field unset. The policy in the response might use the policy
           version that you specified, or it might use a lower policy version. For example, if you specify
           version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
           which resources support conditions in their IAM policies, see the [IAM
           documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public java.lang.Integer getOptionsRequestedPolicyVersion() {
              return optionsRequestedPolicyVersion;
            }

            /**
             * Optional. The maximum policy version that will be used to format the policy. Valid
             * values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
             * Requests for policies with any conditional role bindings must specify version 3.
             * Policies with no conditional role bindings may specify any valid value or leave the
             * field unset. The policy in the response might use the policy version that you
             * specified, or it might use a lower policy version. For example, if you specify
             * version 3, but the policy has no conditional role bindings, the response uses version
             * 1. To learn which resources support conditions in their IAM policies, see the [IAM
             * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
             */
            public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
              this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Import messages to the HL7v2 store by loading data from the specified sources. This method is
           * optimized to load large quantities of data using import semantics that ignore some HL7v2 store
           * configuration options and are not suitable for all use cases. It is primarily intended to load
           * data into an empty HL7v2 store that is not being used by other clients. An existing message will
           * be overwritten if a duplicate message is imported. A duplicate message is a message with the same
           * raw bytes as a message that already exists in this HL7v2 store. When a message is overwritten,
           * its labels will also be overwritten. The import operation is idempotent unless the input data
           * contains multiple valid messages with the same raw bytes but different labels. In that case,
           * after the import completes, the store contains exactly one message with those raw bytes but there
           * is no ordering guarantee on which version of the labels it has. The operation result counters do
           * not count duplicated raw bytes as an error and count one success for each message in the input,
           * which might result in a success count larger than the number of messages in the HL7v2 store. If
           * some messages fail to import, for example due to parsing errors, successfully imported messages
           * are not rolled back. This method returns an Operation that can be used to track the status of the
           * import by calling GetOperation. Immediate fatal errors appear in the error field, errors are also
           * logged to Cloud Logging (see [Viewing error logs in Cloud
           * Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise, when the
           * operation finishes, a response of type ImportMessagesResponse is returned in the response field.
           * The metadata field type for this operation is OperationMetadata.
           *
           * Create a request for the method "hl7V2Stores.import".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link CloudHealthcareImport#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. The name of the target HL7v2 store, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_st
           *        ore_id}`
           * @param content the {@link com.google.api.services.healthcare.v1.model.ImportMessagesRequest}
           * @return the request
           */
          public CloudHealthcareImport healthcareImport(java.lang.String name, com.google.api.services.healthcare.v1.model.ImportMessagesRequest content) throws java.io.IOException {
            CloudHealthcareImport result = new CloudHealthcareImport(name, content);
            initialize(result);
            return result;
          }

          public class CloudHealthcareImport extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:import";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Import messages to the HL7v2 store by loading data from the specified sources. This method is
             * optimized to load large quantities of data using import semantics that ignore some HL7v2 store
             * configuration options and are not suitable for all use cases. It is primarily intended to load
             * data into an empty HL7v2 store that is not being used by other clients. An existing message
             * will be overwritten if a duplicate message is imported. A duplicate message is a message with
             * the same raw bytes as a message that already exists in this HL7v2 store. When a message is
             * overwritten, its labels will also be overwritten. The import operation is idempotent unless the
             * input data contains multiple valid messages with the same raw bytes but different labels. In
             * that case, after the import completes, the store contains exactly one message with those raw
             * bytes but there is no ordering guarantee on which version of the labels it has. The operation
             * result counters do not count duplicated raw bytes as an error and count one success for each
             * message in the input, which might result in a success count larger than the number of messages
             * in the HL7v2 store. If some messages fail to import, for example due to parsing errors,
             * successfully imported messages are not rolled back. This method returns an Operation that can
             * be used to track the status of the import by calling GetOperation. Immediate fatal errors
             * appear in the error field, errors are also logged to Cloud Logging (see [Viewing error logs in
             * Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise, when the
             * operation finishes, a response of type ImportMessagesResponse is returned in the response
             * field. The metadata field type for this operation is OperationMetadata.
             *
             * Create a request for the method "hl7V2Stores.import".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link CloudHealthcareImport#execute()} method to invoke the
             * remote operation. <p> {@link CloudHealthcareImport#initialize(com.google.api.client.googleapis.
             * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. The name of the target HL7v2 store, in the format
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_st
           *        ore_id}`
             * @param content the {@link com.google.api.services.healthcare.v1.model.ImportMessagesRequest}
             * @since 1.13
             */
            protected CloudHealthcareImport(java.lang.String name, com.google.api.services.healthcare.v1.model.ImportMessagesRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public CloudHealthcareImport set$Xgafv(java.lang.String $Xgafv) {
              return (CloudHealthcareImport) super.set$Xgafv($Xgafv);
            }

            @Override
            public CloudHealthcareImport setAccessToken(java.lang.String accessToken) {
              return (CloudHealthcareImport) super.setAccessToken(accessToken);
            }

            @Override
            public CloudHealthcareImport setAlt(java.lang.String alt) {
              return (CloudHealthcareImport) super.setAlt(alt);
            }

            @Override
            public CloudHealthcareImport setCallback(java.lang.String callback) {
              return (CloudHealthcareImport) super.setCallback(callback);
            }

            @Override
            public CloudHealthcareImport setFields(java.lang.String fields) {
              return (CloudHealthcareImport) super.setFields(fields);
            }

            @Override
            public CloudHealthcareImport setKey(java.lang.String key) {
              return (CloudHealthcareImport) super.setKey(key);
            }

            @Override
            public CloudHealthcareImport setOauthToken(java.lang.String oauthToken) {
              return (CloudHealthcareImport) super.setOauthToken(oauthToken);
            }

            @Override
            public CloudHealthcareImport setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CloudHealthcareImport) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CloudHealthcareImport setQuotaUser(java.lang.String quotaUser) {
              return (CloudHealthcareImport) super.setQuotaUser(quotaUser);
            }

            @Override
            public CloudHealthcareImport setUploadType(java.lang.String uploadType) {
              return (CloudHealthcareImport) super.setUploadType(uploadType);
            }

            @Override
            public CloudHealthcareImport setUploadProtocol(java.lang.String uploadProtocol) {
              return (CloudHealthcareImport) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the target HL7v2 store, in the format `projects/{project_id}/lo
             * cations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the target HL7v2 store, in the format
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the target HL7v2 store, in the format `projects/{project_id}/lo
             * cations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`
             */
            public CloudHealthcareImport setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public CloudHealthcareImport set(String parameterName, Object value) {
              return (CloudHealthcareImport) super.set(parameterName, value);
            }
          }
          /**
           * Lists the HL7v2 stores in the given dataset.
           *
           * Create a request for the method "hl7V2Stores.list".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the dataset.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListHl7V2StoresResponse> {

            private static final String REST_PATH = "v1/{+parent}/hl7V2Stores";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists the HL7v2 stores in the given dataset.
             *
             * Create a request for the method "hl7V2Stores.list".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the dataset.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListHl7V2StoresResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Name of the dataset. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the dataset.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Name of the dataset. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Restricts stores returned to those matching a filter. The following syntax is
             * available: * A string field value can be written as text inside quotation marks, for
             * example `"query text"`. The only valid relational operation for text fields is
             * equality (`=`), where text is searched within the field, rather than having the field
             * be equal to the text. For example, `"Comment = great"` returns messages with `great`
             * in the comment field. * A number field value can be written as an integer, a decimal,
             * or an exponential. The valid relational operators for number fields are the equality
             * operator (`=`), along with the less than/greater than operators (`<`, `<=`, `>`,
             * `>=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
             * operator to an expression to negate it. * A date field value must be written in
             * `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time format. Leading
             * zeros are required for one-digit months and days. The valid relational operators for
             * date fields are the equality operator (`=`) , along with the less than/greater than
             * operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`) operator.
             * You can prepend the `NOT` operator to an expression to negate it. * Multiple field
             * query expressions can be combined in one query by adding `AND` or `OR` operators
             * between the expressions. If a boolean operator appears within a quoted string, it is
             * not treated as special, it's just another part of the character string to be matched.
             * You can prepend the `NOT` operator to an expression to negate it. Only filtering on
             * labels is supported. For example, `labels.key=value`.
             */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** Restricts stores returned to those matching a filter. The following syntax is available: * A string
           field value can be written as text inside quotation marks, for example `"query text"`. The only
           valid relational operation for text fields is equality (`=`), where text is searched within the
           field, rather than having the field be equal to the text. For example, `"Comment = great"` returns
           messages with `great` in the comment field. * A number field value can be written as an integer, a
           decimal, or an exponential. The valid relational operators for number fields are the equality
           operator (`=`), along with the less than/greater than operators (`<`, `<=`, `>`, `>=`). Note that
           there is no inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to
           negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields with date and time use
           the RFC3339 time format. Leading zeros are required for one-digit months and days. The valid
           relational operators for date fields are the equality operator (`=`) , along with the less
           than/greater than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`)
           operator. You can prepend the `NOT` operator to an expression to negate it. * Multiple field query
           expressions can be combined in one query by adding `AND` or `OR` operators between the expressions.
           If a boolean operator appears within a quoted string, it is not treated as special, it's just
           another part of the character string to be matched. You can prepend the `NOT` operator to an
           expression to negate it. Only filtering on labels is supported. For example, `labels.key=value`.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /**
             * Restricts stores returned to those matching a filter. The following syntax is
             * available: * A string field value can be written as text inside quotation marks, for
             * example `"query text"`. The only valid relational operation for text fields is
             * equality (`=`), where text is searched within the field, rather than having the field
             * be equal to the text. For example, `"Comment = great"` returns messages with `great`
             * in the comment field. * A number field value can be written as an integer, a decimal,
             * or an exponential. The valid relational operators for number fields are the equality
             * operator (`=`), along with the less than/greater than operators (`<`, `<=`, `>`,
             * `>=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
             * operator to an expression to negate it. * A date field value must be written in
             * `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time format. Leading
             * zeros are required for one-digit months and days. The valid relational operators for
             * date fields are the equality operator (`=`) , along with the less than/greater than
             * operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality (`!=`) operator.
             * You can prepend the `NOT` operator to an expression to negate it. * Multiple field
             * query expressions can be combined in one query by adding `AND` or `OR` operators
             * between the expressions. If a boolean operator appears within a quoted string, it is
             * not treated as special, it's just another part of the character string to be matched.
             * You can prepend the `NOT` operator to an expression to negate it. Only filtering on
             * labels is supported. For example, `labels.key=value`.
             */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /**
             * Limit on the number of HL7v2 stores to return in a single response. If not specified,
             * 100 is used. May not be larger than 1000.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Limit on the number of HL7v2 stores to return in a single response. If not specified, 100 is used.
           May not be larger than 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Limit on the number of HL7v2 stores to return in a single response. If not specified,
             * 100 is used. May not be larger than 1000.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from the previous List request, if any.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The next_page_token value returned from the previous List request, if any. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the HL7v2 store.
           *
           * Create a request for the method "hl7V2Stores.patch".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Identifier. Resource name of the HL7v2 store, of the form
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_st
           *        ore_id}`.
           * @param content the {@link com.google.api.services.healthcare.v1.model.Hl7V2Store}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1.model.Hl7V2Store content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Hl7V2Store> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Updates the HL7v2 store.
             *
             * Create a request for the method "hl7V2Stores.patch".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Identifier. Resource name of the HL7v2 store, of the form
           *        `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_st
           *        ore_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.Hl7V2Store}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.healthcare.v1.model.Hl7V2Store content) {
              super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1.model.Hl7V2Store.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Identifier. Resource name of the HL7v2 store, of the form `projects/{project_id}/loca
             * tions/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Identifier. Resource name of the HL7v2 store, of the form
           `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Identifier. Resource name of the HL7v2 store, of the form `projects/{project_id}/loca
             * tions/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. The update mask applies to the resource. For the `FieldMask` definition,
             * see https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Required. The update mask applies to the resource. For the `FieldMask` definition, see
           https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Required. The update mask applies to the resource. For the `FieldMask` definition,
             * see https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Rolls back messages from the HL7v2 store to the specified time. This method returns an Operation
           * that can be used to track the status of the rollback by calling GetOperation. Immediate fatal
           * errors appear in the error field, errors are also logged to Cloud Logging (see [Viewing error
           * logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise,
           * when the operation finishes, a detailed response of type RollbackHl7V2MessagesResponse is
           * returned in the response field. The metadata field type for this operation is OperationMetadata.
           *
           * Create a request for the method "hl7V2Stores.rollback".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Rollback#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the HL7v2 store to rollback, in the format of
           *        "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
           *        /hl7V2Stores/{hl7v2_store_id}".
           * @param content the {@link com.google.api.services.healthcare.v1.model.RollbackHl7V2MessagesRequest}
           * @return the request
           */
          public Rollback rollback(java.lang.String name, com.google.api.services.healthcare.v1.model.RollbackHl7V2MessagesRequest content) throws java.io.IOException {
            Rollback result = new Rollback(name, content);
            initialize(result);
            return result;
          }

          public class Rollback extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}:rollback";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Rolls back messages from the HL7v2 store to the specified time. This method returns an
             * Operation that can be used to track the status of the rollback by calling GetOperation.
             * Immediate fatal errors appear in the error field, errors are also logged to Cloud Logging (see
             * [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-
             * tos/logging)). Otherwise, when the operation finishes, a detailed response of type
             * RollbackHl7V2MessagesResponse is returned in the response field. The metadata field type for
             * this operation is OperationMetadata.
             *
             * Create a request for the method "hl7V2Stores.rollback".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Rollback#execute()} method to invoke the remote operation.
             * <p> {@link
             * Rollback#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the HL7v2 store to rollback, in the format of
           *        "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
           *        /hl7V2Stores/{hl7v2_store_id}".
             * @param content the {@link com.google.api.services.healthcare.v1.model.RollbackHl7V2MessagesRequest}
             * @since 1.13
             */
            protected Rollback(java.lang.String name, com.google.api.services.healthcare.v1.model.RollbackHl7V2MessagesRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public Rollback set$Xgafv(java.lang.String $Xgafv) {
              return (Rollback) super.set$Xgafv($Xgafv);
            }

            @Override
            public Rollback setAccessToken(java.lang.String accessToken) {
              return (Rollback) super.setAccessToken(accessToken);
            }

            @Override
            public Rollback setAlt(java.lang.String alt) {
              return (Rollback) super.setAlt(alt);
            }

            @Override
            public Rollback setCallback(java.lang.String callback) {
              return (Rollback) super.setCallback(callback);
            }

            @Override
            public Rollback setFields(java.lang.String fields) {
              return (Rollback) super.setFields(fields);
            }

            @Override
            public Rollback setKey(java.lang.String key) {
              return (Rollback) super.setKey(key);
            }

            @Override
            public Rollback setOauthToken(java.lang.String oauthToken) {
              return (Rollback) super.setOauthToken(oauthToken);
            }

            @Override
            public Rollback setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Rollback) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Rollback setQuotaUser(java.lang.String quotaUser) {
              return (Rollback) super.setQuotaUser(quotaUser);
            }

            @Override
            public Rollback setUploadType(java.lang.String uploadType) {
              return (Rollback) super.setUploadType(uploadType);
            }

            @Override
            public Rollback setUploadProtocol(java.lang.String uploadProtocol) {
              return (Rollback) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the HL7v2 store to rollback, in the format of
             * "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
             * /hl7V2Stores/{hl7v2_store_id}".
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the HL7v2 store to rollback, in the format of
           "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
           /hl7V2Stores/{hl7v2_store_id}".
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the HL7v2 store to rollback, in the format of
             * "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
             * /hl7V2Stores/{hl7v2_store_id}".
             */
            public Rollback setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Rollback set(String parameterName, Object value) {
              return (Rollback) super.set(parameterName, value);
            }
          }
          /**
           * Sets the access control policy on the specified resource. Replaces any existing policy. Can
           * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
           *
           * Create a request for the method "hl7V2Stores.setIamPolicy".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Policy> {

            private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Sets the access control policy on the specified resource. Replaces any existing policy. Can
             * return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
             *
             * Create a request for the method "hl7V2Stores.setIamPolicy".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.healthcare.v1.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.healthcare.v1.model.SetIamPolicyRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns permissions that a caller has on the specified resource. If the resource does not exist,
           * this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
           * designed to be used for building permission-aware UIs and command-line tools, not for
           * authorization checking. This operation may "fail open" without warning.
           *
           * Create a request for the method "hl7V2Stores.testIamPermissions".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
           * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

            /**
             * Returns permissions that a caller has on the specified resource. If the resource does not
             * exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This
             * operation is designed to be used for building permission-aware UIs and command-line tools, not
             * for authorization checking. This operation may "fail open" without warning.
             *
             * Create a request for the method "hl7V2Stores.testIamPermissions".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
           *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
           *        this field.
             * @param content the {@link com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.healthcare.v1.model.TestIamPermissionsRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
           names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
           field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See [Resource
             * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
             * for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Messages collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
           *   {@code CloudHealthcare.Messages.List request = healthcare.messages().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Messages messages() {
            return new Messages();
          }

          /**
           * The "messages" collection of methods.
           */
          public class Messages {

            /**
             * Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any
             * Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the
             * message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter transmits the
             * message when a notification is received.
             *
             * Create a request for the method "messages.create".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the HL7v2 store this message belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1.model.CreateMessageRequest}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.healthcare.v1.model.CreateMessageRequest content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Message> {

              private static final String REST_PATH = "v1/{+parent}/messages";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

              /**
               * Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any
               * Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the
               * message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter transmits
               * the message when a notification is received.
               *
               * Create a request for the method "messages.create".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the HL7v2 store this message belongs to.
               * @param content the {@link com.google.api.services.healthcare.v1.model.CreateMessageRequest}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.healthcare.v1.model.CreateMessageRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Message.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the HL7v2 store this message belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the HL7v2 store this message belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The name of the HL7v2 store this message belongs to. */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes an HL7v2 message.
             *
             * Create a request for the method "messages.delete".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the HL7v2 message to delete.
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");

              /**
               * Deletes an HL7v2 message.
               *
               * Create a request for the method "messages.delete".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the HL7v2 message to delete.
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(CloudHealthcare.this, "DELETE", REST_PATH, null, com.google.api.services.healthcare.v1.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The resource name of the HL7v2 message to delete. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the HL7v2 message to delete.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The resource name of the HL7v2 message to delete. */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Gets an HL7v2 message.
             *
             * Create a request for the method "messages.get".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The resource name of the HL7v2 message to retrieve.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Message> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");

              /**
               * Gets an HL7v2 message.
               *
               * Create a request for the method "messages.get".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
               * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The resource name of the HL7v2 message to retrieve.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Message.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The resource name of the HL7v2 message to retrieve. */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The resource name of the HL7v2 message to retrieve.
               */
              public java.lang.String getName() {
                return name;
              }

              /** Required. The resource name of the HL7v2 message to retrieve. */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Specifies which parts of the Message resource to return in the response. When
               * unspecified, equivalent to FULL.
               */
              @com.google.api.client.util.Key
              private java.lang.String view;

              /** Specifies which parts of the Message resource to return in the response. When unspecified,
             equivalent to FULL.
               */
              public java.lang.String getView() {
                return view;
              }

              /**
               * Specifies which parts of the Message resource to return in the response. When
               * unspecified, equivalent to FULL.
               */
              public Get setView(java.lang.String view) {
                this.view = view;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any
             * Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the
             * message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter transmits the
             * message when a notification is received. If the method is successful, it generates a response
             * containing an HL7v2 acknowledgment (`ACK`) message. If the method encounters an error, it returns
             * a negative acknowledgment (`NACK`) message. This behavior is suitable for replying to HL7v2
             * interface systems that expect these acknowledgments.
             *
             * Create a request for the method "messages.ingest".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Ingest#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the HL7v2 store this message belongs to.
             * @param content the {@link com.google.api.services.healthcare.v1.model.IngestMessageRequest}
             * @return the request
             */
            public Ingest ingest(java.lang.String parent, com.google.api.services.healthcare.v1.model.IngestMessageRequest content) throws java.io.IOException {
              Ingest result = new Ingest(parent, content);
              initialize(result);
              return result;
            }

            public class Ingest extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.IngestMessageResponse> {

              private static final String REST_PATH = "v1/{+parent}/messages:ingest";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

              /**
               * Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any
               * Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the
               * message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter transmits
               * the message when a notification is received. If the method is successful, it generates a
               * response containing an HL7v2 acknowledgment (`ACK`) message. If the method encounters an error,
               * it returns a negative acknowledgment (`NACK`) message. This behavior is suitable for replying
               * to HL7v2 interface systems that expect these acknowledgments.
               *
               * Create a request for the method "messages.ingest".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Ingest#execute()} method to invoke the remote operation.
               * <p> {@link
               * Ingest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the HL7v2 store this message belongs to.
               * @param content the {@link com.google.api.services.healthcare.v1.model.IngestMessageRequest}
               * @since 1.13
               */
              protected Ingest(java.lang.String parent, com.google.api.services.healthcare.v1.model.IngestMessageRequest content) {
                super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.IngestMessageResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
              }

              @Override
              public Ingest set$Xgafv(java.lang.String $Xgafv) {
                return (Ingest) super.set$Xgafv($Xgafv);
              }

              @Override
              public Ingest setAccessToken(java.lang.String accessToken) {
                return (Ingest) super.setAccessToken(accessToken);
              }

              @Override
              public Ingest setAlt(java.lang.String alt) {
                return (Ingest) super.setAlt(alt);
              }

              @Override
              public Ingest setCallback(java.lang.String callback) {
                return (Ingest) super.setCallback(callback);
              }

              @Override
              public Ingest setFields(java.lang.String fields) {
                return (Ingest) super.setFields(fields);
              }

              @Override
              public Ingest setKey(java.lang.String key) {
                return (Ingest) super.setKey(key);
              }

              @Override
              public Ingest setOauthToken(java.lang.String oauthToken) {
                return (Ingest) super.setOauthToken(oauthToken);
              }

              @Override
              public Ingest setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Ingest) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Ingest setQuotaUser(java.lang.String quotaUser) {
                return (Ingest) super.setQuotaUser(quotaUser);
              }

              @Override
              public Ingest setUploadType(java.lang.String uploadType) {
                return (Ingest) super.setUploadType(uploadType);
              }

              @Override
              public Ingest setUploadProtocol(java.lang.String uploadProtocol) {
                return (Ingest) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. The name of the HL7v2 store this message belongs to. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the HL7v2 store this message belongs to.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. The name of the HL7v2 store this message belongs to. */
              public Ingest setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Ingest set(String parameterName, Object value) {
                return (Ingest) super.set(parameterName, value);
              }
            }
            /**
             * Lists all the messages in the given HL7v2 store with support for filtering. Note: HL7v2 messages
             * are indexed asynchronously, so there might be a slight delay between the time a message is
             * created and when it can be found through a filter.
             *
             * Create a request for the method "messages.list".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. Name of the HL7v2 store to retrieve messages from.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListMessagesResponse> {

              private static final String REST_PATH = "v1/{+parent}/messages";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");

              /**
               * Lists all the messages in the given HL7v2 store with support for filtering. Note: HL7v2
               * messages are indexed asynchronously, so there might be a slight delay between the time a
               * message is created and when it can be found through a filter.
               *
               * Create a request for the method "messages.list".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. Name of the HL7v2 store to retrieve messages from.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListMessagesResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /** Required. Name of the HL7v2 store to retrieve messages from. */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. Name of the HL7v2 store to retrieve messages from.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /** Required. Name of the HL7v2 store to retrieve messages from. */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Restricts messages returned to those matching a filter. The following syntax is
               * available: * A string field value can be written as text inside quotation marks,
               * for example `"query text"`. The only valid relational operation for text fields is
               * equality (`=`), where text is searched within the field, rather than having the
               * field be equal to the text. For example, `"Comment = great"` returns messages with
               * `great` in the comment field. * A number field value can be written as an integer,
               * a decimal, or an exponential. The valid relational operators for number fields are
               * the equality operator (`=`), along with the less than/greater than operators (`<`,
               * `<=`, `>`, `>=`). Note that there is no inequality (`!=`) operator. You can prepend
               * the `NOT` operator to an expression to negate it. * A date field value must be
               * written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time
               * format. Leading zeros are required for one-digit months and days. The valid
               * relational operators for date fields are the equality operator (`=`) , along with
               * the less than/greater than operators (`<`, `<=`, `>`, `>=`). Note that there is no
               * inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to
               * negate it. * Multiple field query expressions can be combined in one query by
               * adding `AND` or `OR` operators between the expressions. If a boolean operator
               * appears within a quoted string, it is not treated as special, it's just another
               * part of the character string to be matched. You can prepend the `NOT` operator to
               * an expression to negate it. Fields/functions available for filtering are: *
               * `message_type`, from the MSH-9.1 field. For example, `NOT message_type = "ADT"`. *
               * `send_date` or `sendDate`, the YYYY-MM-DD date the message was sent in the
               * dataset's time_zone, from the MSH-7 segment. For example, `send_date <
               * "2017-01-02"`. * `send_time`, the timestamp when the message was sent, using the
               * RFC3339 time format for comparisons, from the MSH-7 segment. For example,
               * `send_time < "2017-01-02T00:00:00-05:00"`. * `create_time`, the timestamp when the
               * message was created in the HL7v2 store. Use the RFC3339 time format for
               * comparisons. For example, `create_time < "2017-01-02T00:00:00-05:00"`. *
               * `send_facility`, the care center that the message came from, from the MSH-4
               * segment. For example, `send_facility = "ABC"`. * `PatientId(value, type)`, which
               * matches if the message lists a patient having an ID of the given value and type in
               * the PID-2, PID-3, or PID-4 segments. For example, `PatientId("123456", "MRN")`. *
               * `labels.x`, a string value of the label with key `x` as set using the
               * Message.labels map. For example, `labels."priority"="high"`. The operator `:*` can
               * be used to assert the existence of a label. For example, `labels."priority":*`.
               */
              @com.google.api.client.util.Key
              private java.lang.String filter;

              /** Restricts messages returned to those matching a filter. The following syntax is available: * A
             string field value can be written as text inside quotation marks, for example `"query text"`. The
             only valid relational operation for text fields is equality (`=`), where text is searched within
             the field, rather than having the field be equal to the text. For example, `"Comment = great"`
             returns messages with `great` in the comment field. * A number field value can be written as an
             integer, a decimal, or an exponential. The valid relational operators for number fields are the
             equality operator (`=`), along with the less than/greater than operators (`<`, `<=`, `>`, `>=`).
             Note that there is no inequality (`!=`) operator. You can prepend the `NOT` operator to an
             expression to negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields with
             date and time use the RFC3339 time format. Leading zeros are required for one-digit months and
             days. The valid relational operators for date fields are the equality operator (`=`) , along with
             the less than/greater than operators (`<`, `<=`, `>`, `>=`). Note that there is no inequality
             (`!=`) operator. You can prepend the `NOT` operator to an expression to negate it. * Multiple field
             query expressions can be combined in one query by adding `AND` or `OR` operators between the
             expressions. If a boolean operator appears within a quoted string, it is not treated as special,
             it's just another part of the character string to be matched. You can prepend the `NOT` operator to
             an expression to negate it. Fields/functions available for filtering are: * `message_type`, from
             the MSH-9.1 field. For example, `NOT message_type = "ADT"`. * `send_date` or `sendDate`, the YYYY-
             MM-DD date the message was sent in the dataset's time_zone, from the MSH-7 segment. For example,
             `send_date < "2017-01-02"`. * `send_time`, the timestamp when the message was sent, using the
             RFC3339 time format for comparisons, from the MSH-7 segment. For example, `send_time <
             "2017-01-02T00:00:00-05:00"`. * `create_time`, the timestamp when the message was created in the
             HL7v2 store. Use the RFC3339 time format for comparisons. For example, `create_time <
             "2017-01-02T00:00:00-05:00"`. * `send_facility`, the care center that the message came from, from
             the MSH-4 segment. For example, `send_facility = "ABC"`. * `PatientId(value, type)`, which matches
             if the message lists a patient having an ID of the given value and type in the PID-2, PID-3, or
             PID-4 segments. For example, `PatientId("123456", "MRN")`. * `labels.x`, a string value of the
             label with key `x` as set using the Message.labels map. For example, `labels."priority"="high"`.
             The operator `:*` can be used to assert the existence of a label. For example,
             `labels."priority":*`.
               */
              public java.lang.String getFilter() {
                return filter;
              }

              /**
               * Restricts messages returned to those matching a filter. The following syntax is
               * available: * A string field value can be written as text inside quotation marks,
               * for example `"query text"`. The only valid relational operation for text fields is
               * equality (`=`), where text is searched within the field, rather than having the
               * field be equal to the text. For example, `"Comment = great"` returns messages with
               * `great` in the comment field. * A number field value can be written as an integer,
               * a decimal, or an exponential. The valid relational operators for number fields are
               * the equality operator (`=`), along with the less than/greater than operators (`<`,
               * `<=`, `>`, `>=`). Note that there is no inequality (`!=`) operator. You can prepend
               * the `NOT` operator to an expression to negate it. * A date field value must be
               * written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time
               * format. Leading zeros are required for one-digit months and days. The valid
               * relational operators for date fields are the equality operator (`=`) , along with
               * the less than/greater than operators (`<`, `<=`, `>`, `>=`). Note that there is no
               * inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to
               * negate it. * Multiple field query expressions can be combined in one query by
               * adding `AND` or `OR` operators between the expressions. If a boolean operator
               * appears within a quoted string, it is not treated as special, it's just another
               * part of the character string to be matched. You can prepend the `NOT` operator to
               * an expression to negate it. Fields/functions available for filtering are: *
               * `message_type`, from the MSH-9.1 field. For example, `NOT message_type = "ADT"`. *
               * `send_date` or `sendDate`, the YYYY-MM-DD date the message was sent in the
               * dataset's time_zone, from the MSH-7 segment. For example, `send_date <
               * "2017-01-02"`. * `send_time`, the timestamp when the message was sent, using the
               * RFC3339 time format for comparisons, from the MSH-7 segment. For example,
               * `send_time < "2017-01-02T00:00:00-05:00"`. * `create_time`, the timestamp when the
               * message was created in the HL7v2 store. Use the RFC3339 time format for
               * comparisons. For example, `create_time < "2017-01-02T00:00:00-05:00"`. *
               * `send_facility`, the care center that the message came from, from the MSH-4
               * segment. For example, `send_facility = "ABC"`. * `PatientId(value, type)`, which
               * matches if the message lists a patient having an ID of the given value and type in
               * the PID-2, PID-3, or PID-4 segments. For example, `PatientId("123456", "MRN")`. *
               * `labels.x`, a string value of the label with key `x` as set using the
               * Message.labels map. For example, `labels."priority"="high"`. The operator `:*` can
               * be used to assert the existence of a label. For example, `labels."priority":*`.
               */
              public List setFilter(java.lang.String filter) {
                this.filter = filter;
                return this;
              }

              /**
               * Orders messages returned by the specified order_by clause. Syntax:
               * https://cloud.google.com/apis/design/design_patterns#sorting_order Fields available
               * for ordering are: * `send_time`
               */
              @com.google.api.client.util.Key
              private java.lang.String orderBy;

              /** Orders messages returned by the specified order_by clause. Syntax:
             https://cloud.google.com/apis/design/design_patterns#sorting_order Fields available for ordering
             are: * `send_time`
               */
              public java.lang.String getOrderBy() {
                return orderBy;
              }

              /**
               * Orders messages returned by the specified order_by clause. Syntax:
               * https://cloud.google.com/apis/design/design_patterns#sorting_order Fields available
               * for ordering are: * `send_time`
               */
              public List setOrderBy(java.lang.String orderBy) {
                this.orderBy = orderBy;
                return this;
              }

              /**
               * Limit on the number of messages to return in a single response. If not specified,
               * 100 is used. May not be larger than 1000.
               */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Limit on the number of messages to return in a single response. If not specified, 100 is used. May
             not be larger than 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /**
               * Limit on the number of messages to return in a single response. If not specified,
               * 100 is used. May not be larger than 1000.
               */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /** The next_page_token value returned from the previous List request, if any. */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** The next_page_token value returned from the previous List request, if any.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /** The next_page_token value returned from the previous List request, if any. */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              /**
               * Specifies the parts of the Message to return in the response. When unspecified,
               * equivalent to BASIC. Setting this to anything other than BASIC with a `page_size`
               * larger than the default can generate a large response, which impacts the
               * performance of this method.
               */
              @com.google.api.client.util.Key
              private java.lang.String view;

              /** Specifies the parts of the Message to return in the response. When unspecified, equivalent to
             BASIC. Setting this to anything other than BASIC with a `page_size` larger than the default can
             generate a large response, which impacts the performance of this method.
               */
              public java.lang.String getView() {
                return view;
              }

              /**
               * Specifies the parts of the Message to return in the response. When unspecified,
               * equivalent to BASIC. Setting this to anything other than BASIC with a `page_size`
               * larger than the default can generate a large response, which impacts the
               * performance of this method.
               */
              public List setView(java.lang.String view) {
                this.view = view;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Update the message. The contents of the message in Message.data and data extracted from the
             * contents such as Message.create_time cannot be altered. Only the Message.labels field is allowed
             * to be updated. The labels in the request are merged with the existing set of labels. Existing
             * labels with the same keys are updated.
             *
             * Create a request for the method "messages.patch".
             *
             * This request holds the parameters needed by the healthcare server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name Output only. Resource name of the Message, of the form `projects/{project_id}/locations/{location_id
             *        }/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.
             * @param content the {@link com.google.api.services.healthcare.v1.model.Message}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.healthcare.v1.model.Message content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Message> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");

              /**
               * Update the message. The contents of the message in Message.data and data extracted from the
               * contents such as Message.create_time cannot be altered. Only the Message.labels field is
               * allowed to be updated. The labels in the request are merged with the existing set of labels.
               * Existing labels with the same keys are updated.
               *
               * Create a request for the method "messages.patch".
               *
               * This request holds the parameters needed by the the healthcare server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Output only. Resource name of the Message, of the form `projects/{project_id}/locations/{location_id
             *        }/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.
               * @param content the {@link com.google.api.services.healthcare.v1.model.Message}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.healthcare.v1.model.Message content) {
                super(CloudHealthcare.this, "PATCH", REST_PATH, content, com.google.api.services.healthcare.v1.model.Message.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Output only. Resource name of the Message, of the form `projects/{project_id}/locat
               * ions/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{me
               * ssage_id}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Output only. Resource name of the Message, of the form `projects/{project_id}/locations/{location_i
             d}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Output only. Resource name of the Message, of the form `projects/{project_id}/locat
               * ions/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{me
               * ssage_id}`.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Required. The update mask applies to the resource. For the `FieldMask` definition,
               * see https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** Required. The update mask applies to the resource. For the `FieldMask` definition, see
             https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * Required. The update mask applies to the resource. For the `FieldMask` definition,
               * see https://developers.google.com/protocol-
               * buffers/docs/reference/google.protobuf#fieldmask
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Operations collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.Operations.List request = healthcare.operations().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Operations operations() {
          return new Operations();
        }

        /**
         * The "operations" collection of methods.
         */
        public class Operations {

          /**
           * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
           * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
           * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
           * methods to check whether the cancellation succeeded or whether the operation completed despite
           * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
           * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
           * `Code.CANCELLED`.
           *
           * Create a request for the method "operations.cancel".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource to be cancelled.
           * @param content the {@link com.google.api.services.healthcare.v1.model.CancelOperationRequest}
           * @return the request
           */
          public Cancel cancel(java.lang.String name, com.google.api.services.healthcare.v1.model.CancelOperationRequest content) throws java.io.IOException {
            Cancel result = new Cancel(name, content);
            initialize(result);
            return result;
          }

          public class Cancel extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Empty> {

            private static final String REST_PATH = "v1/{+name}:cancel";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");

            /**
             * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
             * cancel the operation, but success is not guaranteed. If the server doesn't support this method,
             * it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
             * methods to check whether the cancellation succeeded or whether the operation completed despite
             * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
             * operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
             * `Code.CANCELLED`.
             *
             * Create a request for the method "operations.cancel".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
             * <p> {@link
             * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource to be cancelled.
             * @param content the {@link com.google.api.services.healthcare.v1.model.CancelOperationRequest}
             * @since 1.13
             */
            protected Cancel(java.lang.String name, com.google.api.services.healthcare.v1.model.CancelOperationRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public Cancel set$Xgafv(java.lang.String $Xgafv) {
              return (Cancel) super.set$Xgafv($Xgafv);
            }

            @Override
            public Cancel setAccessToken(java.lang.String accessToken) {
              return (Cancel) super.setAccessToken(accessToken);
            }

            @Override
            public Cancel setAlt(java.lang.String alt) {
              return (Cancel) super.setAlt(alt);
            }

            @Override
            public Cancel setCallback(java.lang.String callback) {
              return (Cancel) super.setCallback(callback);
            }

            @Override
            public Cancel setFields(java.lang.String fields) {
              return (Cancel) super.setFields(fields);
            }

            @Override
            public Cancel setKey(java.lang.String key) {
              return (Cancel) super.setKey(key);
            }

            @Override
            public Cancel setOauthToken(java.lang.String oauthToken) {
              return (Cancel) super.setOauthToken(oauthToken);
            }

            @Override
            public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Cancel) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Cancel setQuotaUser(java.lang.String quotaUser) {
              return (Cancel) super.setQuotaUser(quotaUser);
            }

            @Override
            public Cancel setUploadType(java.lang.String uploadType) {
              return (Cancel) super.setUploadType(uploadType);
            }

            @Override
            public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
              return (Cancel) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource to be cancelled. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource to be cancelled.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource to be cancelled. */
            public Cancel setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Cancel set(String parameterName, Object value) {
              return (Cancel) super.set(parameterName, value);
            }
          }
          /**
           * Gets the latest state of a long-running operation. Clients can use this method to poll the
           * operation result at intervals as recommended by the API service.
           *
           * Create a request for the method "operations.get".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation resource.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.Operation> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");

            /**
             * Gets the latest state of a long-running operation. Clients can use this method to poll the
             * operation result at intervals as recommended by the API service.
             *
             * Create a request for the method "operations.get".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation resource.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.Operation.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation resource. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists operations that match the specified filter in the request. If the server doesn't support
           * this method, it returns `UNIMPLEMENTED`.
           *
           * Create a request for the method "operations.list".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param name The name of the operation's parent resource.
           * @return the request
           */
          public List list(java.lang.String name) throws java.io.IOException {
            List result = new List(name);
            initialize(result);
            return result;
          }

          public class List extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.ListOperationsResponse> {

            private static final String REST_PATH = "v1/{+name}/operations";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");

            /**
             * Lists operations that match the specified filter in the request. If the server doesn't support
             * this method, it returns `UNIMPLEMENTED`.
             *
             * Create a request for the method "operations.list".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The name of the operation's parent resource.
             * @since 1.13
             */
            protected List(java.lang.String name) {
              super(CloudHealthcare.this, "GET", REST_PATH, null, com.google.api.services.healthcare.v1.model.ListOperationsResponse.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** The name of the operation's parent resource. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The name of the operation's parent resource.
             */
            public java.lang.String getName() {
              return name;
            }

            /** The name of the operation's parent resource. */
            public List setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** The standard list filter. */
            @com.google.api.client.util.Key
            private java.lang.String filter;

            /** The standard list filter.
             */
            public java.lang.String getFilter() {
              return filter;
            }

            /** The standard list filter. */
            public List setFilter(java.lang.String filter) {
              this.filter = filter;
              return this;
            }

            /** The standard list page size. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The standard list page size.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The standard list page size. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /** The standard list page token. */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The standard list page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /** The standard list page token. */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Services collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
       *   {@code CloudHealthcare.Services.List request = healthcare.services().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Services services() {
        return new Services();
      }

      /**
       * The "services" collection of methods.
       */
      public class Services {

        /**
         * An accessor for creating requests from the Nlp collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code CloudHealthcare healthcare = new CloudHealthcare(...);}
         *   {@code CloudHealthcare.Nlp.List request = healthcare.nlp().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Nlp nlp() {
          return new Nlp();
        }

        /**
         * The "nlp" collection of methods.
         */
        public class Nlp {

          /**
           * Analyze heathcare entity in a document. Its response includes the recognized entity mentions and
           * the relationships between them. AnalyzeEntities uses context aware models to detect entities.
           *
           * Create a request for the method "nlp.analyzeEntities".
           *
           * This request holds the parameters needed by the healthcare server.  After setting any optional
           * parameters, call the {@link AnalyzeEntities#execute()} method to invoke the remote operation.
           *
           * @param nlpService The resource name of the service of the form:
           *        "projects/{project_id}/locations/{location_id}/services/nlp".
           * @param content the {@link com.google.api.services.healthcare.v1.model.AnalyzeEntitiesRequest}
           * @return the request
           */
          public AnalyzeEntities analyzeEntities(java.lang.String nlpService, com.google.api.services.healthcare.v1.model.AnalyzeEntitiesRequest content) throws java.io.IOException {
            AnalyzeEntities result = new AnalyzeEntities(nlpService, content);
            initialize(result);
            return result;
          }

          public class AnalyzeEntities extends CloudHealthcareRequest<com.google.api.services.healthcare.v1.model.AnalyzeEntitiesResponse> {

            private static final String REST_PATH = "v1/{+nlpService}:analyzeEntities";

            private final java.util.regex.Pattern NLP_SERVICE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/services/nlp$");

            /**
             * Analyze heathcare entity in a document. Its response includes the recognized entity mentions
             * and the relationships between them. AnalyzeEntities uses context aware models to detect
             * entities.
             *
             * Create a request for the method "nlp.analyzeEntities".
             *
             * This request holds the parameters needed by the the healthcare server.  After setting any
             * optional parameters, call the {@link AnalyzeEntities#execute()} method to invoke the remote
             * operation. <p> {@link AnalyzeEntities#initialize(com.google.api.client.googleapis.services.Abst
             * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
             * the constructor. </p>
             *
             * @param nlpService The resource name of the service of the form:
           *        "projects/{project_id}/locations/{location_id}/services/nlp".
             * @param content the {@link com.google.api.services.healthcare.v1.model.AnalyzeEntitiesRequest}
             * @since 1.13
             */
            protected AnalyzeEntities(java.lang.String nlpService, com.google.api.services.healthcare.v1.model.AnalyzeEntitiesRequest content) {
              super(CloudHealthcare.this, "POST", REST_PATH, content, com.google.api.services.healthcare.v1.model.AnalyzeEntitiesResponse.class);
              this.nlpService = com.google.api.client.util.Preconditions.checkNotNull(nlpService, "Required parameter nlpService must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NLP_SERVICE_PATTERN.matcher(nlpService).matches(),
                    "Parameter nlpService must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/nlp$");
              }
            }

            @Override
            public AnalyzeEntities set$Xgafv(java.lang.String $Xgafv) {
              return (AnalyzeEntities) super.set$Xgafv($Xgafv);
            }

            @Override
            public AnalyzeEntities setAccessToken(java.lang.String accessToken) {
              return (AnalyzeEntities) super.setAccessToken(accessToken);
            }

            @Override
            public AnalyzeEntities setAlt(java.lang.String alt) {
              return (AnalyzeEntities) super.setAlt(alt);
            }

            @Override
            public AnalyzeEntities setCallback(java.lang.String callback) {
              return (AnalyzeEntities) super.setCallback(callback);
            }

            @Override
            public AnalyzeEntities setFields(java.lang.String fields) {
              return (AnalyzeEntities) super.setFields(fields);
            }

            @Override
            public AnalyzeEntities setKey(java.lang.String key) {
              return (AnalyzeEntities) super.setKey(key);
            }

            @Override
            public AnalyzeEntities setOauthToken(java.lang.String oauthToken) {
              return (AnalyzeEntities) super.setOauthToken(oauthToken);
            }

            @Override
            public AnalyzeEntities setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (AnalyzeEntities) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public AnalyzeEntities setQuotaUser(java.lang.String quotaUser) {
              return (AnalyzeEntities) super.setQuotaUser(quotaUser);
            }

            @Override
            public AnalyzeEntities setUploadType(java.lang.String uploadType) {
              return (AnalyzeEntities) super.setUploadType(uploadType);
            }

            @Override
            public AnalyzeEntities setUploadProtocol(java.lang.String uploadProtocol) {
              return (AnalyzeEntities) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The resource name of the service of the form:
             * "projects/{project_id}/locations/{location_id}/services/nlp".
             */
            @com.google.api.client.util.Key
            private java.lang.String nlpService;

            /** The resource name of the service of the form:
           "projects/{project_id}/locations/{location_id}/services/nlp".
             */
            public java.lang.String getNlpService() {
              return nlpService;
            }

            /**
             * The resource name of the service of the form:
             * "projects/{project_id}/locations/{location_id}/services/nlp".
             */
            public AnalyzeEntities setNlpService(java.lang.String nlpService) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NLP_SERVICE_PATTERN.matcher(nlpService).matches(),
                    "Parameter nlpService must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/services/nlp$");
              }
              this.nlpService = nlpService;
              return this;
            }

            @Override
            public AnalyzeEntities set(String parameterName, Object value) {
              return (AnalyzeEntities) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link CloudHealthcare}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudHealthcare}. */
    @Override
    public CloudHealthcare build() {
      return new CloudHealthcare(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudHealthcareRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudHealthcareRequestInitializer(
        CloudHealthcareRequestInitializer cloudhealthcareRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudhealthcareRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
