/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudfunctions.v2alpha.model;

/**
 * Information related to: * A function's eligibility for 1st Gen to 2nd Gen migration. * Current
 * state of migration for function undergoing migration.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Functions API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UpgradeInfo extends com.google.api.client.json.GenericJson {

  /**
   * Describes the Build step of the function that builds a container to prepare for 2nd gen
   * upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private BuildConfig buildConfig;

  /**
   * Describes the Event trigger which has been setup to prepare for 2nd gen upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EventTrigger eventTrigger;

  /**
   * Describes the Cloud Run service which has been setup to prepare for 2nd gen upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServiceConfig serviceConfig;

  /**
   * UpgradeState of the function
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String upgradeState;

  /**
   * Describes the Build step of the function that builds a container to prepare for 2nd gen
   * upgrade.
   * @return value or {@code null} for none
   */
  public BuildConfig getBuildConfig() {
    return buildConfig;
  }

  /**
   * Describes the Build step of the function that builds a container to prepare for 2nd gen
   * upgrade.
   * @param buildConfig buildConfig or {@code null} for none
   */
  public UpgradeInfo setBuildConfig(BuildConfig buildConfig) {
    this.buildConfig = buildConfig;
    return this;
  }

  /**
   * Describes the Event trigger which has been setup to prepare for 2nd gen upgrade.
   * @return value or {@code null} for none
   */
  public EventTrigger getEventTrigger() {
    return eventTrigger;
  }

  /**
   * Describes the Event trigger which has been setup to prepare for 2nd gen upgrade.
   * @param eventTrigger eventTrigger or {@code null} for none
   */
  public UpgradeInfo setEventTrigger(EventTrigger eventTrigger) {
    this.eventTrigger = eventTrigger;
    return this;
  }

  /**
   * Describes the Cloud Run service which has been setup to prepare for 2nd gen upgrade.
   * @return value or {@code null} for none
   */
  public ServiceConfig getServiceConfig() {
    return serviceConfig;
  }

  /**
   * Describes the Cloud Run service which has been setup to prepare for 2nd gen upgrade.
   * @param serviceConfig serviceConfig or {@code null} for none
   */
  public UpgradeInfo setServiceConfig(ServiceConfig serviceConfig) {
    this.serviceConfig = serviceConfig;
    return this;
  }

  /**
   * UpgradeState of the function
   * @return value or {@code null} for none
   */
  public java.lang.String getUpgradeState() {
    return upgradeState;
  }

  /**
   * UpgradeState of the function
   * @param upgradeState upgradeState or {@code null} for none
   */
  public UpgradeInfo setUpgradeState(java.lang.String upgradeState) {
    this.upgradeState = upgradeState;
    return this;
  }

  @Override
  public UpgradeInfo set(String fieldName, Object value) {
    return (UpgradeInfo) super.set(fieldName, value);
  }

  @Override
  public UpgradeInfo clone() {
    return (UpgradeInfo) super.clone();
  }

}
