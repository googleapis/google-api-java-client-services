/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The image license info for licensable images(go/Licensable-Images-PRD) This proto in design doc:
 * go/licensable-images-edd
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ImageSearchImageLicenseInfo extends com.google.api.client.json.GenericJson {

  /**
   * Records web page url about how to use the licensed image.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String acquireLicensePage;

  /**
   * Provides copyright info.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String copyrightNotice;

  /**
   * Source type for copyright_notice field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String copyrightNoticeSourceType;

  /**
   * creator, authors.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> creator;

  /**
   * Source type for creator field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String creatorSourceType;

  /**
   * Text for crediting persons or organizations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String creditText;

  /**
   * Source type for credit_text field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String creditTextSourceType;

  /**
   * Whether this license url is in retired license list, which is from:
   * https://creativecommons.org/retiredlicenses/
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isRetiredCcUrl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String licenseType;

  /**
   * Records license URL.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String licenseUrl;

  /**
   * A bitwise-OR of SafeSearch filtering flags. If present, the flags will be a bitwise-AND between
   * this value and all the classifier_porn::query::Vertical enums. If the value is -1, it indicates
   * there is some error with SafeSearch classifier. The default value 0 means no filtering flags
   * are set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer safesearchFlags;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceType;

  /**
   * Records web page url about how to use the licensed image.
   * @return value or {@code null} for none
   */
  public java.lang.String getAcquireLicensePage() {
    return acquireLicensePage;
  }

  /**
   * Records web page url about how to use the licensed image.
   * @param acquireLicensePage acquireLicensePage or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setAcquireLicensePage(java.lang.String acquireLicensePage) {
    this.acquireLicensePage = acquireLicensePage;
    return this;
  }

  /**
   * Provides copyright info.
   * @return value or {@code null} for none
   */
  public java.lang.String getCopyrightNotice() {
    return copyrightNotice;
  }

  /**
   * Provides copyright info.
   * @param copyrightNotice copyrightNotice or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setCopyrightNotice(java.lang.String copyrightNotice) {
    this.copyrightNotice = copyrightNotice;
    return this;
  }

  /**
   * Source type for copyright_notice field.
   * @return value or {@code null} for none
   */
  public java.lang.String getCopyrightNoticeSourceType() {
    return copyrightNoticeSourceType;
  }

  /**
   * Source type for copyright_notice field.
   * @param copyrightNoticeSourceType copyrightNoticeSourceType or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setCopyrightNoticeSourceType(java.lang.String copyrightNoticeSourceType) {
    this.copyrightNoticeSourceType = copyrightNoticeSourceType;
    return this;
  }

  /**
   * creator, authors.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCreator() {
    return creator;
  }

  /**
   * creator, authors.
   * @param creator creator or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setCreator(java.util.List<java.lang.String> creator) {
    this.creator = creator;
    return this;
  }

  /**
   * Source type for creator field.
   * @return value or {@code null} for none
   */
  public java.lang.String getCreatorSourceType() {
    return creatorSourceType;
  }

  /**
   * Source type for creator field.
   * @param creatorSourceType creatorSourceType or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setCreatorSourceType(java.lang.String creatorSourceType) {
    this.creatorSourceType = creatorSourceType;
    return this;
  }

  /**
   * Text for crediting persons or organizations.
   * @return value or {@code null} for none
   */
  public java.lang.String getCreditText() {
    return creditText;
  }

  /**
   * Text for crediting persons or organizations.
   * @param creditText creditText or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setCreditText(java.lang.String creditText) {
    this.creditText = creditText;
    return this;
  }

  /**
   * Source type for credit_text field.
   * @return value or {@code null} for none
   */
  public java.lang.String getCreditTextSourceType() {
    return creditTextSourceType;
  }

  /**
   * Source type for credit_text field.
   * @param creditTextSourceType creditTextSourceType or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setCreditTextSourceType(java.lang.String creditTextSourceType) {
    this.creditTextSourceType = creditTextSourceType;
    return this;
  }

  /**
   * Whether this license url is in retired license list, which is from:
   * https://creativecommons.org/retiredlicenses/
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsRetiredCcUrl() {
    return isRetiredCcUrl;
  }

  /**
   * Whether this license url is in retired license list, which is from:
   * https://creativecommons.org/retiredlicenses/
   * @param isRetiredCcUrl isRetiredCcUrl or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setIsRetiredCcUrl(java.lang.Boolean isRetiredCcUrl) {
    this.isRetiredCcUrl = isRetiredCcUrl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getLicenseType() {
    return licenseType;
  }

  /**
   * @param licenseType licenseType or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setLicenseType(java.lang.String licenseType) {
    this.licenseType = licenseType;
    return this;
  }

  /**
   * Records license URL.
   * @return value or {@code null} for none
   */
  public java.lang.String getLicenseUrl() {
    return licenseUrl;
  }

  /**
   * Records license URL.
   * @param licenseUrl licenseUrl or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setLicenseUrl(java.lang.String licenseUrl) {
    this.licenseUrl = licenseUrl;
    return this;
  }

  /**
   * A bitwise-OR of SafeSearch filtering flags. If present, the flags will be a bitwise-AND between
   * this value and all the classifier_porn::query::Vertical enums. If the value is -1, it indicates
   * there is some error with SafeSearch classifier. The default value 0 means no filtering flags
   * are set.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getSafesearchFlags() {
    return safesearchFlags;
  }

  /**
   * A bitwise-OR of SafeSearch filtering flags. If present, the flags will be a bitwise-AND between
   * this value and all the classifier_porn::query::Vertical enums. If the value is -1, it indicates
   * there is some error with SafeSearch classifier. The default value 0 means no filtering flags
   * are set.
   * @param safesearchFlags safesearchFlags or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setSafesearchFlags(java.lang.Integer safesearchFlags) {
    this.safesearchFlags = safesearchFlags;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceType() {
    return sourceType;
  }

  /**
   * @param sourceType sourceType or {@code null} for none
   */
  public ImageSearchImageLicenseInfo setSourceType(java.lang.String sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  @Override
  public ImageSearchImageLicenseInfo set(String fieldName, Object value) {
    return (ImageSearchImageLicenseInfo) super.set(fieldName, value);
  }

  @Override
  public ImageSearchImageLicenseInfo clone() {
    return (ImageSearchImageLicenseInfo) super.clone();
  }

}
