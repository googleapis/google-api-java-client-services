/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.certificatemanager.v1.model;

/**
 * Defines a trust config.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Certificate Manager API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TrustConfig extends com.google.api.client.json.GenericJson {

  /**
   * Output only. The creation timestamp of a TrustConfig.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * One or more paragraphs of text description of a TrustConfig.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Set of labels associated with a TrustConfig.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * A user-defined name of the trust config. TrustConfig names must be unique globally and match
   * pattern `projects/locations/trustConfigs`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Set of trust stores to perform validation against. This field is supported when TrustConfig is
   * configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only
   * one TrustStore specified is currently allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<TrustStore> trustStores;

  /**
   * Output only. The last update timestamp of a TrustConfig.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The creation timestamp of a TrustConfig.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The creation timestamp of a TrustConfig.
   * @param createTime createTime or {@code null} for none
   */
  public TrustConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * One or more paragraphs of text description of a TrustConfig.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * One or more paragraphs of text description of a TrustConfig.
   * @param description description or {@code null} for none
   */
  public TrustConfig setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * This checksum is computed by the server based on the value of other fields, and may be sent on
   * update and delete requests to ensure the client has an up-to-date value before proceeding.
   * @param etag etag or {@code null} for none
   */
  public TrustConfig setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Set of labels associated with a TrustConfig.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Set of labels associated with a TrustConfig.
   * @param labels labels or {@code null} for none
   */
  public TrustConfig setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * A user-defined name of the trust config. TrustConfig names must be unique globally and match
   * pattern `projects/locations/trustConfigs`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * A user-defined name of the trust config. TrustConfig names must be unique globally and match
   * pattern `projects/locations/trustConfigs`.
   * @param name name or {@code null} for none
   */
  public TrustConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Set of trust stores to perform validation against. This field is supported when TrustConfig is
   * configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only
   * one TrustStore specified is currently allowed.
   * @return value or {@code null} for none
   */
  public java.util.List<TrustStore> getTrustStores() {
    return trustStores;
  }

  /**
   * Set of trust stores to perform validation against. This field is supported when TrustConfig is
   * configured with Load Balancers, currently not supported for SPIFFE certificate validation. Only
   * one TrustStore specified is currently allowed.
   * @param trustStores trustStores or {@code null} for none
   */
  public TrustConfig setTrustStores(java.util.List<TrustStore> trustStores) {
    this.trustStores = trustStores;
    return this;
  }

  /**
   * Output only. The last update timestamp of a TrustConfig.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The last update timestamp of a TrustConfig.
   * @param updateTime updateTime or {@code null} for none
   */
  public TrustConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public TrustConfig set(String fieldName, Object value) {
    return (TrustConfig) super.set(fieldName, value);
  }

  @Override
  public TrustConfig clone() {
    return (TrustConfig) super.clone();
  }

}
