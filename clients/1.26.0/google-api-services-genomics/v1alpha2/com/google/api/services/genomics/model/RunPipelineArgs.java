/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.model;

/**
 * The pipeline run arguments.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Genomics API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RunPipelineArgs extends com.google.api.client.json.GenericJson {

  /**
   * This field is deprecated. Use `labels` instead. Client-specified pipeline operation identifier.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientId;

  /**
   * Pipeline input arguments; keys are defined in the pipeline documentation. All input parameters
   * that do not have default values  must be specified. If parameters with defaults are specified
   * here, the defaults will be overridden.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> inputs;

  /**
   * How long to keep the VM up after a failure (for example docker command failed, copying input or
   * output files failed, etc). While the VM is up, one can ssh into the VM to debug. Default is 0;
   * maximum allowed value is 1 day.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String keepVmAliveOnFailureDuration;

  /**
   * Labels to apply to this pipeline run. Labels will also be applied to compute resources (VM,
   * disks) created by this pipeline run. When listing operations, operations can filtered by
   * labels. Label keys may not be empty; label values may be empty. Non-empty labels must be 1-63
   * characters long, and comply with [RFC1035] (https://www.ietf.org/rfc/rfc1035.txt).
   * Specifically, the name must be 1-63 characters long and match the regular expression
   * `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and
   * all following characters must be a dash, lowercase letter, or digit, except the last character,
   * which cannot be a dash.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Required. Logging options. Used by the service to communicate results to the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LoggingOptions logging;

  /**
   * Pipeline output arguments; keys are defined in the pipeline documentation.  All output
   * parameters of without default values must be specified.  If parameters with defaults are
   * specified here, the defaults will be overridden.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> outputs;

  /**
   * Required. The project in which to run the pipeline. The caller must have WRITER access to all
   * Google Cloud services and resources (e.g. Google Compute Engine) will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectId;

  /**
   * Specifies resource requirements/overrides for the pipeline run.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PipelineResources resources;

  /**
   * The Google Cloud Service Account that will be used to access data and services. By default, the
   * compute service account associated with `projectId` is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServiceAccount serviceAccount;

  /**
   * This field is deprecated. Use `labels` instead. Client-specified pipeline operation identifier.
   * @return value or {@code null} for none
   */
  public java.lang.String getClientId() {
    return clientId;
  }

  /**
   * This field is deprecated. Use `labels` instead. Client-specified pipeline operation identifier.
   * @param clientId clientId or {@code null} for none
   */
  public RunPipelineArgs setClientId(java.lang.String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Pipeline input arguments; keys are defined in the pipeline documentation. All input parameters
   * that do not have default values  must be specified. If parameters with defaults are specified
   * here, the defaults will be overridden.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getInputs() {
    return inputs;
  }

  /**
   * Pipeline input arguments; keys are defined in the pipeline documentation. All input parameters
   * that do not have default values  must be specified. If parameters with defaults are specified
   * here, the defaults will be overridden.
   * @param inputs inputs or {@code null} for none
   */
  public RunPipelineArgs setInputs(java.util.Map<String, java.lang.String> inputs) {
    this.inputs = inputs;
    return this;
  }

  /**
   * How long to keep the VM up after a failure (for example docker command failed, copying input or
   * output files failed, etc). While the VM is up, one can ssh into the VM to debug. Default is 0;
   * maximum allowed value is 1 day.
   * @return value or {@code null} for none
   */
  public String getKeepVmAliveOnFailureDuration() {
    return keepVmAliveOnFailureDuration;
  }

  /**
   * How long to keep the VM up after a failure (for example docker command failed, copying input or
   * output files failed, etc). While the VM is up, one can ssh into the VM to debug. Default is 0;
   * maximum allowed value is 1 day.
   * @param keepVmAliveOnFailureDuration keepVmAliveOnFailureDuration or {@code null} for none
   */
  public RunPipelineArgs setKeepVmAliveOnFailureDuration(String keepVmAliveOnFailureDuration) {
    this.keepVmAliveOnFailureDuration = keepVmAliveOnFailureDuration;
    return this;
  }

  /**
   * Labels to apply to this pipeline run. Labels will also be applied to compute resources (VM,
   * disks) created by this pipeline run. When listing operations, operations can filtered by
   * labels. Label keys may not be empty; label values may be empty. Non-empty labels must be 1-63
   * characters long, and comply with [RFC1035] (https://www.ietf.org/rfc/rfc1035.txt).
   * Specifically, the name must be 1-63 characters long and match the regular expression
   * `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and
   * all following characters must be a dash, lowercase letter, or digit, except the last character,
   * which cannot be a dash.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels to apply to this pipeline run. Labels will also be applied to compute resources (VM,
   * disks) created by this pipeline run. When listing operations, operations can filtered by
   * labels. Label keys may not be empty; label values may be empty. Non-empty labels must be 1-63
   * characters long, and comply with [RFC1035] (https://www.ietf.org/rfc/rfc1035.txt).
   * Specifically, the name must be 1-63 characters long and match the regular expression
   * `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and
   * all following characters must be a dash, lowercase letter, or digit, except the last character,
   * which cannot be a dash.
   * @param labels labels or {@code null} for none
   */
  public RunPipelineArgs setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Required. Logging options. Used by the service to communicate results to the user.
   * @return value or {@code null} for none
   */
  public LoggingOptions getLogging() {
    return logging;
  }

  /**
   * Required. Logging options. Used by the service to communicate results to the user.
   * @param logging logging or {@code null} for none
   */
  public RunPipelineArgs setLogging(LoggingOptions logging) {
    this.logging = logging;
    return this;
  }

  /**
   * Pipeline output arguments; keys are defined in the pipeline documentation.  All output
   * parameters of without default values must be specified.  If parameters with defaults are
   * specified here, the defaults will be overridden.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getOutputs() {
    return outputs;
  }

  /**
   * Pipeline output arguments; keys are defined in the pipeline documentation.  All output
   * parameters of without default values must be specified.  If parameters with defaults are
   * specified here, the defaults will be overridden.
   * @param outputs outputs or {@code null} for none
   */
  public RunPipelineArgs setOutputs(java.util.Map<String, java.lang.String> outputs) {
    this.outputs = outputs;
    return this;
  }

  /**
   * Required. The project in which to run the pipeline. The caller must have WRITER access to all
   * Google Cloud services and resources (e.g. Google Compute Engine) will be used.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectId() {
    return projectId;
  }

  /**
   * Required. The project in which to run the pipeline. The caller must have WRITER access to all
   * Google Cloud services and resources (e.g. Google Compute Engine) will be used.
   * @param projectId projectId or {@code null} for none
   */
  public RunPipelineArgs setProjectId(java.lang.String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Specifies resource requirements/overrides for the pipeline run.
   * @return value or {@code null} for none
   */
  public PipelineResources getResources() {
    return resources;
  }

  /**
   * Specifies resource requirements/overrides for the pipeline run.
   * @param resources resources or {@code null} for none
   */
  public RunPipelineArgs setResources(PipelineResources resources) {
    this.resources = resources;
    return this;
  }

  /**
   * The Google Cloud Service Account that will be used to access data and services. By default, the
   * compute service account associated with `projectId` is used.
   * @return value or {@code null} for none
   */
  public ServiceAccount getServiceAccount() {
    return serviceAccount;
  }

  /**
   * The Google Cloud Service Account that will be used to access data and services. By default, the
   * compute service account associated with `projectId` is used.
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public RunPipelineArgs setServiceAccount(ServiceAccount serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  @Override
  public RunPipelineArgs set(String fieldName, Object value) {
    return (RunPipelineArgs) super.set(fieldName, value);
  }

  @Override
  public RunPipelineArgs clone() {
    return (RunPipelineArgs) super.clone();
  }

}
