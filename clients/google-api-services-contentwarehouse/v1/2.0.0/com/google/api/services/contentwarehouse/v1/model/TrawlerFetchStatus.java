/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for TrawlerFetchStatus.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TrawlerFetchStatus extends com.google.api.client.json.GenericJson {

  /**
   * The Reason field gives further clarifying details about why or how the fetch had the given
   * outcome. For instance, if State is URL_ERROR - was it a 404/NotFound or a DNS error? The Reason
   * field is present iff State != URL_CRAWLED. For a given crawl status of URL_FOO, the Reason
   * value will be one of the various FetchFooReason enum values from
   * crawler/trawler/trawler_enums.proto
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Reason")
  private java.lang.Integer reason;

  /**
   * The State field describes the basic outcome of a fetch (URL_CRAWLED, URL_ROBOTED, URL_ERROR,
   * etc). The value is one of the UrlStatusType enum values from
   * crawler/trawler/trawler_enums.proto Note, there are several combinations of this Status/Reason
   * tuple that could mean that your content is crawled or can be bucketed in a particular type of
   * error. So instead of comparing the enumeration values manually, we suggest to use the predicate
   * functions such as IsContentCrawled() provided in crawler/trawler/public/basictypes.h (see
   * details there).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("State")
  private java.lang.String state;

  /**
   * The Reason field gives further clarifying details about why or how the fetch had the given
   * outcome. For instance, if State is URL_ERROR - was it a 404/NotFound or a DNS error? The Reason
   * field is present iff State != URL_CRAWLED. For a given crawl status of URL_FOO, the Reason
   * value will be one of the various FetchFooReason enum values from
   * crawler/trawler/trawler_enums.proto
   * @return value or {@code null} for none
   */
  public java.lang.Integer getReason() {
    return reason;
  }

  /**
   * The Reason field gives further clarifying details about why or how the fetch had the given
   * outcome. For instance, if State is URL_ERROR - was it a 404/NotFound or a DNS error? The Reason
   * field is present iff State != URL_CRAWLED. For a given crawl status of URL_FOO, the Reason
   * value will be one of the various FetchFooReason enum values from
   * crawler/trawler/trawler_enums.proto
   * @param reason reason or {@code null} for none
   */
  public TrawlerFetchStatus setReason(java.lang.Integer reason) {
    this.reason = reason;
    return this;
  }

  /**
   * The State field describes the basic outcome of a fetch (URL_CRAWLED, URL_ROBOTED, URL_ERROR,
   * etc). The value is one of the UrlStatusType enum values from
   * crawler/trawler/trawler_enums.proto Note, there are several combinations of this Status/Reason
   * tuple that could mean that your content is crawled or can be bucketed in a particular type of
   * error. So instead of comparing the enumeration values manually, we suggest to use the predicate
   * functions such as IsContentCrawled() provided in crawler/trawler/public/basictypes.h (see
   * details there).
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * The State field describes the basic outcome of a fetch (URL_CRAWLED, URL_ROBOTED, URL_ERROR,
   * etc). The value is one of the UrlStatusType enum values from
   * crawler/trawler/trawler_enums.proto Note, there are several combinations of this Status/Reason
   * tuple that could mean that your content is crawled or can be bucketed in a particular type of
   * error. So instead of comparing the enumeration values manually, we suggest to use the predicate
   * functions such as IsContentCrawled() provided in crawler/trawler/public/basictypes.h (see
   * details there).
   * @param state state or {@code null} for none
   */
  public TrawlerFetchStatus setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public TrawlerFetchStatus set(String fieldName, Object value) {
    return (TrawlerFetchStatus) super.set(fieldName, value);
  }

  @Override
  public TrawlerFetchStatus clone() {
    return (TrawlerFetchStatus) super.clone();
  }

}
