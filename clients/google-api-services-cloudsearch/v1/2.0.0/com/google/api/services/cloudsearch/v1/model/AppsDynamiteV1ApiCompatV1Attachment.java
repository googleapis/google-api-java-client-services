/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Richly formatted attachments. Documentation: - https://api.slack.com/docs/message-attachments
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsDynamiteV1ApiCompatV1Attachment extends com.google.api.client.json.GenericJson {

  /**
   * Array of actions (currently only buttons).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamiteV1ApiCompatV1Action> actions;

  static {
    // hack to force ProGuard to consider AppsDynamiteV1ApiCompatV1Action used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AppsDynamiteV1ApiCompatV1Action.class);
  }

  /**
   * Undocumented - used in interactive button examples. The only valid value appears to be
   * "default".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("attachment_type")
  private java.lang.String attachmentType;

  /**
   * Avatar URL for the user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("author_icon")
  private java.lang.String authorIcon;

  /**
   * URL that the user name should link to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("author_link")
  private java.lang.String authorLink;

  /**
   * User name to display as the author of the message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("author_name")
  private java.lang.String authorName;

  /**
   * Unique identifier for the collection of buttons within this attachment. Will be sent back to
   * the action handler URL when a button is clicked.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("callback_id")
  private java.lang.String callbackId;

  /**
   * A color "bar" to display to the left of the attachment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String color;

  /**
   * Fallback plain-text string for clients that don't support attachments.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fallback;

  /**
   * Columns of text inside the attachment body.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AppsDynamiteV1ApiCompatV1Field> fields;

  /**
   * A string displayed at the bottom of the attachment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String footer;

  /**
   * Avatar URL displayed to the left of the footer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("footer_icon")
  private java.lang.String footerIcon;

  /**
   * URL of an image to display in an image chip.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("image_url")
  private java.lang.String imageUrl;

  /**
   * List of fields to apply formatting to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("mrkdwn_in")
  private java.util.List<java.lang.String> mrkdwnIn;

  /**
   * A string to show above the attachment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pretext;

  /**
   * Main text.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String text;

  /**
   * URL of a thumbnail image to display to the right of the attachment body.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("thumb_url")
  private java.lang.String thumbUrl;

  /**
   * Title string of this attachment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * URL that the title string should link to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("title_link")
  private java.lang.String titleLink;

  /**
   * UNIX timestamp of the attachment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer ts;

  /**
   * Array of actions (currently only buttons).
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamiteV1ApiCompatV1Action> getActions() {
    return actions;
  }

  /**
   * Array of actions (currently only buttons).
   * @param actions actions or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setActions(java.util.List<AppsDynamiteV1ApiCompatV1Action> actions) {
    this.actions = actions;
    return this;
  }

  /**
   * Undocumented - used in interactive button examples. The only valid value appears to be
   * "default".
   * @return value or {@code null} for none
   */
  public java.lang.String getAttachmentType() {
    return attachmentType;
  }

  /**
   * Undocumented - used in interactive button examples. The only valid value appears to be
   * "default".
   * @param attachmentType attachmentType or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setAttachmentType(java.lang.String attachmentType) {
    this.attachmentType = attachmentType;
    return this;
  }

  /**
   * Avatar URL for the user.
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthorIcon() {
    return authorIcon;
  }

  /**
   * Avatar URL for the user.
   * @param authorIcon authorIcon or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setAuthorIcon(java.lang.String authorIcon) {
    this.authorIcon = authorIcon;
    return this;
  }

  /**
   * URL that the user name should link to.
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthorLink() {
    return authorLink;
  }

  /**
   * URL that the user name should link to.
   * @param authorLink authorLink or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setAuthorLink(java.lang.String authorLink) {
    this.authorLink = authorLink;
    return this;
  }

  /**
   * User name to display as the author of the message.
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthorName() {
    return authorName;
  }

  /**
   * User name to display as the author of the message.
   * @param authorName authorName or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setAuthorName(java.lang.String authorName) {
    this.authorName = authorName;
    return this;
  }

  /**
   * Unique identifier for the collection of buttons within this attachment. Will be sent back to
   * the action handler URL when a button is clicked.
   * @return value or {@code null} for none
   */
  public java.lang.String getCallbackId() {
    return callbackId;
  }

  /**
   * Unique identifier for the collection of buttons within this attachment. Will be sent back to
   * the action handler URL when a button is clicked.
   * @param callbackId callbackId or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setCallbackId(java.lang.String callbackId) {
    this.callbackId = callbackId;
    return this;
  }

  /**
   * A color "bar" to display to the left of the attachment.
   * @return value or {@code null} for none
   */
  public java.lang.String getColor() {
    return color;
  }

  /**
   * A color "bar" to display to the left of the attachment.
   * @param color color or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setColor(java.lang.String color) {
    this.color = color;
    return this;
  }

  /**
   * Fallback plain-text string for clients that don't support attachments.
   * @return value or {@code null} for none
   */
  public java.lang.String getFallback() {
    return fallback;
  }

  /**
   * Fallback plain-text string for clients that don't support attachments.
   * @param fallback fallback or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setFallback(java.lang.String fallback) {
    this.fallback = fallback;
    return this;
  }

  /**
   * Columns of text inside the attachment body.
   * @return value or {@code null} for none
   */
  public java.util.List<AppsDynamiteV1ApiCompatV1Field> getFields() {
    return fields;
  }

  /**
   * Columns of text inside the attachment body.
   * @param fields fields or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setFields(java.util.List<AppsDynamiteV1ApiCompatV1Field> fields) {
    this.fields = fields;
    return this;
  }

  /**
   * A string displayed at the bottom of the attachment.
   * @return value or {@code null} for none
   */
  public java.lang.String getFooter() {
    return footer;
  }

  /**
   * A string displayed at the bottom of the attachment.
   * @param footer footer or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setFooter(java.lang.String footer) {
    this.footer = footer;
    return this;
  }

  /**
   * Avatar URL displayed to the left of the footer.
   * @return value or {@code null} for none
   */
  public java.lang.String getFooterIcon() {
    return footerIcon;
  }

  /**
   * Avatar URL displayed to the left of the footer.
   * @param footerIcon footerIcon or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setFooterIcon(java.lang.String footerIcon) {
    this.footerIcon = footerIcon;
    return this;
  }

  /**
   * URL of an image to display in an image chip.
   * @return value or {@code null} for none
   */
  public java.lang.String getImageUrl() {
    return imageUrl;
  }

  /**
   * URL of an image to display in an image chip.
   * @param imageUrl imageUrl or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setImageUrl(java.lang.String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * List of fields to apply formatting to.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getMrkdwnIn() {
    return mrkdwnIn;
  }

  /**
   * List of fields to apply formatting to.
   * @param mrkdwnIn mrkdwnIn or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setMrkdwnIn(java.util.List<java.lang.String> mrkdwnIn) {
    this.mrkdwnIn = mrkdwnIn;
    return this;
  }

  /**
   * A string to show above the attachment.
   * @return value or {@code null} for none
   */
  public java.lang.String getPretext() {
    return pretext;
  }

  /**
   * A string to show above the attachment.
   * @param pretext pretext or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setPretext(java.lang.String pretext) {
    this.pretext = pretext;
    return this;
  }

  /**
   * Main text.
   * @return value or {@code null} for none
   */
  public java.lang.String getText() {
    return text;
  }

  /**
   * Main text.
   * @param text text or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setText(java.lang.String text) {
    this.text = text;
    return this;
  }

  /**
   * URL of a thumbnail image to display to the right of the attachment body.
   * @return value or {@code null} for none
   */
  public java.lang.String getThumbUrl() {
    return thumbUrl;
  }

  /**
   * URL of a thumbnail image to display to the right of the attachment body.
   * @param thumbUrl thumbUrl or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setThumbUrl(java.lang.String thumbUrl) {
    this.thumbUrl = thumbUrl;
    return this;
  }

  /**
   * Title string of this attachment.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Title string of this attachment.
   * @param title title or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * URL that the title string should link to.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitleLink() {
    return titleLink;
  }

  /**
   * URL that the title string should link to.
   * @param titleLink titleLink or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setTitleLink(java.lang.String titleLink) {
    this.titleLink = titleLink;
    return this;
  }

  /**
   * UNIX timestamp of the attachment.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getTs() {
    return ts;
  }

  /**
   * UNIX timestamp of the attachment.
   * @param ts ts or {@code null} for none
   */
  public AppsDynamiteV1ApiCompatV1Attachment setTs(java.lang.Integer ts) {
    this.ts = ts;
    return this;
  }

  @Override
  public AppsDynamiteV1ApiCompatV1Attachment set(String fieldName, Object value) {
    return (AppsDynamiteV1ApiCompatV1Attachment) super.set(fieldName, value);
  }

  @Override
  public AppsDynamiteV1ApiCompatV1Attachment clone() {
    return (AppsDynamiteV1ApiCompatV1Attachment) super.clone();
  }

}
