/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * Primary key for User resource.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UserId extends com.google.api.client.json.GenericJson {

  /**
   * Opaque, server-assigned ID of the User.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Optional. Identifier of the App involved (directly or on behalf of a human creator) in creating
   * this message. This is not set if the user posted a message directly, but is used in the case
   * of, for example, a message being generated by a 1P integration based on a user action (creating
   * an event, creating a task etc). This should only be used on the BE. For clients, please use the
   * field in the FE message proto instead
   * (google3/apps/dynamite/v1/frontend/api/message.proto?q=origin_app_id).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppId originAppId;

  /**
   * Clients do not need to send UserType to Backend, but Backend will always send this field to
   * clients per the following rule: 1. For HUMAN Ids, the field is empty but by default .getType()
   * will return HUMAN. 2. For BOT Ids, the field is ALWAYS set to BOT.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Opaque, server-assigned ID of the User.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Opaque, server-assigned ID of the User.
   * @param id id or {@code null} for none
   */
  public UserId setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Optional. Identifier of the App involved (directly or on behalf of a human creator) in creating
   * this message. This is not set if the user posted a message directly, but is used in the case
   * of, for example, a message being generated by a 1P integration based on a user action (creating
   * an event, creating a task etc). This should only be used on the BE. For clients, please use the
   * field in the FE message proto instead
   * (google3/apps/dynamite/v1/frontend/api/message.proto?q=origin_app_id).
   * @return value or {@code null} for none
   */
  public AppId getOriginAppId() {
    return originAppId;
  }

  /**
   * Optional. Identifier of the App involved (directly or on behalf of a human creator) in creating
   * this message. This is not set if the user posted a message directly, but is used in the case
   * of, for example, a message being generated by a 1P integration based on a user action (creating
   * an event, creating a task etc). This should only be used on the BE. For clients, please use the
   * field in the FE message proto instead
   * (google3/apps/dynamite/v1/frontend/api/message.proto?q=origin_app_id).
   * @param originAppId originAppId or {@code null} for none
   */
  public UserId setOriginAppId(AppId originAppId) {
    this.originAppId = originAppId;
    return this;
  }

  /**
   * Clients do not need to send UserType to Backend, but Backend will always send this field to
   * clients per the following rule: 1. For HUMAN Ids, the field is empty but by default .getType()
   * will return HUMAN. 2. For BOT Ids, the field is ALWAYS set to BOT.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Clients do not need to send UserType to Backend, but Backend will always send this field to
   * clients per the following rule: 1. For HUMAN Ids, the field is empty but by default .getType()
   * will return HUMAN. 2. For BOT Ids, the field is ALWAYS set to BOT.
   * @param type type or {@code null} for none
   */
  public UserId setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public UserId set(String fieldName, Object value) {
    return (UserId) super.set(fieldName, value);
  }

  @Override
  public UserId clone() {
    return (UserId) super.clone();
  }

}
