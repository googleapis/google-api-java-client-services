/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.datacatalog.v1beta1;

/**
 * Service definition for DataCatalog (v1beta1).
 *
 * <p>
 * A fully managed and highly scalable data discovery and metadata management service. 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/data-catalog/docs/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link DataCatalogRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class DataCatalog extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Google Cloud Data Catalog API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://datacatalog.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://datacatalog.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public DataCatalog(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  DataCatalog(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Catalog collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DataCatalog datacatalog = new DataCatalog(...);}
   *   {@code DataCatalog.Catalog.List request = datacatalog.catalog().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Catalog catalog() {
    return new Catalog();
  }

  /**
   * The "catalog" collection of methods.
   */
  public class Catalog {

    /**
     * Searches Data Catalog for multiple resources like entries, tags that match a query. This is a
     * custom method (https://cloud.google.com/apis/design/custom_methods) and does not return the
     * complete resource, only the resource identifier and high level fields. Clients can subsequentally
     * call `Get` methods. Note that Data Catalog search queries do not guarantee full recall. Query
     * results that match your query may not be returned, even in subsequent result pages. Also note
     * that results returned (and not returned) can vary across repeated search queries. See [Data
     * Catalog Search Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference) for
     * more information.
     *
     * Create a request for the method "catalog.search".
     *
     * This request holds the parameters needed by the datacatalog server.  After setting any optional
     * parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1SearchCatalogRequest}
     * @return the request
     */
    public Search search(com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1SearchCatalogRequest content) throws java.io.IOException {
      Search result = new Search(content);
      initialize(result);
      return result;
    }

    public class Search extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1SearchCatalogResponse> {

      private static final String REST_PATH = "v1beta1/catalog:search";

      /**
       * Searches Data Catalog for multiple resources like entries, tags that match a query. This is a
       * custom method (https://cloud.google.com/apis/design/custom_methods) and does not return the
       * complete resource, only the resource identifier and high level fields. Clients can
       * subsequentally call `Get` methods. Note that Data Catalog search queries do not guarantee full
       * recall. Query results that match your query may not be returned, even in subsequent result
       * pages. Also note that results returned (and not returned) can vary across repeated search
       * queries. See [Data Catalog Search Syntax](https://cloud.google.com/data-catalog/docs/how-to
       * /search-reference) for more information.
       *
       * Create a request for the method "catalog.search".
       *
       * This request holds the parameters needed by the the datacatalog server.  After setting any
       * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
       * <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1SearchCatalogRequest}
       * @since 1.13
       */
      protected Search(com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1SearchCatalogRequest content) {
        super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1SearchCatalogResponse.class);
      }

      @Override
      public Search set$Xgafv(java.lang.String $Xgafv) {
        return (Search) super.set$Xgafv($Xgafv);
      }

      @Override
      public Search setAccessToken(java.lang.String accessToken) {
        return (Search) super.setAccessToken(accessToken);
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setCallback(java.lang.String callback) {
        return (Search) super.setCallback(callback);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUploadType(java.lang.String uploadType) {
        return (Search) super.setUploadType(uploadType);
      }

      @Override
      public Search setUploadProtocol(java.lang.String uploadProtocol) {
        return (Search) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Entries collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DataCatalog datacatalog = new DataCatalog(...);}
   *   {@code DataCatalog.Entries.List request = datacatalog.entries().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Entries entries() {
    return new Entries();
  }

  /**
   * The "entries" collection of methods.
   */
  public class Entries {

    /**
     * Get an entry by target resource name. This method allows clients to use the resource name from
     * the source Google Cloud Platform service to get the Data Catalog Entry.
     *
     * Create a request for the method "entries.lookup".
     *
     * This request holds the parameters needed by the datacatalog server.  After setting any optional
     * parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public Lookup lookup() throws java.io.IOException {
      Lookup result = new Lookup();
      initialize(result);
      return result;
    }

    public class Lookup extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry> {

      private static final String REST_PATH = "v1beta1/entries:lookup";

      /**
       * Get an entry by target resource name. This method allows clients to use the resource name from
       * the source Google Cloud Platform service to get the Data Catalog Entry.
       *
       * Create a request for the method "entries.lookup".
       *
       * This request holds the parameters needed by the the datacatalog server.  After setting any
       * optional parameters, call the {@link Lookup#execute()} method to invoke the remote operation.
       * <p> {@link
       * Lookup#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected Lookup() {
        super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Lookup set$Xgafv(java.lang.String $Xgafv) {
        return (Lookup) super.set$Xgafv($Xgafv);
      }

      @Override
      public Lookup setAccessToken(java.lang.String accessToken) {
        return (Lookup) super.setAccessToken(accessToken);
      }

      @Override
      public Lookup setAlt(java.lang.String alt) {
        return (Lookup) super.setAlt(alt);
      }

      @Override
      public Lookup setCallback(java.lang.String callback) {
        return (Lookup) super.setCallback(callback);
      }

      @Override
      public Lookup setFields(java.lang.String fields) {
        return (Lookup) super.setFields(fields);
      }

      @Override
      public Lookup setKey(java.lang.String key) {
        return (Lookup) super.setKey(key);
      }

      @Override
      public Lookup setOauthToken(java.lang.String oauthToken) {
        return (Lookup) super.setOauthToken(oauthToken);
      }

      @Override
      public Lookup setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Lookup) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Lookup setQuotaUser(java.lang.String quotaUser) {
        return (Lookup) super.setQuotaUser(quotaUser);
      }

      @Override
      public Lookup setUploadType(java.lang.String uploadType) {
        return (Lookup) super.setUploadType(uploadType);
      }

      @Override
      public Lookup setUploadProtocol(java.lang.String uploadProtocol) {
        return (Lookup) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The full name of the Google Cloud Platform resource the Data Catalog entry represents. See:
       * https://cloud.google.com/apis/design/resource_names#full_resource_name. Full names are
       * case-sensitive. Examples: *
       * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId *
       * //pubsub.googleapis.com/projects/projectId/topics/topicId
       */
      @com.google.api.client.util.Key
      private java.lang.String linkedResource;

      /** The full name of the Google Cloud Platform resource the Data Catalog entry represents. See:
     https://cloud.google.com/apis/design/resource_names#full_resource_name. Full names are case-
     sensitive. Examples: *
     //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId *
     //pubsub.googleapis.com/projects/projectId/topics/topicId
       */
      public java.lang.String getLinkedResource() {
        return linkedResource;
      }

      /**
       * The full name of the Google Cloud Platform resource the Data Catalog entry represents. See:
       * https://cloud.google.com/apis/design/resource_names#full_resource_name. Full names are
       * case-sensitive. Examples: *
       * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId *
       * //pubsub.googleapis.com/projects/projectId/topics/topicId
       */
      public Lookup setLinkedResource(java.lang.String linkedResource) {
        this.linkedResource = linkedResource;
        return this;
      }

      /**
       * The SQL name of the entry. SQL names are case-sensitive. Examples: *
       * `pubsub.project_id.topic_id` * ``pubsub.project_id.`topic.id.with.dots` `` *
       * `bigquery.table.project_id.dataset_id.table_id` * `bigquery.dataset.project_id.dataset_id`
       * * `datacatalog.entry.project_id.location_id.entry_group_id.entry_id` `*_id`s shoud satisfy
       * the standard SQL rules for identifiers. https://cloud.google.com/bigquery/docs/reference
       * /standard-sql/lexical.
       */
      @com.google.api.client.util.Key
      private java.lang.String sqlResource;

      /** The SQL name of the entry. SQL names are case-sensitive. Examples: * `pubsub.project_id.topic_id` *
     ``pubsub.project_id.`topic.id.with.dots` `` * `bigquery.table.project_id.dataset_id.table_id` *
     `bigquery.dataset.project_id.dataset_id` *
     `datacatalog.entry.project_id.location_id.entry_group_id.entry_id` `*_id`s shoud satisfy the
     standard SQL rules for identifiers. https://cloud.google.com/bigquery/docs/reference/standard-
     sql/lexical.
       */
      public java.lang.String getSqlResource() {
        return sqlResource;
      }

      /**
       * The SQL name of the entry. SQL names are case-sensitive. Examples: *
       * `pubsub.project_id.topic_id` * ``pubsub.project_id.`topic.id.with.dots` `` *
       * `bigquery.table.project_id.dataset_id.table_id` * `bigquery.dataset.project_id.dataset_id`
       * * `datacatalog.entry.project_id.location_id.entry_group_id.entry_id` `*_id`s shoud satisfy
       * the standard SQL rules for identifiers. https://cloud.google.com/bigquery/docs/reference
       * /standard-sql/lexical.
       */
      public Lookup setSqlResource(java.lang.String sqlResource) {
        this.sqlResource = sqlResource;
        return this;
      }

      @Override
      public Lookup set(String parameterName, Object value) {
        return (Lookup) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code DataCatalog datacatalog = new DataCatalog(...);}
   *   {@code DataCatalog.Projects.List request = datacatalog.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code DataCatalog datacatalog = new DataCatalog(...);}
     *   {@code DataCatalog.Locations.List request = datacatalog.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * An accessor for creating requests from the EntryGroups collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DataCatalog datacatalog = new DataCatalog(...);}
       *   {@code DataCatalog.EntryGroups.List request = datacatalog.entryGroups().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public EntryGroups entryGroups() {
        return new EntryGroups();
      }

      /**
       * The "entryGroups" collection of methods.
       */
      public class EntryGroups {

        /**
         * A maximum of 10,000 entry groups may be created per organization across all locations. Users
         * should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data
         * Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
         * for more information).
         *
         * Create a request for the method "entryGroups.create".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the project this entry group is in. Example: *
         *        projects/{project_id}/locations/{location} Note that this EntryGroup and its child
         *        resources may not actually be stored in the location in this name.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup> {

          private static final String REST_PATH = "v1beta1/{+parent}/entryGroups";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * A maximum of 10,000 entry groups may be created per organization across all locations. Users
           * should enable the Data Catalog API in the project identified by the `parent` parameter (see
           * [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-
           * project) for more information).
           *
           * Create a request for the method "entryGroups.create".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the project this entry group is in. Example: *
         *        projects/{project_id}/locations/{location} Note that this EntryGroup and its child
         *        resources may not actually be stored in the location in this name.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the project this entry group is in. Example: *
           * projects/{project_id}/locations/{location} Note that this EntryGroup and its child
           * resources may not actually be stored in the location in this name.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the project this entry group is in. Example: *
         projects/{project_id}/locations/{location} Note that this EntryGroup and its child resources may
         not actually be stored in the location in this name.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the project this entry group is in. Example: *
           * projects/{project_id}/locations/{location} Note that this EntryGroup and its child
           * resources may not actually be stored in the location in this name.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The id of the entry group to create. The id must begin with a letter or
           * underscore, contain only English letters, numbers and underscores, and be at most 64
           * characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String entryGroupId;

          /** Required. The id of the entry group to create. The id must begin with a letter or underscore,
         contain only English letters, numbers and underscores, and be at most 64 characters.
           */
          public java.lang.String getEntryGroupId() {
            return entryGroupId;
          }

          /**
           * Required. The id of the entry group to create. The id must begin with a letter or
           * underscore, contain only English letters, numbers and underscores, and be at most 64
           * characters.
           */
          public Create setEntryGroupId(java.lang.String entryGroupId) {
            this.entryGroupId = entryGroupId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an EntryGroup. Only entry groups that do not contain entries can be deleted. Users should
         * enable the Data Catalog API in the project identified by the `name` parameter (see [Data Catalog
         * Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more
         * information).
         *
         * Create a request for the method "entryGroups.delete".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the entry group. For example,
         *        `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");

          /**
           * Deletes an EntryGroup. Only entry groups that do not contain entries can be deleted. Users
           * should enable the Data Catalog API in the project identified by the `name` parameter (see [Data
           * Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-
           * project) for more information).
           *
           * Create a request for the method "entryGroups.delete".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the entry group. For example,
         *        `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(DataCatalog.this, "DELETE", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the entry group. For example,
           * `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the entry group. For example,
         `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the entry group. For example,
           * `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Optional. If true, deletes all entries in the entry group. */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** Optional. If true, deletes all entries in the entry group.
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /** Optional. If true, deletes all entries in the entry group. */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets an EntryGroup.
         *
         * Create a request for the method "entryGroups.get".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the entry group. For example,
         *        `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");

          /**
           * Gets an EntryGroup.
           *
           * Create a request for the method "entryGroups.get".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the entry group. For example,
         *        `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the entry group. For example,
           * `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the entry group. For example,
         `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the entry group. For example,
           * `projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** The fields to return. If not set or empty, all fields are returned. */
          @com.google.api.client.util.Key
          private String readMask;

          /** The fields to return. If not set or empty, all fields are returned.
           */
          public String getReadMask() {
            return readMask;
          }

          /** The fields to return. If not set or empty, all fields are returned. */
          public Get setReadMask(String readMask) {
            this.readMask = readMask;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource
         * does not exist. An empty policy is returned if the resource exists but does not have a policy set
         * on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method
         * cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform
         * resources synced to Data Catalog. Callers must have following Google IAM permission -
         * `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. -
         * `datacatalog.entries.getIamPolicy` to get policies on entries. -
         * `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
         *
         * Create a request for the method "entryGroups.getIamPolicy".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest}
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest content) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Policy> {

          private static final String REST_PATH = "v1beta1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");

          /**
           * Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource
           * does not exist. An empty policy is returned if the resource exists but does not have a policy
           * set on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this
           * method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud
           * Platform resources synced to Data Catalog. Callers must have following Google IAM permission -
           * `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. -
           * `datacatalog.entries.getIamPolicy` to get policies on entries. -
           * `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
           *
           * Create a request for the method "entryGroups.getIamPolicy".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest}
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See the operation
           * documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See the operation
           * documentation for the appropriate value for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists entry groups.
         *
         * Create a request for the method "entryGroups.list".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the location that contains the entry groups, which can be provided in URL
         *        format. Example: * projects/{project_id}/locations/{location}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/entryGroups";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists entry groups.
           *
           * Create a request for the method "entryGroups.list".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the location that contains the entry groups, which can be provided in URL
         *        format. Example: * projects/{project_id}/locations/{location}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the location that contains the entry groups, which can be
           * provided in URL format. Example: * projects/{project_id}/locations/{location}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the location that contains the entry groups, which can be provided in URL
         format. Example: * projects/{project_id}/locations/{location}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the location that contains the entry groups, which can be
           * provided in URL format. Example: * projects/{project_id}/locations/{location}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. Default is 10. Max limit is 1000.
           * Throws an invalid argument for `page_size > 1000`.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. Default is 10. Max limit is 1000. Throws an
         invalid argument for `page_size > 1000`.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. Default is 10. Max limit is 1000.
           * Throws an invalid argument for `page_size > 1000`.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. Token that specifies which page is requested. If empty, the first page is
           * returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. Token that specifies which page is requested. If empty, the first page is returned.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. Token that specifies which page is requested. If empty, the first page is
           * returned.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an EntryGroup. The user should enable the Data Catalog API in the project identified by
         * the `entry_group.name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com
         * /data-catalog/docs/concepts/resource-project) for more information).
         *
         * Create a request for the method "entryGroups.patch".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the entry group in URL format. Example: *
         *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this
         *        EntryGroup and its child resources may not actually be stored in the location in this
         *        name.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");

          /**
           * Updates an EntryGroup. The user should enable the Data Catalog API in the project identified by
           * the `entry_group.name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com
           * /data-catalog/docs/concepts/resource-project) for more information).
           *
           * Create a request for the method "entryGroups.patch".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the entry group in URL format. Example: *
         *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this
         *        EntryGroup and its child resources may not actually be stored in the location in this
         *        name.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup content) {
            super(DataCatalog.this, "PATCH", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1EntryGroup.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the entry group in URL format. Example: *
           * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this
           * EntryGroup and its child resources may not actually be stored in the location in this
           * name.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the entry group in URL format. Example: *
         projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this EntryGroup
         and its child resources may not actually be stored in the location in this name.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the entry group in URL format. Example: *
           * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this
           * EntryGroup and its child resources may not actually be stored in the location in this
           * name.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The fields to update on the entry group. If absent or empty, all modifiable fields are
           * updated.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The fields to update on the entry group. If absent or empty, all modifiable fields are updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The fields to update on the entry group. If absent or empty, all modifiable fields are
           * updated.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy for a resource. Replaces any existing policy. Supported resources
         * are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage
         * policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data
         * Catalog. Callers must have following Google IAM permission -
         * `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. -
         * `datacatalog.entries.setIamPolicy` to set policies on entries. -
         * `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
         *
         * Create a request for the method "entryGroups.setIamPolicy".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Policy> {

          private static final String REST_PATH = "v1beta1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");

          /**
           * Sets the access control policy for a resource. Replaces any existing policy. Supported
           * resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to
           * manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced
           * to Data Catalog. Callers must have following Google IAM permission -
           * `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. -
           * `datacatalog.entries.setIamPolicy` to set policies on entries. -
           * `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
           *
           * Create a request for the method "entryGroups.setIamPolicy".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See the operation
           * documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See the operation
           * documentation for the appropriate value for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns the caller's permissions on a resource. If the resource does not exist, an empty set of
         * permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag
         * templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for
         * BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A
         * caller is not required to have Google IAM permission to make this request.
         *
         * Create a request for the method "entryGroups.testIamPermissions".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
         *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1beta1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");

          /**
           * Returns the caller's permissions on a resource. If the resource does not exist, an empty set of
           * permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag
           * templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for
           * BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A
           * caller is not required to have Google IAM permission to make this request.
           *
           * Create a request for the method "entryGroups.testIamPermissions".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
         *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See the operation
         documentation for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Entries collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DataCatalog datacatalog = new DataCatalog(...);}
         *   {@code DataCatalog.Entries.List request = datacatalog.entries().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Entries entries() {
          return new Entries();
        }

        /**
         * The "entries" collection of methods.
         */
        public class Entries {

          /**
           * Creates an entry. Only entries of 'FILESET' type or user-specified type can be created. Users
           * should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data
           * Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
           * for more information). A maximum of 100,000 entries may be created per entry group.
           *
           * Create a request for the method "entries.create".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the entry group this entry is in. Example: *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this
           *        Entry and its child resources may not actually be stored in the location in this name.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry> {

            private static final String REST_PATH = "v1beta1/{+parent}/entries";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");

            /**
             * Creates an entry. Only entries of 'FILESET' type or user-specified type can be created. Users
             * should enable the Data Catalog API in the project identified by the `parent` parameter (see
             * [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-
             * project) for more information). A maximum of 100,000 entries may be created per entry group.
             *
             * Create a request for the method "entries.create".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the entry group this entry is in. Example: *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this
           *        Entry and its child resources may not actually be stored in the location in this name.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry content) {
              super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entry group this entry is in. Example: *
             * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that
             * this Entry and its child resources may not actually be stored in the location in this
             * name.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the entry group this entry is in. Example: *
           projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this Entry and
           its child resources may not actually be stored in the location in this name.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the entry group this entry is in. Example: *
             * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that
             * this Entry and its child resources may not actually be stored in the location in this
             * name.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** Required. The id of the entry to create. */
            @com.google.api.client.util.Key
            private java.lang.String entryId;

            /** Required. The id of the entry to create.
             */
            public java.lang.String getEntryId() {
              return entryId;
            }

            /** Required. The id of the entry to create. */
            public Create setEntryId(java.lang.String entryId) {
              this.entryId = entryId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an existing entry. Only entries created through CreateEntry method can be deleted. Users
           * should enable the Data Catalog API in the project identified by the `name` parameter (see [Data
           * Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
           * for more information).
           *
           * Create a request for the method "entries.delete".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the entry. Example: *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Empty> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");

            /**
             * Deletes an existing entry. Only entries created through CreateEntry method can be deleted.
             * Users should enable the Data Catalog API in the project identified by the `name` parameter (see
             * [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-
             * project) for more information).
             *
             * Create a request for the method "entries.delete".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the entry. Example: *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(DataCatalog.this, "DELETE", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entry. Example: * projects/{project_id}/locations/{location
             * }/entryGroups/{entry_group_id}/entries/{entry_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the entry. Example: *
           projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the entry. Example: * projects/{project_id}/locations/{location
             * }/entryGroups/{entry_group_id}/entries/{entry_id}
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets an entry.
           *
           * Create a request for the method "entries.get".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the entry. Example: *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");

            /**
             * Gets an entry.
             *
             * Create a request for the method "entries.get".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the entry. Example: *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entry. Example: * projects/{project_id}/locations/{location
             * }/entryGroups/{entry_group_id}/entries/{entry_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the entry. Example: *
           projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the entry. Example: * projects/{project_id}/locations/{location
             * }/entryGroups/{entry_group_id}/entries/{entry_id}
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource
           * does not exist. An empty policy is returned if the resource exists but does not have a policy set
           * on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method
           * cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform
           * resources synced to Data Catalog. Callers must have following Google IAM permission -
           * `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. -
           * `datacatalog.entries.getIamPolicy` to get policies on entries. -
           * `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
           *
           * Create a request for the method "entries.getIamPolicy".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
           *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest}
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest content) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Policy> {

            private static final String REST_PATH = "v1beta1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");

            /**
             * Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource
             * does not exist. An empty policy is returned if the resource exists but does not have a policy
             * set on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this
             * method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud
             * Platform resources synced to Data Catalog. Callers must have following Google IAM permission -
             * `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. -
             * `datacatalog.entries.getIamPolicy` to get policies on entries. -
             * `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
             *
             * Create a request for the method "entries.getIamPolicy".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
           *        the appropriate value for this field.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest}
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest content) {
              super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
              }
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
           the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Lists entries.
           *
           * Create a request for the method "entries.list".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the entry group that contains the entries, which can be provided in URL
           *        format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListEntriesResponse> {

            private static final String REST_PATH = "v1beta1/{+parent}/entries";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");

            /**
             * Lists entries.
             *
             * Create a request for the method "entries.list".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the entry group that contains the entries, which can be provided in URL
           *        format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListEntriesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the entry group that contains the entries, which can be
             * provided in URL format. Example: *
             * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the entry group that contains the entries, which can be provided in URL
           format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the entry group that contains the entries, which can be
             * provided in URL format. Example: *
             * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The maximum number of items to return. Default is 10. Max limit is 1000. Throws an
             * invalid argument for `page_size > 1000`.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of items to return. Default is 10. Max limit is 1000. Throws an invalid argument
           for `page_size > 1000`.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of items to return. Default is 10. Max limit is 1000. Throws an
             * invalid argument for `page_size > 1000`.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Token that specifies which page is requested. If empty, the first page is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Token that specifies which page is requested. If empty, the first page is returned.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Token that specifies which page is requested. If empty, the first page is returned.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            /**
             * The fields to return for each Entry. If not set or empty, all fields are returned.
             * For example, setting read_mask to contain only one path "name" will cause ListEntries
             * to return a list of Entries with only "name" field.
             */
            @com.google.api.client.util.Key
            private String readMask;

            /** The fields to return for each Entry. If not set or empty, all fields are returned. For example,
           setting read_mask to contain only one path "name" will cause ListEntries to return a list of
           Entries with only "name" field.
             */
            public String getReadMask() {
              return readMask;
            }

            /**
             * The fields to return for each Entry. If not set or empty, all fields are returned.
             * For example, setting read_mask to contain only one path "name" will cause ListEntries
             * to return a list of Entries with only "name" field.
             */
            public List setReadMask(String readMask) {
              this.readMask = readMask;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates an existing entry. Users should enable the Data Catalog API in the project identified by
           * the `entry.name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-
           * catalog/docs/concepts/resource-project) for more information).
           *
           * Create a request for the method "entries.patch".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name The Data Catalog resource name of the entry in URL format. Example: *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
           *        Note that this Entry and its child resources may not actually be stored in the location in
           *        this name.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");

            /**
             * Updates an existing entry. Users should enable the Data Catalog API in the project identified
             * by the `entry.name` parameter (see [Data Catalog Resource Project] (https://cloud.google.com
             * /data-catalog/docs/concepts/resource-project) for more information).
             *
             * Create a request for the method "entries.patch".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The Data Catalog resource name of the entry in URL format. Example: *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
           *        Note that this Entry and its child resources may not actually be stored in the location in
           *        this name.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry content) {
              super(DataCatalog.this, "PATCH", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Entry.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The Data Catalog resource name of the entry in URL format. Example: * projects/{proje
             * ct_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that
             * this Entry and its child resources may not actually be stored in the location in this
             * name.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The Data Catalog resource name of the entry in URL format. Example: *
           projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note
           that this Entry and its child resources may not actually be stored in the location in this name.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The Data Catalog resource name of the entry in URL format. Example: * projects/{proje
             * ct_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that
             * this Entry and its child resources may not actually be stored in the location in this
             * name.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The fields to update on the entry. If absent or empty, all modifiable fields are
             * updated. The following fields are modifiable: * For entries with type `DATA_STREAM`:
             * * `schema` * For entries with type `FILESET` * `schema` * `display_name` *
             * `description` * `gcs_fileset_spec` * `gcs_fileset_spec.file_patterns` * For entries
             * with `user_specified_type` * `schema` * `display_name` * `description` *
             * user_specified_type * user_specified_system * linked_resource *
             * source_system_timestamps
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** The fields to update on the entry. If absent or empty, all modifiable fields are updated. The
           following fields are modifiable: * For entries with type `DATA_STREAM`: * `schema` * For entries
           with type `FILESET` * `schema` * `display_name` * `description` * `gcs_fileset_spec` *
           `gcs_fileset_spec.file_patterns` * For entries with `user_specified_type` * `schema` *
           `display_name` * `description` * user_specified_type * user_specified_system * linked_resource *
           source_system_timestamps
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * The fields to update on the entry. If absent or empty, all modifiable fields are
             * updated. The following fields are modifiable: * For entries with type `DATA_STREAM`:
             * * `schema` * For entries with type `FILESET` * `schema` * `display_name` *
             * `description` * `gcs_fileset_spec` * `gcs_fileset_spec.file_patterns` * For entries
             * with `user_specified_type` * `schema` * `display_name` * `description` *
             * user_specified_type * user_specified_system * linked_resource *
             * source_system_timestamps
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Returns the caller's permissions on a resource. If the resource does not exist, an empty set of
           * permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag
           * templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for
           * BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A
           * caller is not required to have Google IAM permission to make this request.
           *
           * Create a request for the method "entries.testIamPermissions".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
           *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1beta1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");

            /**
             * Returns the caller's permissions on a resource. If the resource does not exist, an empty set of
             * permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag
             * templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for
             * BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A
             * caller is not required to have Google IAM permission to make this request.
             *
             * Create a request for the method "entries.testIamPermissions".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
           *        documentation for the appropriate value for this field.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest content) {
              super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See the operation
           documentation for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Tags collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DataCatalog datacatalog = new DataCatalog(...);}
           *   {@code DataCatalog.Tags.List request = datacatalog.tags().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Tags tags() {
            return new Tags();
          }

          /**
           * The "tags" collection of methods.
           */
          public class Tags {

            /**
             * Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the
             * [tag](https://cloud.google.com/data-
             * catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-
             * parameters) and the [tag template](https://cloud.google.com/data-
             * catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters) used
             * to create the tag must be from the same organization.
             *
             * Create a request for the method "tags.create".
             *
             * This request holds the parameters needed by the datacatalog server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example:
             *        *
             *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
             *        Note that this Tag and its child resources may not actually be stored in the location in
             *        this name.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag> {

              private static final String REST_PATH = "v1beta1/{+parent}/tags";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");

              /**
               * Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the
               * [tag](https://cloud.google.com/data-
               * catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-
               * parameters) and the [tag template](https://cloud.google.com/data-
               * catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)
               * used to create the tag must be from the same organization.
               *
               * Create a request for the method "tags.create".
               *
               * This request holds the parameters needed by the the datacatalog server.  After setting any
               * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
               * <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example:
             *        *
             *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
             *        Note that this Tag and its child resources may not actually be stored in the location in
             *        this name.
               * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag content) {
                super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the resource to attach this tag to. Tags can be attached to
               * Entries. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_g
               * roup_id}/entries/{entry_id} Note that this Tag and its child resources may not
               * actually be stored in the location in this name.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example:
             * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note
             that this Tag and its child resources may not actually be stored in the location in this name.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the resource to attach this tag to. Tags can be attached to
               * Entries. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_g
               * roup_id}/entries/{entry_id} Note that this Tag and its child resources may not
               * actually be stored in the location in this name.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes a tag.
             *
             * Create a request for the method "tags.delete".
             *
             * This request holds the parameters needed by the datacatalog server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the tag to delete. Example: * projects/{project_id}/locations/{location}/entry
             *        Groups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Empty> {

              private static final String REST_PATH = "v1beta1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+/tags/[^/]+$");

              /**
               * Deletes a tag.
               *
               * Create a request for the method "tags.delete".
               *
               * This request holds the parameters needed by the the datacatalog server.  After setting any
               * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
               * <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the tag to delete. Example: * projects/{project_id}/locations/{location}/entry
             *        Groups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(DataCatalog.this, "DELETE", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.Empty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+/tags/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the tag to delete. Example: * projects/{project_id}/locations
               * /{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the tag to delete. Example: * projects/{project_id}/locations/{location}/entr
             yGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the tag to delete. Example: * projects/{project_id}/locations
               * /{location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+/tags/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Lists the tags on an Entry.
             *
             * Create a request for the method "tags.list".
             *
             * This request holds the parameters needed by the datacatalog server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the Data Catalog resource to list the tags of. The resource could be an Entry
             *        or an EntryGroup. Examples: *
             *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} *
             *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListTagsResponse> {

              private static final String REST_PATH = "v1beta1/{+parent}/tags";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");

              /**
               * Lists the tags on an Entry.
               *
               * Create a request for the method "tags.list".
               *
               * This request holds the parameters needed by the the datacatalog server.  After setting any
               * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
               * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the Data Catalog resource to list the tags of. The resource could be an Entry
             *        or an EntryGroup. Examples: *
             *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} *
             *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListTagsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the Data Catalog resource to list the tags of. The resource
               * could be an Entry or an EntryGroup. Examples: *
               * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} * projects/
               * {project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the Data Catalog resource to list the tags of. The resource could be an Entry
             or an EntryGroup. Examples: *
             projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} *
             projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the Data Catalog resource to list the tags of. The resource
               * could be an Entry or an EntryGroup. Examples: *
               * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} * projects/
               * {project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** The maximum number of tags to return. Default is 10. Max limit is 1000. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** The maximum number of tags to return. Default is 10. Max limit is 1000.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** The maximum number of tags to return. Default is 10. Max limit is 1000. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Token that specifies which page is requested. If empty, the first page is returned.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Token that specifies which page is requested. If empty, the first page is returned.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Token that specifies which page is requested. If empty, the first page is returned.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }
            /**
             * Updates an existing tag.
             *
             * Create a request for the method "tags.patch".
             *
             * This request holds the parameters needed by the datacatalog server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             *
             * @param name The resource name of the tag in URL format. Example: * projects/{project_id}/locations/{location}/en
             *        trygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-
             *        generated identifier. Note that this Tag may not actually be stored in the location in
             *        this name.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag}
             * @return the request
             */
            public Patch patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag content) throws java.io.IOException {
              Patch result = new Patch(name, content);
              initialize(result);
              return result;
            }

            public class Patch extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag> {

              private static final String REST_PATH = "v1beta1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+/tags/[^/]+$");

              /**
               * Updates an existing tag.
               *
               * Create a request for the method "tags.patch".
               *
               * This request holds the parameters needed by the the datacatalog server.  After setting any
               * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
               * <p> {@link
               * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name The resource name of the tag in URL format. Example: * projects/{project_id}/locations/{location}/en
             *        trygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-
             *        generated identifier. Note that this Tag may not actually be stored in the location in
             *        this name.
               * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag}
               * @since 1.13
               */
              protected Patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag content) {
                super(DataCatalog.this, "PATCH", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+/tags/[^/]+$");
                }
              }

              @Override
              public Patch set$Xgafv(java.lang.String $Xgafv) {
                return (Patch) super.set$Xgafv($Xgafv);
              }

              @Override
              public Patch setAccessToken(java.lang.String accessToken) {
                return (Patch) super.setAccessToken(accessToken);
              }

              @Override
              public Patch setAlt(java.lang.String alt) {
                return (Patch) super.setAlt(alt);
              }

              @Override
              public Patch setCallback(java.lang.String callback) {
                return (Patch) super.setCallback(callback);
              }

              @Override
              public Patch setFields(java.lang.String fields) {
                return (Patch) super.setFields(fields);
              }

              @Override
              public Patch setKey(java.lang.String key) {
                return (Patch) super.setKey(key);
              }

              @Override
              public Patch setOauthToken(java.lang.String oauthToken) {
                return (Patch) super.setOauthToken(oauthToken);
              }

              @Override
              public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Patch) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Patch setQuotaUser(java.lang.String quotaUser) {
                return (Patch) super.setQuotaUser(quotaUser);
              }

              @Override
              public Patch setUploadType(java.lang.String uploadType) {
                return (Patch) super.setUploadType(uploadType);
              }

              @Override
              public Patch setUploadProtocol(java.lang.String uploadProtocol) {
                return (Patch) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * The resource name of the tag in URL format. Example: * projects/{project_id}/locati
               * ons/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where
               * `tag_id` is a system-generated identifier. Note that this Tag may not actually be
               * stored in the location in this name.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** The resource name of the tag in URL format. Example: * projects/{project_id}/locations/{location}/e
             ntrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-generated
             identifier. Note that this Tag may not actually be stored in the location in this name.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * The resource name of the tag in URL format. Example: * projects/{project_id}/locati
               * ons/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where
               * `tag_id` is a system-generated identifier. Note that this Tag may not actually be
               * stored in the location in this name.
               */
              public Patch setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/entries/[^/]+/tags/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * The fields to update on the Tag. If absent or empty, all modifiable fields are
               * updated. Currently the only modifiable field is the field `fields`.
               */
              @com.google.api.client.util.Key
              private String updateMask;

              /** The fields to update on the Tag. If absent or empty, all modifiable fields are updated. Currently
             the only modifiable field is the field `fields`.
               */
              public String getUpdateMask() {
                return updateMask;
              }

              /**
               * The fields to update on the Tag. If absent or empty, all modifiable fields are
               * updated. Currently the only modifiable field is the field `fields`.
               */
              public Patch setUpdateMask(String updateMask) {
                this.updateMask = updateMask;
                return this;
              }

              @Override
              public Patch set(String parameterName, Object value) {
                return (Patch) super.set(parameterName, value);
              }
            }

          }
        }
        /**
         * An accessor for creating requests from the Tags collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DataCatalog datacatalog = new DataCatalog(...);}
         *   {@code DataCatalog.Tags.List request = datacatalog.tags().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Tags tags() {
          return new Tags();
        }

        /**
         * The "tags" collection of methods.
         */
        public class Tags {

          /**
           * Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the
           * [tag](https://cloud.google.com/data-
           * catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-
           * parameters) and the [tag template](https://cloud.google.com/data-
           * catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters) used
           * to create the tag must be from the same organization.
           *
           * Create a request for the method "tags.create".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example:
           *        *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
           *        Note that this Tag and its child resources may not actually be stored in the location in
           *        this name.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag> {

            private static final String REST_PATH = "v1beta1/{+parent}/tags";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");

            /**
             * Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the
             * [tag](https://cloud.google.com/data-
             * catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-
             * parameters) and the [tag template](https://cloud.google.com/data-
             * catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters)
             * used to create the tag must be from the same organization.
             *
             * Create a request for the method "tags.create".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example:
           *        *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
           *        Note that this Tag and its child resources may not actually be stored in the location in
           *        this name.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag content) {
              super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the resource to attach this tag to. Tags can be attached to
             * Entries. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_gro
             * up_id}/entries/{entry_id} Note that this Tag and its child resources may not actually
             * be stored in the location in this name.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example:
           * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note
           that this Tag and its child resources may not actually be stored in the location in this name.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the resource to attach this tag to. Tags can be attached to
             * Entries. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_gro
             * up_id}/entries/{entry_id} Note that this Tag and its child resources may not actually
             * be stored in the location in this name.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a tag.
           *
           * Create a request for the method "tags.delete".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the tag to delete. Example: * projects/{project_id}/locations/{location}/entry
           *        Groups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Empty> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/tags/[^/]+$");

            /**
             * Deletes a tag.
             *
             * Create a request for the method "tags.delete".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the tag to delete. Example: * projects/{project_id}/locations/{location}/entry
           *        Groups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(DataCatalog.this, "DELETE", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/tags/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the tag to delete. Example: * projects/{project_id}/locations/{
             * location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the tag to delete. Example: * projects/{project_id}/locations/{location}/entr
           yGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the tag to delete. Example: * projects/{project_id}/locations/{
             * location}/entryGroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id}
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/tags/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Lists the tags on an Entry.
           *
           * Create a request for the method "tags.list".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the Data Catalog resource to list the tags of. The resource could be an Entry
           *        or an EntryGroup. Examples: *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListTagsResponse> {

            private static final String REST_PATH = "v1beta1/{+parent}/tags";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");

            /**
             * Lists the tags on an Entry.
             *
             * Create a request for the method "tags.list".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the Data Catalog resource to list the tags of. The resource could be an Entry
           *        or an EntryGroup. Examples: *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} *
           *        projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListTagsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the Data Catalog resource to list the tags of. The resource
             * could be an Entry or an EntryGroup. Examples: *
             * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} * projects/{p
             * roject_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the Data Catalog resource to list the tags of. The resource could be an Entry
           or an EntryGroup. Examples: *
           projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} *
           projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the Data Catalog resource to list the tags of. The resource
             * could be an Entry or an EntryGroup. Examples: *
             * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} * projects/{p
             * roject_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** The maximum number of tags to return. Default is 10. Max limit is 1000. */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of tags to return. Default is 10. Max limit is 1000.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /** The maximum number of tags to return. Default is 10. Max limit is 1000. */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Token that specifies which page is requested. If empty, the first page is returned.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Token that specifies which page is requested. If empty, the first page is returned.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Token that specifies which page is requested. If empty, the first page is returned.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates an existing tag.
           *
           * Create a request for the method "tags.patch".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name The resource name of the tag in URL format. Example: * projects/{project_id}/locations/{location}/en
           *        trygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-
           *        generated identifier. Note that this Tag may not actually be stored in the location in
           *        this name.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/tags/[^/]+$");

            /**
             * Updates an existing tag.
             *
             * Create a request for the method "tags.patch".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name The resource name of the tag in URL format. Example: * projects/{project_id}/locations/{location}/en
           *        trygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-
           *        generated identifier. Note that this Tag may not actually be stored in the location in
           *        this name.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag content) {
              super(DataCatalog.this, "PATCH", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Tag.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/tags/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * The resource name of the tag in URL format. Example: * projects/{project_id}/location
             * s/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where
             * `tag_id` is a system-generated identifier. Note that this Tag may not actually be
             * stored in the location in this name.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** The resource name of the tag in URL format. Example: * projects/{project_id}/locations/{location}/e
           ntrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-generated
           identifier. Note that this Tag may not actually be stored in the location in this name.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * The resource name of the tag in URL format. Example: * projects/{project_id}/location
             * s/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where
             * `tag_id` is a system-generated identifier. Note that this Tag may not actually be
             * stored in the location in this name.
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/entryGroups/[^/]+/tags/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The fields to update on the Tag. If absent or empty, all modifiable fields are
             * updated. Currently the only modifiable field is the field `fields`.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** The fields to update on the Tag. If absent or empty, all modifiable fields are updated. Currently
           the only modifiable field is the field `fields`.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * The fields to update on the Tag. If absent or empty, all modifiable fields are
             * updated. Currently the only modifiable field is the field `fields`.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the TagTemplates collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DataCatalog datacatalog = new DataCatalog(...);}
       *   {@code DataCatalog.TagTemplates.List request = datacatalog.tagTemplates().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public TagTemplates tagTemplates() {
        return new TagTemplates();
      }

      /**
       * The "tagTemplates" collection of methods.
       */
      public class TagTemplates {

        /**
         * Creates a tag template. The user should enable the Data Catalog API in the project identified by
         * the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-
         * catalog/docs/concepts/resource-project) for more information).
         *
         * Create a request for the method "tagTemplates.create".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the project and the template location [region](https://cloud.google.com/data-
         *        catalog/docs/concepts/regions. Example: * projects/{project_id}/locations/us-central1
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate> {

          private static final String REST_PATH = "v1beta1/{+parent}/tagTemplates";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a tag template. The user should enable the Data Catalog API in the project identified
           * by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-
           * catalog/docs/concepts/resource-project) for more information).
           *
           * Create a request for the method "tagTemplates.create".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the project and the template location [region](https://cloud.google.com/data-
         *        catalog/docs/concepts/regions. Example: * projects/{project_id}/locations/us-central1
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the project and the template location
           * [region](https://cloud.google.com/data-catalog/docs/concepts/regions. Example: *
           * projects/{project_id}/locations/us-central1
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the project and the template location [region](https://cloud.google.com/data-
         catalog/docs/concepts/regions. Example: * projects/{project_id}/locations/us-central1
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the project and the template location
           * [region](https://cloud.google.com/data-catalog/docs/concepts/regions. Example: *
           * projects/{project_id}/locations/us-central1
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. The id of the tag template to create. */
          @com.google.api.client.util.Key
          private java.lang.String tagTemplateId;

          /** Required. The id of the tag template to create.
           */
          public java.lang.String getTagTemplateId() {
            return tagTemplateId;
          }

          /** Required. The id of the tag template to create. */
          public Create setTagTemplateId(java.lang.String tagTemplateId) {
            this.tagTemplateId = tagTemplateId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a tag template and all tags using the template. Users should enable the Data Catalog API
         * in the project identified by the `name` parameter (see [Data Catalog Resource Project]
         * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
         *
         * Create a request for the method "tagTemplates.delete".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the tag template to delete. Example: *
         *        projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");

          /**
           * Deletes a tag template and all tags using the template. Users should enable the Data Catalog
           * API in the project identified by the `name` parameter (see [Data Catalog Resource Project]
           * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
           *
           * Create a request for the method "tagTemplates.delete".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the tag template to delete. Example: *
         *        projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(DataCatalog.this, "DELETE", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the tag template to delete. Example: *
           * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the tag template to delete. Example: *
         projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the tag template to delete. Example: *
           * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. Currently, this field must always be set to `true`. This confirms the
           * deletion of any possible tags using this template. `force = false` will be supported in
           * the future.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean force;

          /** Required. Currently, this field must always be set to `true`. This confirms the deletion of any
         possible tags using this template. `force = false` will be supported in the future.
           */
          public java.lang.Boolean getForce() {
            return force;
          }

          /**
           * Required. Currently, this field must always be set to `true`. This confirms the
           * deletion of any possible tags using this template. `force = false` will be supported in
           * the future.
           */
          public Delete setForce(java.lang.Boolean force) {
            this.force = force;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a tag template.
         *
         * Create a request for the method "tagTemplates.get".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the tag template. Example: *
         *        projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");

          /**
           * Gets a tag template.
           *
           * Create a request for the method "tagTemplates.get".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the tag template. Example: *
         *        projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the tag template. Example: *
           * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the tag template. Example: *
         projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the tag template. Example: *
           * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource
         * does not exist. An empty policy is returned if the resource exists but does not have a policy set
         * on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this method
         * cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform
         * resources synced to Data Catalog. Callers must have following Google IAM permission -
         * `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. -
         * `datacatalog.entries.getIamPolicy` to get policies on entries. -
         * `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
         *
         * Create a request for the method "tagTemplates.getIamPolicy".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest}
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest content) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Policy> {

          private static final String REST_PATH = "v1beta1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");

          /**
           * Gets the access control policy for a resource. A `NOT_FOUND` error is returned if the resource
           * does not exist. An empty policy is returned if the resource exists but does not have a policy
           * set on it. Supported resources are: - Tag templates. - Entries. - Entry groups. Note, this
           * method cannot be used to manage policies for BigQuery, Pub/Sub and any external Google Cloud
           * Platform resources synced to Data Catalog. Callers must have following Google IAM permission -
           * `datacatalog.tagTemplates.getIamPolicy` to get policies on tag templates. -
           * `datacatalog.entries.getIamPolicy` to get policies on entries. -
           * `datacatalog.entryGroups.getIamPolicy` to get policies on entry groups.
           *
           * Create a request for the method "tagTemplates.getIamPolicy".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest}
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See the operation
           * documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See the operation
           * documentation for the appropriate value for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Updates a tag template. This method cannot be used to update the fields of a template. The tag
         * template fields are represented as separate resources and should be updated using their own
         * create/update/delete methods. Users should enable the Data Catalog API in the project identified
         * by the `tag_template.name` parameter (see [Data Catalog Resource Project]
         * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
         *
         * Create a request for the method "tagTemplates.patch".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The resource name of the tag template in URL format. Example: *
         *        projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this
         *        TagTemplate and its child resources may not actually be stored in the location in this
         *        name.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");

          /**
           * Updates a tag template. This method cannot be used to update the fields of a template. The tag
           * template fields are represented as separate resources and should be updated using their own
           * create/update/delete methods. Users should enable the Data Catalog API in the project
           * identified by the `tag_template.name` parameter (see [Data Catalog Resource Project]
           * (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
           *
           * Create a request for the method "tagTemplates.patch".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The resource name of the tag template in URL format. Example: *
         *        projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this
         *        TagTemplate and its child resources may not actually be stored in the location in this
         *        name.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate content) {
            super(DataCatalog.this, "PATCH", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The resource name of the tag template in URL format. Example: *
           * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that
           * this TagTemplate and its child resources may not actually be stored in the location in
           * this name.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The resource name of the tag template in URL format. Example: *
         projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this
         TagTemplate and its child resources may not actually be stored in the location in this name.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The resource name of the tag template in URL format. Example: *
           * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that
           * this TagTemplate and its child resources may not actually be stored in the location in
           * this name.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The field mask specifies the parts of the template to overwrite. Allowed fields: *
           * `display_name` If absent or empty, all of the allowed fields above will be updated.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The field mask specifies the parts of the template to overwrite. Allowed fields: * `display_name`
         If absent or empty, all of the allowed fields above will be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The field mask specifies the parts of the template to overwrite. Allowed fields: *
           * `display_name` If absent or empty, all of the allowed fields above will be updated.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the access control policy for a resource. Replaces any existing policy. Supported resources
         * are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to manage
         * policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data
         * Catalog. Callers must have following Google IAM permission -
         * `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. -
         * `datacatalog.entries.setIamPolicy` to set policies on entries. -
         * `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
         *
         * Create a request for the method "tagTemplates.setIamPolicy".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Policy> {

          private static final String REST_PATH = "v1beta1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");

          /**
           * Sets the access control policy for a resource. Replaces any existing policy. Supported
           * resources are: - Tag templates. - Entries. - Entry groups. Note, this method cannot be used to
           * manage policies for BigQuery, Pub/Sub and any external Google Cloud Platform resources synced
           * to Data Catalog. Callers must have following Google IAM permission -
           * `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. -
           * `datacatalog.entries.setIamPolicy` to set policies on entries. -
           * `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
           *
           * Create a request for the method "tagTemplates.setIamPolicy".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See the operation
           * documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See the operation
           * documentation for the appropriate value for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns the caller's permissions on a resource. If the resource does not exist, an empty set of
         * permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag
         * templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for
         * BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A
         * caller is not required to have Google IAM permission to make this request.
         *
         * Create a request for the method "tagTemplates.testIamPermissions".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
         *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1beta1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");

          /**
           * Returns the caller's permissions on a resource. If the resource does not exist, an empty set of
           * permissions is returned (We don't return a `NOT_FOUND` error). Supported resources are: - Tag
           * templates. - Entries. - Entry groups. Note, this method cannot be used to manage policies for
           * BigQuery, Pub/Sub and any external Google Cloud Platform resources synced to Data Catalog. A
           * caller is not required to have Google IAM permission to make this request.
           *
           * Create a request for the method "tagTemplates.testIamPermissions".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
         *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See the operation
         documentation for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Fields collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DataCatalog datacatalog = new DataCatalog(...);}
         *   {@code DataCatalog.Fields.List request = datacatalog.fields().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Fields fields() {
          return new Fields();
        }

        /**
         * The "fields" collection of methods.
         */
        public class Fields {

          /**
           * Creates a field in a tag template. The user should enable the Data Catalog API in the project
           * identified by the `parent` parameter (see [Data Catalog Resource
           * Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more
           * information).
           *
           * Create a request for the method "fields.create".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the project and the template location [region](https://cloud.google.com/data-
           *        catalog/docs/concepts/regions). Example: * projects/{project_id}/locations/us-
           *        central1/tagTemplates/{tag_template_id}
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField> {

            private static final String REST_PATH = "v1beta1/{+parent}/fields";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");

            /**
             * Creates a field in a tag template. The user should enable the Data Catalog API in the project
             * identified by the `parent` parameter (see [Data Catalog Resource
             * Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more
             * information).
             *
             * Create a request for the method "fields.create".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the project and the template location [region](https://cloud.google.com/data-
           *        catalog/docs/concepts/regions). Example: * projects/{project_id}/locations/us-
           *        central1/tagTemplates/{tag_template_id}
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField content) {
              super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the project and the template location
             * [region](https://cloud.google.com/data-catalog/docs/concepts/regions). Example: *
             * projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the project and the template location [region](https://cloud.google.com/data-
           catalog/docs/concepts/regions). Example: * projects/{project_id}/locations/us-
           central1/tagTemplates/{tag_template_id}
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the project and the template location
             * [region](https://cloud.google.com/data-catalog/docs/concepts/regions). Example: *
             * projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Required. The ID of the tag template field to create. Field ids can contain letters
             * (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field
             * IDs must be at least 1 character long and at most 128 characters long. Field IDs must
             * also be unique within their template.
             */
            @com.google.api.client.util.Key
            private java.lang.String tagTemplateFieldId;

            /** Required. The ID of the tag template field to create. Field ids can contain letters (both uppercase
           and lowercase), numbers (0-9), underscores (_) and dashes (-). Field IDs must be at least 1
           character long and at most 128 characters long. Field IDs must also be unique within their
           template.
             */
            public java.lang.String getTagTemplateFieldId() {
              return tagTemplateFieldId;
            }

            /**
             * Required. The ID of the tag template field to create. Field ids can contain letters
             * (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field
             * IDs must be at least 1 character long and at most 128 characters long. Field IDs must
             * also be unique within their template.
             */
            public Create setTagTemplateFieldId(java.lang.String tagTemplateFieldId) {
              this.tagTemplateFieldId = tagTemplateFieldId;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a field in a tag template and all uses of that field. Users should enable the Data
           * Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource
           * Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more
           * information).
           *
           * Create a request for the method "fields.delete".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the tag template field to delete. Example: * projects/{project_id}/locations/{
           *        location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Empty> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$");

            /**
             * Deletes a field in a tag template and all uses of that field. Users should enable the Data
             * Catalog API in the project identified by the `name` parameter (see [Data Catalog Resource
             * Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more
             * information).
             *
             * Create a request for the method "fields.delete".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the tag template field to delete. Example: * projects/{project_id}/locations/{
           *        location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(DataCatalog.this, "DELETE", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the tag template field to delete. Example: * projects/{project_
             * id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id
             * }
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the tag template field to delete. Example: * projects/{project_id}/locations/
           {location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the tag template field to delete. Example: * projects/{project_
             * id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id
             * }
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. Currently, this field must always be set to `true`. This confirms the
             * deletion of this field from any tags using this field. `force = false` will be
             * supported in the future.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean force;

            /** Required. Currently, this field must always be set to `true`. This confirms the deletion of this
           field from any tags using this field. `force = false` will be supported in the future.
             */
            public java.lang.Boolean getForce() {
              return force;
            }

            /**
             * Required. Currently, this field must always be set to `true`. This confirms the
             * deletion of this field from any tags using this field. `force = false` will be
             * supported in the future.
             */
            public Delete setForce(java.lang.Boolean force) {
              this.force = force;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Updates a field in a tag template. This method cannot be used to update the field type. Users
           * should enable the Data Catalog API in the project identified by the `name` parameter (see [Data
           * Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project)
           * for more information).
           *
           * Create a request for the method "fields.patch".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the tag template field. Example: * projects/{project_id}/locations/{location}/
           *        tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$");

            /**
             * Updates a field in a tag template. This method cannot be used to update the field type. Users
             * should enable the Data Catalog API in the project identified by the `name` parameter (see [Data
             * Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-
             * project) for more information).
             *
             * Create a request for the method "fields.patch".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the tag template field. Example: * projects/{project_id}/locations/{location}/
           *        tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField content) {
              super(DataCatalog.this, "PATCH", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the tag template field. Example: * projects/{project_id}/locati
             * ons/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the tag template field. Example: * projects/{project_id}/locations/{location}
           /tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the tag template field. Example: * projects/{project_id}/locati
             * ons/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Optional. The field mask specifies the parts of the template to be updated. Allowed
             * fields: * `display_name` * `type.enum_type` * `is_required` If `update_mask` is not
             * set or empty, all of the allowed fields above will be updated. When updating an enum
             * type, the provided values will be merged with the existing values. Therefore, enum
             * values can only be added, existing enum values cannot be deleted nor renamed.
             * Updating a template field from optional to required is NOT allowed.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** Optional. The field mask specifies the parts of the template to be updated. Allowed fields: *
           `display_name` * `type.enum_type` * `is_required` If `update_mask` is not set or empty, all of the
           allowed fields above will be updated. When updating an enum type, the provided values will be
           merged with the existing values. Therefore, enum values can only be added, existing enum values
           cannot be deleted nor renamed. Updating a template field from optional to required is NOT allowed.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * Optional. The field mask specifies the parts of the template to be updated. Allowed
             * fields: * `display_name` * `type.enum_type` * `is_required` If `update_mask` is not
             * set or empty, all of the allowed fields above will be updated. When updating an enum
             * type, the provided values will be merged with the existing values. Therefore, enum
             * values can only be added, existing enum values cannot be deleted nor renamed.
             * Updating a template field from optional to required is NOT allowed.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Renames a field in a tag template. The user should enable the Data Catalog API in the project
           * identified by the `name` parameter (see [Data Catalog Resource Project](https://cloud.google.com
           * /data-catalog/docs/concepts/resource-project) for more information).
           *
           * Create a request for the method "fields.rename".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Rename#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the tag template. Example: * projects/{project_id}/locations/{location}/tagTem
           *        plates/{tag_template_id}/fields/{tag_template_field_id}
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest}
           * @return the request
           */
          public Rename rename(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest content) throws java.io.IOException {
            Rename result = new Rename(name, content);
            initialize(result);
            return result;
          }

          public class Rename extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField> {

            private static final String REST_PATH = "v1beta1/{+name}:rename";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$");

            /**
             * Renames a field in a tag template. The user should enable the Data Catalog API in the project
             * identified by the `name` parameter (see [Data Catalog Resource
             * Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more
             * information).
             *
             * Create a request for the method "fields.rename".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Rename#execute()} method to invoke the remote operation.
             * <p> {@link
             * Rename#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the tag template. Example: * projects/{project_id}/locations/{location}/tagTem
           *        plates/{tag_template_id}/fields/{tag_template_field_id}
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest}
             * @since 1.13
             */
            protected Rename(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest content) {
              super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$");
              }
            }

            @Override
            public Rename set$Xgafv(java.lang.String $Xgafv) {
              return (Rename) super.set$Xgafv($Xgafv);
            }

            @Override
            public Rename setAccessToken(java.lang.String accessToken) {
              return (Rename) super.setAccessToken(accessToken);
            }

            @Override
            public Rename setAlt(java.lang.String alt) {
              return (Rename) super.setAlt(alt);
            }

            @Override
            public Rename setCallback(java.lang.String callback) {
              return (Rename) super.setCallback(callback);
            }

            @Override
            public Rename setFields(java.lang.String fields) {
              return (Rename) super.setFields(fields);
            }

            @Override
            public Rename setKey(java.lang.String key) {
              return (Rename) super.setKey(key);
            }

            @Override
            public Rename setOauthToken(java.lang.String oauthToken) {
              return (Rename) super.setOauthToken(oauthToken);
            }

            @Override
            public Rename setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Rename) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Rename setQuotaUser(java.lang.String quotaUser) {
              return (Rename) super.setQuotaUser(quotaUser);
            }

            @Override
            public Rename setUploadType(java.lang.String uploadType) {
              return (Rename) super.setUploadType(uploadType);
            }

            @Override
            public Rename setUploadProtocol(java.lang.String uploadProtocol) {
              return (Rename) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the tag template. Example: * projects/{project_id}/locations/{l
             * ocation}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the tag template. Example: * projects/{project_id}/locations/{location}/tagTe
           mplates/{tag_template_id}/fields/{tag_template_field_id}
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the tag template. Example: * projects/{project_id}/locations/{l
             * ocation}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}
             */
            public Rename setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Rename set(String parameterName, Object value) {
              return (Rename) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the EnumValues collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code DataCatalog datacatalog = new DataCatalog(...);}
           *   {@code DataCatalog.EnumValues.List request = datacatalog.enumValues().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public EnumValues enumValues() {
            return new EnumValues();
          }

          /**
           * The "enumValues" collection of methods.
           */
          public class EnumValues {

            /**
             * Renames an enum value in a tag template. The enum values have to be unique within one enum field.
             * Thus, an enum value cannot be renamed with a name used in any other enum value within the same
             * enum field.
             *
             * Create a request for the method "enumValues.rename".
             *
             * This request holds the parameters needed by the datacatalog server.  After setting any optional
             * parameters, call the {@link Rename#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the enum field value. Example: * projects/{project_id}/locations/{location}/ta
             *        gTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display
             *        _name}
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest}
             * @return the request
             */
            public Rename rename(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest content) throws java.io.IOException {
              Rename result = new Rename(name, content);
              initialize(result);
              return result;
            }

            public class Rename extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField> {

              private static final String REST_PATH = "v1beta1/{+name}:rename";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+/enumValues/[^/]+$");

              /**
               * Renames an enum value in a tag template. The enum values have to be unique within one enum
               * field. Thus, an enum value cannot be renamed with a name used in any other enum value within
               * the same enum field.
               *
               * Create a request for the method "enumValues.rename".
               *
               * This request holds the parameters needed by the the datacatalog server.  After setting any
               * optional parameters, call the {@link Rename#execute()} method to invoke the remote operation.
               * <p> {@link
               * Rename#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the enum field value. Example: * projects/{project_id}/locations/{location}/ta
             *        gTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display
             *        _name}
               * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest}
               * @since 1.13
               */
              protected Rename(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest content) {
                super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1TagTemplateField.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+/enumValues/[^/]+$");
                }
              }

              @Override
              public Rename set$Xgafv(java.lang.String $Xgafv) {
                return (Rename) super.set$Xgafv($Xgafv);
              }

              @Override
              public Rename setAccessToken(java.lang.String accessToken) {
                return (Rename) super.setAccessToken(accessToken);
              }

              @Override
              public Rename setAlt(java.lang.String alt) {
                return (Rename) super.setAlt(alt);
              }

              @Override
              public Rename setCallback(java.lang.String callback) {
                return (Rename) super.setCallback(callback);
              }

              @Override
              public Rename setFields(java.lang.String fields) {
                return (Rename) super.setFields(fields);
              }

              @Override
              public Rename setKey(java.lang.String key) {
                return (Rename) super.setKey(key);
              }

              @Override
              public Rename setOauthToken(java.lang.String oauthToken) {
                return (Rename) super.setOauthToken(oauthToken);
              }

              @Override
              public Rename setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Rename) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Rename setQuotaUser(java.lang.String quotaUser) {
                return (Rename) super.setQuotaUser(quotaUser);
              }

              @Override
              public Rename setUploadType(java.lang.String uploadType) {
                return (Rename) super.setUploadType(uploadType);
              }

              @Override
              public Rename setUploadProtocol(java.lang.String uploadProtocol) {
                return (Rename) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the enum field value. Example: * projects/{project_id}/locati
               * ons/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumVa
               * lues/{enum_value_display_name}
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the enum field value. Example: * projects/{project_id}/locations/{location}/t
             agTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the enum field value. Example: * projects/{project_id}/locati
               * ons/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumVa
               * lues/{enum_value_display_name}
               */
              public Rename setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^projects/[^/]+/locations/[^/]+/tagTemplates/[^/]+/fields/[^/]+/enumValues/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Rename set(String parameterName, Object value) {
                return (Rename) super.set(parameterName, value);
              }
            }

          }
        }
      }
      /**
       * An accessor for creating requests from the Taxonomies collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code DataCatalog datacatalog = new DataCatalog(...);}
       *   {@code DataCatalog.Taxonomies.List request = datacatalog.taxonomies().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Taxonomies taxonomies() {
        return new Taxonomies();
      }

      /**
       * The "taxonomies" collection of methods.
       */
      public class Taxonomies {

        /**
         * Creates a taxonomy in the specified project.
         *
         * Create a request for the method "taxonomies.create".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Resource name of the project that the taxonomy will belong to.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy> {

          private static final String REST_PATH = "v1beta1/{+parent}/taxonomies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a taxonomy in the specified project.
           *
           * Create a request for the method "taxonomies.create".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Resource name of the project that the taxonomy will belong to.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the project that the taxonomy will belong to. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Resource name of the project that the taxonomy will belong to.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Resource name of the project that the taxonomy will belong to. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a taxonomy. This operation will also delete all policy tags in this taxonomy along with
         * their associated policies.
         *
         * Create a request for the method "taxonomies.delete".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the taxonomy to be deleted. All policy tags in this taxonomy will also be
         *        deleted.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");

          /**
           * Deletes a taxonomy. This operation will also delete all policy tags in this taxonomy along with
           * their associated policies.
           *
           * Create a request for the method "taxonomies.delete".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the taxonomy to be deleted. All policy tags in this taxonomy will also be
         *        deleted.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(DataCatalog.this, "DELETE", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource name of the taxonomy to be deleted. All policy tags in this taxonomy
           * will also be deleted.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the taxonomy to be deleted. All policy tags in this taxonomy will also
         be deleted.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource name of the taxonomy to be deleted. All policy tags in this taxonomy
           * will also be deleted.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Exports all taxonomies and their policy tags in a project. This method generates
         * SerializedTaxonomy protos with nested policy tags that can be used as an input for future
         * ImportTaxonomies calls.
         *
         * Create a request for the method "taxonomies.export".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Export#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Resource name of the project that taxonomies to be exported will share.
         * @return the request
         */
        public Export export(java.lang.String parent) throws java.io.IOException {
          Export result = new Export(parent);
          initialize(result);
          return result;
        }

        public class Export extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/taxonomies:export";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Exports all taxonomies and their policy tags in a project. This method generates
           * SerializedTaxonomy protos with nested policy tags that can be used as an input for future
           * ImportTaxonomies calls.
           *
           * Create a request for the method "taxonomies.export".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Export#execute()} method to invoke the remote operation.
           * <p> {@link
           * Export#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Resource name of the project that taxonomies to be exported will share.
           * @since 1.13
           */
          protected Export(java.lang.String parent) {
            super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Export set$Xgafv(java.lang.String $Xgafv) {
            return (Export) super.set$Xgafv($Xgafv);
          }

          @Override
          public Export setAccessToken(java.lang.String accessToken) {
            return (Export) super.setAccessToken(accessToken);
          }

          @Override
          public Export setAlt(java.lang.String alt) {
            return (Export) super.setAlt(alt);
          }

          @Override
          public Export setCallback(java.lang.String callback) {
            return (Export) super.setCallback(callback);
          }

          @Override
          public Export setFields(java.lang.String fields) {
            return (Export) super.setFields(fields);
          }

          @Override
          public Export setKey(java.lang.String key) {
            return (Export) super.setKey(key);
          }

          @Override
          public Export setOauthToken(java.lang.String oauthToken) {
            return (Export) super.setOauthToken(oauthToken);
          }

          @Override
          public Export setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Export) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Export setQuotaUser(java.lang.String quotaUser) {
            return (Export) super.setQuotaUser(quotaUser);
          }

          @Override
          public Export setUploadType(java.lang.String uploadType) {
            return (Export) super.setUploadType(uploadType);
          }

          @Override
          public Export setUploadProtocol(java.lang.String uploadProtocol) {
            return (Export) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the project that taxonomies to be exported will share. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Resource name of the project that taxonomies to be exported will share.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Resource name of the project that taxonomies to be exported will share. */
          public Export setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Export taxonomies as serialized taxonomies. */
          @com.google.api.client.util.Key
          private java.lang.Boolean serializedTaxonomies;

          /** Export taxonomies as serialized taxonomies.
           */
          public java.lang.Boolean getSerializedTaxonomies() {
            return serializedTaxonomies;
          }

          /** Export taxonomies as serialized taxonomies. */
          public Export setSerializedTaxonomies(java.lang.Boolean serializedTaxonomies) {
            this.serializedTaxonomies = serializedTaxonomies;
            return this;
          }

          /** Required. Resource names of the taxonomies to be exported. */
          @com.google.api.client.util.Key
          private java.util.List<java.lang.String> taxonomies;

          /** Required. Resource names of the taxonomies to be exported.
           */
          public java.util.List<java.lang.String> getTaxonomies() {
            return taxonomies;
          }

          /** Required. Resource names of the taxonomies to be exported. */
          public Export setTaxonomies(java.util.List<java.lang.String> taxonomies) {
            this.taxonomies = taxonomies;
            return this;
          }

          @Override
          public Export set(String parameterName, Object value) {
            return (Export) super.set(parameterName, value);
          }
        }
        /**
         * Gets a taxonomy.
         *
         * Create a request for the method "taxonomies.get".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the requested taxonomy.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");

          /**
           * Gets a taxonomy.
           *
           * Create a request for the method "taxonomies.get".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the requested taxonomy.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the requested taxonomy. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the requested taxonomy.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Resource name of the requested taxonomy. */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the IAM policy for a taxonomy or a policy tag.
         *
         * Create a request for the method "taxonomies.getIamPolicy".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest}
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest content) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Policy> {

          private static final String REST_PATH = "v1beta1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");

          /**
           * Gets the IAM policy for a taxonomy or a policy tag.
           *
           * Create a request for the method "taxonomies.getIamPolicy".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest}
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See the operation
           * documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
         the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See the operation
           * documentation for the appropriate value for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Imports all taxonomies and their policy tags to a project as new taxonomies. This method provides
         * a bulk taxonomy / policy tag creation using nested proto structure.
         *
         * Create a request for the method "taxonomies.import".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link DataCatalogImport#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Resource name of project that the imported taxonomies will belong to.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest}
         * @return the request
         */
        public DataCatalogImport datacatalogImport(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest content) throws java.io.IOException {
          DataCatalogImport result = new DataCatalogImport(parent, content);
          initialize(result);
          return result;
        }

        public class DataCatalogImport extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/taxonomies:import";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Imports all taxonomies and their policy tags to a project as new taxonomies. This method
           * provides a bulk taxonomy / policy tag creation using nested proto structure.
           *
           * Create a request for the method "taxonomies.import".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link DataCatalogImport#execute()} method to invoke the remote
           * operation. <p> {@link DataCatalogImport#initialize(com.google.api.client.googleapis.services.Ab
           * stractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. Resource name of project that the imported taxonomies will belong to.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest}
           * @since 1.13
           */
          protected DataCatalogImport(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public DataCatalogImport set$Xgafv(java.lang.String $Xgafv) {
            return (DataCatalogImport) super.set$Xgafv($Xgafv);
          }

          @Override
          public DataCatalogImport setAccessToken(java.lang.String accessToken) {
            return (DataCatalogImport) super.setAccessToken(accessToken);
          }

          @Override
          public DataCatalogImport setAlt(java.lang.String alt) {
            return (DataCatalogImport) super.setAlt(alt);
          }

          @Override
          public DataCatalogImport setCallback(java.lang.String callback) {
            return (DataCatalogImport) super.setCallback(callback);
          }

          @Override
          public DataCatalogImport setFields(java.lang.String fields) {
            return (DataCatalogImport) super.setFields(fields);
          }

          @Override
          public DataCatalogImport setKey(java.lang.String key) {
            return (DataCatalogImport) super.setKey(key);
          }

          @Override
          public DataCatalogImport setOauthToken(java.lang.String oauthToken) {
            return (DataCatalogImport) super.setOauthToken(oauthToken);
          }

          @Override
          public DataCatalogImport setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DataCatalogImport) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DataCatalogImport setQuotaUser(java.lang.String quotaUser) {
            return (DataCatalogImport) super.setQuotaUser(quotaUser);
          }

          @Override
          public DataCatalogImport setUploadType(java.lang.String uploadType) {
            return (DataCatalogImport) super.setUploadType(uploadType);
          }

          @Override
          public DataCatalogImport setUploadProtocol(java.lang.String uploadProtocol) {
            return (DataCatalogImport) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of project that the imported taxonomies will belong to. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Resource name of project that the imported taxonomies will belong to.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Resource name of project that the imported taxonomies will belong to. */
          public DataCatalogImport setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public DataCatalogImport set(String parameterName, Object value) {
            return (DataCatalogImport) super.set(parameterName, value);
          }
        }
        /**
         * Lists all taxonomies in a project in a particular location that the caller has permission to
         * view.
         *
         * Create a request for the method "taxonomies.list".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Resource name of the project to list the taxonomies of.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/taxonomies";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists all taxonomies in a project in a particular location that the caller has permission to
           * view.
           *
           * Create a request for the method "taxonomies.list".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Resource name of the project to list the taxonomies of.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Resource name of the project to list the taxonomies of. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Resource name of the project to list the taxonomies of.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Resource name of the project to list the taxonomies of. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of items to return. Must be a value between 1 and 1000. If not set,
           * defaults to 50.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to
         50.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of items to return. Must be a value between 1 and 1000. If not set,
           * defaults to 50.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * The next_page_token value returned from a previous list request, if any. If not set,
           * defaults to an empty string.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The next_page_token value returned from a previous list request, if any. If not set, defaults to an
         empty string.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * The next_page_token value returned from a previous list request, if any. If not set,
           * defaults to an empty string.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a taxonomy.
         *
         * Create a request for the method "taxonomies.patch".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Resource name of this taxonomy, whose format is:
         *        "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");

          /**
           * Updates a taxonomy.
           *
           * Create a request for the method "taxonomies.patch".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Resource name of this taxonomy, whose format is:
         *        "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy content) {
            super(DataCatalog.this, "PATCH", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1Taxonomy.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. Resource name of this taxonomy, whose format is:
           * "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Resource name of this taxonomy, whose format is:
         "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. Resource name of this taxonomy, whose format is:
           * "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * The update mask applies to the resource. For the `FieldMask` definition, see
           * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
           * If not set, defaults to all of the fields that are allowed to update.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** The update mask applies to the resource. For the `FieldMask` definition, see
         https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set,
         defaults to all of the fields that are allowed to update.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * The update mask applies to the resource. For the `FieldMask` definition, see
           * https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
           * If not set, defaults to all of the fields that are allowed to update.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Sets the IAM policy for a taxonomy or a policy tag.
         *
         * Create a request for the method "taxonomies.setIamPolicy".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Policy> {

          private static final String REST_PATH = "v1beta1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");

          /**
           * Sets the IAM policy for a taxonomy or a policy tag.
           *
           * Create a request for the method "taxonomies.setIamPolicy".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
           * operation. <p> {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See the operation
           * documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
         the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See the operation
           * documentation for the appropriate value for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Returns the permissions that a caller has on the specified taxonomy or policy tag.
         *
         * Create a request for the method "taxonomies.testIamPermissions".
         *
         * This request holds the parameters needed by the datacatalog server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
         *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1beta1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");

          /**
           * Returns the permissions that a caller has on the specified taxonomy or policy tag.
           *
           * Create a request for the method "taxonomies.testIamPermissions".
           *
           * This request holds the parameters needed by the the datacatalog server.  After setting any
           * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
         *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest content) {
            super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See the operation
         documentation for the appropriate value for this field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See the
           * operation documentation for the appropriate value for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the PolicyTags collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code DataCatalog datacatalog = new DataCatalog(...);}
         *   {@code DataCatalog.PolicyTags.List request = datacatalog.policyTags().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public PolicyTags policyTags() {
          return new PolicyTags();
        }

        /**
         * The "policyTags" collection of methods.
         */
        public class PolicyTags {

          /**
           * Creates a policy tag in the specified taxonomy.
           *
           * Create a request for the method "policyTags.create".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Resource name of the taxonomy that the policy tag will belong to.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag> {

            private static final String REST_PATH = "v1beta1/{+parent}/policyTags";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");

            /**
             * Creates a policy tag in the specified taxonomy.
             *
             * Create a request for the method "policyTags.create".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
             * <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Resource name of the taxonomy that the policy tag will belong to.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag content) {
              super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Resource name of the taxonomy that the policy tag will belong to. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Resource name of the taxonomy that the policy tag will belong to.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Resource name of the taxonomy that the policy tag will belong to. */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a policy tag. Also deletes all of its descendant policy tags.
           *
           * Create a request for the method "policyTags.delete".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the policy tag to be deleted. All of its descendant policy tags will also
           *        be deleted.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Empty> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");

            /**
             * Deletes a policy tag. Also deletes all of its descendant policy tags.
             *
             * Create a request for the method "policyTags.delete".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             * <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the policy tag to be deleted. All of its descendant policy tags will also
           *        be deleted.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(DataCatalog.this, "DELETE", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.Empty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Resource name of the policy tag to be deleted. All of its descendant policy
             * tags will also be deleted.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the policy tag to be deleted. All of its descendant policy tags will
           also be deleted.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Resource name of the policy tag to be deleted. All of its descendant policy
             * tags will also be deleted.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a policy tag.
           *
           * Create a request for the method "policyTags.get".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the requested policy tag.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");

            /**
             * Gets a policy tag.
             *
             * Create a request for the method "policyTags.get".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
             * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the requested policy tag.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Resource name of the requested policy tag. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the requested policy tag.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Resource name of the requested policy tag. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the IAM policy for a taxonomy or a policy tag.
           *
           * Create a request for the method "policyTags.getIamPolicy".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
           *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest}
           * @return the request
           */
          public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest content) throws java.io.IOException {
            GetIamPolicy result = new GetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class GetIamPolicy extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Policy> {

            private static final String REST_PATH = "v1beta1/{+resource}:getIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");

            /**
             * Gets the IAM policy for a taxonomy or a policy tag.
             *
             * Create a request for the method "policyTags.getIamPolicy".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being requested. See the operation documentation for
           *        the appropriate value for this field.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest}
             * @since 1.13
             */
            protected GetIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.GetIamPolicyRequest content) {
              super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
            }

            @Override
            public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (GetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (GetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public GetIamPolicy setAlt(java.lang.String alt) {
              return (GetIamPolicy) super.setAlt(alt);
            }

            @Override
            public GetIamPolicy setCallback(java.lang.String callback) {
              return (GetIamPolicy) super.setCallback(callback);
            }

            @Override
            public GetIamPolicy setFields(java.lang.String fields) {
              return (GetIamPolicy) super.setFields(fields);
            }

            @Override
            public GetIamPolicy setKey(java.lang.String key) {
              return (GetIamPolicy) super.setKey(key);
            }

            @Override
            public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (GetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (GetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetIamPolicy setUploadType(java.lang.String uploadType) {
              return (GetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
           the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being requested. See the operation
             * documentation for the appropriate value for this field.
             */
            public GetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public GetIamPolicy set(String parameterName, Object value) {
              return (GetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Lists all policy tags in a taxonomy.
           *
           * Create a request for the method "policyTags.list".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Resource name of the taxonomy to list the policy tags of.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse> {

            private static final String REST_PATH = "v1beta1/{+parent}/policyTags";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");

            /**
             * Lists all policy tags in a taxonomy.
             *
             * Create a request for the method "policyTags.list".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
             * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Resource name of the taxonomy to list the policy tags of.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(DataCatalog.this, "GET", REST_PATH, null, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Resource name of the taxonomy to list the policy tags of. */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Resource name of the taxonomy to list the policy tags of.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /** Required. Resource name of the taxonomy to list the policy tags of. */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * The maximum number of items to return. Must be a value between 1 and 1000. If not
             * set, defaults to 50.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to
           50.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * The maximum number of items to return. Must be a value between 1 and 1000. If not
             * set, defaults to 50.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * The next_page_token value returned from a previous List request, if any. If not set,
             * defaults to an empty string.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** The next_page_token value returned from a previous List request, if any. If not set, defaults to an
           empty string.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * The next_page_token value returned from a previous List request, if any. If not set,
             * defaults to an empty string.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a policy tag.
           *
           * Create a request for the method "policyTags.patch".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Output only. Resource name of this policy tag, whose format is:
           *        "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id
           *        }".
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag> {

            private static final String REST_PATH = "v1beta1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");

            /**
             * Updates a policy tag.
             *
             * Create a request for the method "policyTags.patch".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
             * <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Output only. Resource name of this policy tag, whose format is:
           *        "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id
           *        }".
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag content) {
              super(DataCatalog.this, "PATCH", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.GoogleCloudDatacatalogV1beta1PolicyTag.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Output only. Resource name of this policy tag, whose format is: "projects/{project_nu
             * mber}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Output only. Resource name of this policy tag, whose format is:
           "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Output only. Resource name of this policy tag, whose format is: "projects/{project_nu
             * mber}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * The update mask applies to the resource. Only display_name, description and
             * parent_policy_tag can be updated and thus can be listed in the mask. If update_mask
             * is not provided, all allowed fields (i.e. display_name, description and parent) will
             * be updated. For more information including the `FieldMask` definition, see
             * https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the
             * fields that are allowed to update.
             */
            @com.google.api.client.util.Key
            private String updateMask;

            /** The update mask applies to the resource. Only display_name, description and parent_policy_tag can
           be updated and thus can be listed in the mask. If update_mask is not provided, all allowed fields
           (i.e. display_name, description and parent) will be updated. For more information including the
           `FieldMask` definition, see https://developers.google.com/protocol-
           buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are
           allowed to update.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /**
             * The update mask applies to the resource. Only display_name, description and
             * parent_policy_tag can be updated and thus can be listed in the mask. If update_mask
             * is not provided, all allowed fields (i.e. display_name, description and parent) will
             * be updated. For more information including the `FieldMask` definition, see
             * https://developers.google.com/protocol-
             * buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the
             * fields that are allowed to update.
             */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }
          /**
           * Sets the IAM policy for a taxonomy or a policy tag.
           *
           * Create a request for the method "policyTags.setIamPolicy".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See the operation documentation for
           *        the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest}
           * @return the request
           */
          public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest content) throws java.io.IOException {
            SetIamPolicy result = new SetIamPolicy(resource, content);
            initialize(result);
            return result;
          }

          public class SetIamPolicy extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.Policy> {

            private static final String REST_PATH = "v1beta1/{+resource}:setIamPolicy";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");

            /**
             * Sets the IAM policy for a taxonomy or a policy tag.
             *
             * Create a request for the method "policyTags.setIamPolicy".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
             * operation. <p> {@link
             * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy is being specified. See the operation documentation for
           *        the appropriate value for this field.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest}
             * @since 1.13
             */
            protected SetIamPolicy(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.SetIamPolicyRequest content) {
              super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.Policy.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
            }

            @Override
            public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
              return (SetIamPolicy) super.set$Xgafv($Xgafv);
            }

            @Override
            public SetIamPolicy setAccessToken(java.lang.String accessToken) {
              return (SetIamPolicy) super.setAccessToken(accessToken);
            }

            @Override
            public SetIamPolicy setAlt(java.lang.String alt) {
              return (SetIamPolicy) super.setAlt(alt);
            }

            @Override
            public SetIamPolicy setCallback(java.lang.String callback) {
              return (SetIamPolicy) super.setCallback(callback);
            }

            @Override
            public SetIamPolicy setFields(java.lang.String fields) {
              return (SetIamPolicy) super.setFields(fields);
            }

            @Override
            public SetIamPolicy setKey(java.lang.String key) {
              return (SetIamPolicy) super.setKey(key);
            }

            @Override
            public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
              return (SetIamPolicy) super.setOauthToken(oauthToken);
            }

            @Override
            public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
              return (SetIamPolicy) super.setQuotaUser(quotaUser);
            }

            @Override
            public SetIamPolicy setUploadType(java.lang.String uploadType) {
              return (SetIamPolicy) super.setUploadType(uploadType);
            }

            @Override
            public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
              return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See the operation
             * documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
           the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy is being specified. See the operation
             * documentation for the appropriate value for this field.
             */
            public SetIamPolicy setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public SetIamPolicy set(String parameterName, Object value) {
              return (SetIamPolicy) super.set(parameterName, value);
            }
          }
          /**
           * Returns the permissions that a caller has on the specified taxonomy or policy tag.
           *
           * Create a request for the method "policyTags.testIamPermissions".
           *
           * This request holds the parameters needed by the datacatalog server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
           *        documentation for the appropriate value for this field.
           * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest}
           * @return the request
           */
          public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest content) throws java.io.IOException {
            TestIamPermissions result = new TestIamPermissions(resource, content);
            initialize(result);
            return result;
          }

          public class TestIamPermissions extends DataCatalogRequest<com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsResponse> {

            private static final String REST_PATH = "v1beta1/{+resource}:testIamPermissions";

            private final java.util.regex.Pattern RESOURCE_PATTERN =
                java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");

            /**
             * Returns the permissions that a caller has on the specified taxonomy or policy tag.
             *
             * Create a request for the method "policyTags.testIamPermissions".
             *
             * This request holds the parameters needed by the the datacatalog server.  After setting any
             * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
             * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
             * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param resource REQUIRED: The resource for which the policy detail is being requested. See the operation
           *        documentation for the appropriate value for this field.
             * @param content the {@link com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest}
             * @since 1.13
             */
            protected TestIamPermissions(java.lang.String resource, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsRequest content) {
              super(DataCatalog.this, "POST", REST_PATH, content, com.google.api.services.datacatalog.v1beta1.model.TestIamPermissionsResponse.class);
              this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
            }

            @Override
            public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
              return (TestIamPermissions) super.set$Xgafv($Xgafv);
            }

            @Override
            public TestIamPermissions setAccessToken(java.lang.String accessToken) {
              return (TestIamPermissions) super.setAccessToken(accessToken);
            }

            @Override
            public TestIamPermissions setAlt(java.lang.String alt) {
              return (TestIamPermissions) super.setAlt(alt);
            }

            @Override
            public TestIamPermissions setCallback(java.lang.String callback) {
              return (TestIamPermissions) super.setCallback(callback);
            }

            @Override
            public TestIamPermissions setFields(java.lang.String fields) {
              return (TestIamPermissions) super.setFields(fields);
            }

            @Override
            public TestIamPermissions setKey(java.lang.String key) {
              return (TestIamPermissions) super.setKey(key);
            }

            @Override
            public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
              return (TestIamPermissions) super.setOauthToken(oauthToken);
            }

            @Override
            public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
              return (TestIamPermissions) super.setQuotaUser(quotaUser);
            }

            @Override
            public TestIamPermissions setUploadType(java.lang.String uploadType) {
              return (TestIamPermissions) super.setUploadType(uploadType);
            }

            @Override
            public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
              return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            @com.google.api.client.util.Key
            private java.lang.String resource;

            /** REQUIRED: The resource for which the policy detail is being requested. See the operation
           documentation for the appropriate value for this field.
             */
            public java.lang.String getResource() {
              return resource;
            }

            /**
             * REQUIRED: The resource for which the policy detail is being requested. See the
             * operation documentation for the appropriate value for this field.
             */
            public TestIamPermissions setResource(java.lang.String resource) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                    "Parameter resource must conform to the pattern " +
                    "^projects/[^/]+/locations/[^/]+/taxonomies/[^/]+/policyTags/[^/]+$");
              }
              this.resource = resource;
              return this;
            }

            @Override
            public TestIamPermissions set(String parameterName, Object value) {
              return (TestIamPermissions) super.set(parameterName, value);
            }
          }

        }
      }
    }
  }

  /**
   * Builder for {@link DataCatalog}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link DataCatalog}. */
    @Override
    public DataCatalog build() {
      return new DataCatalog(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link DataCatalogRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setDataCatalogRequestInitializer(
        DataCatalogRequestInitializer datacatalogRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(datacatalogRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
