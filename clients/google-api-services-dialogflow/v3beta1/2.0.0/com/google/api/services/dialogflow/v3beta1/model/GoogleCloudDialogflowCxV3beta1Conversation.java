/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dialogflow.v3beta1.model;

/**
 * Represents a conversation.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Dialogflow API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDialogflowCxV3beta1Conversation extends com.google.api.client.json.GenericJson {

  /**
   * Duration of the conversation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String duration;

  /**
   * Environment of the conversation. Only `name` and `display_name` are filled in this message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDialogflowCxV3beta1Environment environment;

  /**
   * Flow versions used in the conversation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.Map<String, java.lang.Long> flowVersions;

  /**
   * All the Flow the conversation has went through. Only `name` and `display_name` are filled in
   * this message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDialogflowCxV3beta1Flow> flows;

  /**
   * All the matched Intent in the conversation. Only `name` and `display_name` are filled in this
   * message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDialogflowCxV3beta1Intent> intents;

  /**
   * Interactions of the conversation. Only populated for `GetConversation` and empty for
   * `ListConversations`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDialogflowCxV3beta1ConversationInteraction> interactions;

  /**
   * The language of the conversation, which is the language of the first request in the
   * conversation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String languageCode;

  /**
   * Conversation metrics.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudDialogflowCxV3beta1ConversationMetrics metrics;

  /**
   * Identifier. The identifier of the conversation. If conversation ID is reused, interactions
   * happened later than 48 hours of the conversation's create time will be ignored. Format:
   * `projects//locations//agents//conversations/`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * All the Page the conversation has went through. Only `name` and `display_name` are filled in
   * this message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDialogflowCxV3beta1Page> pages;

  /**
   * Start time of the conversation, which is the time of the first request of the conversation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * The type of the conversation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Duration of the conversation.
   * @return value or {@code null} for none
   */
  public String getDuration() {
    return duration;
  }

  /**
   * Duration of the conversation.
   * @param duration duration or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setDuration(String duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Environment of the conversation. Only `name` and `display_name` are filled in this message.
   * @return value or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Environment getEnvironment() {
    return environment;
  }

  /**
   * Environment of the conversation. Only `name` and `display_name` are filled in this message.
   * @param environment environment or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setEnvironment(GoogleCloudDialogflowCxV3beta1Environment environment) {
    this.environment = environment;
    return this;
  }

  /**
   * Flow versions used in the conversation.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.Long> getFlowVersions() {
    return flowVersions;
  }

  /**
   * Flow versions used in the conversation.
   * @param flowVersions flowVersions or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setFlowVersions(java.util.Map<String, java.lang.Long> flowVersions) {
    this.flowVersions = flowVersions;
    return this;
  }

  /**
   * All the Flow the conversation has went through. Only `name` and `display_name` are filled in
   * this message.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDialogflowCxV3beta1Flow> getFlows() {
    return flows;
  }

  /**
   * All the Flow the conversation has went through. Only `name` and `display_name` are filled in
   * this message.
   * @param flows flows or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setFlows(java.util.List<GoogleCloudDialogflowCxV3beta1Flow> flows) {
    this.flows = flows;
    return this;
  }

  /**
   * All the matched Intent in the conversation. Only `name` and `display_name` are filled in this
   * message.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDialogflowCxV3beta1Intent> getIntents() {
    return intents;
  }

  /**
   * All the matched Intent in the conversation. Only `name` and `display_name` are filled in this
   * message.
   * @param intents intents or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setIntents(java.util.List<GoogleCloudDialogflowCxV3beta1Intent> intents) {
    this.intents = intents;
    return this;
  }

  /**
   * Interactions of the conversation. Only populated for `GetConversation` and empty for
   * `ListConversations`.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDialogflowCxV3beta1ConversationInteraction> getInteractions() {
    return interactions;
  }

  /**
   * Interactions of the conversation. Only populated for `GetConversation` and empty for
   * `ListConversations`.
   * @param interactions interactions or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setInteractions(java.util.List<GoogleCloudDialogflowCxV3beta1ConversationInteraction> interactions) {
    this.interactions = interactions;
    return this;
  }

  /**
   * The language of the conversation, which is the language of the first request in the
   * conversation.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguageCode() {
    return languageCode;
  }

  /**
   * The language of the conversation, which is the language of the first request in the
   * conversation.
   * @param languageCode languageCode or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setLanguageCode(java.lang.String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Conversation metrics.
   * @return value or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1ConversationMetrics getMetrics() {
    return metrics;
  }

  /**
   * Conversation metrics.
   * @param metrics metrics or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setMetrics(GoogleCloudDialogflowCxV3beta1ConversationMetrics metrics) {
    this.metrics = metrics;
    return this;
  }

  /**
   * Identifier. The identifier of the conversation. If conversation ID is reused, interactions
   * happened later than 48 hours of the conversation's create time will be ignored. Format:
   * `projects//locations//agents//conversations/`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Identifier. The identifier of the conversation. If conversation ID is reused, interactions
   * happened later than 48 hours of the conversation's create time will be ignored. Format:
   * `projects//locations//agents//conversations/`
   * @param name name or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * All the Page the conversation has went through. Only `name` and `display_name` are filled in
   * this message.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDialogflowCxV3beta1Page> getPages() {
    return pages;
  }

  /**
   * All the Page the conversation has went through. Only `name` and `display_name` are filled in
   * this message.
   * @param pages pages or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setPages(java.util.List<GoogleCloudDialogflowCxV3beta1Page> pages) {
    this.pages = pages;
    return this;
  }

  /**
   * Start time of the conversation, which is the time of the first request of the conversation.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Start time of the conversation, which is the time of the first request of the conversation.
   * @param startTime startTime or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * The type of the conversation.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The type of the conversation.
   * @param type type or {@code null} for none
   */
  public GoogleCloudDialogflowCxV3beta1Conversation setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1Conversation set(String fieldName, Object value) {
    return (GoogleCloudDialogflowCxV3beta1Conversation) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDialogflowCxV3beta1Conversation clone() {
    return (GoogleCloudDialogflowCxV3beta1Conversation) super.clone();
  }

}
