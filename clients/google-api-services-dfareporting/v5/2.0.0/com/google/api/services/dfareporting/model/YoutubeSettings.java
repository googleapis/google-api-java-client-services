/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dfareporting.model;

/**
 * Contains the YouTube settings.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Campaign Manager 360 API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class YoutubeSettings extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The IDs of the creatives to use for the business logo. Currently only one creative is
   * supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.lang.Long> businessLogoCreativeIds;

  /**
   * Optional. The business name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String businessName;

  /**
   * Optional. The call to actions. Currently only one call to action is supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> callToActions;

  /**
   * Optional. The descriptions. Currently only one description is supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> descriptions;

  /**
   * Optional. The headlines associated with the call to actions. Currently only one headline is
   * supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> headlines;

  /**
   * Optional. The long headlines. Currently only one long headline is supported.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> longHeadlines;

  /**
   * Optional. The IDs of the creatives to use for the business logo. Currently only one creative is
   * supported.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Long> getBusinessLogoCreativeIds() {
    return businessLogoCreativeIds;
  }

  /**
   * Optional. The IDs of the creatives to use for the business logo. Currently only one creative is
   * supported.
   * @param businessLogoCreativeIds businessLogoCreativeIds or {@code null} for none
   */
  public YoutubeSettings setBusinessLogoCreativeIds(java.util.List<java.lang.Long> businessLogoCreativeIds) {
    this.businessLogoCreativeIds = businessLogoCreativeIds;
    return this;
  }

  /**
   * Optional. The business name.
   * @return value or {@code null} for none
   */
  public java.lang.String getBusinessName() {
    return businessName;
  }

  /**
   * Optional. The business name.
   * @param businessName businessName or {@code null} for none
   */
  public YoutubeSettings setBusinessName(java.lang.String businessName) {
    this.businessName = businessName;
    return this;
  }

  /**
   * Optional. The call to actions. Currently only one call to action is supported.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getCallToActions() {
    return callToActions;
  }

  /**
   * Optional. The call to actions. Currently only one call to action is supported.
   * @param callToActions callToActions or {@code null} for none
   */
  public YoutubeSettings setCallToActions(java.util.List<java.lang.String> callToActions) {
    this.callToActions = callToActions;
    return this;
  }

  /**
   * Optional. The descriptions. Currently only one description is supported.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDescriptions() {
    return descriptions;
  }

  /**
   * Optional. The descriptions. Currently only one description is supported.
   * @param descriptions descriptions or {@code null} for none
   */
  public YoutubeSettings setDescriptions(java.util.List<java.lang.String> descriptions) {
    this.descriptions = descriptions;
    return this;
  }

  /**
   * Optional. The headlines associated with the call to actions. Currently only one headline is
   * supported.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getHeadlines() {
    return headlines;
  }

  /**
   * Optional. The headlines associated with the call to actions. Currently only one headline is
   * supported.
   * @param headlines headlines or {@code null} for none
   */
  public YoutubeSettings setHeadlines(java.util.List<java.lang.String> headlines) {
    this.headlines = headlines;
    return this;
  }

  /**
   * Optional. The long headlines. Currently only one long headline is supported.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getLongHeadlines() {
    return longHeadlines;
  }

  /**
   * Optional. The long headlines. Currently only one long headline is supported.
   * @param longHeadlines longHeadlines or {@code null} for none
   */
  public YoutubeSettings setLongHeadlines(java.util.List<java.lang.String> longHeadlines) {
    this.longHeadlines = longHeadlines;
    return this;
  }

  @Override
  public YoutubeSettings set(String fieldName, Object value) {
    return (YoutubeSettings) super.set(fieldName, value);
  }

  @Override
  public YoutubeSettings clone() {
    return (YoutubeSettings) super.clone();
  }

}
