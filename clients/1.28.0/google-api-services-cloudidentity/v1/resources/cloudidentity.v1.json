{
  "canonicalName": "Cloud Identity",
  "rootUrl": "https://cloudidentity.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "cloudidentity",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Identity API",
  "ownerName": "Google",
  "resources": {
    "groups": {
      "methods": {
        "delete": {
          "description": "Deletes a Group.",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where `group_id` is the unique ID\nassigned to the Group.",
              "required": true,
              "type": "string",
              "pattern": "^groups/[^/]+$",
              "location": "path"
            }
          },
          "flatPath": "v1/groups/{groupsId}",
          "path": "v1/{+name}",
          "id": "cloudidentity.groups.delete"
        },
        "list": {
          "description": "List groups within a customer or a domain.",
          "response": {
            "$ref": "ListGroupsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "location": "query",
              "description": "`Required`. May be made Optional in the future.\nCustomer ID to list all groups from.",
              "type": "string"
            },
            "pageToken": {
              "description": "The next_page_token value returned from a previous list request, if any.",
              "type": "string",
              "location": "query"
            },
            "pageSize": {
              "location": "query",
              "description": "Maximum number of Groups to return.\n\nView | Default | Maximum\n-----|---------|--------\nBASIC | 200 | 1000\nFULL | 50 | 500",
              "format": "int32",
              "type": "integer"
            },
            "view": {
              "location": "query",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "description": "Group resource view to be returned. Defaults to [View.BASIC]().",
              "type": "string"
            }
          },
          "flatPath": "v1/groups",
          "path": "v1/groups",
          "id": "cloudidentity.groups.list"
        },
        "create": {
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "flatPath": "v1/groups",
          "path": "v1/groups",
          "id": "cloudidentity.groups.create",
          "description": "Creates a Group.",
          "request": {
            "$ref": "Group"
          }
        },
        "lookup": {
          "description": "Looks up [resource\nname](https://cloud.google.com/apis/design/resource_names) of a Group by\nits EntityKey.",
          "response": {
            "$ref": "LookupGroupNameResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "parameters": {
            "groupKey.namespace": {
              "location": "query",
              "description": "Namespaces provide isolation for IDs, so an ID only needs to be unique\nwithin its namespace.\n\nNamespaces are currently only created as part of IdentitySource creation\nfrom Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is\ncreated corresponding to every Identity Source `identity_source_id`.",
              "type": "string"
            },
            "groupKey.id": {
              "description": "The ID of the entity within the given namespace. The ID must be unique\nwithin its namespace.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "v1/groups:lookup",
          "path": "v1/groups:lookup",
          "id": "cloudidentity.groups.lookup"
        },
        "search": {
          "response": {
            "$ref": "SearchGroupsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The next_page_token value returned from a previous search request, if any."
            },
            "pageSize": {
              "type": "integer",
              "location": "query",
              "description": "Maximum number of Groups to return.\n\nView | Default | Maximum\n-----|---------|--------\nBASIC | 200 | 1000\nFULL | 50 | 500",
              "format": "int32"
            },
            "query": {
              "location": "query",
              "description": "`Required`. Query string for performing search on groups. Users can search\non parent and label attributes of groups.\nEXACT match ('==') is supported on parent, and CONTAINS match ('in') is\nsupported on labels.",
              "type": "string"
            },
            "view": {
              "location": "query",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "description": "Group resource view to be returned. Defaults to [View.BASIC]().",
              "type": "string"
            }
          },
          "flatPath": "v1/groups:search",
          "path": "v1/groups:search",
          "id": "cloudidentity.groups.search",
          "description": "Searches for Groups."
        },
        "patch": {
          "description": "Updates a Group.",
          "request": {
            "$ref": "Group"
          },
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PATCH",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^groups/[^/]+$",
              "location": "path",
              "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where group_id is the unique ID\nassigned to the Group.\n\nMust be left blank while creating a Group."
            },
            "updateMask": {
              "location": "query",
              "description": "Editable fields: `display_name`, `description`",
              "format": "google-fieldmask",
              "type": "string"
            }
          },
          "flatPath": "v1/groups/{groupsId}",
          "path": "v1/{+name}",
          "id": "cloudidentity.groups.patch"
        },
        "get": {
          "response": {
            "$ref": "Group"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "pattern": "^groups/[^/]+$",
              "location": "path",
              "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where `group_id` is the unique ID\nassigned to the Group.",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v1/groups/{groupsId}",
          "path": "v1/{+name}",
          "id": "cloudidentity.groups.get",
          "description": "Retrieves a Group."
        }
      },
      "resources": {
        "memberships": {
          "methods": {
            "delete": {
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership to be deleted.\n\nFormat: `groups/{group_id}/memberships/{member_id}`, where `group_id` is\nthe unique ID assigned to the Group to which Membership belongs to, and\nmember_id is the unique ID assigned to the member.",
                  "required": true,
                  "type": "string",
                  "pattern": "^groups/[^/]+/memberships/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/groups/{groupsId}/memberships/{membershipsId}",
              "path": "v1/{+name}",
              "id": "cloudidentity.groups.memberships.delete",
              "description": "Deletes a Membership."
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Membership"
              },
              "parameters": {
                "name": {
                  "pattern": "^groups/[^/]+/memberships/[^/]+$",
                  "location": "path",
                  "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership to be retrieved.\n\nFormat: `groups/{group_id}/memberships/{member_id}`, where `group_id` is\nthe unique id assigned to the Group to which Membership belongs to, and\n`member_id` is the unique ID assigned to the member.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1/groups/{groupsId}/memberships/{membershipsId}",
              "id": "cloudidentity.groups.memberships.get",
              "path": "v1/{+name}",
              "description": "Retrieves a Membership."
            },
            "list": {
              "path": "v1/{+parent}/memberships",
              "id": "cloudidentity.groups.memberships.list",
              "description": "List Memberships within a Group.",
              "response": {
                "$ref": "ListMembershipsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup to list Memberships within.\n\nFormat: `groups/{group_id}`, where `group_id` is the unique ID assigned to\nthe Group.",
                  "required": true,
                  "type": "string",
                  "pattern": "^groups/[^/]+$",
                  "location": "path"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The next_page_token value returned from a previous list request, if any.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Maximum number of Memberships to return.\n\nView | Default | Maximum\n-----|---------|--------\nBASIC | 200 | 1000\nFULL | 50 | 500",
                  "format": "int32",
                  "type": "integer"
                },
                "view": {
                  "description": "Membership resource view to be returned. Defaults to View.BASIC.",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "BASIC",
                    "FULL"
                  ]
                }
              },
              "flatPath": "v1/groups/{groupsId}/memberships"
            },
            "create": {
              "description": "Creates a Membership.",
              "request": {
                "$ref": "Membership"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup to create Membership within. Format: `groups/{group_id}`, where\n`group_id` is the unique ID assigned to the Group.",
                  "required": true,
                  "type": "string",
                  "pattern": "^groups/[^/]+$"
                }
              },
              "flatPath": "v1/groups/{groupsId}/memberships",
              "id": "cloudidentity.groups.memberships.create",
              "path": "v1/{+parent}/memberships"
            },
            "lookup": {
              "description": "Looks up [resource\nname](https://cloud.google.com/apis/design/resource_names) of a Membership\nwithin a Group by member's EntityKey.",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "LookupMembershipNameResponse"
              },
              "parameters": {
                "memberKey.id": {
                  "description": "The ID of the entity within the given namespace. The ID must be unique\nwithin its namespace.",
                  "type": "string",
                  "location": "query"
                },
                "memberKey.namespace": {
                  "description": "Namespaces provide isolation for IDs, so an ID only needs to be unique\nwithin its namespace.\n\nNamespaces are currently only created as part of IdentitySource creation\nfrom Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is\ncreated corresponding to every Identity Source `identity_source_id`.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup to lookup Membership within.\n\nFormat: `groups/{group_id}`, where `group_id` is the unique ID assigned to\nthe Group.",
                  "required": true,
                  "type": "string",
                  "pattern": "^groups/[^/]+$"
                }
              },
              "flatPath": "v1/groups/{groupsId}/memberships:lookup",
              "id": "cloudidentity.groups.memberships.lookup",
              "path": "v1/{+parent}/memberships:lookup"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    }
  },
  "version": "v1",
  "baseUrl": "https://cloudidentity.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "API for provisioning and managing identity resources.",
  "servicePath": "",
  "basePath": "",
  "revision": "20181218",
  "documentationLink": "https://cloud.google.com/identity/",
  "id": "cloudidentity:v1",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "Group": {
      "description": "Resource representing a Group.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The Group's display name.",
          "type": "string"
        },
        "description": {
          "description": "An extended description to help users determine the purpose of a Group. For\nexample, you can include information about who should join the Group, the\ntypes of messages to send to the Group, links to FAQs about the Group, or\nrelated Groups. Maximum length is 4,096 characters.",
          "type": "string"
        },
        "parent": {
          "description": "The entity under which this Group resides in Cloud Identity resource\nhierarchy. Must be set when creating a Group, read-only afterwards.\n\nCurrently allowed types: `identitysources`.",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the Group was created.\nOutput only.",
          "format": "google-datetime",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "`Required`. Labels for Group resource.\nFor creating Groups under a namespace, set label key to\n'labels/system/groups/external' and label value as empty.",
          "type": "object"
        },
        "updateTime": {
          "description": "The time when the Group was last updated.\nOutput only.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where group_id is the unique ID\nassigned to the Group.\n\nMust be left blank while creating a Group.",
          "type": "string"
        },
        "groupKey": {
          "$ref": "EntityKey",
          "description": "EntityKey of the Group.\n\nMust be set when creating a Group, read-only afterwards."
        }
      },
      "id": "Group"
    },
    "Membership": {
      "description": "Resource representing a Membership within a Group",
      "type": "object",
      "properties": {
        "preferredMemberKey": {
          "$ref": "EntityKey",
          "description": "EntityKey of the entity to be added as the member. Must be set while\ncreating a Membership, read-only afterwards.\n\nCurrently allowed entity types: `Users`, `Groups`."
        },
        "createTime": {
          "type": "string",
          "description": "Creation timestamp of the Membership. Output only.",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Last updated timestamp of the Membership. Output only.",
          "format": "google-datetime",
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "MembershipRole"
          },
          "description": "Roles for a member within the Group.\n\nCurrently supported MembershipRoles: `\"MEMBER\"`."
        },
        "name": {
          "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership in the format: `groups/{group_id}/memberships/{member_id}`, where\ngroup_id is the unique ID assigned to the Group to which Membership belongs\nto, and member_id is the unique ID assigned to the member\n\nMust be left blank while creating a Membership.",
          "type": "string"
        }
      },
      "id": "Membership"
    },
    "Operation": {
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
          "type": "string"
        }
      },
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object"
    },
    "LookupMembershipNameResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership being looked up.\n\nFormat: `groups/{group_id}/memberships/{member_id}`, where `group_id` is\nthe unique ID assigned to the Group to which Membership belongs to, and\n`member_id` is the unique ID assigned to the member."
        }
      },
      "id": "LookupMembershipNameResponse"
    },
    "MembershipRole": {
      "description": "Resource representing a role within a Membership.",
      "type": "object",
      "properties": {
        "name": {
          "description": "MembershipRole in string format.\n\nCurrently supported MembershipRoles: `\"MEMBER\"`.",
          "type": "string"
        }
      },
      "id": "MembershipRole"
    },
    "SearchGroupsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results available for specified query.",
          "type": "string"
        },
        "groups": {
          "description": "List of Groups satisfying the search query.",
          "type": "array",
          "items": {
            "$ref": "Group"
          }
        }
      },
      "id": "SearchGroupsResponse",
      "type": "object"
    },
    "EntityKey": {
      "description": "An EntityKey uniquely identifies an Entity. Namespaces are used to provide\nisolation for IDs. A single ID can be reused across namespaces but the\ncombination of a namespace and an ID must be unique.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the entity within the given namespace. The ID must be unique\nwithin its namespace.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespaces provide isolation for IDs, so an ID only needs to be unique\nwithin its namespace.\n\nNamespaces are currently only created as part of IdentitySource creation\nfrom Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is\ncreated corresponding to every Identity Source `identity_source_id`.",
          "type": "string"
        }
      },
      "id": "EntityKey"
    },
    "LookupGroupNameResponse": {
      "type": "object",
      "properties": {
        "name": {
          "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where `group_id` is the unique ID\nassigned to the Group.",
          "type": "string"
        }
      },
      "id": "LookupGroupNameResponse"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "Status"
    },
    "ListMembershipsResponse": {
      "type": "object",
      "properties": {
        "memberships": {
          "description": "List of Memberships.",
          "type": "array",
          "items": {
            "$ref": "Membership"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results available for listing.",
          "type": "string"
        }
      },
      "id": "ListMembershipsResponse"
    },
    "ListGroupsResponse": {
      "description": "Response message for ListGroups operation.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results available for listing."
        },
        "groups": {
          "description": "Groups returned in response to list request.\nThe results are not sorted.",
          "type": "array",
          "items": {
            "$ref": "Group"
          }
        }
      },
      "id": "ListGroupsResponse"
    }
  },
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  }
}
