/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The best suggested name to use for the Person from the available source fields, which may include
 * FileAs, Name, Org, Email, IM, Phone, ... Rough source container priority order is Contact, then
 * Profile, then Place.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiBestDisplayName extends com.google.api.client.json.GenericJson {

  /**
   * The container the suggested name was sourced from
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String containerType;

  /**
   * The display name. This name is intended to be the best name to display for this Person. It may
   * be built from a variety of fields, even if those fields are not explicitly requested in the
   * request mask. Generally, the display name is formatted in 'first last' format. If the name
   * appears to be a CJK name (as determined by a heuristic), the 'last first' format will be used.
   * There may be other cases that the 'last first' format is used which are not documented here.
   * See the code at:
   * http://google3/java/com/google/focus/backend/client/DisplayNameFormatter.java?l=659=351360938
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * The display name, always in 'last first' format. This field does not depend on the format of
   * `display_name` and will always be in 'last first' format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayNameLastFirst;

  /**
   * The container the suggested name was sourced from
   * @return value or {@code null} for none
   */
  public java.lang.String getContainerType() {
    return containerType;
  }

  /**
   * The container the suggested name was sourced from
   * @param containerType containerType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiBestDisplayName setContainerType(java.lang.String containerType) {
    this.containerType = containerType;
    return this;
  }

  /**
   * The display name. This name is intended to be the best name to display for this Person. It may
   * be built from a variety of fields, even if those fields are not explicitly requested in the
   * request mask. Generally, the display name is formatted in 'first last' format. If the name
   * appears to be a CJK name (as determined by a heuristic), the 'last first' format will be used.
   * There may be other cases that the 'last first' format is used which are not documented here.
   * See the code at:
   * http://google3/java/com/google/focus/backend/client/DisplayNameFormatter.java?l=659=351360938
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * The display name. This name is intended to be the best name to display for this Person. It may
   * be built from a variety of fields, even if those fields are not explicitly requested in the
   * request mask. Generally, the display name is formatted in 'first last' format. If the name
   * appears to be a CJK name (as determined by a heuristic), the 'last first' format will be used.
   * There may be other cases that the 'last first' format is used which are not documented here.
   * See the code at:
   * http://google3/java/com/google/focus/backend/client/DisplayNameFormatter.java?l=659=351360938
   * @param displayName displayName or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiBestDisplayName setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name, always in 'last first' format. This field does not depend on the format of
   * `display_name` and will always be in 'last first' format.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayNameLastFirst() {
    return displayNameLastFirst;
  }

  /**
   * The display name, always in 'last first' format. This field does not depend on the format of
   * `display_name` and will always be in 'last first' format.
   * @param displayNameLastFirst displayNameLastFirst or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiBestDisplayName setDisplayNameLastFirst(java.lang.String displayNameLastFirst) {
    this.displayNameLastFirst = displayNameLastFirst;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiBestDisplayName set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiBestDisplayName) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiBestDisplayName clone() {
    return (AppsPeopleOzExternalMergedpeopleapiBestDisplayName) super.clone();
  }

}
