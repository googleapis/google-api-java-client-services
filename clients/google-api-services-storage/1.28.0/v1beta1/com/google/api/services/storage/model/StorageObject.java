/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.storage.model;

/**
 * An object.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Storage JSON API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class StorageObject extends com.google.api.client.json.GenericJson {

  /**
   * Access controls on the object.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<ObjectAccessControl> acl;

  /**
   * The bucket containing this object.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bucket;

  /**
   * Cache-Control directive for the object data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cacheControl;

  /**
   * Content-Disposition of the object data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String contentDisposition;

  /**
   * Content-Encoding of the object data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String contentEncoding;

  /**
   * Content-Language of the object data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String contentLanguage;

  /**
   * The ID of the object.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * The kind of item this is. For objects, this is always storage#object.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * Object media data. Provided on your behalf when uploading raw media or multipart/related with
   * an auxiliary media part.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Media media;

  /**
   * User-provided metadata, in key/value pairs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> metadata;

  /**
   * The name of this object. Required if not specified by URL parameter.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The owner of the object. This will always be the uploader of the object.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Owner owner;

  /**
   * The link to this object.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String selfLink;

  /**
   * Access controls on the object.
   * @return value or {@code null} for none
   */
  public java.util.List<ObjectAccessControl> getAcl() {
    return acl;
  }

  /**
   * Access controls on the object.
   * @param acl acl or {@code null} for none
   */
  public StorageObject setAcl(java.util.List<ObjectAccessControl> acl) {
    this.acl = acl;
    return this;
  }

  /**
   * The bucket containing this object.
   * @return value or {@code null} for none
   */
  public java.lang.String getBucket() {
    return bucket;
  }

  /**
   * The bucket containing this object.
   * @param bucket bucket or {@code null} for none
   */
  public StorageObject setBucket(java.lang.String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Cache-Control directive for the object data.
   * @return value or {@code null} for none
   */
  public java.lang.String getCacheControl() {
    return cacheControl;
  }

  /**
   * Cache-Control directive for the object data.
   * @param cacheControl cacheControl or {@code null} for none
   */
  public StorageObject setCacheControl(java.lang.String cacheControl) {
    this.cacheControl = cacheControl;
    return this;
  }

  /**
   * Content-Disposition of the object data.
   * @return value or {@code null} for none
   */
  public java.lang.String getContentDisposition() {
    return contentDisposition;
  }

  /**
   * Content-Disposition of the object data.
   * @param contentDisposition contentDisposition or {@code null} for none
   */
  public StorageObject setContentDisposition(java.lang.String contentDisposition) {
    this.contentDisposition = contentDisposition;
    return this;
  }

  /**
   * Content-Encoding of the object data.
   * @return value or {@code null} for none
   */
  public java.lang.String getContentEncoding() {
    return contentEncoding;
  }

  /**
   * Content-Encoding of the object data.
   * @param contentEncoding contentEncoding or {@code null} for none
   */
  public StorageObject setContentEncoding(java.lang.String contentEncoding) {
    this.contentEncoding = contentEncoding;
    return this;
  }

  /**
   * Content-Language of the object data.
   * @return value or {@code null} for none
   */
  public java.lang.String getContentLanguage() {
    return contentLanguage;
  }

  /**
   * Content-Language of the object data.
   * @param contentLanguage contentLanguage or {@code null} for none
   */
  public StorageObject setContentLanguage(java.lang.String contentLanguage) {
    this.contentLanguage = contentLanguage;
    return this;
  }

  /**
   * The ID of the object.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * The ID of the object.
   * @param id id or {@code null} for none
   */
  public StorageObject setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * The kind of item this is. For objects, this is always storage#object.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * The kind of item this is. For objects, this is always storage#object.
   * @param kind kind or {@code null} for none
   */
  public StorageObject setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Object media data. Provided on your behalf when uploading raw media or multipart/related with
   * an auxiliary media part.
   * @return value or {@code null} for none
   */
  public Media getMedia() {
    return media;
  }

  /**
   * Object media data. Provided on your behalf when uploading raw media or multipart/related with
   * an auxiliary media part.
   * @param media media or {@code null} for none
   */
  public StorageObject setMedia(Media media) {
    this.media = media;
    return this;
  }

  /**
   * User-provided metadata, in key/value pairs.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getMetadata() {
    return metadata;
  }

  /**
   * User-provided metadata, in key/value pairs.
   * @param metadata metadata or {@code null} for none
   */
  public StorageObject setMetadata(java.util.Map<String, java.lang.String> metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * The name of this object. Required if not specified by URL parameter.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The name of this object. Required if not specified by URL parameter.
   * @param name name or {@code null} for none
   */
  public StorageObject setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The owner of the object. This will always be the uploader of the object.
   * @return value or {@code null} for none
   */
  public Owner getOwner() {
    return owner;
  }

  /**
   * The owner of the object. This will always be the uploader of the object.
   * @param owner owner or {@code null} for none
   */
  public StorageObject setOwner(Owner owner) {
    this.owner = owner;
    return this;
  }

  /**
   * The link to this object.
   * @return value or {@code null} for none
   */
  public java.lang.String getSelfLink() {
    return selfLink;
  }

  /**
   * The link to this object.
   * @param selfLink selfLink or {@code null} for none
   */
  public StorageObject setSelfLink(java.lang.String selfLink) {
    this.selfLink = selfLink;
    return this;
  }

  @Override
  public StorageObject set(String fieldName, Object value) {
    return (StorageObject) super.set(fieldName, value);
  }

  @Override
  public StorageObject clone() {
    return (StorageObject) super.clone();
  }

  /**
   * Object media data. Provided on your behalf when uploading raw media or multipart/related with an
   * auxiliary media part.
   */
  public static final class Media extends com.google.api.client.json.GenericJson {

    /**
     * Hash algorithm used. Currently only MD5 is supported. Required if a hash is provided.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String algorithm;

    /**
     * Content-Type of the object data.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String contentType;

    /**
     * URL-safe Base64-encoded data. This property can be used to insert objects under 64KB in size,
     * and will only be returned in response to the get method for objects so created. When this
     * resource is returned in response to the list method, this property is omitted.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String data;

    /**
     * Hash of the data. Required if a hash algorithm is provided.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String hash;

    /**
     * Content-Length of the data in bytes.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key @com.google.api.client.json.JsonString
    private java.math.BigInteger length;

    /**
     * Media download link.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String link;

    /**
     * Creation time of the data in RFC 3339 format.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private com.google.api.client.util.DateTime timeCreated;

    /**
     * Hash algorithm used. Currently only MD5 is supported. Required if a hash is provided.
     * @return value or {@code null} for none
     */
    public java.lang.String getAlgorithm() {
      return algorithm;
    }

    /**
     * Hash algorithm used. Currently only MD5 is supported. Required if a hash is provided.
     * @param algorithm algorithm or {@code null} for none
     */
    public Media setAlgorithm(java.lang.String algorithm) {
      this.algorithm = algorithm;
      return this;
    }

    /**
     * Content-Type of the object data.
     * @return value or {@code null} for none
     */
    public java.lang.String getContentType() {
      return contentType;
    }

    /**
     * Content-Type of the object data.
     * @param contentType contentType or {@code null} for none
     */
    public Media setContentType(java.lang.String contentType) {
      this.contentType = contentType;
      return this;
    }

    /**
     * URL-safe Base64-encoded data. This property can be used to insert objects under 64KB in size,
     * and will only be returned in response to the get method for objects so created. When this
     * resource is returned in response to the list method, this property is omitted.
     * @see #decodeData()
     * @return value or {@code null} for none
     */
    public java.lang.String getData() {
      return data;
    }

    /**
     * URL-safe Base64-encoded data. This property can be used to insert objects under 64KB in size,
     * and will only be returned in response to the get method for objects so created. When this
     * resource is returned in response to the list method, this property is omitted.
     * @see #getData()
     * @return Base64 decoded value or {@code null} for none
     *
     * @since 1.14
     */
    public byte[] decodeData() {
      return com.google.api.client.util.Base64.decodeBase64(data);
    }

    /**
     * URL-safe Base64-encoded data. This property can be used to insert objects under 64KB in size,
     * and will only be returned in response to the get method for objects so created. When this
     * resource is returned in response to the list method, this property is omitted.
     * @see #encodeData()
     * @param data data or {@code null} for none
     */
    public Media setData(java.lang.String data) {
      this.data = data;
      return this;
    }

    /**
     * URL-safe Base64-encoded data. This property can be used to insert objects under 64KB in size,
     * and will only be returned in response to the get method for objects so created. When this
     * resource is returned in response to the list method, this property is omitted.
     * @see #setData()
     *
     * <p>
     * The value is encoded Base64 or {@code null} for none.
     * </p>
     *
     * @since 1.14
     */
    public Media encodeData(byte[] data) {
      this.data = com.google.api.client.util.Base64.encodeBase64URLSafeString(data);
      return this;
    }

    /**
     * Hash of the data. Required if a hash algorithm is provided.
     * @return value or {@code null} for none
     */
    public java.lang.String getHash() {
      return hash;
    }

    /**
     * Hash of the data. Required if a hash algorithm is provided.
     * @param hash hash or {@code null} for none
     */
    public Media setHash(java.lang.String hash) {
      this.hash = hash;
      return this;
    }

    /**
     * Content-Length of the data in bytes.
     * @return value or {@code null} for none
     */
    public java.math.BigInteger getLength() {
      return length;
    }

    /**
     * Content-Length of the data in bytes.
     * @param length length or {@code null} for none
     */
    public Media setLength(java.math.BigInteger length) {
      this.length = length;
      return this;
    }

    /**
     * Media download link.
     * @return value or {@code null} for none
     */
    public java.lang.String getLink() {
      return link;
    }

    /**
     * Media download link.
     * @param link link or {@code null} for none
     */
    public Media setLink(java.lang.String link) {
      this.link = link;
      return this;
    }

    /**
     * Creation time of the data in RFC 3339 format.
     * @return value or {@code null} for none
     */
    public com.google.api.client.util.DateTime getTimeCreated() {
      return timeCreated;
    }

    /**
     * Creation time of the data in RFC 3339 format.
     * @param timeCreated timeCreated or {@code null} for none
     */
    public Media setTimeCreated(com.google.api.client.util.DateTime timeCreated) {
      this.timeCreated = timeCreated;
      return this;
    }

    @Override
    public Media set(String fieldName, Object value) {
      return (Media) super.set(fieldName, value);
    }

    @Override
    public Media clone() {
      return (Media) super.clone();
    }

  }

  /**
   * The owner of the object. This will always be the uploader of the object.
   */
  public static final class Owner extends com.google.api.client.json.GenericJson {

    /**
     * The entity, in the form user-userId.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String entity;

    /**
     * The ID for the entity.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String entityId;

    /**
     * The entity, in the form user-userId.
     * @return value or {@code null} for none
     */
    public java.lang.String getEntity() {
      return entity;
    }

    /**
     * The entity, in the form user-userId.
     * @param entity entity or {@code null} for none
     */
    public Owner setEntity(java.lang.String entity) {
      this.entity = entity;
      return this;
    }

    /**
     * The ID for the entity.
     * @return value or {@code null} for none
     */
    public java.lang.String getEntityId() {
      return entityId;
    }

    /**
     * The ID for the entity.
     * @param entityId entityId or {@code null} for none
     */
    public Owner setEntityId(java.lang.String entityId) {
      this.entityId = entityId;
      return this;
    }

    @Override
    public Owner set(String fieldName, Object value) {
      return (Owner) super.set(fieldName, value);
    }

    @Override
    public Owner clone() {
      return (Owner) super.clone();
    }

  }

}
