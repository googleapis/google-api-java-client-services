/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.language.v1beta2.model;

/**
 * Model definition for XPSResponseExplanationParameters.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Natural Language API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class XPSResponseExplanationParameters extends com.google.api.client.json.GenericJson {

  /**
   * An attribution method that computes Aumann-Shapley values taking advantage of the model's fully
   * differentiable structure. Refer to this paper for more details:
   * https://arxiv.org/abs/1703.01365
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private XPSIntegratedGradientsAttribution integratedGradientsAttribution;

  /**
   * An attribution method that redistributes Integrated Gradients attribution to segmented regions,
   * taking advantage of the model's fully differentiable structure. Refer to this paper for more
   * details: https://arxiv.org/abs/1906.02825 XRAI currently performs better on natural images,
   * like a picture of a house or an animal. If the images are taken in artificial environments,
   * like a lab or manufacturing line, or from diagnostic equipment, like x-rays or quality-control
   * cameras, use Integrated Gradients instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private XPSXraiAttribution xraiAttribution;

  /**
   * An attribution method that computes Aumann-Shapley values taking advantage of the model's fully
   * differentiable structure. Refer to this paper for more details:
   * https://arxiv.org/abs/1703.01365
   * @return value or {@code null} for none
   */
  public XPSIntegratedGradientsAttribution getIntegratedGradientsAttribution() {
    return integratedGradientsAttribution;
  }

  /**
   * An attribution method that computes Aumann-Shapley values taking advantage of the model's fully
   * differentiable structure. Refer to this paper for more details:
   * https://arxiv.org/abs/1703.01365
   * @param integratedGradientsAttribution integratedGradientsAttribution or {@code null} for none
   */
  public XPSResponseExplanationParameters setIntegratedGradientsAttribution(XPSIntegratedGradientsAttribution integratedGradientsAttribution) {
    this.integratedGradientsAttribution = integratedGradientsAttribution;
    return this;
  }

  /**
   * An attribution method that redistributes Integrated Gradients attribution to segmented regions,
   * taking advantage of the model's fully differentiable structure. Refer to this paper for more
   * details: https://arxiv.org/abs/1906.02825 XRAI currently performs better on natural images,
   * like a picture of a house or an animal. If the images are taken in artificial environments,
   * like a lab or manufacturing line, or from diagnostic equipment, like x-rays or quality-control
   * cameras, use Integrated Gradients instead.
   * @return value or {@code null} for none
   */
  public XPSXraiAttribution getXraiAttribution() {
    return xraiAttribution;
  }

  /**
   * An attribution method that redistributes Integrated Gradients attribution to segmented regions,
   * taking advantage of the model's fully differentiable structure. Refer to this paper for more
   * details: https://arxiv.org/abs/1906.02825 XRAI currently performs better on natural images,
   * like a picture of a house or an animal. If the images are taken in artificial environments,
   * like a lab or manufacturing line, or from diagnostic equipment, like x-rays or quality-control
   * cameras, use Integrated Gradients instead.
   * @param xraiAttribution xraiAttribution or {@code null} for none
   */
  public XPSResponseExplanationParameters setXraiAttribution(XPSXraiAttribution xraiAttribution) {
    this.xraiAttribution = xraiAttribution;
    return this;
  }

  @Override
  public XPSResponseExplanationParameters set(String fieldName, Object value) {
    return (XPSResponseExplanationParameters) super.set(fieldName, value);
  }

  @Override
  public XPSResponseExplanationParameters clone() {
    return (XPSResponseExplanationParameters) super.clone();
  }

}
