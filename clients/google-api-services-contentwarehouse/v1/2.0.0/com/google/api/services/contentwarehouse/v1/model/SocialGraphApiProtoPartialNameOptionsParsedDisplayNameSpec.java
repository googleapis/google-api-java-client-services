/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * These options use more sophisticated logic from a location-aware name detector to parse the full
 * name of a user into structured parts and operate on those parts. For more information on how
 * names are parsed, see the NameOccurrence proto definition: http://google3/quality/peoplesearch/na
 * medetector/detector/proto/name_occurrence.proto?l=50=334484707 Next ID: 7
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SocialGraphApiProtoPartialNameOptionsParsedDisplayNameSpec extends com.google.api.client.json.GenericJson {

  /**
   * Extract an initial from each parsed name. For example, "Niels Henrik David Bohr" yields "N. H.
   * D. B.". Other special cases are treated as follows: - Hyphenated names are broken down:
   * "Angelina Jollie-Pit" yields "A. J. P."; - Prefixes are ignored: "Prof. Albus Dumbledore"
   * yields "A. D."; - Auxiliaries are ignored: "Luís de Camões" yields "L. C.".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean allInitialsFromParsedName;

  /**
   * Show the initial of the very first name and the very last name, e.g. "Ana Maria Silva" yields
   * "A. Silva". - Hyphenated names are broken down: "Angelina Jollie-Pitt" yields "A. Pitt"; -
   * Prefixes are ignored: "Prof. Albus Dumbledore" yields "A. Dumbledore"; - Auxiliaries are
   * ignored: "Luís de Camões" yields "L. Camões".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean firstInitialAndVeryLastName;

  /**
   * Shorten the display name using the Knowledge Graph name shortener (go/short-names).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean knowledgeGraphNameShortening;

  /**
   * Which truncation indicator to use after each shortened part of the name. Will be ignored for
   * the `knowledge_graph_name_shortening` option.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String truncationIndicator;

  /**
   * Show the full very first name and all the other initials, e.g. "Ana Maria Silva" yields "Ana M.
   * S.". - Hyphenated names are broken down: "Angelina Jollie-Pit" yields "Angelina J. P."; -
   * Prefixes are ignored: "Prof. Albus Dumbledore" yields "Albus D."; - Auxiliaries are ignored:
   * "Luís de Camões" yields "Luís C.".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean veryFirstNameAndAllInitials;

  /**
   * Show the very first name only, e.g. "Ana Maria Silva" yields "Ana". - Hyphenated names are
   * broken down: "Mary-Kate Smith" yields "Mary"; - Prefixes are ignored: "Prof. Albus Dumbledore"
   * yields "Albus";
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean veryFirstNameOnly;

  /**
   * Extract an initial from each parsed name. For example, "Niels Henrik David Bohr" yields "N. H.
   * D. B.". Other special cases are treated as follows: - Hyphenated names are broken down:
   * "Angelina Jollie-Pit" yields "A. J. P."; - Prefixes are ignored: "Prof. Albus Dumbledore"
   * yields "A. D."; - Auxiliaries are ignored: "Luís de Camões" yields "L. C.".
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAllInitialsFromParsedName() {
    return allInitialsFromParsedName;
  }

  /**
   * Extract an initial from each parsed name. For example, "Niels Henrik David Bohr" yields "N. H.
   * D. B.". Other special cases are treated as follows: - Hyphenated names are broken down:
   * "Angelina Jollie-Pit" yields "A. J. P."; - Prefixes are ignored: "Prof. Albus Dumbledore"
   * yields "A. D."; - Auxiliaries are ignored: "Luís de Camões" yields "L. C.".
   * @param allInitialsFromParsedName allInitialsFromParsedName or {@code null} for none
   */
  public SocialGraphApiProtoPartialNameOptionsParsedDisplayNameSpec setAllInitialsFromParsedName(java.lang.Boolean allInitialsFromParsedName) {
    this.allInitialsFromParsedName = allInitialsFromParsedName;
    return this;
  }

  /**
   * Show the initial of the very first name and the very last name, e.g. "Ana Maria Silva" yields
   * "A. Silva". - Hyphenated names are broken down: "Angelina Jollie-Pitt" yields "A. Pitt"; -
   * Prefixes are ignored: "Prof. Albus Dumbledore" yields "A. Dumbledore"; - Auxiliaries are
   * ignored: "Luís de Camões" yields "L. Camões".
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFirstInitialAndVeryLastName() {
    return firstInitialAndVeryLastName;
  }

  /**
   * Show the initial of the very first name and the very last name, e.g. "Ana Maria Silva" yields
   * "A. Silva". - Hyphenated names are broken down: "Angelina Jollie-Pitt" yields "A. Pitt"; -
   * Prefixes are ignored: "Prof. Albus Dumbledore" yields "A. Dumbledore"; - Auxiliaries are
   * ignored: "Luís de Camões" yields "L. Camões".
   * @param firstInitialAndVeryLastName firstInitialAndVeryLastName or {@code null} for none
   */
  public SocialGraphApiProtoPartialNameOptionsParsedDisplayNameSpec setFirstInitialAndVeryLastName(java.lang.Boolean firstInitialAndVeryLastName) {
    this.firstInitialAndVeryLastName = firstInitialAndVeryLastName;
    return this;
  }

  /**
   * Shorten the display name using the Knowledge Graph name shortener (go/short-names).
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getKnowledgeGraphNameShortening() {
    return knowledgeGraphNameShortening;
  }

  /**
   * Shorten the display name using the Knowledge Graph name shortener (go/short-names).
   * @param knowledgeGraphNameShortening knowledgeGraphNameShortening or {@code null} for none
   */
  public SocialGraphApiProtoPartialNameOptionsParsedDisplayNameSpec setKnowledgeGraphNameShortening(java.lang.Boolean knowledgeGraphNameShortening) {
    this.knowledgeGraphNameShortening = knowledgeGraphNameShortening;
    return this;
  }

  /**
   * Which truncation indicator to use after each shortened part of the name. Will be ignored for
   * the `knowledge_graph_name_shortening` option.
   * @return value or {@code null} for none
   */
  public java.lang.String getTruncationIndicator() {
    return truncationIndicator;
  }

  /**
   * Which truncation indicator to use after each shortened part of the name. Will be ignored for
   * the `knowledge_graph_name_shortening` option.
   * @param truncationIndicator truncationIndicator or {@code null} for none
   */
  public SocialGraphApiProtoPartialNameOptionsParsedDisplayNameSpec setTruncationIndicator(java.lang.String truncationIndicator) {
    this.truncationIndicator = truncationIndicator;
    return this;
  }

  /**
   * Show the full very first name and all the other initials, e.g. "Ana Maria Silva" yields "Ana M.
   * S.". - Hyphenated names are broken down: "Angelina Jollie-Pit" yields "Angelina J. P."; -
   * Prefixes are ignored: "Prof. Albus Dumbledore" yields "Albus D."; - Auxiliaries are ignored:
   * "Luís de Camões" yields "Luís C.".
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVeryFirstNameAndAllInitials() {
    return veryFirstNameAndAllInitials;
  }

  /**
   * Show the full very first name and all the other initials, e.g. "Ana Maria Silva" yields "Ana M.
   * S.". - Hyphenated names are broken down: "Angelina Jollie-Pit" yields "Angelina J. P."; -
   * Prefixes are ignored: "Prof. Albus Dumbledore" yields "Albus D."; - Auxiliaries are ignored:
   * "Luís de Camões" yields "Luís C.".
   * @param veryFirstNameAndAllInitials veryFirstNameAndAllInitials or {@code null} for none
   */
  public SocialGraphApiProtoPartialNameOptionsParsedDisplayNameSpec setVeryFirstNameAndAllInitials(java.lang.Boolean veryFirstNameAndAllInitials) {
    this.veryFirstNameAndAllInitials = veryFirstNameAndAllInitials;
    return this;
  }

  /**
   * Show the very first name only, e.g. "Ana Maria Silva" yields "Ana". - Hyphenated names are
   * broken down: "Mary-Kate Smith" yields "Mary"; - Prefixes are ignored: "Prof. Albus Dumbledore"
   * yields "Albus";
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVeryFirstNameOnly() {
    return veryFirstNameOnly;
  }

  /**
   * Show the very first name only, e.g. "Ana Maria Silva" yields "Ana". - Hyphenated names are
   * broken down: "Mary-Kate Smith" yields "Mary"; - Prefixes are ignored: "Prof. Albus Dumbledore"
   * yields "Albus";
   * @param veryFirstNameOnly veryFirstNameOnly or {@code null} for none
   */
  public SocialGraphApiProtoPartialNameOptionsParsedDisplayNameSpec setVeryFirstNameOnly(java.lang.Boolean veryFirstNameOnly) {
    this.veryFirstNameOnly = veryFirstNameOnly;
    return this;
  }

  @Override
  public SocialGraphApiProtoPartialNameOptionsParsedDisplayNameSpec set(String fieldName, Object value) {
    return (SocialGraphApiProtoPartialNameOptionsParsedDisplayNameSpec) super.set(fieldName, value);
  }

  @Override
  public SocialGraphApiProtoPartialNameOptionsParsedDisplayNameSpec clone() {
    return (SocialGraphApiProtoPartialNameOptionsParsedDisplayNameSpec) super.clone();
  }

}
