/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apikeys.v2.model;

/**
 * The representation of a key managed by the API Keys API.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the API Keys API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class V2Key extends com.google.api.client.json.GenericJson {

  /**
   * Annotations is an unstructured key-value map stored with a policy that may be set by external
   * tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved
   * when modifying objects.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Output only. A timestamp identifying the time this key was originally created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. A timestamp when this key was deleted. If the resource is not deleted, this must
   * be empty.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String deleteTime;

  /**
   * Human-readable display name of this key that you can modify. The maximum length is 63
   * characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. A checksum computed by the server based on the current value of the Key resource.
   * This may be sent on update and delete requests to ensure the client has an up-to-date value
   * before proceeding. See https://google.aip.dev/154.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Output only. An encrypted and signed value held by this key. This field can be accessed only
   * through the `GetKeyString` method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String keyString;

  /**
   * Output only. The resource name of the key. The `name` has the form:
   * `projects//locations/global/keys/`. For example:
   * `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is
   * a global resource; hence the only supported value for location is `global`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Key restrictions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private V2Restrictions restrictions;

  /**
   * Optional. The email address of [the service account](https://cloud.google.com/iam/docs/service-
   * accounts) the key is bound to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAccountEmail;

  /**
   * Output only. Unique id in UUID4 format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. A timestamp identifying the time this key was last updated.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Annotations is an unstructured key-value map stored with a policy that may be set by external
   * tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved
   * when modifying objects.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Annotations is an unstructured key-value map stored with a policy that may be set by external
   * tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved
   * when modifying objects.
   * @param annotations annotations or {@code null} for none
   */
  public V2Key setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Output only. A timestamp identifying the time this key was originally created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. A timestamp identifying the time this key was originally created.
   * @param createTime createTime or {@code null} for none
   */
  public V2Key setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. A timestamp when this key was deleted. If the resource is not deleted, this must
   * be empty.
   * @return value or {@code null} for none
   */
  public String getDeleteTime() {
    return deleteTime;
  }

  /**
   * Output only. A timestamp when this key was deleted. If the resource is not deleted, this must
   * be empty.
   * @param deleteTime deleteTime or {@code null} for none
   */
  public V2Key setDeleteTime(String deleteTime) {
    this.deleteTime = deleteTime;
    return this;
  }

  /**
   * Human-readable display name of this key that you can modify. The maximum length is 63
   * characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Human-readable display name of this key that you can modify. The maximum length is 63
   * characters.
   * @param displayName displayName or {@code null} for none
   */
  public V2Key setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. A checksum computed by the server based on the current value of the Key resource.
   * This may be sent on update and delete requests to ensure the client has an up-to-date value
   * before proceeding. See https://google.aip.dev/154.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Output only. A checksum computed by the server based on the current value of the Key resource.
   * This may be sent on update and delete requests to ensure the client has an up-to-date value
   * before proceeding. See https://google.aip.dev/154.
   * @param etag etag or {@code null} for none
   */
  public V2Key setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Output only. An encrypted and signed value held by this key. This field can be accessed only
   * through the `GetKeyString` method.
   * @return value or {@code null} for none
   */
  public java.lang.String getKeyString() {
    return keyString;
  }

  /**
   * Output only. An encrypted and signed value held by this key. This field can be accessed only
   * through the `GetKeyString` method.
   * @param keyString keyString or {@code null} for none
   */
  public V2Key setKeyString(java.lang.String keyString) {
    this.keyString = keyString;
    return this;
  }

  /**
   * Output only. The resource name of the key. The `name` has the form:
   * `projects//locations/global/keys/`. For example:
   * `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is
   * a global resource; hence the only supported value for location is `global`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the key. The `name` has the form:
   * `projects//locations/global/keys/`. For example:
   * `projects/123456867718/locations/global/keys/b7ff1f9f-8275-410a-94dd-3855ee9b5dd2` NOTE: Key is
   * a global resource; hence the only supported value for location is `global`.
   * @param name name or {@code null} for none
   */
  public V2Key setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Key restrictions.
   * @return value or {@code null} for none
   */
  public V2Restrictions getRestrictions() {
    return restrictions;
  }

  /**
   * Key restrictions.
   * @param restrictions restrictions or {@code null} for none
   */
  public V2Key setRestrictions(V2Restrictions restrictions) {
    this.restrictions = restrictions;
    return this;
  }

  /**
   * Optional. The email address of [the service account](https://cloud.google.com/iam/docs/service-
   * accounts) the key is bound to.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAccountEmail() {
    return serviceAccountEmail;
  }

  /**
   * Optional. The email address of [the service account](https://cloud.google.com/iam/docs/service-
   * accounts) the key is bound to.
   * @param serviceAccountEmail serviceAccountEmail or {@code null} for none
   */
  public V2Key setServiceAccountEmail(java.lang.String serviceAccountEmail) {
    this.serviceAccountEmail = serviceAccountEmail;
    return this;
  }

  /**
   * Output only. Unique id in UUID4 format.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. Unique id in UUID4 format.
   * @param uid uid or {@code null} for none
   */
  public V2Key setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. A timestamp identifying the time this key was last updated.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. A timestamp identifying the time this key was last updated.
   * @param updateTime updateTime or {@code null} for none
   */
  public V2Key setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public V2Key set(String fieldName, Object value) {
    return (V2Key) super.set(fieldName, value);
  }

  @Override
  public V2Key clone() {
    return (V2Key) super.clone();
  }

}
