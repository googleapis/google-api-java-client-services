{
  "id": "cloudidentity:v1beta1",
  "documentationLink": "https://cloud.google.com/identity/",
  "revision": "20191027",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "LookupMembershipNameResponse": {
      "type": "object",
      "properties": {
        "name": {
          "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership being looked up.\n\nFormat: `groups/{group_id}/memberships/{member_id}`, where `group_id` is\nthe unique id assigned to the Group to which Membership belongs to, and\n`member_id` is the unique id assigned to the member.",
          "type": "string"
        }
      },
      "id": "LookupMembershipNameResponse"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        }
      },
      "id": "Operation"
    },
    "MembershipRole": {
      "description": "Resource representing a role within a Membership.",
      "type": "object",
      "properties": {
        "name": {
          "description": "MembershipRole in string format.\nCurrently supported MembershipRoles: `\"MEMBER\", \"OWNER\", \"MANAGER\"`.",
          "type": "string"
        }
      },
      "id": "MembershipRole"
    },
    "SearchGroupsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results available for specified query.",
          "type": "string"
        },
        "groups": {
          "description": "List of Groups satisfying the search query.",
          "type": "array",
          "items": {
            "$ref": "Group"
          }
        }
      },
      "id": "SearchGroupsResponse"
    },
    "EntityKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the entity within the given namespace. The id must be unique\nwithin its namespace."
        },
        "namespace": {
          "description": "Namespaces provide isolation for ids, i.e an id only needs to be unique\nwithin its namespace.\n\nNamespaces are currently only created as part of IdentitySource creation\nfrom Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is\ncreated corresponding to every Identity Source `identity_source_id`.",
          "type": "string"
        }
      },
      "id": "EntityKey",
      "description": "An EntityKey uniquely identifies an Entity. Namespaces are used to provide\nisolation for ids.  A single Id can be reused across namespaces but the\ncombination of a namespace and an id must be unique."
    },
    "LookupGroupNameResponse": {
      "type": "object",
      "properties": {
        "name": {
          "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where `group_id` is the unique id\nassigned to the Group.",
          "type": "string"
        }
      },
      "id": "LookupGroupNameResponse"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Status"
    },
    "ListMembershipsResponse": {
      "type": "object",
      "properties": {
        "memberships": {
          "description": "List of Memberships",
          "type": "array",
          "items": {
            "$ref": "Membership"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results available for listing.",
          "type": "string"
        }
      },
      "id": "ListMembershipsResponse"
    },
    "Membership": {
      "type": "object",
      "properties": {
        "memberKey": {
          "description": "Required. Immutable. EntityKey of the entity to be added as the member. Must be set while\ncreating a Membership, read-only afterwards.\n\nCurrently allowed entity types: `Users`, `Groups`.\nThis field will be deprecated soon.",
          "$ref": "EntityKey"
        },
        "updateTime": {
          "description": "Output only. Last updated timestamp of the Membership.",
          "format": "google-datetime",
          "type": "string"
        },
        "roles": {
          "description": "Roles for a member within the Group.\n\nCurrently supported MembershipRoles: `\"MEMBER\", \"OWNER\", \"MANAGER\"`.",
          "type": "array",
          "items": {
            "$ref": "MembershipRole"
          }
        },
        "name": {
          "type": "string",
          "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership in the format: `groups/{group_id}/memberships/{member_id}`,\nwhere group_id is the unique id assigned to the Group to which Membership\nbelongs to, and member_id is the unique id assigned to the member\n\nMust be left blank while creating a Membership."
        },
        "createTime": {
          "description": "Output only. Creation timestamp of the Membership.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "Membership",
      "description": "Resource representing a Membership within a Group"
    },
    "Group": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The Group's display name."
        },
        "description": {
          "description": "An extended description to help users determine the purpose of a Group. For\nexample, you can include information about who should join the Group, the\ntypes of messages to send to the Group, links to FAQs about the Group, or\nrelated Groups. Maximum length is 4,096 characters.",
          "type": "string"
        },
        "parent": {
          "description": "Required. Immutable. The entity under which this Group resides in Cloud Identity resource\nhierarchy. Must be set when creating a Group, read-only afterwards.\n\nCurrently allowed types: 'identitysources'.",
          "type": "string"
        },
        "labels": {
          "description": "Required. Labels for Group resource.\nRequired.\nFor creating Groups under a namespace, set label key to\n'labels/system/groups/external' and label value as empty.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. The time when the Group was created.\nOutput only",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time when the Group was last updated.\nOutput only",
          "format": "google-datetime"
        },
        "name": {
          "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where group_id is the unique id\nassigned to the Group.\n\nMust be left blank while creating a Group",
          "type": "string"
        },
        "additionalGroupKeys": {
          "type": "array",
          "items": {
            "$ref": "EntityKey"
          },
          "description": "Optional. Additional entity key aliases for a Group"
        },
        "groupKey": {
          "$ref": "EntityKey",
          "description": "Required. Immutable. EntityKey of the Group.\n\nMust be set when creating a Group, read-only afterwards."
        }
      },
      "id": "Group",
      "description": "Resource representing a Group"
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Cloud Identity",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-identity.groups.readonly": {
          "description": "See any Cloud Identity Groups that you can access, including group members and their emails"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-identity.groups": {
          "description": "See, change, create, and delete any of the Cloud Identity Groups that you can access, including the members of each group"
        }
      }
    }
  },
  "rootUrl": "https://cloudidentity.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "cloudidentity",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Identity API",
  "ownerName": "Google",
  "resources": {
    "groups": {
      "methods": {
        "search": {
          "description": "Searches for Groups.",
          "response": {
            "$ref": "SearchGroupsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "The next_page_token value returned from a previous search request, if any.",
              "type": "string"
            },
            "pageSize": {
              "location": "query",
              "description": "The default page size is 200 (max 1000) for the BASIC view, and 50\n(max 500) for the FULL view.",
              "format": "int32",
              "type": "integer"
            },
            "query": {
              "location": "query",
              "description": "Query string for performing search on groups.\nUsers can search on namespace and label attributes of groups.\nEXACT match ('=') is supported on namespace, and CONTAINS match (':') is\nsupported on labels. This is a `required` field.\nMultiple queries can be combined using `AND` operator. The operator is case\nsensitive.\nAn example query would be:\n\"namespace=\u003cnamespace_value\u003e AND labels:\u003clabels_value\u003e\".",
              "type": "string"
            },
            "view": {
              "type": "string",
              "location": "query",
              "enum": [
                "BASIC",
                "FULL"
              ],
              "description": "Group resource view to be returned. Defaults to [GroupView.BASIC]()."
            }
          },
          "flatPath": "v1beta1/groups:search",
          "path": "v1beta1/groups:search",
          "id": "cloudidentity.groups.search"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where `group_id` is the unique id\nassigned to the Group.",
              "required": true,
              "type": "string",
              "pattern": "^groups/[^/]+$",
              "location": "path"
            }
          },
          "flatPath": "v1beta1/groups/{groupsId}",
          "id": "cloudidentity.groups.get",
          "path": "v1beta1/{+name}",
          "description": "Retrieves a Group.",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Group"
          }
        },
        "patch": {
          "flatPath": "v1beta1/groups/{groupsId}",
          "path": "v1beta1/{+name}",
          "id": "cloudidentity.groups.patch",
          "request": {
            "$ref": "Group"
          },
          "description": "Updates a Group.",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "updateMask": {
              "location": "query",
              "description": "Editable fields: `display_name`, `description`",
              "format": "google-fieldmask",
              "type": "string"
            },
            "name": {
              "description": "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where group_id is the unique id\nassigned to the Group.\n\nMust be left blank while creating a Group",
              "required": true,
              "type": "string",
              "pattern": "^groups/[^/]+$",
              "location": "path"
            }
          }
        },
        "delete": {
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "pattern": "^groups/[^/]+$",
              "location": "path",
              "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where `group_id` is the unique id\nassigned to the Group."
            }
          },
          "flatPath": "v1beta1/groups/{groupsId}",
          "path": "v1beta1/{+name}",
          "id": "cloudidentity.groups.delete",
          "description": "Deletes a Group."
        },
        "create": {
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {},
          "flatPath": "v1beta1/groups",
          "path": "v1beta1/groups",
          "id": "cloudidentity.groups.create",
          "request": {
            "$ref": "Group"
          },
          "description": "Creates a Group."
        },
        "lookup": {
          "response": {
            "$ref": "LookupGroupNameResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-identity.groups",
            "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "groupKey.namespace": {
              "location": "query",
              "description": "Namespaces provide isolation for ids, i.e an id only needs to be unique\nwithin its namespace.\n\nNamespaces are currently only created as part of IdentitySource creation\nfrom Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is\ncreated corresponding to every Identity Source `identity_source_id`.",
              "type": "string"
            },
            "groupKey.id": {
              "location": "query",
              "description": "The id of the entity within the given namespace. The id must be unique\nwithin its namespace.",
              "type": "string"
            }
          },
          "flatPath": "v1beta1/groups:lookup",
          "path": "v1beta1/groups:lookup",
          "id": "cloudidentity.groups.lookup",
          "description": "Looks up [resource\nname](https://cloud.google.com/apis/design/resource_names) of a Group by\nits EntityKey."
        }
      },
      "resources": {
        "memberships": {
          "methods": {
            "delete": {
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-identity.groups",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership to be deleted.\n\nFormat: `groups/{group_id}/memberships/{member_id}`, where `group_id` is\nthe unique id assigned to the Group to which Membership belongs to, and\nmember_id is the unique id assigned to the member.",
                  "required": true,
                  "type": "string",
                  "pattern": "^groups/[^/]+/memberships/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1beta1/groups/{groupsId}/memberships/{membershipsId}",
              "path": "v1beta1/{+name}",
              "id": "cloudidentity.groups.memberships.delete",
              "description": "Deletes a Membership."
            },
            "get": {
              "response": {
                "$ref": "Membership"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^groups/[^/]+/memberships/[^/]+$",
                  "location": "path",
                  "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership to be retrieved.\n\nFormat: `groups/{group_id}/memberships/{member_id}`, where `group_id` is\nthe unique id assigned to the Group to which Membership belongs to, and\n`member_id` is the unique id assigned to the member.",
                  "required": true,
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-identity.groups",
                "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/groups/{groupsId}/memberships/{membershipsId}",
              "path": "v1beta1/{+name}",
              "id": "cloudidentity.groups.memberships.get",
              "description": "Retrieves a Membership."
            },
            "list": {
              "path": "v1beta1/{+parent}/memberships",
              "id": "cloudidentity.groups.memberships.list",
              "description": "List Memberships within a Group.",
              "response": {
                "$ref": "ListMembershipsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-identity.groups",
                "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "The next_page_token value returned from a previous list request, if any",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The default page size is 200 (max 1000) for the BASIC view, and 50\n(max 500) for the FULL view.",
                  "format": "int32",
                  "type": "integer"
                },
                "view": {
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "BASIC",
                    "FULL"
                  ],
                  "description": "Membership resource view to be returned. Defaults to MembershipView.BASIC."
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^groups/[^/]+$",
                  "location": "path",
                  "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup to list Memberships within.\n\nFormat: `groups/{group_id}`, where `group_id` is the unique id assigned to\nthe Group."
                }
              },
              "flatPath": "v1beta1/groups/{groupsId}/memberships"
            },
            "create": {
              "path": "v1beta1/{+parent}/memberships",
              "id": "cloudidentity.groups.memberships.create",
              "request": {
                "$ref": "Membership"
              },
              "description": "Creates a Membership.",
              "response": {
                "$ref": "Operation"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-identity.groups",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^groups/[^/]+$",
                  "location": "path",
                  "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup to create Membership within. Format: `groups/{group_id}`, where\n`group_id` is the unique id assigned to the Group.",
                  "required": true,
                  "type": "string"
                }
              },
              "flatPath": "v1beta1/groups/{groupsId}/memberships"
            },
            "lookup": {
              "description": "Looks up [resource\nname](https://cloud.google.com/apis/design/resource_names) of a Membership\nwithin a Group by member's EntityKey.",
              "response": {
                "$ref": "LookupMembershipNameResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-identity.groups",
                "https://www.googleapis.com/auth/cloud-identity.groups.readonly",
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup to lookup Membership within.\n\nFormat: `groups/{group_id}`, where `group_id` is the unique id assigned to\nthe Group.",
                  "required": true,
                  "type": "string",
                  "pattern": "^groups/[^/]+$",
                  "location": "path"
                },
                "memberKey.id": {
                  "location": "query",
                  "description": "The id of the entity within the given namespace. The id must be unique\nwithin its namespace.",
                  "type": "string"
                },
                "memberKey.namespace": {
                  "location": "query",
                  "description": "Namespaces provide isolation for ids, i.e an id only needs to be unique\nwithin its namespace.\n\nNamespaces are currently only created as part of IdentitySource creation\nfrom Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is\ncreated corresponding to every Identity Source `identity_source_id`.",
                  "type": "string"
                }
              },
              "flatPath": "v1beta1/groups/{groupsId}/memberships:lookup",
              "path": "v1beta1/{+parent}/memberships:lookup",
              "id": "cloudidentity.groups.memberships.lookup"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    }
  },
  "version": "v1beta1",
  "baseUrl": "https://cloudidentity.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "API for provisioning and managing identity resources.",
  "servicePath": "",
  "basePath": ""
}
