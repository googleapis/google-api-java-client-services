/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.androidpublisher.model;

/**
 * Request message to update the state of a one-time product offer.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Play Android Developer API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class UpdateOneTimeProductOfferStateRequest extends com.google.api.client.json.GenericJson {

  /**
   * Activates an offer. Once activated, the offer is available to users, as long as its conditions
   * are met.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ActivateOneTimeProductOfferRequest activateOneTimeProductOfferRequest;

  /**
   * Cancels an offer. Once cancelled, the offer is not available to users. Any pending orders
   * related to this offer will be cancelled. This state transition is specific to pre-orders.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CancelOneTimeProductOfferRequest cancelOneTimeProductOfferRequest;

  /**
   * Deactivates an offer. Once deactivated, the offer is no longer available to users. This state
   * transition is specific to discounted offers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DeactivateOneTimeProductOfferRequest deactivateOneTimeProductOfferRequest;

  /**
   * Activates an offer. Once activated, the offer is available to users, as long as its conditions
   * are met.
   * @return value or {@code null} for none
   */
  public ActivateOneTimeProductOfferRequest getActivateOneTimeProductOfferRequest() {
    return activateOneTimeProductOfferRequest;
  }

  /**
   * Activates an offer. Once activated, the offer is available to users, as long as its conditions
   * are met.
   * @param activateOneTimeProductOfferRequest activateOneTimeProductOfferRequest or {@code null} for none
   */
  public UpdateOneTimeProductOfferStateRequest setActivateOneTimeProductOfferRequest(ActivateOneTimeProductOfferRequest activateOneTimeProductOfferRequest) {
    this.activateOneTimeProductOfferRequest = activateOneTimeProductOfferRequest;
    return this;
  }

  /**
   * Cancels an offer. Once cancelled, the offer is not available to users. Any pending orders
   * related to this offer will be cancelled. This state transition is specific to pre-orders.
   * @return value or {@code null} for none
   */
  public CancelOneTimeProductOfferRequest getCancelOneTimeProductOfferRequest() {
    return cancelOneTimeProductOfferRequest;
  }

  /**
   * Cancels an offer. Once cancelled, the offer is not available to users. Any pending orders
   * related to this offer will be cancelled. This state transition is specific to pre-orders.
   * @param cancelOneTimeProductOfferRequest cancelOneTimeProductOfferRequest or {@code null} for none
   */
  public UpdateOneTimeProductOfferStateRequest setCancelOneTimeProductOfferRequest(CancelOneTimeProductOfferRequest cancelOneTimeProductOfferRequest) {
    this.cancelOneTimeProductOfferRequest = cancelOneTimeProductOfferRequest;
    return this;
  }

  /**
   * Deactivates an offer. Once deactivated, the offer is no longer available to users. This state
   * transition is specific to discounted offers.
   * @return value or {@code null} for none
   */
  public DeactivateOneTimeProductOfferRequest getDeactivateOneTimeProductOfferRequest() {
    return deactivateOneTimeProductOfferRequest;
  }

  /**
   * Deactivates an offer. Once deactivated, the offer is no longer available to users. This state
   * transition is specific to discounted offers.
   * @param deactivateOneTimeProductOfferRequest deactivateOneTimeProductOfferRequest or {@code null} for none
   */
  public UpdateOneTimeProductOfferStateRequest setDeactivateOneTimeProductOfferRequest(DeactivateOneTimeProductOfferRequest deactivateOneTimeProductOfferRequest) {
    this.deactivateOneTimeProductOfferRequest = deactivateOneTimeProductOfferRequest;
    return this;
  }

  @Override
  public UpdateOneTimeProductOfferStateRequest set(String fieldName, Object value) {
    return (UpdateOneTimeProductOfferStateRequest) super.set(fieldName, value);
  }

  @Override
  public UpdateOneTimeProductOfferStateRequest clone() {
    return (UpdateOneTimeProductOfferStateRequest) super.clone();
  }

}
