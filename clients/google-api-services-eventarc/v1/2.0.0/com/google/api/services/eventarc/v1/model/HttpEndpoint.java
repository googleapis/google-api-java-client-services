/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.eventarc.v1.model;

/**
 * Represents a HTTP endpoint destination.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Eventarc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class HttpEndpoint extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Forwards DNS requests to the VPC specified by network config to resolve the HTTP
   * endpoint. Default to false. If set to true, Eventarc will create a peering zone to the consumer
   * VPC and forward DNS requests. See: https://cloud.google.com/dns/docs/zones/zones-
   * overview#peering_zones Enable this if the URI uses an internal DNS name or a private Cloud DNS
   * zone.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean forwardDnsRequests;

  /**
   * Required. The URI of the HTTP enpdoint. The value must be a RFC2396 URI string. Examples:
   * `http://10.10.10.8:80/route`, `http://svc.us-central1.p.local:8080/`. Only HTTP and HTTPS
   * protocols are supported. The host can be either a static IP addressable from the VPC specified
   * by the network config, or an internal DNS hostname of the service resolvable via Cloud DNS.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uri;

  /**
   * Optional. Forwards DNS requests to the VPC specified by network config to resolve the HTTP
   * endpoint. Default to false. If set to true, Eventarc will create a peering zone to the consumer
   * VPC and forward DNS requests. See: https://cloud.google.com/dns/docs/zones/zones-
   * overview#peering_zones Enable this if the URI uses an internal DNS name or a private Cloud DNS
   * zone.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getForwardDnsRequests() {
    return forwardDnsRequests;
  }

  /**
   * Optional. Forwards DNS requests to the VPC specified by network config to resolve the HTTP
   * endpoint. Default to false. If set to true, Eventarc will create a peering zone to the consumer
   * VPC and forward DNS requests. See: https://cloud.google.com/dns/docs/zones/zones-
   * overview#peering_zones Enable this if the URI uses an internal DNS name or a private Cloud DNS
   * zone.
   * @param forwardDnsRequests forwardDnsRequests or {@code null} for none
   */
  public HttpEndpoint setForwardDnsRequests(java.lang.Boolean forwardDnsRequests) {
    this.forwardDnsRequests = forwardDnsRequests;
    return this;
  }

  /**
   * Required. The URI of the HTTP enpdoint. The value must be a RFC2396 URI string. Examples:
   * `http://10.10.10.8:80/route`, `http://svc.us-central1.p.local:8080/`. Only HTTP and HTTPS
   * protocols are supported. The host can be either a static IP addressable from the VPC specified
   * by the network config, or an internal DNS hostname of the service resolvable via Cloud DNS.
   * @return value or {@code null} for none
   */
  public java.lang.String getUri() {
    return uri;
  }

  /**
   * Required. The URI of the HTTP enpdoint. The value must be a RFC2396 URI string. Examples:
   * `http://10.10.10.8:80/route`, `http://svc.us-central1.p.local:8080/`. Only HTTP and HTTPS
   * protocols are supported. The host can be either a static IP addressable from the VPC specified
   * by the network config, or an internal DNS hostname of the service resolvable via Cloud DNS.
   * @param uri uri or {@code null} for none
   */
  public HttpEndpoint setUri(java.lang.String uri) {
    this.uri = uri;
    return this;
  }

  @Override
  public HttpEndpoint set(String fieldName, Object value) {
    return (HttpEndpoint) super.set(fieldName, value);
  }

  @Override
  public HttpEndpoint clone() {
    return (HttpEndpoint) super.clone();
  }

}
