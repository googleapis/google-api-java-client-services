/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Provider. Like, Spotify or iHeartRadio. Next ID: 13
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiCoreTypesProvider extends com.google.api.client.json.GenericJson {

  /**
   * The android app information of the provider.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesAndroidAppInfo androidAppInfo;

  /**
   * The cast app information of the provider.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesCastAppInfo castAppInfo;

  /**
   * The ChromeOS app information of the provider.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesChromeOsAppInfo chromeosAppInfo;

  /**
   * The third party provider information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesCloudProviderInfo cloudProviderInfo;

  /**
   * A URL to fallback to if app can not be opened.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fallbackUrl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesHomeAppInfo homeAppInfo;

  /**
   * Public URL pointing to an icon image for the provider. e.g. https://lh3.googleusercontent.com
   * /UrY7BAZ-XfXGpfkeWg0zCCeo-7ras4DCoRalC_WXXWTK9q5b0Iw7B0YQMsVxZaNB7DM
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String iconImageUrl;

  /**
   * The internal assistant provider information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesInternalProviderInfo internalProviderInfo;

  /**
   * The iOS app information of the provider.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesIosAppInfo iosAppInfo;

  /**
   * The KaiOS app information of the provider.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesKaiOsAppInfo kaiosAppInfo;

  /**
   * The sip information of the provider.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesSipProviderInfo sipProviderInfo;

  /**
   * The web provider information.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesWebProviderInfo webProviderInfo;

  /**
   * The android app information of the provider.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesAndroidAppInfo getAndroidAppInfo() {
    return androidAppInfo;
  }

  /**
   * The android app information of the provider.
   * @param androidAppInfo androidAppInfo or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setAndroidAppInfo(AssistantApiCoreTypesAndroidAppInfo androidAppInfo) {
    this.androidAppInfo = androidAppInfo;
    return this;
  }

  /**
   * The cast app information of the provider.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesCastAppInfo getCastAppInfo() {
    return castAppInfo;
  }

  /**
   * The cast app information of the provider.
   * @param castAppInfo castAppInfo or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setCastAppInfo(AssistantApiCoreTypesCastAppInfo castAppInfo) {
    this.castAppInfo = castAppInfo;
    return this;
  }

  /**
   * The ChromeOS app information of the provider.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesChromeOsAppInfo getChromeosAppInfo() {
    return chromeosAppInfo;
  }

  /**
   * The ChromeOS app information of the provider.
   * @param chromeosAppInfo chromeosAppInfo or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setChromeosAppInfo(AssistantApiCoreTypesChromeOsAppInfo chromeosAppInfo) {
    this.chromeosAppInfo = chromeosAppInfo;
    return this;
  }

  /**
   * The third party provider information.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesCloudProviderInfo getCloudProviderInfo() {
    return cloudProviderInfo;
  }

  /**
   * The third party provider information.
   * @param cloudProviderInfo cloudProviderInfo or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setCloudProviderInfo(AssistantApiCoreTypesCloudProviderInfo cloudProviderInfo) {
    this.cloudProviderInfo = cloudProviderInfo;
    return this;
  }

  /**
   * A URL to fallback to if app can not be opened.
   * @return value or {@code null} for none
   */
  public java.lang.String getFallbackUrl() {
    return fallbackUrl;
  }

  /**
   * A URL to fallback to if app can not be opened.
   * @param fallbackUrl fallbackUrl or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setFallbackUrl(java.lang.String fallbackUrl) {
    this.fallbackUrl = fallbackUrl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesHomeAppInfo getHomeAppInfo() {
    return homeAppInfo;
  }

  /**
   * @param homeAppInfo homeAppInfo or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setHomeAppInfo(AssistantApiCoreTypesHomeAppInfo homeAppInfo) {
    this.homeAppInfo = homeAppInfo;
    return this;
  }

  /**
   * Public URL pointing to an icon image for the provider. e.g. https://lh3.googleusercontent.com
   * /UrY7BAZ-XfXGpfkeWg0zCCeo-7ras4DCoRalC_WXXWTK9q5b0Iw7B0YQMsVxZaNB7DM
   * @return value or {@code null} for none
   */
  public java.lang.String getIconImageUrl() {
    return iconImageUrl;
  }

  /**
   * Public URL pointing to an icon image for the provider. e.g. https://lh3.googleusercontent.com
   * /UrY7BAZ-XfXGpfkeWg0zCCeo-7ras4DCoRalC_WXXWTK9q5b0Iw7B0YQMsVxZaNB7DM
   * @param iconImageUrl iconImageUrl or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setIconImageUrl(java.lang.String iconImageUrl) {
    this.iconImageUrl = iconImageUrl;
    return this;
  }

  /**
   * The internal assistant provider information.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesInternalProviderInfo getInternalProviderInfo() {
    return internalProviderInfo;
  }

  /**
   * The internal assistant provider information.
   * @param internalProviderInfo internalProviderInfo or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setInternalProviderInfo(AssistantApiCoreTypesInternalProviderInfo internalProviderInfo) {
    this.internalProviderInfo = internalProviderInfo;
    return this;
  }

  /**
   * The iOS app information of the provider.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesIosAppInfo getIosAppInfo() {
    return iosAppInfo;
  }

  /**
   * The iOS app information of the provider.
   * @param iosAppInfo iosAppInfo or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setIosAppInfo(AssistantApiCoreTypesIosAppInfo iosAppInfo) {
    this.iosAppInfo = iosAppInfo;
    return this;
  }

  /**
   * The KaiOS app information of the provider.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesKaiOsAppInfo getKaiosAppInfo() {
    return kaiosAppInfo;
  }

  /**
   * The KaiOS app information of the provider.
   * @param kaiosAppInfo kaiosAppInfo or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setKaiosAppInfo(AssistantApiCoreTypesKaiOsAppInfo kaiosAppInfo) {
    this.kaiosAppInfo = kaiosAppInfo;
    return this;
  }

  /**
   * The sip information of the provider.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesSipProviderInfo getSipProviderInfo() {
    return sipProviderInfo;
  }

  /**
   * The sip information of the provider.
   * @param sipProviderInfo sipProviderInfo or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setSipProviderInfo(AssistantApiCoreTypesSipProviderInfo sipProviderInfo) {
    this.sipProviderInfo = sipProviderInfo;
    return this;
  }

  /**
   * The web provider information.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesWebProviderInfo getWebProviderInfo() {
    return webProviderInfo;
  }

  /**
   * The web provider information.
   * @param webProviderInfo webProviderInfo or {@code null} for none
   */
  public AssistantApiCoreTypesProvider setWebProviderInfo(AssistantApiCoreTypesWebProviderInfo webProviderInfo) {
    this.webProviderInfo = webProviderInfo;
    return this;
  }

  @Override
  public AssistantApiCoreTypesProvider set(String fieldName, Object value) {
    return (AssistantApiCoreTypesProvider) super.set(fieldName, value);
  }

  @Override
  public AssistantApiCoreTypesProvider clone() {
    return (AssistantApiCoreTypesProvider) super.clone();
  }

}
