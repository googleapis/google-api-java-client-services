/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Groups together the NameInfo for all variants of a given name. The variants of a name have the
 * same normalized string, but they have a different original string and/or a different
 * language/region. Example: For the name "apple", there may be variants such as "apple|en",
 * "apple|en|US", "apple|de", "Apple|en"...
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RepositoryWebrefGlobalNameInfo extends com.google.api.client.json.GenericJson {

  /**
   * The normalized name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String normalizedName;

  /**
   * All the variants of this name together with associated information such as score, sources, etc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<RepositoryWebrefNameInfo> variantInfo;

  /**
   * The normalized name.
   * @return value or {@code null} for none
   */
  public java.lang.String getNormalizedName() {
    return normalizedName;
  }

  /**
   * The normalized name.
   * @param normalizedName normalizedName or {@code null} for none
   */
  public RepositoryWebrefGlobalNameInfo setNormalizedName(java.lang.String normalizedName) {
    this.normalizedName = normalizedName;
    return this;
  }

  /**
   * All the variants of this name together with associated information such as score, sources, etc.
   * @return value or {@code null} for none
   */
  public java.util.List<RepositoryWebrefNameInfo> getVariantInfo() {
    return variantInfo;
  }

  /**
   * All the variants of this name together with associated information such as score, sources, etc.
   * @param variantInfo variantInfo or {@code null} for none
   */
  public RepositoryWebrefGlobalNameInfo setVariantInfo(java.util.List<RepositoryWebrefNameInfo> variantInfo) {
    this.variantInfo = variantInfo;
    return this;
  }

  @Override
  public RepositoryWebrefGlobalNameInfo set(String fieldName, Object value) {
    return (RepositoryWebrefGlobalNameInfo) super.set(fieldName, value);
  }

  @Override
  public RepositoryWebrefGlobalNameInfo clone() {
    return (RepositoryWebrefGlobalNameInfo) super.clone();
  }

}
