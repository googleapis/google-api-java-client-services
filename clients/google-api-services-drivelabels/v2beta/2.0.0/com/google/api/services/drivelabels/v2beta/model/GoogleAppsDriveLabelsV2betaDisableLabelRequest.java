/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.drivelabels.v2beta.model;

/**
 * Request to deprecate a published Label.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Drive Labels API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleAppsDriveLabelsV2betaDisableLabelRequest extends com.google.api.client.json.GenericJson {

  /**
   * Disabled policy to use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy disabledPolicy;

  /**
   * The BCP-47 language code to use for evaluating localized field labels. When not specified,
   * values in the default configured language will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String languageCode;

  /**
   * The fields that should be updated. At least one field must be specified. The root
   * `disabled_policy` is implied and should not be specified. A single `*` can be used as short-
   * hand for updating every field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateMask;

  /**
   * Set to `true` in order to use the user's admin credentials. The server will verify the user is
   * an admin for the Label before allowing access.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean useAdminAccess;

  /**
   * Provides control over how write requests are executed. Defaults to unset, which means last
   * write wins.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleAppsDriveLabelsV2betaWriteControl writeControl;

  /**
   * Disabled policy to use.
   * @return value or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy getDisabledPolicy() {
    return disabledPolicy;
  }

  /**
   * Disabled policy to use.
   * @param disabledPolicy disabledPolicy or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaDisableLabelRequest setDisabledPolicy(GoogleAppsDriveLabelsV2betaLifecycleDisabledPolicy disabledPolicy) {
    this.disabledPolicy = disabledPolicy;
    return this;
  }

  /**
   * The BCP-47 language code to use for evaluating localized field labels. When not specified,
   * values in the default configured language will be used.
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguageCode() {
    return languageCode;
  }

  /**
   * The BCP-47 language code to use for evaluating localized field labels. When not specified,
   * values in the default configured language will be used.
   * @param languageCode languageCode or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaDisableLabelRequest setLanguageCode(java.lang.String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * The fields that should be updated. At least one field must be specified. The root
   * `disabled_policy` is implied and should not be specified. A single `*` can be used as short-
   * hand for updating every field.
   * @return value or {@code null} for none
   */
  public String getUpdateMask() {
    return updateMask;
  }

  /**
   * The fields that should be updated. At least one field must be specified. The root
   * `disabled_policy` is implied and should not be specified. A single `*` can be used as short-
   * hand for updating every field.
   * @param updateMask updateMask or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaDisableLabelRequest setUpdateMask(String updateMask) {
    this.updateMask = updateMask;
    return this;
  }

  /**
   * Set to `true` in order to use the user's admin credentials. The server will verify the user is
   * an admin for the Label before allowing access.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUseAdminAccess() {
    return useAdminAccess;
  }

  /**
   * Set to `true` in order to use the user's admin credentials. The server will verify the user is
   * an admin for the Label before allowing access.
   * @param useAdminAccess useAdminAccess or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaDisableLabelRequest setUseAdminAccess(java.lang.Boolean useAdminAccess) {
    this.useAdminAccess = useAdminAccess;
    return this;
  }

  /**
   * Provides control over how write requests are executed. Defaults to unset, which means last
   * write wins.
   * @return value or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaWriteControl getWriteControl() {
    return writeControl;
  }

  /**
   * Provides control over how write requests are executed. Defaults to unset, which means last
   * write wins.
   * @param writeControl writeControl or {@code null} for none
   */
  public GoogleAppsDriveLabelsV2betaDisableLabelRequest setWriteControl(GoogleAppsDriveLabelsV2betaWriteControl writeControl) {
    this.writeControl = writeControl;
    return this;
  }

  @Override
  public GoogleAppsDriveLabelsV2betaDisableLabelRequest set(String fieldName, Object value) {
    return (GoogleAppsDriveLabelsV2betaDisableLabelRequest) super.set(fieldName, value);
  }

  @Override
  public GoogleAppsDriveLabelsV2betaDisableLabelRequest clone() {
    return (GoogleAppsDriveLabelsV2betaDisableLabelRequest) super.clone();
  }

}
