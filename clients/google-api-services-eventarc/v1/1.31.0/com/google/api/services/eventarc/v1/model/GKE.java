/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.eventarc.v1.model;

/**
 * Represents a GKE destination.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Eventarc API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GKE extends com.google.api.client.json.GenericJson {

  /**
   * Required. The name of the cluster the GKE service is running in. The cluster must be running in
   * the same project as the trigger being created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cluster;

  /**
   * Required. The name of the Google Compute Engine in which the cluster resides, which can either
   * be compute zone (e.g. us-central1-a) for the zonal clusters or region (e.g. us-central1) for
   * regional clusters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String location;

  /**
   * Required. The namespace the GKE service is running in.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String namespace;

  /**
   * Optional. The relative path on the GKE service the events should be sent to. The value must
   * conform to the definition of URI path segment (section 3.3 of RFC2396). Examples: "/route",
   * "route", "route/subroute".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String path;

  /**
   * Required. Name of the GKE service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String service;

  /**
   * Required. The name of the cluster the GKE service is running in. The cluster must be running in
   * the same project as the trigger being created.
   * @return value or {@code null} for none
   */
  public java.lang.String getCluster() {
    return cluster;
  }

  /**
   * Required. The name of the cluster the GKE service is running in. The cluster must be running in
   * the same project as the trigger being created.
   * @param cluster cluster or {@code null} for none
   */
  public GKE setCluster(java.lang.String cluster) {
    this.cluster = cluster;
    return this;
  }

  /**
   * Required. The name of the Google Compute Engine in which the cluster resides, which can either
   * be compute zone (e.g. us-central1-a) for the zonal clusters or region (e.g. us-central1) for
   * regional clusters.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocation() {
    return location;
  }

  /**
   * Required. The name of the Google Compute Engine in which the cluster resides, which can either
   * be compute zone (e.g. us-central1-a) for the zonal clusters or region (e.g. us-central1) for
   * regional clusters.
   * @param location location or {@code null} for none
   */
  public GKE setLocation(java.lang.String location) {
    this.location = location;
    return this;
  }

  /**
   * Required. The namespace the GKE service is running in.
   * @return value or {@code null} for none
   */
  public java.lang.String getNamespace() {
    return namespace;
  }

  /**
   * Required. The namespace the GKE service is running in.
   * @param namespace namespace or {@code null} for none
   */
  public GKE setNamespace(java.lang.String namespace) {
    this.namespace = namespace;
    return this;
  }

  /**
   * Optional. The relative path on the GKE service the events should be sent to. The value must
   * conform to the definition of URI path segment (section 3.3 of RFC2396). Examples: "/route",
   * "route", "route/subroute".
   * @return value or {@code null} for none
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * Optional. The relative path on the GKE service the events should be sent to. The value must
   * conform to the definition of URI path segment (section 3.3 of RFC2396). Examples: "/route",
   * "route", "route/subroute".
   * @param path path or {@code null} for none
   */
  public GKE setPath(java.lang.String path) {
    this.path = path;
    return this;
  }

  /**
   * Required. Name of the GKE service.
   * @return value or {@code null} for none
   */
  public java.lang.String getService() {
    return service;
  }

  /**
   * Required. Name of the GKE service.
   * @param service service or {@code null} for none
   */
  public GKE setService(java.lang.String service) {
    this.service = service;
    return this;
  }

  @Override
  public GKE set(String fieldName, Object value) {
    return (GKE) super.set(fieldName, value);
  }

  @Override
  public GKE clone() {
    return (GKE) super.clone();
  }

}
