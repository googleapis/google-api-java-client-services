/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.authorizedbuyersmarketplace.v1;

/**
 * Service definition for AuthorizedBuyersMarketplace (v1).
 *
 * <p>
 * The Authorized Buyers Marketplace API lets buyers programmatically discover inventory; propose, retrieve and negotiate deals with publishers.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/authorized-buyers/apis/marketplace/reference/rest/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link AuthorizedBuyersMarketplaceRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class AuthorizedBuyersMarketplace extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Authorized Buyers Marketplace API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://authorizedbuyersmarketplace.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://authorizedbuyersmarketplace.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public AuthorizedBuyersMarketplace(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  AuthorizedBuyersMarketplace(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Bidders collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code AuthorizedBuyersMarketplace authorizedbuyersmarketplace = new AuthorizedBuyersMarketplace(...);}
   *   {@code AuthorizedBuyersMarketplace.Bidders.List request = authorizedbuyersmarketplace.bidders().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Bidders bidders() {
    return new Bidders();
  }

  /**
   * The "bidders" collection of methods.
   */
  public class Bidders {

    /**
     * An accessor for creating requests from the AuctionPackages collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AuthorizedBuyersMarketplace authorizedbuyersmarketplace = new AuthorizedBuyersMarketplace(...);}
     *   {@code AuthorizedBuyersMarketplace.AuctionPackages.List request = authorizedbuyersmarketplace.auctionPackages().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AuctionPackages auctionPackages() {
      return new AuctionPackages();
    }

    /**
     * The "auctionPackages" collection of methods.
     */
    public class AuctionPackages {

      /**
       * List the auction packages. Buyers can use the URL path "/v1/buyers/{accountId}/auctionPackages"
       * to list auction packages for the current buyer and its clients. Bidders can use the URL path
       * "/v1/bidders/{accountId}/auctionPackages" to list auction packages for the bidder, its media
       * planners, its buyers, and all their clients.
       *
       * Create a request for the method "auctionPackages.list".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. Name of the parent buyer that can access the auction package. Format:
       *        `buyers/{accountId}`. When used with a bidder account, the auction packages that the
       *        bidder, its media planners, its buyers and clients are subscribed to will be listed, in
       *        the format `bidders/{accountId}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ListAuctionPackagesResponse> {

        private static final String REST_PATH = "v1/{+parent}/auctionPackages";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^bidders/[^/]+$");

        /**
         * List the auction packages. Buyers can use the URL path "/v1/buyers/{accountId}/auctionPackages"
         * to list auction packages for the current buyer and its clients. Bidders can use the URL path
         * "/v1/bidders/{accountId}/auctionPackages" to list auction packages for the bidder, its media
         * planners, its buyers, and all their clients.
         *
         * Create a request for the method "auctionPackages.list".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the parent buyer that can access the auction package. Format:
       *        `buyers/{accountId}`. When used with a bidder account, the auction packages that the
       *        bidder, its media planners, its buyers and clients are subscribed to will be listed, in
       *        the format `bidders/{accountId}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.ListAuctionPackagesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^bidders/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the parent buyer that can access the auction package. Format:
         * `buyers/{accountId}`. When used with a bidder account, the auction packages that the
         * bidder, its media planners, its buyers and clients are subscribed to will be listed, in
         * the format `bidders/{accountId}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the parent buyer that can access the auction package. Format:
       `buyers/{accountId}`. When used with a bidder account, the auction packages that the bidder, its
       media planners, its buyers and clients are subscribed to will be listed, in the format
       `bidders/{accountId}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the parent buyer that can access the auction package. Format:
         * `buyers/{accountId}`. When used with a bidder account, the auction packages that the
         * bidder, its media planners, its buyers and clients are subscribed to will be listed, in
         * the format `bidders/{accountId}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^bidders/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Optional query string using the [Cloud API list filtering syntax](/authorized-
         * buyers/apis/guides/list-filters). Only supported when parent is bidder. Supported columns
         * for filtering are: * displayName * createTime * updateTime * eligibleSeatIds
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional. Optional query string using the [Cloud API list filtering syntax](/authorized-
       buyers/apis/guides/list-filters). Only supported when parent is bidder. Supported columns for
       filtering are: * displayName * createTime * updateTime * eligibleSeatIds
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional. Optional query string using the [Cloud API list filtering syntax](/authorized-
         * buyers/apis/guides/list-filters). Only supported when parent is bidder. Supported columns
         * for filtering are: * displayName * createTime * updateTime * eligibleSeatIds
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional. An optional query string to sort auction packages using the [Cloud API sorting
         * syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort
         * order is specified, results will be returned in an arbitrary order. Only supported when
         * parent is bidder. Supported columns for sorting are: * displayName * createTime *
         * updateTime
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional. An optional query string to sort auction packages using the [Cloud API sorting
       syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort order is
       specified, results will be returned in an arbitrary order. Only supported when parent is bidder.
       Supported columns for sorting are: * displayName * createTime * updateTime
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional. An optional query string to sort auction packages using the [Cloud API sorting
         * syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort
         * order is specified, results will be returned in an arbitrary order. Only supported when
         * parent is bidder. Supported columns for sorting are: * displayName * createTime *
         * updateTime
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * Requested page size. The server may return fewer results than requested. Max allowed page
         * size is 500.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Requested page size. The server may return fewer results than requested. Max allowed page size is
       500.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Requested page size. The server may return fewer results than requested. Max allowed page
         * size is 500.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The page token as returned. ListAuctionPackagesResponse.nextPageToken */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The page token as returned. ListAuctionPackagesResponse.nextPageToken
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The page token as returned. ListAuctionPackagesResponse.nextPageToken */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the FinalizedDeals collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AuthorizedBuyersMarketplace authorizedbuyersmarketplace = new AuthorizedBuyersMarketplace(...);}
     *   {@code AuthorizedBuyersMarketplace.FinalizedDeals.List request = authorizedbuyersmarketplace.finalizedDeals().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public FinalizedDeals finalizedDeals() {
      return new FinalizedDeals();
    }

    /**
     * The "finalizedDeals" collection of methods.
     */
    public class FinalizedDeals {

      /**
       * Lists finalized deals. Use the URL path "/v1/buyers/{accountId}/finalizedDeals" to list finalized
       * deals for the current buyer and its clients. Bidders can use the URL path
       * "/v1/bidders/{accountId}/finalizedDeals" to list finalized deals for the bidder, its buyers and
       * all their clients.
       *
       * Create a request for the method "finalizedDeals.list".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The buyer to list the finalized deals for, in the format: `buyers/{accountId}`. When used
       *        to list finalized deals for a bidder, its buyers and clients, in the format
       *        `bidders/{accountId}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ListFinalizedDealsResponse> {

        private static final String REST_PATH = "v1/{+parent}/finalizedDeals";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^bidders/[^/]+$");

        /**
         * Lists finalized deals. Use the URL path "/v1/buyers/{accountId}/finalizedDeals" to list
         * finalized deals for the current buyer and its clients. Bidders can use the URL path
         * "/v1/bidders/{accountId}/finalizedDeals" to list finalized deals for the bidder, its buyers and
         * all their clients.
         *
         * Create a request for the method "finalizedDeals.list".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The buyer to list the finalized deals for, in the format: `buyers/{accountId}`. When used
       *        to list finalized deals for a bidder, its buyers and clients, in the format
       *        `bidders/{accountId}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.ListFinalizedDealsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^bidders/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The buyer to list the finalized deals for, in the format: `buyers/{accountId}`.
         * When used to list finalized deals for a bidder, its buyers and clients, in the format
         * `bidders/{accountId}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The buyer to list the finalized deals for, in the format: `buyers/{accountId}`. When used
       to list finalized deals for a bidder, its buyers and clients, in the format `bidders/{accountId}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The buyer to list the finalized deals for, in the format: `buyers/{accountId}`.
         * When used to list finalized deals for a bidder, its buyers and clients, in the format
         * `bidders/{accountId}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^bidders/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional query string using the [Cloud API list filtering
         * syntax](https://developers.google.com/authorized-buyers/apis/guides/list-filters)
         * Supported columns for filtering are: * deal.displayName * deal.dealType * deal.createTime
         * * deal.updateTime * deal.flightStartTime * deal.flightEndTime * deal.eligibleSeatIds *
         * dealServingStatus
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional query string using the [Cloud API list filtering
       syntax](https://developers.google.com/authorized-buyers/apis/guides/list-filters) Supported columns
       for filtering are: * deal.displayName * deal.dealType * deal.createTime * deal.updateTime *
       deal.flightStartTime * deal.flightEndTime * deal.eligibleSeatIds * dealServingStatus
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional query string using the [Cloud API list filtering
         * syntax](https://developers.google.com/authorized-buyers/apis/guides/list-filters)
         * Supported columns for filtering are: * deal.displayName * deal.dealType * deal.createTime
         * * deal.updateTime * deal.flightStartTime * deal.flightEndTime * deal.eligibleSeatIds *
         * dealServingStatus
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * An optional query string to sort finalized deals using the [Cloud API sorting
         * syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort
         * order is specified, results will be returned in an arbitrary order. Supported columns for
         * sorting are: * deal.displayName * deal.createTime * deal.updateTime *
         * deal.flightStartTime * deal.flightEndTime * rtbMetrics.bidRequests7Days *
         * rtbMetrics.bids7Days * rtbMetrics.adImpressions7Days * rtbMetrics.bidRate7Days *
         * rtbMetrics.filteredBidRate7Days * rtbMetrics.mustBidRateCurrentMonth
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** An optional query string to sort finalized deals using the [Cloud API sorting
       syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort order is
       specified, results will be returned in an arbitrary order. Supported columns for sorting are: *
       deal.displayName * deal.createTime * deal.updateTime * deal.flightStartTime * deal.flightEndTime *
       rtbMetrics.bidRequests7Days * rtbMetrics.bids7Days * rtbMetrics.adImpressions7Days *
       rtbMetrics.bidRate7Days * rtbMetrics.filteredBidRate7Days * rtbMetrics.mustBidRateCurrentMonth
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * An optional query string to sort finalized deals using the [Cloud API sorting
         * syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort
         * order is specified, results will be returned in an arbitrary order. Supported columns for
         * sorting are: * deal.displayName * deal.createTime * deal.updateTime *
         * deal.flightStartTime * deal.flightEndTime * rtbMetrics.bidRequests7Days *
         * rtbMetrics.bids7Days * rtbMetrics.adImpressions7Days * rtbMetrics.bidRate7Days *
         * rtbMetrics.filteredBidRate7Days * rtbMetrics.mustBidRateCurrentMonth
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * Requested page size. The server may return fewer results than requested. If requested
         * more than 500, the server will return 500 results per page. If unspecified, the server
         * will pick a default page size of 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Requested page size. The server may return fewer results than requested. If requested more than
       500, the server will return 500 results per page. If unspecified, the server will pick a default
       page size of 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Requested page size. The server may return fewer results than requested. If requested
         * more than 500, the server will return 500 results per page. If unspecified, the server
         * will pick a default page size of 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The page token as returned from ListFinalizedDealsResponse. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The page token as returned from ListFinalizedDealsResponse.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The page token as returned from ListFinalizedDealsResponse. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Buyers collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code AuthorizedBuyersMarketplace authorizedbuyersmarketplace = new AuthorizedBuyersMarketplace(...);}
   *   {@code AuthorizedBuyersMarketplace.Buyers.List request = authorizedbuyersmarketplace.buyers().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Buyers buyers() {
    return new Buyers();
  }

  /**
   * The "buyers" collection of methods.
   */
  public class Buyers {

    /**
     * An accessor for creating requests from the AuctionPackages collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AuthorizedBuyersMarketplace authorizedbuyersmarketplace = new AuthorizedBuyersMarketplace(...);}
     *   {@code AuthorizedBuyersMarketplace.AuctionPackages.List request = authorizedbuyersmarketplace.auctionPackages().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AuctionPackages auctionPackages() {
      return new AuctionPackages();
    }

    /**
     * The "auctionPackages" collection of methods.
     */
    public class AuctionPackages {

      /**
       * Gets an auction package given its name.
       *
       * Create a request for the method "auctionPackages.get".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Name of auction package to get. Format:
       *        `buyers/{accountId}/auctionPackages/{auctionPackageId}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.AuctionPackage> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/auctionPackages/[^/]+$");

        /**
         * Gets an auction package given its name.
         *
         * Create a request for the method "auctionPackages.get".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of auction package to get. Format:
       *        `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.AuctionPackage.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/auctionPackages/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of auction package to get. Format:
         * `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of auction package to get. Format:
       `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of auction package to get. Format:
         * `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/auctionPackages/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List the auction packages. Buyers can use the URL path "/v1/buyers/{accountId}/auctionPackages"
       * to list auction packages for the current buyer and its clients. Bidders can use the URL path
       * "/v1/bidders/{accountId}/auctionPackages" to list auction packages for the bidder, its media
       * planners, its buyers, and all their clients.
       *
       * Create a request for the method "auctionPackages.list".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. Name of the parent buyer that can access the auction package. Format:
       *        `buyers/{accountId}`. When used with a bidder account, the auction packages that the
       *        bidder, its media planners, its buyers and clients are subscribed to will be listed, in
       *        the format `bidders/{accountId}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ListAuctionPackagesResponse> {

        private static final String REST_PATH = "v1/{+parent}/auctionPackages";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+$");

        /**
         * List the auction packages. Buyers can use the URL path "/v1/buyers/{accountId}/auctionPackages"
         * to list auction packages for the current buyer and its clients. Bidders can use the URL path
         * "/v1/bidders/{accountId}/auctionPackages" to list auction packages for the bidder, its media
         * planners, its buyers, and all their clients.
         *
         * Create a request for the method "auctionPackages.list".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the parent buyer that can access the auction package. Format:
       *        `buyers/{accountId}`. When used with a bidder account, the auction packages that the
       *        bidder, its media planners, its buyers and clients are subscribed to will be listed, in
       *        the format `bidders/{accountId}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.ListAuctionPackagesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the parent buyer that can access the auction package. Format:
         * `buyers/{accountId}`. When used with a bidder account, the auction packages that the
         * bidder, its media planners, its buyers and clients are subscribed to will be listed, in
         * the format `bidders/{accountId}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the parent buyer that can access the auction package. Format:
       `buyers/{accountId}`. When used with a bidder account, the auction packages that the bidder, its
       media planners, its buyers and clients are subscribed to will be listed, in the format
       `bidders/{accountId}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the parent buyer that can access the auction package. Format:
         * `buyers/{accountId}`. When used with a bidder account, the auction packages that the
         * bidder, its media planners, its buyers and clients are subscribed to will be listed, in
         * the format `bidders/{accountId}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Optional query string using the [Cloud API list filtering syntax](/authorized-
         * buyers/apis/guides/list-filters). Only supported when parent is bidder. Supported columns
         * for filtering are: * displayName * createTime * updateTime * eligibleSeatIds
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional. Optional query string using the [Cloud API list filtering syntax](/authorized-
       buyers/apis/guides/list-filters). Only supported when parent is bidder. Supported columns for
       filtering are: * displayName * createTime * updateTime * eligibleSeatIds
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional. Optional query string using the [Cloud API list filtering syntax](/authorized-
         * buyers/apis/guides/list-filters). Only supported when parent is bidder. Supported columns
         * for filtering are: * displayName * createTime * updateTime * eligibleSeatIds
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Optional. An optional query string to sort auction packages using the [Cloud API sorting
         * syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort
         * order is specified, results will be returned in an arbitrary order. Only supported when
         * parent is bidder. Supported columns for sorting are: * displayName * createTime *
         * updateTime
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** Optional. An optional query string to sort auction packages using the [Cloud API sorting
       syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort order is
       specified, results will be returned in an arbitrary order. Only supported when parent is bidder.
       Supported columns for sorting are: * displayName * createTime * updateTime
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * Optional. An optional query string to sort auction packages using the [Cloud API sorting
         * syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort
         * order is specified, results will be returned in an arbitrary order. Only supported when
         * parent is bidder. Supported columns for sorting are: * displayName * createTime *
         * updateTime
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * Requested page size. The server may return fewer results than requested. Max allowed page
         * size is 500.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Requested page size. The server may return fewer results than requested. Max allowed page size is
       500.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Requested page size. The server may return fewer results than requested. Max allowed page
         * size is 500.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The page token as returned. ListAuctionPackagesResponse.nextPageToken */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The page token as returned. ListAuctionPackagesResponse.nextPageToken
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The page token as returned. ListAuctionPackagesResponse.nextPageToken */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Subscribe to the auction package for the specified buyer. Once subscribed, the bidder will
       * receive a call out for inventory matching the auction package targeting criteria with the auction
       * package deal ID and the specified buyer.
       *
       * Create a request for the method "auctionPackages.subscribe".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Subscribe#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Name of the auction package. Format:
       *        `buyers/{accountId}/auctionPackages/{auctionPackageId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.SubscribeAuctionPackageRequest}
       * @return the request
       */
      public Subscribe subscribe(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.SubscribeAuctionPackageRequest content) throws java.io.IOException {
        Subscribe result = new Subscribe(name, content);
        initialize(result);
        return result;
      }

      public class Subscribe extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.AuctionPackage> {

        private static final String REST_PATH = "v1/{+name}:subscribe";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/auctionPackages/[^/]+$");

        /**
         * Subscribe to the auction package for the specified buyer. Once subscribed, the bidder will
         * receive a call out for inventory matching the auction package targeting criteria with the
         * auction package deal ID and the specified buyer.
         *
         * Create a request for the method "auctionPackages.subscribe".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Subscribe#execute()} method to invoke the
         * remote operation. <p> {@link
         * Subscribe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the auction package. Format:
       *        `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.SubscribeAuctionPackageRequest}
         * @since 1.13
         */
        protected Subscribe(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.SubscribeAuctionPackageRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.AuctionPackage.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/auctionPackages/[^/]+$");
          }
        }

        @Override
        public Subscribe set$Xgafv(java.lang.String $Xgafv) {
          return (Subscribe) super.set$Xgafv($Xgafv);
        }

        @Override
        public Subscribe setAccessToken(java.lang.String accessToken) {
          return (Subscribe) super.setAccessToken(accessToken);
        }

        @Override
        public Subscribe setAlt(java.lang.String alt) {
          return (Subscribe) super.setAlt(alt);
        }

        @Override
        public Subscribe setCallback(java.lang.String callback) {
          return (Subscribe) super.setCallback(callback);
        }

        @Override
        public Subscribe setFields(java.lang.String fields) {
          return (Subscribe) super.setFields(fields);
        }

        @Override
        public Subscribe setKey(java.lang.String key) {
          return (Subscribe) super.setKey(key);
        }

        @Override
        public Subscribe setOauthToken(java.lang.String oauthToken) {
          return (Subscribe) super.setOauthToken(oauthToken);
        }

        @Override
        public Subscribe setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Subscribe) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Subscribe setQuotaUser(java.lang.String quotaUser) {
          return (Subscribe) super.setQuotaUser(quotaUser);
        }

        @Override
        public Subscribe setUploadType(java.lang.String uploadType) {
          return (Subscribe) super.setUploadType(uploadType);
        }

        @Override
        public Subscribe setUploadProtocol(java.lang.String uploadProtocol) {
          return (Subscribe) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the auction package. Format:
         * `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the auction package. Format:
       `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the auction package. Format:
         * `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        public Subscribe setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/auctionPackages/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Subscribe set(String parameterName, Object value) {
          return (Subscribe) super.set(parameterName, value);
        }
      }
      /**
       * Subscribe the specified clients of the buyer to the auction package. If a client in the list does
       * not belong to the buyer, an error response will be returned, and all of the following clients in
       * the list will not be subscribed. Subscribing an already subscribed client will have no effect.
       *
       * Create a request for the method "auctionPackages.subscribeClients".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link SubscribeClients#execute()} method to invoke the
       * remote operation.
       *
       * @param auctionPackage Required. Name of the auction package. Format:
       *        `buyers/{accountId}/auctionPackages/{auctionPackageId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.SubscribeClientsRequest}
       * @return the request
       */
      public SubscribeClients subscribeClients(java.lang.String auctionPackage, com.google.api.services.authorizedbuyersmarketplace.v1.model.SubscribeClientsRequest content) throws java.io.IOException {
        SubscribeClients result = new SubscribeClients(auctionPackage, content);
        initialize(result);
        return result;
      }

      public class SubscribeClients extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.AuctionPackage> {

        private static final String REST_PATH = "v1/{+auctionPackage}:subscribeClients";

        private final java.util.regex.Pattern AUCTION_PACKAGE_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/auctionPackages/[^/]+$");

        /**
         * Subscribe the specified clients of the buyer to the auction package. If a client in the list
         * does not belong to the buyer, an error response will be returned, and all of the following
         * clients in the list will not be subscribed. Subscribing an already subscribed client will have
         * no effect.
         *
         * Create a request for the method "auctionPackages.subscribeClients".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link SubscribeClients#execute()} method to invoke
         * the remote operation. <p> {@link SubscribeClients#initialize(com.google.api.client.googleapis.s
         * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param auctionPackage Required. Name of the auction package. Format:
       *        `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.SubscribeClientsRequest}
         * @since 1.13
         */
        protected SubscribeClients(java.lang.String auctionPackage, com.google.api.services.authorizedbuyersmarketplace.v1.model.SubscribeClientsRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.AuctionPackage.class);
          this.auctionPackage = com.google.api.client.util.Preconditions.checkNotNull(auctionPackage, "Required parameter auctionPackage must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(AUCTION_PACKAGE_PATTERN.matcher(auctionPackage).matches(),
                "Parameter auctionPackage must conform to the pattern " +
                "^buyers/[^/]+/auctionPackages/[^/]+$");
          }
        }

        @Override
        public SubscribeClients set$Xgafv(java.lang.String $Xgafv) {
          return (SubscribeClients) super.set$Xgafv($Xgafv);
        }

        @Override
        public SubscribeClients setAccessToken(java.lang.String accessToken) {
          return (SubscribeClients) super.setAccessToken(accessToken);
        }

        @Override
        public SubscribeClients setAlt(java.lang.String alt) {
          return (SubscribeClients) super.setAlt(alt);
        }

        @Override
        public SubscribeClients setCallback(java.lang.String callback) {
          return (SubscribeClients) super.setCallback(callback);
        }

        @Override
        public SubscribeClients setFields(java.lang.String fields) {
          return (SubscribeClients) super.setFields(fields);
        }

        @Override
        public SubscribeClients setKey(java.lang.String key) {
          return (SubscribeClients) super.setKey(key);
        }

        @Override
        public SubscribeClients setOauthToken(java.lang.String oauthToken) {
          return (SubscribeClients) super.setOauthToken(oauthToken);
        }

        @Override
        public SubscribeClients setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SubscribeClients) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SubscribeClients setQuotaUser(java.lang.String quotaUser) {
          return (SubscribeClients) super.setQuotaUser(quotaUser);
        }

        @Override
        public SubscribeClients setUploadType(java.lang.String uploadType) {
          return (SubscribeClients) super.setUploadType(uploadType);
        }

        @Override
        public SubscribeClients setUploadProtocol(java.lang.String uploadProtocol) {
          return (SubscribeClients) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the auction package. Format:
         * `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        @com.google.api.client.util.Key
        private java.lang.String auctionPackage;

        /** Required. Name of the auction package. Format:
       `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        public java.lang.String getAuctionPackage() {
          return auctionPackage;
        }

        /**
         * Required. Name of the auction package. Format:
         * `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        public SubscribeClients setAuctionPackage(java.lang.String auctionPackage) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(AUCTION_PACKAGE_PATTERN.matcher(auctionPackage).matches(),
                "Parameter auctionPackage must conform to the pattern " +
                "^buyers/[^/]+/auctionPackages/[^/]+$");
          }
          this.auctionPackage = auctionPackage;
          return this;
        }

        @Override
        public SubscribeClients set(String parameterName, Object value) {
          return (SubscribeClients) super.set(parameterName, value);
        }
      }
      /**
       * Unsubscribe from the auction package for the specified buyer. Once unsubscribed, the bidder will
       * no longer receive a call out for the auction package deal ID and the specified buyer.
       *
       * Create a request for the method "auctionPackages.unsubscribe".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Unsubscribe#execute()} method to invoke the
       * remote operation.
       *
       * @param name Required. Name of the auction package. Format:
       *        `buyers/{accountId}/auctionPackages/{auctionPackageId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.UnsubscribeAuctionPackageRequest}
       * @return the request
       */
      public Unsubscribe unsubscribe(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.UnsubscribeAuctionPackageRequest content) throws java.io.IOException {
        Unsubscribe result = new Unsubscribe(name, content);
        initialize(result);
        return result;
      }

      public class Unsubscribe extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.AuctionPackage> {

        private static final String REST_PATH = "v1/{+name}:unsubscribe";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/auctionPackages/[^/]+$");

        /**
         * Unsubscribe from the auction package for the specified buyer. Once unsubscribed, the bidder
         * will no longer receive a call out for the auction package deal ID and the specified buyer.
         *
         * Create a request for the method "auctionPackages.unsubscribe".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Unsubscribe#execute()} method to invoke the
         * remote operation. <p> {@link
         * Unsubscribe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the auction package. Format:
       *        `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.UnsubscribeAuctionPackageRequest}
         * @since 1.13
         */
        protected Unsubscribe(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.UnsubscribeAuctionPackageRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.AuctionPackage.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/auctionPackages/[^/]+$");
          }
        }

        @Override
        public Unsubscribe set$Xgafv(java.lang.String $Xgafv) {
          return (Unsubscribe) super.set$Xgafv($Xgafv);
        }

        @Override
        public Unsubscribe setAccessToken(java.lang.String accessToken) {
          return (Unsubscribe) super.setAccessToken(accessToken);
        }

        @Override
        public Unsubscribe setAlt(java.lang.String alt) {
          return (Unsubscribe) super.setAlt(alt);
        }

        @Override
        public Unsubscribe setCallback(java.lang.String callback) {
          return (Unsubscribe) super.setCallback(callback);
        }

        @Override
        public Unsubscribe setFields(java.lang.String fields) {
          return (Unsubscribe) super.setFields(fields);
        }

        @Override
        public Unsubscribe setKey(java.lang.String key) {
          return (Unsubscribe) super.setKey(key);
        }

        @Override
        public Unsubscribe setOauthToken(java.lang.String oauthToken) {
          return (Unsubscribe) super.setOauthToken(oauthToken);
        }

        @Override
        public Unsubscribe setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Unsubscribe) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Unsubscribe setQuotaUser(java.lang.String quotaUser) {
          return (Unsubscribe) super.setQuotaUser(quotaUser);
        }

        @Override
        public Unsubscribe setUploadType(java.lang.String uploadType) {
          return (Unsubscribe) super.setUploadType(uploadType);
        }

        @Override
        public Unsubscribe setUploadProtocol(java.lang.String uploadProtocol) {
          return (Unsubscribe) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the auction package. Format:
         * `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the auction package. Format:
       `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the auction package. Format:
         * `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        public Unsubscribe setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/auctionPackages/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Unsubscribe set(String parameterName, Object value) {
          return (Unsubscribe) super.set(parameterName, value);
        }
      }
      /**
       * Unsubscribe from the auction package for the specified clients of the buyer. Unsubscribing a
       * client that is not subscribed will have no effect.
       *
       * Create a request for the method "auctionPackages.unsubscribeClients".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link UnsubscribeClients#execute()} method to invoke
       * the remote operation.
       *
       * @param auctionPackage Required. Name of the auction package. Format:
       *        `buyers/{accountId}/auctionPackages/{auctionPackageId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.UnsubscribeClientsRequest}
       * @return the request
       */
      public UnsubscribeClients unsubscribeClients(java.lang.String auctionPackage, com.google.api.services.authorizedbuyersmarketplace.v1.model.UnsubscribeClientsRequest content) throws java.io.IOException {
        UnsubscribeClients result = new UnsubscribeClients(auctionPackage, content);
        initialize(result);
        return result;
      }

      public class UnsubscribeClients extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.AuctionPackage> {

        private static final String REST_PATH = "v1/{+auctionPackage}:unsubscribeClients";

        private final java.util.regex.Pattern AUCTION_PACKAGE_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/auctionPackages/[^/]+$");

        /**
         * Unsubscribe from the auction package for the specified clients of the buyer. Unsubscribing a
         * client that is not subscribed will have no effect.
         *
         * Create a request for the method "auctionPackages.unsubscribeClients".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link UnsubscribeClients#execute()} method to invoke
         * the remote operation. <p> {@link UnsubscribeClients#initialize(com.google.api.client.googleapis
         * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param auctionPackage Required. Name of the auction package. Format:
       *        `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.UnsubscribeClientsRequest}
         * @since 1.13
         */
        protected UnsubscribeClients(java.lang.String auctionPackage, com.google.api.services.authorizedbuyersmarketplace.v1.model.UnsubscribeClientsRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.AuctionPackage.class);
          this.auctionPackage = com.google.api.client.util.Preconditions.checkNotNull(auctionPackage, "Required parameter auctionPackage must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(AUCTION_PACKAGE_PATTERN.matcher(auctionPackage).matches(),
                "Parameter auctionPackage must conform to the pattern " +
                "^buyers/[^/]+/auctionPackages/[^/]+$");
          }
        }

        @Override
        public UnsubscribeClients set$Xgafv(java.lang.String $Xgafv) {
          return (UnsubscribeClients) super.set$Xgafv($Xgafv);
        }

        @Override
        public UnsubscribeClients setAccessToken(java.lang.String accessToken) {
          return (UnsubscribeClients) super.setAccessToken(accessToken);
        }

        @Override
        public UnsubscribeClients setAlt(java.lang.String alt) {
          return (UnsubscribeClients) super.setAlt(alt);
        }

        @Override
        public UnsubscribeClients setCallback(java.lang.String callback) {
          return (UnsubscribeClients) super.setCallback(callback);
        }

        @Override
        public UnsubscribeClients setFields(java.lang.String fields) {
          return (UnsubscribeClients) super.setFields(fields);
        }

        @Override
        public UnsubscribeClients setKey(java.lang.String key) {
          return (UnsubscribeClients) super.setKey(key);
        }

        @Override
        public UnsubscribeClients setOauthToken(java.lang.String oauthToken) {
          return (UnsubscribeClients) super.setOauthToken(oauthToken);
        }

        @Override
        public UnsubscribeClients setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UnsubscribeClients) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UnsubscribeClients setQuotaUser(java.lang.String quotaUser) {
          return (UnsubscribeClients) super.setQuotaUser(quotaUser);
        }

        @Override
        public UnsubscribeClients setUploadType(java.lang.String uploadType) {
          return (UnsubscribeClients) super.setUploadType(uploadType);
        }

        @Override
        public UnsubscribeClients setUploadProtocol(java.lang.String uploadProtocol) {
          return (UnsubscribeClients) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the auction package. Format:
         * `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        @com.google.api.client.util.Key
        private java.lang.String auctionPackage;

        /** Required. Name of the auction package. Format:
       `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        public java.lang.String getAuctionPackage() {
          return auctionPackage;
        }

        /**
         * Required. Name of the auction package. Format:
         * `buyers/{accountId}/auctionPackages/{auctionPackageId}`
         */
        public UnsubscribeClients setAuctionPackage(java.lang.String auctionPackage) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(AUCTION_PACKAGE_PATTERN.matcher(auctionPackage).matches(),
                "Parameter auctionPackage must conform to the pattern " +
                "^buyers/[^/]+/auctionPackages/[^/]+$");
          }
          this.auctionPackage = auctionPackage;
          return this;
        }

        @Override
        public UnsubscribeClients set(String parameterName, Object value) {
          return (UnsubscribeClients) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Clients collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AuthorizedBuyersMarketplace authorizedbuyersmarketplace = new AuthorizedBuyersMarketplace(...);}
     *   {@code AuthorizedBuyersMarketplace.Clients.List request = authorizedbuyersmarketplace.clients().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Clients clients() {
      return new Clients();
    }

    /**
     * The "clients" collection of methods.
     */
    public class Clients {

      /**
       * Activates an existing client. The state of the client will be updated to "ACTIVE". This method
       * has no effect if the client is already in "ACTIVE" state.
       *
       * Create a request for the method "clients.activate".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Activate#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.ActivateClientRequest}
       * @return the request
       */
      public Activate activate(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.ActivateClientRequest content) throws java.io.IOException {
        Activate result = new Activate(name, content);
        initialize(result);
        return result;
      }

      public class Activate extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Client> {

        private static final String REST_PATH = "v1/{+name}:activate";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/clients/[^/]+$");

        /**
         * Activates an existing client. The state of the client will be updated to "ACTIVE". This method
         * has no effect if the client is already in "ACTIVE" state.
         *
         * Create a request for the method "clients.activate".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Activate#execute()} method to invoke the
         * remote operation. <p> {@link
         * Activate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.ActivateClientRequest}
         * @since 1.13
         */
        protected Activate(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.ActivateClientRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.Client.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/clients/[^/]+$");
          }
        }

        @Override
        public Activate set$Xgafv(java.lang.String $Xgafv) {
          return (Activate) super.set$Xgafv($Xgafv);
        }

        @Override
        public Activate setAccessToken(java.lang.String accessToken) {
          return (Activate) super.setAccessToken(accessToken);
        }

        @Override
        public Activate setAlt(java.lang.String alt) {
          return (Activate) super.setAlt(alt);
        }

        @Override
        public Activate setCallback(java.lang.String callback) {
          return (Activate) super.setCallback(callback);
        }

        @Override
        public Activate setFields(java.lang.String fields) {
          return (Activate) super.setFields(fields);
        }

        @Override
        public Activate setKey(java.lang.String key) {
          return (Activate) super.setKey(key);
        }

        @Override
        public Activate setOauthToken(java.lang.String oauthToken) {
          return (Activate) super.setOauthToken(oauthToken);
        }

        @Override
        public Activate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Activate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Activate setQuotaUser(java.lang.String quotaUser) {
          return (Activate) super.setQuotaUser(quotaUser);
        }

        @Override
        public Activate setUploadType(java.lang.String uploadType) {
          return (Activate) super.setUploadType(uploadType);
        }

        @Override
        public Activate setUploadProtocol(java.lang.String uploadProtocol) {
          return (Activate) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}` */
        public Activate setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/clients/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Activate set(String parameterName, Object value) {
          return (Activate) super.set(parameterName, value);
        }
      }
      /**
       * Creates a new client.
       *
       * Create a request for the method "clients.create".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The name of the buyer. Format: `buyers/{accountId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.Client}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.authorizedbuyersmarketplace.v1.model.Client content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Client> {

        private static final String REST_PATH = "v1/{+parent}/clients";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+$");

        /**
         * Creates a new client.
         *
         * Create a request for the method "clients.create".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the buyer. Format: `buyers/{accountId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.Client}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.authorizedbuyersmarketplace.v1.model.Client content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.Client.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the buyer. Format: `buyers/{accountId}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the buyer. Format: `buyers/{accountId}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The name of the buyer. Format: `buyers/{accountId}` */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deactivates an existing client. The state of the client will be updated to "INACTIVE". This
       * method has no effect if the client is already in "INACTIVE" state.
       *
       * Create a request for the method "clients.deactivate".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Deactivate#execute()} method to invoke the
       * remote operation.
       *
       * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.DeactivateClientRequest}
       * @return the request
       */
      public Deactivate deactivate(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.DeactivateClientRequest content) throws java.io.IOException {
        Deactivate result = new Deactivate(name, content);
        initialize(result);
        return result;
      }

      public class Deactivate extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Client> {

        private static final String REST_PATH = "v1/{+name}:deactivate";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/clients/[^/]+$");

        /**
         * Deactivates an existing client. The state of the client will be updated to "INACTIVE". This
         * method has no effect if the client is already in "INACTIVE" state.
         *
         * Create a request for the method "clients.deactivate".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Deactivate#execute()} method to invoke the
         * remote operation. <p> {@link
         * Deactivate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.DeactivateClientRequest}
         * @since 1.13
         */
        protected Deactivate(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.DeactivateClientRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.Client.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/clients/[^/]+$");
          }
        }

        @Override
        public Deactivate set$Xgafv(java.lang.String $Xgafv) {
          return (Deactivate) super.set$Xgafv($Xgafv);
        }

        @Override
        public Deactivate setAccessToken(java.lang.String accessToken) {
          return (Deactivate) super.setAccessToken(accessToken);
        }

        @Override
        public Deactivate setAlt(java.lang.String alt) {
          return (Deactivate) super.setAlt(alt);
        }

        @Override
        public Deactivate setCallback(java.lang.String callback) {
          return (Deactivate) super.setCallback(callback);
        }

        @Override
        public Deactivate setFields(java.lang.String fields) {
          return (Deactivate) super.setFields(fields);
        }

        @Override
        public Deactivate setKey(java.lang.String key) {
          return (Deactivate) super.setKey(key);
        }

        @Override
        public Deactivate setOauthToken(java.lang.String oauthToken) {
          return (Deactivate) super.setOauthToken(oauthToken);
        }

        @Override
        public Deactivate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Deactivate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Deactivate setQuotaUser(java.lang.String quotaUser) {
          return (Deactivate) super.setQuotaUser(quotaUser);
        }

        @Override
        public Deactivate setUploadType(java.lang.String uploadType) {
          return (Deactivate) super.setUploadType(uploadType);
        }

        @Override
        public Deactivate setUploadProtocol(java.lang.String uploadProtocol) {
          return (Deactivate) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}` */
        public Deactivate setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/clients/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Deactivate set(String parameterName, Object value) {
          return (Deactivate) super.set(parameterName, value);
        }
      }
      /**
       * Gets a client with a given resource name.
       *
       * Create a request for the method "clients.get".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Format: `buyers/{accountId}/clients/{clientAccountId}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Client> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/clients/[^/]+$");

        /**
         * Gets a client with a given resource name.
         *
         * Create a request for the method "clients.get".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Format: `buyers/{accountId}/clients/{clientAccountId}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.Client.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/clients/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: `buyers/{accountId}/clients/{clientAccountId}` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Format: `buyers/{accountId}/clients/{clientAccountId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Format: `buyers/{accountId}/clients/{clientAccountId}` */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/clients/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all the clients for the current buyer.
       *
       * Create a request for the method "clients.list".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The name of the buyer. Format: `buyers/{accountId}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ListClientsResponse> {

        private static final String REST_PATH = "v1/{+parent}/clients";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+$");

        /**
         * Lists all the clients for the current buyer.
         *
         * Create a request for the method "clients.list".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the buyer. Format: `buyers/{accountId}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.ListClientsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The name of the buyer. Format: `buyers/{accountId}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the buyer. Format: `buyers/{accountId}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The name of the buyer. Format: `buyers/{accountId}` */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Query string using the [Filtering Syntax](https://developers.google.com/authorized-
         * buyers/apis/guides/list-filters) Supported fields for filtering are: * partnerClientId
         * Use this field to filter the clients by the partnerClientId. For example, if the
         * partnerClientId of the client is "1234", the value of this field should be
         * `partnerClientId = "1234"`, in order to get only the client whose partnerClientId is
         * "1234" in the response.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Query string using the [Filtering Syntax](https://developers.google.com/authorized-
       buyers/apis/guides/list-filters) Supported fields for filtering are: * partnerClientId Use this
       field to filter the clients by the partnerClientId. For example, if the partnerClientId of the
       client is "1234", the value of this field should be `partnerClientId = "1234"`, in order to get
       only the client whose partnerClientId is "1234" in the response.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Query string using the [Filtering Syntax](https://developers.google.com/authorized-
         * buyers/apis/guides/list-filters) Supported fields for filtering are: * partnerClientId
         * Use this field to filter the clients by the partnerClientId. For example, if the
         * partnerClientId of the client is "1234", the value of this field should be
         * `partnerClientId = "1234"`, in order to get only the client whose partnerClientId is
         * "1234" in the response.
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** Requested page size. If left blank, a default page size of 500 will be applied. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Requested page size. If left blank, a default page size of 500 will be applied.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Requested page size. If left blank, a default page size of 500 will be applied. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A token identifying a page of results the server should return. Typically, this is the
         * value of ListClientsResponse.nextPageToken returned from the previous call to the list
         * method.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A token identifying a page of results the server should return. Typically, this is the value of
       ListClientsResponse.nextPageToken returned from the previous call to the list method.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A token identifying a page of results the server should return. Typically, this is the
         * value of ListClientsResponse.nextPageToken returned from the previous call to the list
         * method.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing client.
       *
       * Create a request for the method "clients.patch".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
       * operation.
       *
       * @param name Output only. The resource name of the client. Format: `buyers/{accountId}/clients/{clientAccountId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.Client}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.Client content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Client> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/clients/[^/]+$");

        /**
         * Updates an existing client.
         *
         * Create a request for the method "clients.patch".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. The resource name of the client. Format: `buyers/{accountId}/clients/{clientAccountId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.Client}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.Client content) {
          super(AuthorizedBuyersMarketplace.this, "PATCH", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.Client.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/clients/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. The resource name of the client. Format:
         * `buyers/{accountId}/clients/{clientAccountId}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. The resource name of the client. Format:
       `buyers/{accountId}/clients/{clientAccountId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. The resource name of the client. Format:
         * `buyers/{accountId}/clients/{clientAccountId}`
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/clients/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * List of fields to be updated. If empty or unspecified, the service will update all fields
         * populated in the update request excluding the output only fields and primitive fields
         * with default value. Note that explicit field mask is required in order to reset a
         * primitive field back to its default value, for example, false for boolean fields, 0 for
         * integer fields. A special field mask consisting of a single path "*" can be used to
         * indicate full replacement(the equivalent of PUT method), updatable fields unset or
         * unspecified in the input will be cleared or set to default value. Output only fields will
         * be ignored regardless of the value of updateMask.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** List of fields to be updated. If empty or unspecified, the service will update all fields populated
       in the update request excluding the output only fields and primitive fields with default value.
       Note that explicit field mask is required in order to reset a primitive field back to its default
       value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting
       of a single path "*" can be used to indicate full replacement(the equivalent of PUT method),
       updatable fields unset or unspecified in the input will be cleared or set to default value. Output
       only fields will be ignored regardless of the value of updateMask.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * List of fields to be updated. If empty or unspecified, the service will update all fields
         * populated in the update request excluding the output only fields and primitive fields
         * with default value. Note that explicit field mask is required in order to reset a
         * primitive field back to its default value, for example, false for boolean fields, 0 for
         * integer fields. A special field mask consisting of a single path "*" can be used to
         * indicate full replacement(the equivalent of PUT method), updatable fields unset or
         * unspecified in the input will be cleared or set to default value. Output only fields will
         * be ignored regardless of the value of updateMask.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Users collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code AuthorizedBuyersMarketplace authorizedbuyersmarketplace = new AuthorizedBuyersMarketplace(...);}
       *   {@code AuthorizedBuyersMarketplace.Users.List request = authorizedbuyersmarketplace.users().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Users users() {
        return new Users();
      }

      /**
       * The "users" collection of methods.
       */
      public class Users {

        /**
         * Activates an existing client user. The state of the client user will be updated from "INACTIVE"
         * to "ACTIVE". This method has no effect if the client user is already in "ACTIVE" state. An error
         * will be returned if the client user to activate is still in "INVITED" state.
         *
         * Create a request for the method "users.activate".
         *
         * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Activate#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.ActivateClientUserRequest}
         * @return the request
         */
        public Activate activate(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.ActivateClientUserRequest content) throws java.io.IOException {
          Activate result = new Activate(name, content);
          initialize(result);
          return result;
        }

        public class Activate extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser> {

          private static final String REST_PATH = "v1/{+name}:activate";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^buyers/[^/]+/clients/[^/]+/users/[^/]+$");

          /**
           * Activates an existing client user. The state of the client user will be updated from "INACTIVE"
           * to "ACTIVE". This method has no effect if the client user is already in "ACTIVE" state. An
           * error will be returned if the client user to activate is still in "INVITED" state.
           *
           * Create a request for the method "users.activate".
           *
           * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
           * setting any optional parameters, call the {@link Activate#execute()} method to invoke the
           * remote operation. <p> {@link
           * Activate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.ActivateClientUserRequest}
           * @since 1.13
           */
          protected Activate(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.ActivateClientUserRequest content) {
            super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+/users/[^/]+$");
            }
          }

          @Override
          public Activate set$Xgafv(java.lang.String $Xgafv) {
            return (Activate) super.set$Xgafv($Xgafv);
          }

          @Override
          public Activate setAccessToken(java.lang.String accessToken) {
            return (Activate) super.setAccessToken(accessToken);
          }

          @Override
          public Activate setAlt(java.lang.String alt) {
            return (Activate) super.setAlt(alt);
          }

          @Override
          public Activate setCallback(java.lang.String callback) {
            return (Activate) super.setCallback(callback);
          }

          @Override
          public Activate setFields(java.lang.String fields) {
            return (Activate) super.setFields(fields);
          }

          @Override
          public Activate setKey(java.lang.String key) {
            return (Activate) super.setKey(key);
          }

          @Override
          public Activate setOauthToken(java.lang.String oauthToken) {
            return (Activate) super.setOauthToken(oauthToken);
          }

          @Override
          public Activate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Activate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Activate setQuotaUser(java.lang.String quotaUser) {
            return (Activate) super.setQuotaUser(quotaUser);
          }

          @Override
          public Activate setUploadType(java.lang.String uploadType) {
            return (Activate) super.setUploadType(uploadType);
          }

          @Override
          public Activate setUploadProtocol(java.lang.String uploadProtocol) {
            return (Activate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Format:
           * `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Format:
           * `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          public Activate setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+/users/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Activate set(String parameterName, Object value) {
            return (Activate) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new client user in "INVITED" state. An email invitation will be sent to the new user,
         * once accepted the user will become active.
         *
         * Create a request for the method "users.create".
         *
         * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Required. The name of the client. Format: `buyers/{accountId}/clients/{clientAccountId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser> {

          private static final String REST_PATH = "v1/{+parent}/users";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^buyers/[^/]+/clients/[^/]+$");

          /**
           * Creates a new client user in "INVITED" state. An email invitation will be sent to the new user,
           * once accepted the user will become active.
           *
           * Create a request for the method "users.create".
           *
           * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
           * setting any optional parameters, call the {@link Create#execute()} method to invoke the remote
           * operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the client. Format: `buyers/{accountId}/clients/{clientAccountId}`
           * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser content) {
            super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the client. Format:
           * `buyers/{accountId}/clients/{clientAccountId}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the client. Format: `buyers/{accountId}/clients/{clientAccountId}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the client. Format:
           * `buyers/{accountId}/clients/{clientAccountId}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deactivates an existing client user. The state of the client user will be updated from "ACTIVE"
         * to "INACTIVE". This method has no effect if the client user is already in "INACTIVE" state. An
         * error will be returned if the client user to deactivate is still in "INVITED" state.
         *
         * Create a request for the method "users.deactivate".
         *
         * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Deactivate#execute()} method to invoke the
         * remote operation.
         *
         * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.DeactivateClientUserRequest}
         * @return the request
         */
        public Deactivate deactivate(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.DeactivateClientUserRequest content) throws java.io.IOException {
          Deactivate result = new Deactivate(name, content);
          initialize(result);
          return result;
        }

        public class Deactivate extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser> {

          private static final String REST_PATH = "v1/{+name}:deactivate";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^buyers/[^/]+/clients/[^/]+/users/[^/]+$");

          /**
           * Deactivates an existing client user. The state of the client user will be updated from "ACTIVE"
           * to "INACTIVE". This method has no effect if the client user is already in "INACTIVE" state. An
           * error will be returned if the client user to deactivate is still in "INVITED" state.
           *
           * Create a request for the method "users.deactivate".
           *
           * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
           * setting any optional parameters, call the {@link Deactivate#execute()} method to invoke the
           * remote operation. <p> {@link
           * Deactivate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.DeactivateClientUserRequest}
           * @since 1.13
           */
          protected Deactivate(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.DeactivateClientUserRequest content) {
            super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+/users/[^/]+$");
            }
          }

          @Override
          public Deactivate set$Xgafv(java.lang.String $Xgafv) {
            return (Deactivate) super.set$Xgafv($Xgafv);
          }

          @Override
          public Deactivate setAccessToken(java.lang.String accessToken) {
            return (Deactivate) super.setAccessToken(accessToken);
          }

          @Override
          public Deactivate setAlt(java.lang.String alt) {
            return (Deactivate) super.setAlt(alt);
          }

          @Override
          public Deactivate setCallback(java.lang.String callback) {
            return (Deactivate) super.setCallback(callback);
          }

          @Override
          public Deactivate setFields(java.lang.String fields) {
            return (Deactivate) super.setFields(fields);
          }

          @Override
          public Deactivate setKey(java.lang.String key) {
            return (Deactivate) super.setKey(key);
          }

          @Override
          public Deactivate setOauthToken(java.lang.String oauthToken) {
            return (Deactivate) super.setOauthToken(oauthToken);
          }

          @Override
          public Deactivate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Deactivate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Deactivate setQuotaUser(java.lang.String quotaUser) {
            return (Deactivate) super.setQuotaUser(quotaUser);
          }

          @Override
          public Deactivate setUploadType(java.lang.String uploadType) {
            return (Deactivate) super.setUploadType(uploadType);
          }

          @Override
          public Deactivate setUploadProtocol(java.lang.String uploadProtocol) {
            return (Deactivate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Format:
           * `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Format:
           * `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          public Deactivate setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+/users/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Deactivate set(String parameterName, Object value) {
            return (Deactivate) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an existing client user. The client user will lose access to the Authorized Buyers UI.
         * Note that if a client user is deleted, the user's access to the UI can't be restored unless a new
         * client user is created and activated.
         *
         * Create a request for the method "users.delete".
         *
         * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Delete#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Empty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^buyers/[^/]+/clients/[^/]+/users/[^/]+$");

          /**
           * Deletes an existing client user. The client user will lose access to the Authorized Buyers UI.
           * Note that if a client user is deleted, the user's access to the UI can't be restored unless a
           * new client user is created and activated.
           *
           * Create a request for the method "users.delete".
           *
           * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
           * setting any optional parameters, call the {@link Delete#execute()} method to invoke the remote
           * operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(AuthorizedBuyersMarketplace.this, "DELETE", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+/users/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Format:
           * `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Format:
           * `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+/users/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves an existing client user.
         *
         * Create a request for the method "users.get".
         *
         * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^buyers/[^/]+/clients/[^/]+/users/[^/]+$");

          /**
           * Retrieves an existing client user.
           *
           * Create a request for the method "users.get".
           *
           * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
           * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
           * operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.ClientUser.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+/users/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Format:
           * `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Format:
           * `buyers/{buyerAccountId}/clients/{clientAccountId}/clientUsers/{userId}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+/users/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all client users for a specified client.
         *
         * Create a request for the method "users.list".
         *
         * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Required. The name of the client. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ListClientUsersResponse> {

          private static final String REST_PATH = "v1/{+parent}/users";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^buyers/[^/]+/clients/[^/]+$");

          /**
           * Lists all client users for a specified client.
           *
           * Create a request for the method "users.list".
           *
           * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
           * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
           * operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the client. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.ListClientUsersResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the client. Format:
           * `buyers/{buyerAccountId}/clients/{clientAccountId}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the client. Format: `buyers/{buyerAccountId}/clients/{clientAccountId}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the client. Format:
           * `buyers/{buyerAccountId}/clients/{clientAccountId}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^buyers/[^/]+/clients/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Requested page size. If left blank, a default page size of 500 will be applied. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. If left blank, a default page size of 500 will be applied.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Requested page size. If left blank, a default page size of 500 will be applied. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A token identifying a page of results the server should return. Typically, this is the
           * value of ListClientUsersResponse.nextPageToken returned from the previous call to the
           * list method.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying a page of results the server should return. Typically, this is the value of
         ListClientUsersResponse.nextPageToken returned from the previous call to the list method.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A token identifying a page of results the server should return. Typically, this is the
           * value of ListClientUsersResponse.nextPageToken returned from the previous call to the
           * list method.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the FinalizedDeals collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AuthorizedBuyersMarketplace authorizedbuyersmarketplace = new AuthorizedBuyersMarketplace(...);}
     *   {@code AuthorizedBuyersMarketplace.FinalizedDeals.List request = authorizedbuyersmarketplace.finalizedDeals().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public FinalizedDeals finalizedDeals() {
      return new FinalizedDeals();
    }

    /**
     * The "finalizedDeals" collection of methods.
     */
    public class FinalizedDeals {

      /**
       * Add creative to be used in the bidding process for a finalized deal. For programmatic guaranteed
       * deals, it's recommended that you associate at least one approved creative with the deal before
       * calling SetReadyToServe, to help reduce the number of bid responses filtered because they don't
       * contain approved creatives. Creatives successfully added to a deal can be found in the Realtime-
       * bidding Creatives API creative.deal_ids. This method only applies to programmatic guaranteed
       * deals. Maximum number of 1000 creatives can be added to a finalized deal.
       *
       * Create a request for the method "finalizedDeals.addCreative".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link AddCreative#execute()} method to invoke the
       * remote operation.
       *
       * @param deal Required. Name of the finalized deal in the format of: `buyers/{accountId}/finalizedDeals/{dealId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.AddCreativeRequest}
       * @return the request
       */
      public AddCreative addCreative(java.lang.String deal, com.google.api.services.authorizedbuyersmarketplace.v1.model.AddCreativeRequest content) throws java.io.IOException {
        AddCreative result = new AddCreative(deal, content);
        initialize(result);
        return result;
      }

      public class AddCreative extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.FinalizedDeal> {

        private static final String REST_PATH = "v1/{+deal}:addCreative";

        private final java.util.regex.Pattern DEAL_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/finalizedDeals/[^/]+$");

        /**
         * Add creative to be used in the bidding process for a finalized deal. For programmatic
         * guaranteed deals, it's recommended that you associate at least one approved creative with the
         * deal before calling SetReadyToServe, to help reduce the number of bid responses filtered
         * because they don't contain approved creatives. Creatives successfully added to a deal can be
         * found in the Realtime-bidding Creatives API creative.deal_ids. This method only applies to
         * programmatic guaranteed deals. Maximum number of 1000 creatives can be added to a finalized
         * deal.
         *
         * Create a request for the method "finalizedDeals.addCreative".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link AddCreative#execute()} method to invoke the
         * remote operation. <p> {@link
         * AddCreative#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param deal Required. Name of the finalized deal in the format of: `buyers/{accountId}/finalizedDeals/{dealId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.AddCreativeRequest}
         * @since 1.13
         */
        protected AddCreative(java.lang.String deal, com.google.api.services.authorizedbuyersmarketplace.v1.model.AddCreativeRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.FinalizedDeal.class);
          this.deal = com.google.api.client.util.Preconditions.checkNotNull(deal, "Required parameter deal must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(DEAL_PATTERN.matcher(deal).matches(),
                "Parameter deal must conform to the pattern " +
                "^buyers/[^/]+/finalizedDeals/[^/]+$");
          }
        }

        @Override
        public AddCreative set$Xgafv(java.lang.String $Xgafv) {
          return (AddCreative) super.set$Xgafv($Xgafv);
        }

        @Override
        public AddCreative setAccessToken(java.lang.String accessToken) {
          return (AddCreative) super.setAccessToken(accessToken);
        }

        @Override
        public AddCreative setAlt(java.lang.String alt) {
          return (AddCreative) super.setAlt(alt);
        }

        @Override
        public AddCreative setCallback(java.lang.String callback) {
          return (AddCreative) super.setCallback(callback);
        }

        @Override
        public AddCreative setFields(java.lang.String fields) {
          return (AddCreative) super.setFields(fields);
        }

        @Override
        public AddCreative setKey(java.lang.String key) {
          return (AddCreative) super.setKey(key);
        }

        @Override
        public AddCreative setOauthToken(java.lang.String oauthToken) {
          return (AddCreative) super.setOauthToken(oauthToken);
        }

        @Override
        public AddCreative setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (AddCreative) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public AddCreative setQuotaUser(java.lang.String quotaUser) {
          return (AddCreative) super.setQuotaUser(quotaUser);
        }

        @Override
        public AddCreative setUploadType(java.lang.String uploadType) {
          return (AddCreative) super.setUploadType(uploadType);
        }

        @Override
        public AddCreative setUploadProtocol(java.lang.String uploadProtocol) {
          return (AddCreative) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the finalized deal in the format of:
         * `buyers/{accountId}/finalizedDeals/{dealId}`
         */
        @com.google.api.client.util.Key
        private java.lang.String deal;

        /** Required. Name of the finalized deal in the format of: `buyers/{accountId}/finalizedDeals/{dealId}`
         */
        public java.lang.String getDeal() {
          return deal;
        }

        /**
         * Required. Name of the finalized deal in the format of:
         * `buyers/{accountId}/finalizedDeals/{dealId}`
         */
        public AddCreative setDeal(java.lang.String deal) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(DEAL_PATTERN.matcher(deal).matches(),
                "Parameter deal must conform to the pattern " +
                "^buyers/[^/]+/finalizedDeals/[^/]+$");
          }
          this.deal = deal;
          return this;
        }

        @Override
        public AddCreative set(String parameterName, Object value) {
          return (AddCreative) super.set(parameterName, value);
        }
      }
      /**
       * Gets a finalized deal given its name.
       *
       * Create a request for the method "finalizedDeals.get".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.FinalizedDeal> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/finalizedDeals/[^/]+$");

        /**
         * Gets a finalized deal given its name.
         *
         * Create a request for the method "finalizedDeals.get".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.FinalizedDeal.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/finalizedDeals/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}` */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/finalizedDeals/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists finalized deals. Use the URL path "/v1/buyers/{accountId}/finalizedDeals" to list finalized
       * deals for the current buyer and its clients. Bidders can use the URL path
       * "/v1/bidders/{accountId}/finalizedDeals" to list finalized deals for the bidder, its buyers and
       * all their clients.
       *
       * Create a request for the method "finalizedDeals.list".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The buyer to list the finalized deals for, in the format: `buyers/{accountId}`. When used
       *        to list finalized deals for a bidder, its buyers and clients, in the format
       *        `bidders/{accountId}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ListFinalizedDealsResponse> {

        private static final String REST_PATH = "v1/{+parent}/finalizedDeals";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+$");

        /**
         * Lists finalized deals. Use the URL path "/v1/buyers/{accountId}/finalizedDeals" to list
         * finalized deals for the current buyer and its clients. Bidders can use the URL path
         * "/v1/bidders/{accountId}/finalizedDeals" to list finalized deals for the bidder, its buyers and
         * all their clients.
         *
         * Create a request for the method "finalizedDeals.list".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The buyer to list the finalized deals for, in the format: `buyers/{accountId}`. When used
       *        to list finalized deals for a bidder, its buyers and clients, in the format
       *        `bidders/{accountId}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.ListFinalizedDealsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The buyer to list the finalized deals for, in the format: `buyers/{accountId}`.
         * When used to list finalized deals for a bidder, its buyers and clients, in the format
         * `bidders/{accountId}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The buyer to list the finalized deals for, in the format: `buyers/{accountId}`. When used
       to list finalized deals for a bidder, its buyers and clients, in the format `bidders/{accountId}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The buyer to list the finalized deals for, in the format: `buyers/{accountId}`.
         * When used to list finalized deals for a bidder, its buyers and clients, in the format
         * `bidders/{accountId}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional query string using the [Cloud API list filtering
         * syntax](https://developers.google.com/authorized-buyers/apis/guides/list-filters)
         * Supported columns for filtering are: * deal.displayName * deal.dealType * deal.createTime
         * * deal.updateTime * deal.flightStartTime * deal.flightEndTime * deal.eligibleSeatIds *
         * dealServingStatus
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional query string using the [Cloud API list filtering
       syntax](https://developers.google.com/authorized-buyers/apis/guides/list-filters) Supported columns
       for filtering are: * deal.displayName * deal.dealType * deal.createTime * deal.updateTime *
       deal.flightStartTime * deal.flightEndTime * deal.eligibleSeatIds * dealServingStatus
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional query string using the [Cloud API list filtering
         * syntax](https://developers.google.com/authorized-buyers/apis/guides/list-filters)
         * Supported columns for filtering are: * deal.displayName * deal.dealType * deal.createTime
         * * deal.updateTime * deal.flightStartTime * deal.flightEndTime * deal.eligibleSeatIds *
         * dealServingStatus
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * An optional query string to sort finalized deals using the [Cloud API sorting
         * syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort
         * order is specified, results will be returned in an arbitrary order. Supported columns for
         * sorting are: * deal.displayName * deal.createTime * deal.updateTime *
         * deal.flightStartTime * deal.flightEndTime * rtbMetrics.bidRequests7Days *
         * rtbMetrics.bids7Days * rtbMetrics.adImpressions7Days * rtbMetrics.bidRate7Days *
         * rtbMetrics.filteredBidRate7Days * rtbMetrics.mustBidRateCurrentMonth
         */
        @com.google.api.client.util.Key
        private java.lang.String orderBy;

        /** An optional query string to sort finalized deals using the [Cloud API sorting
       syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort order is
       specified, results will be returned in an arbitrary order. Supported columns for sorting are: *
       deal.displayName * deal.createTime * deal.updateTime * deal.flightStartTime * deal.flightEndTime *
       rtbMetrics.bidRequests7Days * rtbMetrics.bids7Days * rtbMetrics.adImpressions7Days *
       rtbMetrics.bidRate7Days * rtbMetrics.filteredBidRate7Days * rtbMetrics.mustBidRateCurrentMonth
         */
        public java.lang.String getOrderBy() {
          return orderBy;
        }

        /**
         * An optional query string to sort finalized deals using the [Cloud API sorting
         * syntax](https://cloud.google.com/apis/design/design_patterns#sorting_order). If no sort
         * order is specified, results will be returned in an arbitrary order. Supported columns for
         * sorting are: * deal.displayName * deal.createTime * deal.updateTime *
         * deal.flightStartTime * deal.flightEndTime * rtbMetrics.bidRequests7Days *
         * rtbMetrics.bids7Days * rtbMetrics.adImpressions7Days * rtbMetrics.bidRate7Days *
         * rtbMetrics.filteredBidRate7Days * rtbMetrics.mustBidRateCurrentMonth
         */
        public List setOrderBy(java.lang.String orderBy) {
          this.orderBy = orderBy;
          return this;
        }

        /**
         * Requested page size. The server may return fewer results than requested. If requested
         * more than 500, the server will return 500 results per page. If unspecified, the server
         * will pick a default page size of 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Requested page size. The server may return fewer results than requested. If requested more than
       500, the server will return 500 results per page. If unspecified, the server will pick a default
       page size of 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Requested page size. The server may return fewer results than requested. If requested
         * more than 500, the server will return 500 results per page. If unspecified, the server
         * will pick a default page size of 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The page token as returned from ListFinalizedDealsResponse. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The page token as returned from ListFinalizedDealsResponse.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The page token as returned from ListFinalizedDealsResponse. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Pauses serving of the given finalized deal. This call only pauses the serving status, and does
       * not affect other fields of the finalized deal. Calling this method for an already paused deal has
       * no effect. This method only applies to programmatic guaranteed deals and preferred deals.
       *
       * Create a request for the method "finalizedDeals.pause".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Pause#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.PauseFinalizedDealRequest}
       * @return the request
       */
      public Pause pause(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.PauseFinalizedDealRequest content) throws java.io.IOException {
        Pause result = new Pause(name, content);
        initialize(result);
        return result;
      }

      public class Pause extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.FinalizedDeal> {

        private static final String REST_PATH = "v1/{+name}:pause";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/finalizedDeals/[^/]+$");

        /**
         * Pauses serving of the given finalized deal. This call only pauses the serving status, and does
         * not affect other fields of the finalized deal. Calling this method for an already paused deal
         * has no effect. This method only applies to programmatic guaranteed deals and preferred deals.
         *
         * Create a request for the method "finalizedDeals.pause".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Pause#execute()} method to invoke the remote
         * operation. <p> {@link
         * Pause#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.PauseFinalizedDealRequest}
         * @since 1.13
         */
        protected Pause(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.PauseFinalizedDealRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.FinalizedDeal.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/finalizedDeals/[^/]+$");
          }
        }

        @Override
        public Pause set$Xgafv(java.lang.String $Xgafv) {
          return (Pause) super.set$Xgafv($Xgafv);
        }

        @Override
        public Pause setAccessToken(java.lang.String accessToken) {
          return (Pause) super.setAccessToken(accessToken);
        }

        @Override
        public Pause setAlt(java.lang.String alt) {
          return (Pause) super.setAlt(alt);
        }

        @Override
        public Pause setCallback(java.lang.String callback) {
          return (Pause) super.setCallback(callback);
        }

        @Override
        public Pause setFields(java.lang.String fields) {
          return (Pause) super.setFields(fields);
        }

        @Override
        public Pause setKey(java.lang.String key) {
          return (Pause) super.setKey(key);
        }

        @Override
        public Pause setOauthToken(java.lang.String oauthToken) {
          return (Pause) super.setOauthToken(oauthToken);
        }

        @Override
        public Pause setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Pause) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Pause setQuotaUser(java.lang.String quotaUser) {
          return (Pause) super.setQuotaUser(quotaUser);
        }

        @Override
        public Pause setUploadType(java.lang.String uploadType) {
          return (Pause) super.setUploadType(uploadType);
        }

        @Override
        public Pause setUploadProtocol(java.lang.String uploadProtocol) {
          return (Pause) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}` */
        public Pause setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/finalizedDeals/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Pause set(String parameterName, Object value) {
          return (Pause) super.set(parameterName, value);
        }
      }
      /**
       * Resumes serving of the given finalized deal. Calling this method for an running deal has no
       * effect. If a deal is initially paused by the seller, calling this method will not resume serving
       * of the deal until the seller also resumes the deal. This method only applies to programmatic
       * guaranteed deals and preferred deals.
       *
       * Create a request for the method "finalizedDeals.resume".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Resume#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.ResumeFinalizedDealRequest}
       * @return the request
       */
      public Resume resume(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.ResumeFinalizedDealRequest content) throws java.io.IOException {
        Resume result = new Resume(name, content);
        initialize(result);
        return result;
      }

      public class Resume extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.FinalizedDeal> {

        private static final String REST_PATH = "v1/{+name}:resume";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/finalizedDeals/[^/]+$");

        /**
         * Resumes serving of the given finalized deal. Calling this method for an running deal has no
         * effect. If a deal is initially paused by the seller, calling this method will not resume
         * serving of the deal until the seller also resumes the deal. This method only applies to
         * programmatic guaranteed deals and preferred deals.
         *
         * Create a request for the method "finalizedDeals.resume".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Resume#execute()} method to invoke the remote
         * operation. <p> {@link
         * Resume#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.ResumeFinalizedDealRequest}
         * @since 1.13
         */
        protected Resume(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.ResumeFinalizedDealRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.FinalizedDeal.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/finalizedDeals/[^/]+$");
          }
        }

        @Override
        public Resume set$Xgafv(java.lang.String $Xgafv) {
          return (Resume) super.set$Xgafv($Xgafv);
        }

        @Override
        public Resume setAccessToken(java.lang.String accessToken) {
          return (Resume) super.setAccessToken(accessToken);
        }

        @Override
        public Resume setAlt(java.lang.String alt) {
          return (Resume) super.setAlt(alt);
        }

        @Override
        public Resume setCallback(java.lang.String callback) {
          return (Resume) super.setCallback(callback);
        }

        @Override
        public Resume setFields(java.lang.String fields) {
          return (Resume) super.setFields(fields);
        }

        @Override
        public Resume setKey(java.lang.String key) {
          return (Resume) super.setKey(key);
        }

        @Override
        public Resume setOauthToken(java.lang.String oauthToken) {
          return (Resume) super.setOauthToken(oauthToken);
        }

        @Override
        public Resume setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Resume) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Resume setQuotaUser(java.lang.String quotaUser) {
          return (Resume) super.setQuotaUser(quotaUser);
        }

        @Override
        public Resume setUploadType(java.lang.String uploadType) {
          return (Resume) super.setUploadType(uploadType);
        }

        @Override
        public Resume setUploadProtocol(java.lang.String uploadProtocol) {
          return (Resume) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}` */
        public Resume setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/finalizedDeals/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Resume set(String parameterName, Object value) {
          return (Resume) super.set(parameterName, value);
        }
      }
      /**
       * Sets the given finalized deal as ready to serve. By default, deals are set as ready to serve as
       * soon as they're finalized. If you want to opt out of the default behavior, and manually indicate
       * that deals are ready to serve, ask your Technical Account Manager to add you to the allowlist. If
       * you choose to use this method, finalized deals belonging to the bidder and its child seats don't
       * start serving until after you call `setReadyToServe`, and after the deals become active. For
       * example, you can use this method to delay receiving bid requests until your creative is ready.
       * This method only applies to programmatic guaranteed deals.
       *
       * Create a request for the method "finalizedDeals.setReadyToServe".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link SetReadyToServe#execute()} method to invoke the
       * remote operation.
       *
       * @param deal Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.SetReadyToServeRequest}
       * @return the request
       */
      public SetReadyToServe setReadyToServe(java.lang.String deal, com.google.api.services.authorizedbuyersmarketplace.v1.model.SetReadyToServeRequest content) throws java.io.IOException {
        SetReadyToServe result = new SetReadyToServe(deal, content);
        initialize(result);
        return result;
      }

      public class SetReadyToServe extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.FinalizedDeal> {

        private static final String REST_PATH = "v1/{+deal}:setReadyToServe";

        private final java.util.regex.Pattern DEAL_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/finalizedDeals/[^/]+$");

        /**
         * Sets the given finalized deal as ready to serve. By default, deals are set as ready to serve as
         * soon as they're finalized. If you want to opt out of the default behavior, and manually
         * indicate that deals are ready to serve, ask your Technical Account Manager to add you to the
         * allowlist. If you choose to use this method, finalized deals belonging to the bidder and its
         * child seats don't start serving until after you call `setReadyToServe`, and after the deals
         * become active. For example, you can use this method to delay receiving bid requests until your
         * creative is ready. This method only applies to programmatic guaranteed deals.
         *
         * Create a request for the method "finalizedDeals.setReadyToServe".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link SetReadyToServe#execute()} method to invoke
         * the remote operation. <p> {@link SetReadyToServe#initialize(com.google.api.client.googleapis.se
         * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param deal Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.SetReadyToServeRequest}
         * @since 1.13
         */
        protected SetReadyToServe(java.lang.String deal, com.google.api.services.authorizedbuyersmarketplace.v1.model.SetReadyToServeRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.FinalizedDeal.class);
          this.deal = com.google.api.client.util.Preconditions.checkNotNull(deal, "Required parameter deal must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(DEAL_PATTERN.matcher(deal).matches(),
                "Parameter deal must conform to the pattern " +
                "^buyers/[^/]+/finalizedDeals/[^/]+$");
          }
        }

        @Override
        public SetReadyToServe set$Xgafv(java.lang.String $Xgafv) {
          return (SetReadyToServe) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetReadyToServe setAccessToken(java.lang.String accessToken) {
          return (SetReadyToServe) super.setAccessToken(accessToken);
        }

        @Override
        public SetReadyToServe setAlt(java.lang.String alt) {
          return (SetReadyToServe) super.setAlt(alt);
        }

        @Override
        public SetReadyToServe setCallback(java.lang.String callback) {
          return (SetReadyToServe) super.setCallback(callback);
        }

        @Override
        public SetReadyToServe setFields(java.lang.String fields) {
          return (SetReadyToServe) super.setFields(fields);
        }

        @Override
        public SetReadyToServe setKey(java.lang.String key) {
          return (SetReadyToServe) super.setKey(key);
        }

        @Override
        public SetReadyToServe setOauthToken(java.lang.String oauthToken) {
          return (SetReadyToServe) super.setOauthToken(oauthToken);
        }

        @Override
        public SetReadyToServe setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetReadyToServe) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetReadyToServe setQuotaUser(java.lang.String quotaUser) {
          return (SetReadyToServe) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetReadyToServe setUploadType(java.lang.String uploadType) {
          return (SetReadyToServe) super.setUploadType(uploadType);
        }

        @Override
        public SetReadyToServe setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetReadyToServe) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}` */
        @com.google.api.client.util.Key
        private java.lang.String deal;

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}`
         */
        public java.lang.String getDeal() {
          return deal;
        }

        /** Required. Format: `buyers/{accountId}/finalizedDeals/{dealId}` */
        public SetReadyToServe setDeal(java.lang.String deal) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(DEAL_PATTERN.matcher(deal).matches(),
                "Parameter deal must conform to the pattern " +
                "^buyers/[^/]+/finalizedDeals/[^/]+$");
          }
          this.deal = deal;
          return this;
        }

        @Override
        public SetReadyToServe set(String parameterName, Object value) {
          return (SetReadyToServe) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Proposals collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AuthorizedBuyersMarketplace authorizedbuyersmarketplace = new AuthorizedBuyersMarketplace(...);}
     *   {@code AuthorizedBuyersMarketplace.Proposals.List request = authorizedbuyersmarketplace.proposals().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Proposals proposals() {
      return new Proposals();
    }

    /**
     * The "proposals" collection of methods.
     */
    public class Proposals {

      /**
       * Accepts the proposal at the given revision number. If the revision number in the request is
       * behind the latest from the server, an error message will be returned. This call updates the
       * Proposal.state from `BUYER_ACCEPTANCE_REQUESTED` to `FINALIZED`; it has no side effect if the
       * Proposal.state is already `FINALIZED` and throws exception if the Proposal.state is not either
       * `BUYER_ACCEPTANCE_REQUESTED` or `FINALIZED`. Accepting a proposal means the buyer understands and
       * accepts the Proposal.terms_and_conditions proposed by the seller.
       *
       * Create a request for the method "proposals.accept".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Accept#execute()} method to invoke the remote
       * operation.
       *
       * @param name Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.AcceptProposalRequest}
       * @return the request
       */
      public Accept accept(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.AcceptProposalRequest content) throws java.io.IOException {
        Accept result = new Accept(name, content);
        initialize(result);
        return result;
      }

      public class Accept extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal> {

        private static final String REST_PATH = "v1/{+name}:accept";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/proposals/[^/]+$");

        /**
         * Accepts the proposal at the given revision number. If the revision number in the request is
         * behind the latest from the server, an error message will be returned. This call updates the
         * Proposal.state from `BUYER_ACCEPTANCE_REQUESTED` to `FINALIZED`; it has no side effect if the
         * Proposal.state is already `FINALIZED` and throws exception if the Proposal.state is not either
         * `BUYER_ACCEPTANCE_REQUESTED` or `FINALIZED`. Accepting a proposal means the buyer understands
         * and accepts the Proposal.terms_and_conditions proposed by the seller.
         *
         * Create a request for the method "proposals.accept".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Accept#execute()} method to invoke the remote
         * operation. <p> {@link
         * Accept#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.AcceptProposalRequest}
         * @since 1.13
         */
        protected Accept(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.AcceptProposalRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/proposals/[^/]+$");
          }
        }

        @Override
        public Accept set$Xgafv(java.lang.String $Xgafv) {
          return (Accept) super.set$Xgafv($Xgafv);
        }

        @Override
        public Accept setAccessToken(java.lang.String accessToken) {
          return (Accept) super.setAccessToken(accessToken);
        }

        @Override
        public Accept setAlt(java.lang.String alt) {
          return (Accept) super.setAlt(alt);
        }

        @Override
        public Accept setCallback(java.lang.String callback) {
          return (Accept) super.setCallback(callback);
        }

        @Override
        public Accept setFields(java.lang.String fields) {
          return (Accept) super.setFields(fields);
        }

        @Override
        public Accept setKey(java.lang.String key) {
          return (Accept) super.setKey(key);
        }

        @Override
        public Accept setOauthToken(java.lang.String oauthToken) {
          return (Accept) super.setOauthToken(oauthToken);
        }

        @Override
        public Accept setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Accept) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Accept setQuotaUser(java.lang.String quotaUser) {
          return (Accept) super.setQuotaUser(quotaUser);
        }

        @Override
        public Accept setUploadType(java.lang.String uploadType) {
          return (Accept) super.setUploadType(uploadType);
        }

        @Override
        public Accept setUploadProtocol(java.lang.String uploadProtocol) {
          return (Accept) super.setUploadProtocol(uploadProtocol);
        }

        /** Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}` */
        public Accept setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/proposals/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Accept set(String parameterName, Object value) {
          return (Accept) super.set(parameterName, value);
        }
      }
      /**
       * Creates a note for this proposal and sends to the seller. This method is not supported for
       * proposals with DealType set to 'PRIVATE_AUCTION'.
       *
       * Create a request for the method "proposals.addNote".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link AddNote#execute()} method to invoke the remote
       * operation.
       *
       * @param proposal Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.AddNoteRequest}
       * @return the request
       */
      public AddNote addNote(java.lang.String proposal, com.google.api.services.authorizedbuyersmarketplace.v1.model.AddNoteRequest content) throws java.io.IOException {
        AddNote result = new AddNote(proposal, content);
        initialize(result);
        return result;
      }

      public class AddNote extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal> {

        private static final String REST_PATH = "v1/{+proposal}:addNote";

        private final java.util.regex.Pattern PROPOSAL_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/proposals/[^/]+$");

        /**
         * Creates a note for this proposal and sends to the seller. This method is not supported for
         * proposals with DealType set to 'PRIVATE_AUCTION'.
         *
         * Create a request for the method "proposals.addNote".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link AddNote#execute()} method to invoke the remote
         * operation. <p> {@link
         * AddNote#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param proposal Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.AddNoteRequest}
         * @since 1.13
         */
        protected AddNote(java.lang.String proposal, com.google.api.services.authorizedbuyersmarketplace.v1.model.AddNoteRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal.class);
          this.proposal = com.google.api.client.util.Preconditions.checkNotNull(proposal, "Required parameter proposal must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PROPOSAL_PATTERN.matcher(proposal).matches(),
                "Parameter proposal must conform to the pattern " +
                "^buyers/[^/]+/proposals/[^/]+$");
          }
        }

        @Override
        public AddNote set$Xgafv(java.lang.String $Xgafv) {
          return (AddNote) super.set$Xgafv($Xgafv);
        }

        @Override
        public AddNote setAccessToken(java.lang.String accessToken) {
          return (AddNote) super.setAccessToken(accessToken);
        }

        @Override
        public AddNote setAlt(java.lang.String alt) {
          return (AddNote) super.setAlt(alt);
        }

        @Override
        public AddNote setCallback(java.lang.String callback) {
          return (AddNote) super.setCallback(callback);
        }

        @Override
        public AddNote setFields(java.lang.String fields) {
          return (AddNote) super.setFields(fields);
        }

        @Override
        public AddNote setKey(java.lang.String key) {
          return (AddNote) super.setKey(key);
        }

        @Override
        public AddNote setOauthToken(java.lang.String oauthToken) {
          return (AddNote) super.setOauthToken(oauthToken);
        }

        @Override
        public AddNote setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (AddNote) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public AddNote setQuotaUser(java.lang.String quotaUser) {
          return (AddNote) super.setQuotaUser(quotaUser);
        }

        @Override
        public AddNote setUploadType(java.lang.String uploadType) {
          return (AddNote) super.setUploadType(uploadType);
        }

        @Override
        public AddNote setUploadProtocol(java.lang.String uploadProtocol) {
          return (AddNote) super.setUploadProtocol(uploadProtocol);
        }

        /** Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}` */
        @com.google.api.client.util.Key
        private java.lang.String proposal;

        /** Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
         */
        public java.lang.String getProposal() {
          return proposal;
        }

        /** Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}` */
        public AddNote setProposal(java.lang.String proposal) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PROPOSAL_PATTERN.matcher(proposal).matches(),
                "Parameter proposal must conform to the pattern " +
                "^buyers/[^/]+/proposals/[^/]+$");
          }
          this.proposal = proposal;
          return this;
        }

        @Override
        public AddNote set(String parameterName, Object value) {
          return (AddNote) super.set(parameterName, value);
        }
      }
      /**
       * Cancels an ongoing negotiation on a proposal. This does not cancel or end serving for the deals
       * if the proposal has been finalized. If the proposal has not been finalized before, calling this
       * method will set the Proposal.state to `TERMINATED` and increment the Proposal.proposal_revision.
       * If the proposal has been finalized before and is under renegotiation now, calling this method
       * will reset the Proposal.state to `FINALIZED` and increment the Proposal.proposal_revision. This
       * method does not support private auction proposals whose Proposal.deal_type is 'PRIVATE_AUCTION'.
       *
       * Create a request for the method "proposals.cancelNegotiation".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link CancelNegotiation#execute()} method to invoke
       * the remote operation.
       *
       * @param proposal Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.CancelNegotiationRequest}
       * @return the request
       */
      public CancelNegotiation cancelNegotiation(java.lang.String proposal, com.google.api.services.authorizedbuyersmarketplace.v1.model.CancelNegotiationRequest content) throws java.io.IOException {
        CancelNegotiation result = new CancelNegotiation(proposal, content);
        initialize(result);
        return result;
      }

      public class CancelNegotiation extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal> {

        private static final String REST_PATH = "v1/{+proposal}:cancelNegotiation";

        private final java.util.regex.Pattern PROPOSAL_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/proposals/[^/]+$");

        /**
         * Cancels an ongoing negotiation on a proposal. This does not cancel or end serving for the deals
         * if the proposal has been finalized. If the proposal has not been finalized before, calling this
         * method will set the Proposal.state to `TERMINATED` and increment the
         * Proposal.proposal_revision. If the proposal has been finalized before and is under
         * renegotiation now, calling this method will reset the Proposal.state to `FINALIZED` and
         * increment the Proposal.proposal_revision. This method does not support private auction
         * proposals whose Proposal.deal_type is 'PRIVATE_AUCTION'.
         *
         * Create a request for the method "proposals.cancelNegotiation".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link CancelNegotiation#execute()} method to invoke
         * the remote operation. <p> {@link CancelNegotiation#initialize(com.google.api.client.googleapis.
         * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param proposal Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.CancelNegotiationRequest}
         * @since 1.13
         */
        protected CancelNegotiation(java.lang.String proposal, com.google.api.services.authorizedbuyersmarketplace.v1.model.CancelNegotiationRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal.class);
          this.proposal = com.google.api.client.util.Preconditions.checkNotNull(proposal, "Required parameter proposal must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PROPOSAL_PATTERN.matcher(proposal).matches(),
                "Parameter proposal must conform to the pattern " +
                "^buyers/[^/]+/proposals/[^/]+$");
          }
        }

        @Override
        public CancelNegotiation set$Xgafv(java.lang.String $Xgafv) {
          return (CancelNegotiation) super.set$Xgafv($Xgafv);
        }

        @Override
        public CancelNegotiation setAccessToken(java.lang.String accessToken) {
          return (CancelNegotiation) super.setAccessToken(accessToken);
        }

        @Override
        public CancelNegotiation setAlt(java.lang.String alt) {
          return (CancelNegotiation) super.setAlt(alt);
        }

        @Override
        public CancelNegotiation setCallback(java.lang.String callback) {
          return (CancelNegotiation) super.setCallback(callback);
        }

        @Override
        public CancelNegotiation setFields(java.lang.String fields) {
          return (CancelNegotiation) super.setFields(fields);
        }

        @Override
        public CancelNegotiation setKey(java.lang.String key) {
          return (CancelNegotiation) super.setKey(key);
        }

        @Override
        public CancelNegotiation setOauthToken(java.lang.String oauthToken) {
          return (CancelNegotiation) super.setOauthToken(oauthToken);
        }

        @Override
        public CancelNegotiation setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (CancelNegotiation) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public CancelNegotiation setQuotaUser(java.lang.String quotaUser) {
          return (CancelNegotiation) super.setQuotaUser(quotaUser);
        }

        @Override
        public CancelNegotiation setUploadType(java.lang.String uploadType) {
          return (CancelNegotiation) super.setUploadType(uploadType);
        }

        @Override
        public CancelNegotiation setUploadProtocol(java.lang.String uploadProtocol) {
          return (CancelNegotiation) super.setUploadProtocol(uploadProtocol);
        }

        /** Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}` */
        @com.google.api.client.util.Key
        private java.lang.String proposal;

        /** Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
         */
        public java.lang.String getProposal() {
          return proposal;
        }

        /** Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}` */
        public CancelNegotiation setProposal(java.lang.String proposal) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PROPOSAL_PATTERN.matcher(proposal).matches(),
                "Parameter proposal must conform to the pattern " +
                "^buyers/[^/]+/proposals/[^/]+$");
          }
          this.proposal = proposal;
          return this;
        }

        @Override
        public CancelNegotiation set(String parameterName, Object value) {
          return (CancelNegotiation) super.set(parameterName, value);
        }
      }
      /**
       * Gets a proposal using its resource name. The proposal is returned at the latest revision.
       *
       * Create a request for the method "proposals.get".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/proposals/[^/]+$");

        /**
         * Gets a proposal using its resource name. The proposal is returned at the latest revision.
         *
         * Create a request for the method "proposals.get".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/proposals/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Name of the proposal. Format: `buyers/{accountId}/proposals/{proposalId}` */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/proposals/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists proposals. A filter expression using [Cloud API list filtering
       * syntax](https://developers.google.com/authorized-buyers/apis/guides/list-filters) may be
       * specified to filter the results.
       *
       * Create a request for the method "proposals.list".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. Parent that owns the collection of proposals Format: `buyers/{accountId}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ListProposalsResponse> {

        private static final String REST_PATH = "v1/{+parent}/proposals";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+$");

        /**
         * Lists proposals. A filter expression using [Cloud API list filtering
         * syntax](https://developers.google.com/authorized-buyers/apis/guides/list-filters) may be
         * specified to filter the results.
         *
         * Create a request for the method "proposals.list".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Parent that owns the collection of proposals Format: `buyers/{accountId}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.ListProposalsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Parent that owns the collection of proposals Format: `buyers/{accountId}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Parent that owns the collection of proposals Format: `buyers/{accountId}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Parent that owns the collection of proposals Format: `buyers/{accountId}` */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional query string using the [Cloud API list filtering
         * syntax](https://developers.google.com/authorized-buyers/apis/guides/list-filters)
         * Supported columns for filtering are: * displayName * dealType * updateTime * state
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional query string using the [Cloud API list filtering
       syntax](https://developers.google.com/authorized-buyers/apis/guides/list-filters) Supported columns
       for filtering are: * displayName * dealType * updateTime * state
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional query string using the [Cloud API list filtering
         * syntax](https://developers.google.com/authorized-buyers/apis/guides/list-filters)
         * Supported columns for filtering are: * displayName * dealType * updateTime * state
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Requested page size. The server may return fewer results than requested. If unspecified,
         * the server will put a size of 500.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Requested page size. The server may return fewer results than requested. If unspecified, the server
       will put a size of 500.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Requested page size. The server may return fewer results than requested. If unspecified,
         * the server will put a size of 500.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The page token as returned from ListProposalsResponse. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The page token as returned from ListProposalsResponse.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The page token as returned from ListProposalsResponse. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates the proposal at the given revision number. If the revision number in the request is
       * behind the latest one kept in the server, an error message will be returned. See FieldMask for
       * how to use FieldMask. Only fields specified in the UpdateProposalRequest.update_mask will be
       * updated; Fields noted as 'Immutable' or 'Output only' yet specified in the
       * UpdateProposalRequest.update_mask will be ignored and left unchanged. Updating a private auction
       * proposal is only allowed for buyer private data, all other fields are immutable.
       *
       * Create a request for the method "proposals.patch".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
       * operation.
       *
       * @param name Immutable. The name of the proposal serving as a unique identifier. Format:
       *        buyers/{accountId}/proposals/{proposalId}
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/proposals/[^/]+$");

        /**
         * Updates the proposal at the given revision number. If the revision number in the request is
         * behind the latest one kept in the server, an error message will be returned. See FieldMask for
         * how to use FieldMask. Only fields specified in the UpdateProposalRequest.update_mask will be
         * updated; Fields noted as 'Immutable' or 'Output only' yet specified in the
         * UpdateProposalRequest.update_mask will be ignored and left unchanged. Updating a private
         * auction proposal is only allowed for buyer private data, all other fields are immutable.
         *
         * Create a request for the method "proposals.patch".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Immutable. The name of the proposal serving as a unique identifier. Format:
       *        buyers/{accountId}/proposals/{proposalId}
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal content) {
          super(AuthorizedBuyersMarketplace.this, "PATCH", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/proposals/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Immutable. The name of the proposal serving as a unique identifier. Format:
         * buyers/{accountId}/proposals/{proposalId}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Immutable. The name of the proposal serving as a unique identifier. Format:
       buyers/{accountId}/proposals/{proposalId}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Immutable. The name of the proposal serving as a unique identifier. Format:
         * buyers/{accountId}/proposals/{proposalId}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/proposals/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * List of fields to be updated. If empty or unspecified, the service will update all fields
         * populated in the update request excluding the output only fields and primitive fields
         * with default value. Note that explicit field mask is required in order to reset a
         * primitive field back to its default value, for example, false for boolean fields, 0 for
         * integer fields. A special field mask consisting of a single path "*" can be used to
         * indicate full replacement(the equivalent of PUT method), updatable fields unset or
         * unspecified in the input will be cleared or set to default value. Output only fields will
         * be ignored regardless of the value of updateMask.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** List of fields to be updated. If empty or unspecified, the service will update all fields populated
       in the update request excluding the output only fields and primitive fields with default value.
       Note that explicit field mask is required in order to reset a primitive field back to its default
       value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting
       of a single path "*" can be used to indicate full replacement(the equivalent of PUT method),
       updatable fields unset or unspecified in the input will be cleared or set to default value. Output
       only fields will be ignored regardless of the value of updateMask.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * List of fields to be updated. If empty or unspecified, the service will update all fields
         * populated in the update request excluding the output only fields and primitive fields
         * with default value. Note that explicit field mask is required in order to reset a
         * primitive field back to its default value, for example, false for boolean fields, 0 for
         * integer fields. A special field mask consisting of a single path "*" can be used to
         * indicate full replacement(the equivalent of PUT method), updatable fields unset or
         * unspecified in the input will be cleared or set to default value. Output only fields will
         * be ignored regardless of the value of updateMask.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Sends a request for proposal (RFP) to a publisher to initiate the negotiation regarding certain
       * inventory. In the RFP, buyers can specify the deal type, deal terms, start and end dates,
       * targeting, and a message to the publisher. Once the RFP is sent, a proposal in
       * `SELLER_REVIEW_REQUESTED` state will be created and returned in the response. The publisher may
       * review your request and respond with detailed deals in the proposal.
       *
       * Create a request for the method "proposals.sendRfp".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link SendRfp#execute()} method to invoke the remote
       * operation.
       *
       * @param buyer Required. The current buyer who is sending the RFP in the format: `buyers/{accountId}`.
       * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.SendRfpRequest}
       * @return the request
       */
      public SendRfp sendRfp(java.lang.String buyer, com.google.api.services.authorizedbuyersmarketplace.v1.model.SendRfpRequest content) throws java.io.IOException {
        SendRfp result = new SendRfp(buyer, content);
        initialize(result);
        return result;
      }

      public class SendRfp extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal> {

        private static final String REST_PATH = "v1/{+buyer}/proposals:sendRfp";

        private final java.util.regex.Pattern BUYER_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+$");

        /**
         * Sends a request for proposal (RFP) to a publisher to initiate the negotiation regarding certain
         * inventory. In the RFP, buyers can specify the deal type, deal terms, start and end dates,
         * targeting, and a message to the publisher. Once the RFP is sent, a proposal in
         * `SELLER_REVIEW_REQUESTED` state will be created and returned in the response. The publisher may
         * review your request and respond with detailed deals in the proposal.
         *
         * Create a request for the method "proposals.sendRfp".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link SendRfp#execute()} method to invoke the remote
         * operation. <p> {@link
         * SendRfp#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param buyer Required. The current buyer who is sending the RFP in the format: `buyers/{accountId}`.
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.SendRfpRequest}
         * @since 1.13
         */
        protected SendRfp(java.lang.String buyer, com.google.api.services.authorizedbuyersmarketplace.v1.model.SendRfpRequest content) {
          super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.Proposal.class);
          this.buyer = com.google.api.client.util.Preconditions.checkNotNull(buyer, "Required parameter buyer must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(BUYER_PATTERN.matcher(buyer).matches(),
                "Parameter buyer must conform to the pattern " +
                "^buyers/[^/]+$");
          }
        }

        @Override
        public SendRfp set$Xgafv(java.lang.String $Xgafv) {
          return (SendRfp) super.set$Xgafv($Xgafv);
        }

        @Override
        public SendRfp setAccessToken(java.lang.String accessToken) {
          return (SendRfp) super.setAccessToken(accessToken);
        }

        @Override
        public SendRfp setAlt(java.lang.String alt) {
          return (SendRfp) super.setAlt(alt);
        }

        @Override
        public SendRfp setCallback(java.lang.String callback) {
          return (SendRfp) super.setCallback(callback);
        }

        @Override
        public SendRfp setFields(java.lang.String fields) {
          return (SendRfp) super.setFields(fields);
        }

        @Override
        public SendRfp setKey(java.lang.String key) {
          return (SendRfp) super.setKey(key);
        }

        @Override
        public SendRfp setOauthToken(java.lang.String oauthToken) {
          return (SendRfp) super.setOauthToken(oauthToken);
        }

        @Override
        public SendRfp setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SendRfp) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SendRfp setQuotaUser(java.lang.String quotaUser) {
          return (SendRfp) super.setQuotaUser(quotaUser);
        }

        @Override
        public SendRfp setUploadType(java.lang.String uploadType) {
          return (SendRfp) super.setUploadType(uploadType);
        }

        @Override
        public SendRfp setUploadProtocol(java.lang.String uploadProtocol) {
          return (SendRfp) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The current buyer who is sending the RFP in the format: `buyers/{accountId}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String buyer;

        /** Required. The current buyer who is sending the RFP in the format: `buyers/{accountId}`.
         */
        public java.lang.String getBuyer() {
          return buyer;
        }

        /**
         * Required. The current buyer who is sending the RFP in the format: `buyers/{accountId}`.
         */
        public SendRfp setBuyer(java.lang.String buyer) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(BUYER_PATTERN.matcher(buyer).matches(),
                "Parameter buyer must conform to the pattern " +
                "^buyers/[^/]+$");
          }
          this.buyer = buyer;
          return this;
        }

        @Override
        public SendRfp set(String parameterName, Object value) {
          return (SendRfp) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Deals collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code AuthorizedBuyersMarketplace authorizedbuyersmarketplace = new AuthorizedBuyersMarketplace(...);}
       *   {@code AuthorizedBuyersMarketplace.Deals.List request = authorizedbuyersmarketplace.deals().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Deals deals() {
        return new Deals();
      }

      /**
       * The "deals" collection of methods.
       */
      public class Deals {

        /**
         * Batch updates multiple deals in the same proposal.
         *
         * Create a request for the method "deals.batchUpdate".
         *
         * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link BatchUpdate#execute()} method to invoke the
         * remote operation.
         *
         * @param parent Required. The name of the proposal containing the deals to batch update. Format:
         *        buyers/{accountId}/proposals/{proposalId}
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.BatchUpdateDealsRequest}
         * @return the request
         */
        public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.authorizedbuyersmarketplace.v1.model.BatchUpdateDealsRequest content) throws java.io.IOException {
          BatchUpdate result = new BatchUpdate(parent, content);
          initialize(result);
          return result;
        }

        public class BatchUpdate extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.BatchUpdateDealsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deals:batchUpdate";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^buyers/[^/]+/proposals/[^/]+$");

          /**
           * Batch updates multiple deals in the same proposal.
           *
           * Create a request for the method "deals.batchUpdate".
           *
           * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
           * setting any optional parameters, call the {@link BatchUpdate#execute()} method to invoke the
           * remote operation. <p> {@link
           * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the proposal containing the deals to batch update. Format:
         *        buyers/{accountId}/proposals/{proposalId}
           * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.BatchUpdateDealsRequest}
           * @since 1.13
           */
          protected BatchUpdate(java.lang.String parent, com.google.api.services.authorizedbuyersmarketplace.v1.model.BatchUpdateDealsRequest content) {
            super(AuthorizedBuyersMarketplace.this, "POST", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.BatchUpdateDealsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^buyers/[^/]+/proposals/[^/]+$");
            }
          }

          @Override
          public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
            return (BatchUpdate) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchUpdate setAccessToken(java.lang.String accessToken) {
            return (BatchUpdate) super.setAccessToken(accessToken);
          }

          @Override
          public BatchUpdate setAlt(java.lang.String alt) {
            return (BatchUpdate) super.setAlt(alt);
          }

          @Override
          public BatchUpdate setCallback(java.lang.String callback) {
            return (BatchUpdate) super.setCallback(callback);
          }

          @Override
          public BatchUpdate setFields(java.lang.String fields) {
            return (BatchUpdate) super.setFields(fields);
          }

          @Override
          public BatchUpdate setKey(java.lang.String key) {
            return (BatchUpdate) super.setKey(key);
          }

          @Override
          public BatchUpdate setOauthToken(java.lang.String oauthToken) {
            return (BatchUpdate) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchUpdate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
            return (BatchUpdate) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchUpdate setUploadType(java.lang.String uploadType) {
            return (BatchUpdate) super.setUploadType(uploadType);
          }

          @Override
          public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the proposal containing the deals to batch update. Format:
           * buyers/{accountId}/proposals/{proposalId}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the proposal containing the deals to batch update. Format:
         buyers/{accountId}/proposals/{proposalId}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the proposal containing the deals to batch update. Format:
           * buyers/{accountId}/proposals/{proposalId}
           */
          public BatchUpdate setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^buyers/[^/]+/proposals/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchUpdate set(String parameterName, Object value) {
            return (BatchUpdate) super.set(parameterName, value);
          }
        }
        /**
         * Gets a deal given its name. The deal is returned at its head revision.
         *
         * Create a request for the method "deals.get".
         *
         * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Deal> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^buyers/[^/]+/proposals/[^/]+/deals/[^/]+$");

          /**
           * Gets a deal given its name. The deal is returned at its head revision.
           *
           * Create a request for the method "deals.get".
           *
           * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
           * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
           * operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.Deal.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/proposals/[^/]+/deals/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId} */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId} */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/proposals/[^/]+/deals/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all deals in a proposal. To retrieve only the finalized revision deals regardless if a deal
         * is being renegotiated, see the FinalizedDeals resource.
         *
         * Create a request for the method "deals.list".
         *
         * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Required. The name of the proposal containing the deals to retrieve. Format:
         *        buyers/{accountId}/proposals/{proposalId}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ListDealsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deals";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^buyers/[^/]+/proposals/[^/]+$");

          /**
           * Lists all deals in a proposal. To retrieve only the finalized revision deals regardless if a
           * deal is being renegotiated, see the FinalizedDeals resource.
           *
           * Create a request for the method "deals.list".
           *
           * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
           * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
           * operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the proposal containing the deals to retrieve. Format:
         *        buyers/{accountId}/proposals/{proposalId}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.ListDealsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^buyers/[^/]+/proposals/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the proposal containing the deals to retrieve. Format:
           * buyers/{accountId}/proposals/{proposalId}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the proposal containing the deals to retrieve. Format:
         buyers/{accountId}/proposals/{proposalId}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the proposal containing the deals to retrieve. Format:
           * buyers/{accountId}/proposals/{proposalId}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^buyers/[^/]+/proposals/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Requested page size. The server may return fewer results than requested. If requested
           * more than 500, the server will return 500 results per page. If unspecified, the server
           * will pick a default page size of 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size. The server may return fewer results than requested. If requested more than
         500, the server will return 500 results per page. If unspecified, the server will pick a default
         page size of 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size. The server may return fewer results than requested. If requested
           * more than 500, the server will return 500 results per page. If unspecified, the server
           * will pick a default page size of 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** The page token as returned from ListDealsResponse. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** The page token as returned from ListDealsResponse.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** The page token as returned from ListDealsResponse. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the given deal at the buyer known revision number. If the server revision has advanced
         * since the passed-in proposal.proposal_revision an ABORTED error message will be returned. The
         * revision number is incremented by the server whenever the proposal or its constituent deals are
         * updated. Note: The revision number is kept at a proposal level. The buyer of the API is expected
         * to keep track of the revision number after the last update operation and send it in as part of
         * the next update request. This way, if there are further changes on the server (for example,
         * seller making new updates), then the server can detect conflicts and reject the proposed changes.
         *
         * Create a request for the method "deals.patch".
         *
         * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
         * operation.
         *
         * @param name Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created.
         *        Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}
         * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.Deal}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.Deal content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.Deal> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^buyers/[^/]+/proposals/[^/]+/deals/[^/]+$");

          /**
           * Updates the given deal at the buyer known revision number. If the server revision has advanced
           * since the passed-in proposal.proposal_revision an ABORTED error message will be returned. The
           * revision number is incremented by the server whenever the proposal or its constituent deals are
           * updated. Note: The revision number is kept at a proposal level. The buyer of the API is
           * expected to keep track of the revision number after the last update operation and send it in as
           * part of the next update request. This way, if there are further changes on the server (for
           * example, seller making new updates), then the server can detect conflicts and reject the
           * proposed changes.
           *
           * Create a request for the method "deals.patch".
           *
           * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
           * setting any optional parameters, call the {@link Patch#execute()} method to invoke the remote
           * operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created.
         *        Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}
           * @param content the {@link com.google.api.services.authorizedbuyersmarketplace.v1.model.Deal}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.authorizedbuyersmarketplace.v1.model.Deal content) {
            super(AuthorizedBuyersMarketplace.this, "PATCH", REST_PATH, content, com.google.api.services.authorizedbuyersmarketplace.v1.model.Deal.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/proposals/[^/]+/deals/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. The unique identifier of the deal. Auto-generated by the server when a deal
           * is created. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. The unique identifier of the deal. Auto-generated by the server when a deal is created.
         Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. The unique identifier of the deal. Auto-generated by the server when a deal
           * is created. Format: buyers/{accountId}/proposals/{proposalId}/deals/{dealId}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^buyers/[^/]+/proposals/[^/]+/deals/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * List of fields to be updated. If empty or unspecified, the service will update all
           * fields populated in the update request excluding the output only fields and primitive
           * fields with default value. Note that explicit field mask is required in order to reset
           * a primitive field back to its default value, for example, false for boolean fields, 0
           * for integer fields. A special field mask consisting of a single path "*" can be used to
           * indicate full replacement(the equivalent of PUT method), updatable fields unset or
           * unspecified in the input will be cleared or set to default value. Output only fields
           * will be ignored regardless of the value of updateMask.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** List of fields to be updated. If empty or unspecified, the service will update all fields populated
         in the update request excluding the output only fields and primitive fields with default value.
         Note that explicit field mask is required in order to reset a primitive field back to its default
         value, for example, false for boolean fields, 0 for integer fields. A special field mask consisting
         of a single path "*" can be used to indicate full replacement(the equivalent of PUT method),
         updatable fields unset or unspecified in the input will be cleared or set to default value. Output
         only fields will be ignored regardless of the value of updateMask.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * List of fields to be updated. If empty or unspecified, the service will update all
           * fields populated in the update request excluding the output only fields and primitive
           * fields with default value. Note that explicit field mask is required in order to reset
           * a primitive field back to its default value, for example, false for boolean fields, 0
           * for integer fields. A special field mask consisting of a single path "*" can be used to
           * indicate full replacement(the equivalent of PUT method), updatable fields unset or
           * unspecified in the input will be cleared or set to default value. Output only fields
           * will be ignored regardless of the value of updateMask.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the PublisherProfiles collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AuthorizedBuyersMarketplace authorizedbuyersmarketplace = new AuthorizedBuyersMarketplace(...);}
     *   {@code AuthorizedBuyersMarketplace.PublisherProfiles.List request = authorizedbuyersmarketplace.publisherProfiles().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public PublisherProfiles publisherProfiles() {
      return new PublisherProfiles();
    }

    /**
     * The "publisherProfiles" collection of methods.
     */
    public class PublisherProfiles {

      /**
       * Gets the requested publisher profile by name.
       *
       * Create a request for the method "publisherProfiles.get".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Name of the publisher profile. Format:
       *        `buyers/{buyerId}/publisherProfiles/{publisherProfileId}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.PublisherProfile> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+/publisherProfiles/[^/]+$");

        /**
         * Gets the requested publisher profile by name.
         *
         * Create a request for the method "publisherProfiles.get".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link Get#execute()} method to invoke the remote
         * operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the publisher profile. Format:
       *        `buyers/{buyerId}/publisherProfiles/{publisherProfileId}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.PublisherProfile.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/publisherProfiles/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the publisher profile. Format:
         * `buyers/{buyerId}/publisherProfiles/{publisherProfileId}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the publisher profile. Format:
       `buyers/{buyerId}/publisherProfiles/{publisherProfileId}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the publisher profile. Format:
         * `buyers/{buyerId}/publisherProfiles/{publisherProfileId}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^buyers/[^/]+/publisherProfiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists publisher profiles. The returned publisher profiles aren't in any defined order. The order
       * of the results might change. A new publisher profile can appear in any place in the list of
       * returned results.
       *
       * Create a request for the method "publisherProfiles.list".
       *
       * This request holds the parameters needed by the authorizedbuyersmarketplace server.  After
       * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. Parent that owns the collection of publisher profiles Format: `buyers/{buyerId}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends AuthorizedBuyersMarketplaceRequest<com.google.api.services.authorizedbuyersmarketplace.v1.model.ListPublisherProfilesResponse> {

        private static final String REST_PATH = "v1/{+parent}/publisherProfiles";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^buyers/[^/]+$");

        /**
         * Lists publisher profiles. The returned publisher profiles aren't in any defined order. The
         * order of the results might change. A new publisher profile can appear in any place in the list
         * of returned results.
         *
         * Create a request for the method "publisherProfiles.list".
         *
         * This request holds the parameters needed by the the authorizedbuyersmarketplace server.  After
         * setting any optional parameters, call the {@link List#execute()} method to invoke the remote
         * operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Parent that owns the collection of publisher profiles Format: `buyers/{buyerId}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(AuthorizedBuyersMarketplace.this, "GET", REST_PATH, null, com.google.api.services.authorizedbuyersmarketplace.v1.model.ListPublisherProfilesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Parent that owns the collection of publisher profiles Format:
         * `buyers/{buyerId}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Parent that owns the collection of publisher profiles Format: `buyers/{buyerId}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Parent that owns the collection of publisher profiles Format:
         * `buyers/{buyerId}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^buyers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional query string using the [Cloud API list filtering]
         * (https://developers.google.com/authorized-buyers/apis/guides/list-filters) syntax.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional query string using the [Cloud API list filtering]
       (https://developers.google.com/authorized-buyers/apis/guides/list-filters) syntax.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional query string using the [Cloud API list filtering]
         * (https://developers.google.com/authorized-buyers/apis/guides/list-filters) syntax.
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Requested page size. The server may return fewer results than requested. If requested
         * more than 500, the server will return 500 results per page. If unspecified, the server
         * will pick a default page size of 100.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Requested page size. The server may return fewer results than requested. If requested more than
       500, the server will return 500 results per page. If unspecified, the server will pick a default
       page size of 100.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Requested page size. The server may return fewer results than requested. If requested
         * more than 500, the server will return 500 results per page. If unspecified, the server
         * will pick a default page size of 100.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The page token as returned from a previous ListPublisherProfilesResponse. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The page token as returned from a previous ListPublisherProfilesResponse.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The page token as returned from a previous ListPublisherProfilesResponse. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link AuthorizedBuyersMarketplace}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link AuthorizedBuyersMarketplace}. */
    @Override
    public AuthorizedBuyersMarketplace build() {
      return new AuthorizedBuyersMarketplace(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link AuthorizedBuyersMarketplaceRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setAuthorizedBuyersMarketplaceRequestInitializer(
        AuthorizedBuyersMarketplaceRequestInitializer authorizedbuyersmarketplaceRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(authorizedbuyersmarketplaceRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
