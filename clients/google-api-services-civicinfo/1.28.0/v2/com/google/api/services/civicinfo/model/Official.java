/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.civicinfo.model;

/**
 * Information about a person holding an elected office.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Civic Information API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Official extends com.google.api.client.json.GenericJson {

  /**
   * Addresses at which to contact the official.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<SimpleAddressType> address;

  /**
   * A list of known (social) media channels for this official.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Channel> channels;

  static {
    // hack to force ProGuard to consider Channel used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Channel.class);
  }

  /**
   * The direct email addresses for the official.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> emails;

  /**
   * The official's name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The full name of the party the official belongs to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String party;

  /**
   * The official's public contact phone numbers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> phones;

  /**
   * A URL for a photo of the official.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String photoUrl;

  /**
   * The official's public website URLs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> urls;

  /**
   * Addresses at which to contact the official.
   * @return value or {@code null} for none
   */
  public java.util.List<SimpleAddressType> getAddress() {
    return address;
  }

  /**
   * Addresses at which to contact the official.
   * @param address address or {@code null} for none
   */
  public Official setAddress(java.util.List<SimpleAddressType> address) {
    this.address = address;
    return this;
  }

  /**
   * A list of known (social) media channels for this official.
   * @return value or {@code null} for none
   */
  public java.util.List<Channel> getChannels() {
    return channels;
  }

  /**
   * A list of known (social) media channels for this official.
   * @param channels channels or {@code null} for none
   */
  public Official setChannels(java.util.List<Channel> channels) {
    this.channels = channels;
    return this;
  }

  /**
   * The direct email addresses for the official.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getEmails() {
    return emails;
  }

  /**
   * The direct email addresses for the official.
   * @param emails emails or {@code null} for none
   */
  public Official setEmails(java.util.List<java.lang.String> emails) {
    this.emails = emails;
    return this;
  }

  /**
   * The official's name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The official's name.
   * @param name name or {@code null} for none
   */
  public Official setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The full name of the party the official belongs to.
   * @return value or {@code null} for none
   */
  public java.lang.String getParty() {
    return party;
  }

  /**
   * The full name of the party the official belongs to.
   * @param party party or {@code null} for none
   */
  public Official setParty(java.lang.String party) {
    this.party = party;
    return this;
  }

  /**
   * The official's public contact phone numbers.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPhones() {
    return phones;
  }

  /**
   * The official's public contact phone numbers.
   * @param phones phones or {@code null} for none
   */
  public Official setPhones(java.util.List<java.lang.String> phones) {
    this.phones = phones;
    return this;
  }

  /**
   * A URL for a photo of the official.
   * @return value or {@code null} for none
   */
  public java.lang.String getPhotoUrl() {
    return photoUrl;
  }

  /**
   * A URL for a photo of the official.
   * @param photoUrl photoUrl or {@code null} for none
   */
  public Official setPhotoUrl(java.lang.String photoUrl) {
    this.photoUrl = photoUrl;
    return this;
  }

  /**
   * The official's public website URLs.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getUrls() {
    return urls;
  }

  /**
   * The official's public website URLs.
   * @param urls urls or {@code null} for none
   */
  public Official setUrls(java.util.List<java.lang.String> urls) {
    this.urls = urls;
    return this;
  }

  @Override
  public Official set(String fieldName, Object value) {
    return (Official) super.set(fieldName, value);
  }

  @Override
  public Official clone() {
    return (Official) super.clone();
  }

}
