/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.analyticsadmin.v1alpha;

/**
 * Service definition for GoogleAnalyticsAdmin (v1alpha).
 *
 * <p>
 * 
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="http://code.google.com/apis/analytics/docs/mgmt/home.html" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link GoogleAnalyticsAdminRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class GoogleAnalyticsAdmin extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1)),
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "1.31.0 of the Google Analytics Admin API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://analyticsadmin.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://analyticsadmin.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public GoogleAnalyticsAdmin(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  GoogleAnalyticsAdmin(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the AccountSummaries collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
   *   {@code GoogleAnalyticsAdmin.AccountSummaries.List request = analyticsadmin.accountSummaries().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public AccountSummaries accountSummaries() {
    return new AccountSummaries();
  }

  /**
   * The "accountSummaries" collection of methods.
   */
  public class AccountSummaries {

    /**
     * Returns summaries of all accounts accessible by the caller.
     *
     * Create a request for the method "accountSummaries.list".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccountSummariesResponse> {

      private static final String REST_PATH = "v1alpha/accountSummaries";

      /**
       * Returns summaries of all accounts accessible by the caller.
       *
       * Create a request for the method "accountSummaries.list".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccountSummariesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The maximum number of AccountSummary resources to return. The service may return fewer than
       * this value, even if there are additional pages. If unspecified, at most 50 resources will
       * be returned. The maximum value is 200; (higher values will be coerced to the maximum)
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of AccountSummary resources to return. The service may return fewer than this
     value, even if there are additional pages. If unspecified, at most 50 resources will be returned.
     The maximum value is 200; (higher values will be coerced to the maximum)
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of AccountSummary resources to return. The service may return fewer than
       * this value, even if there are additional pages. If unspecified, at most 50 resources will
       * be returned. The maximum value is 200; (higher values will be coerced to the maximum)
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListAccountSummaries` call. Provide this to
       * retrieve the subsequent page. When paginating, all other parameters provided to
       * `ListAccountSummaries` must match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListAccountSummaries` call. Provide this to retrieve the
     subsequent page. When paginating, all other parameters provided to `ListAccountSummaries` must
     match the call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListAccountSummaries` call. Provide this to
       * retrieve the subsequent page. When paginating, all other parameters provided to
       * `ListAccountSummaries` must match the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
   *   {@code GoogleAnalyticsAdmin.Accounts.List request = analyticsadmin.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * Marks target Account as soft-deleted (ie: "trashed") and returns it. This API does not have a
     * method to restore soft-deleted accounts. However, they can be restored using the Trash Can UI. If
     * the accounts are not restored before the expiration time, the account and all child resources
     * (eg: Properties, GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
     * https://support.google.com/analytics/answer/6154772 Returns an error if the target is not found.
     *
     * Create a request for the method "accounts.delete".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the Account to soft-delete. Format: accounts/{account} Example: "accounts/100"
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Marks target Account as soft-deleted (ie: "trashed") and returns it. This API does not have a
       * method to restore soft-deleted accounts. However, they can be restored using the Trash Can UI.
       * If the accounts are not restored before the expiration time, the account and all child
       * resources (eg: Properties, GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
       * https://support.google.com/analytics/answer/6154772 Returns an error if the target is not
       * found.
       *
       * Create a request for the method "accounts.delete".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the Account to soft-delete. Format: accounts/{account} Example: "accounts/100"
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the Account to soft-delete. Format: accounts/{account} Example:
       * "accounts/100"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the Account to soft-delete. Format: accounts/{account} Example:
     "accounts/100"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the Account to soft-delete. Format: accounts/{account} Example:
       * "accounts/100"
       */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Lookup for a single Account.
     *
     * Create a request for the method "accounts.get".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the account to lookup. Format: accounts/{account} Example: "accounts/100"
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Lookup for a single Account.
       *
       * Create a request for the method "accounts.get".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the account to lookup. Format: accounts/{account} Example: "accounts/100"
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the account to lookup. Format: accounts/{account} Example:
       * "accounts/100"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the account to lookup. Format: accounts/{account} Example: "accounts/100"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the account to lookup. Format: accounts/{account} Example:
       * "accounts/100"
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Get data sharing settings on an account. Data sharing settings are singletons.
     *
     * Create a request for the method "accounts.getDataSharingSettings".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link GetDataSharingSettings#execute()} method to invoke the
     * remote operation.
     *
     * @param name Required. The name of the settings to lookup. Format: accounts/{account}/dataSharingSettings
     *        Example: "accounts/1000/dataSharingSettings"
     * @return the request
     */
    public GetDataSharingSettings getDataSharingSettings(java.lang.String name) throws java.io.IOException {
      GetDataSharingSettings result = new GetDataSharingSettings(name);
      initialize(result);
      return result;
    }

    public class GetDataSharingSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataSharingSettings> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+/dataSharingSettings$");

      /**
       * Get data sharing settings on an account. Data sharing settings are singletons.
       *
       * Create a request for the method "accounts.getDataSharingSettings".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link GetDataSharingSettings#execute()} method to invoke the
       * remote operation. <p> {@link GetDataSharingSettings#initialize(com.google.api.client.googleapis
       * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param name Required. The name of the settings to lookup. Format: accounts/{account}/dataSharingSettings
     *        Example: "accounts/1000/dataSharingSettings"
       * @since 1.13
       */
      protected GetDataSharingSettings(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataSharingSettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+/dataSharingSettings$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetDataSharingSettings set$Xgafv(java.lang.String $Xgafv) {
        return (GetDataSharingSettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetDataSharingSettings setAccessToken(java.lang.String accessToken) {
        return (GetDataSharingSettings) super.setAccessToken(accessToken);
      }

      @Override
      public GetDataSharingSettings setAlt(java.lang.String alt) {
        return (GetDataSharingSettings) super.setAlt(alt);
      }

      @Override
      public GetDataSharingSettings setCallback(java.lang.String callback) {
        return (GetDataSharingSettings) super.setCallback(callback);
      }

      @Override
      public GetDataSharingSettings setFields(java.lang.String fields) {
        return (GetDataSharingSettings) super.setFields(fields);
      }

      @Override
      public GetDataSharingSettings setKey(java.lang.String key) {
        return (GetDataSharingSettings) super.setKey(key);
      }

      @Override
      public GetDataSharingSettings setOauthToken(java.lang.String oauthToken) {
        return (GetDataSharingSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public GetDataSharingSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetDataSharingSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetDataSharingSettings setQuotaUser(java.lang.String quotaUser) {
        return (GetDataSharingSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetDataSharingSettings setUploadType(java.lang.String uploadType) {
        return (GetDataSharingSettings) super.setUploadType(uploadType);
      }

      @Override
      public GetDataSharingSettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetDataSharingSettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the settings to lookup. Format:
       * accounts/{account}/dataSharingSettings Example: "accounts/1000/dataSharingSettings"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the settings to lookup. Format: accounts/{account}/dataSharingSettings
     Example: "accounts/1000/dataSharingSettings"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the settings to lookup. Format:
       * accounts/{account}/dataSharingSettings Example: "accounts/1000/dataSharingSettings"
       */
      public GetDataSharingSettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+/dataSharingSettings$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetDataSharingSettings set(String parameterName, Object value) {
        return (GetDataSharingSettings) super.set(parameterName, value);
      }
    }
    /**
     * Returns all accounts accessible by the caller. Note that these accounts might not currently have
     * GA4 properties. Soft-deleted (ie: "trashed") accounts are excluded by default. Returns an empty
     * list if no relevant accounts are found.
     *
     * Create a request for the method "accounts.list".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccountsResponse> {

      private static final String REST_PATH = "v1alpha/accounts";

      /**
       * Returns all accounts accessible by the caller. Note that these accounts might not currently
       * have GA4 properties. Soft-deleted (ie: "trashed") accounts are excluded by default. Returns an
       * empty list if no relevant accounts are found.
       *
       * Create a request for the method "accounts.list".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccountsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The maximum number of resources to return. The service may return fewer than this value,
       * even if there are additional pages. If unspecified, at most 50 resources will be returned.
       * The maximum value is 200; (higher values will be coerced to the maximum)
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of resources to return. The service may return fewer than this value, even if
     there are additional pages. If unspecified, at most 50 resources will be returned. The maximum
     value is 200; (higher values will be coerced to the maximum)
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of resources to return. The service may return fewer than this value,
       * even if there are additional pages. If unspecified, at most 50 resources will be returned.
       * The maximum value is 200; (higher values will be coerced to the maximum)
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListAccounts` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListAccounts` must
       * match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListAccounts` call. Provide this to retrieve the subsequent
     page. When paginating, all other parameters provided to `ListAccounts` must match the call that
     provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListAccounts` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListAccounts` must
       * match the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * Whether to include soft-deleted (ie: "trashed") Accounts in the results. Accounts can be
       * inspected to determine whether they are deleted or not.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean showDeleted;

      /** Whether to include soft-deleted (ie: "trashed") Accounts in the results. Accounts can be inspected
     to determine whether they are deleted or not.
       */
      public java.lang.Boolean getShowDeleted() {
        return showDeleted;
      }

      /**
       * Whether to include soft-deleted (ie: "trashed") Accounts in the results. Accounts can be
       * inspected to determine whether they are deleted or not.
       */
      public List setShowDeleted(java.lang.Boolean showDeleted) {
        this.showDeleted = showDeleted;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates an account.
     *
     * Create a request for the method "accounts.patch".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name Output only. Resource name of this account. Format: accounts/{account} Example: "accounts/100"
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Updates an account.
       *
       * Create a request for the method "accounts.patch".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Output only. Resource name of this account. Format: accounts/{account} Example: "accounts/100"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount content) {
        super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Output only. Resource name of this account. Format: accounts/{account} Example:
       * "accounts/100"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. Resource name of this account. Format: accounts/{account} Example: "accounts/100"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Output only. Resource name of this account. Format: accounts/{account} Example:
       * "accounts/100"
       */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Required. The list of fields to be updated. Omitted fields will not be updated. To replace
       * the entire entity, use one path with the string "*" to match all fields.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
     entire entity, use one path with the string "*" to match all fields.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Required. The list of fields to be updated. Omitted fields will not be updated. To replace
       * the entire entity, use one path with the string "*" to match all fields.
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Requests a ticket for creating an account.
     *
     * Create a request for the method "accounts.provisionAccountTicket".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link ProvisionAccountTicket#execute()} method to invoke the
     * remote operation.
     *
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketRequest}
     * @return the request
     */
    public ProvisionAccountTicket provisionAccountTicket(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketRequest content) throws java.io.IOException {
      ProvisionAccountTicket result = new ProvisionAccountTicket(content);
      initialize(result);
      return result;
    }

    public class ProvisionAccountTicket extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketResponse> {

      private static final String REST_PATH = "v1alpha/accounts:provisionAccountTicket";

      /**
       * Requests a ticket for creating an account.
       *
       * Create a request for the method "accounts.provisionAccountTicket".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link ProvisionAccountTicket#execute()} method to invoke the
       * remote operation. <p> {@link ProvisionAccountTicket#initialize(com.google.api.client.googleapis
       * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketRequest}
       * @since 1.13
       */
      protected ProvisionAccountTicket(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketResponse.class);
      }

      @Override
      public ProvisionAccountTicket set$Xgafv(java.lang.String $Xgafv) {
        return (ProvisionAccountTicket) super.set$Xgafv($Xgafv);
      }

      @Override
      public ProvisionAccountTicket setAccessToken(java.lang.String accessToken) {
        return (ProvisionAccountTicket) super.setAccessToken(accessToken);
      }

      @Override
      public ProvisionAccountTicket setAlt(java.lang.String alt) {
        return (ProvisionAccountTicket) super.setAlt(alt);
      }

      @Override
      public ProvisionAccountTicket setCallback(java.lang.String callback) {
        return (ProvisionAccountTicket) super.setCallback(callback);
      }

      @Override
      public ProvisionAccountTicket setFields(java.lang.String fields) {
        return (ProvisionAccountTicket) super.setFields(fields);
      }

      @Override
      public ProvisionAccountTicket setKey(java.lang.String key) {
        return (ProvisionAccountTicket) super.setKey(key);
      }

      @Override
      public ProvisionAccountTicket setOauthToken(java.lang.String oauthToken) {
        return (ProvisionAccountTicket) super.setOauthToken(oauthToken);
      }

      @Override
      public ProvisionAccountTicket setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ProvisionAccountTicket) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ProvisionAccountTicket setQuotaUser(java.lang.String quotaUser) {
        return (ProvisionAccountTicket) super.setQuotaUser(quotaUser);
      }

      @Override
      public ProvisionAccountTicket setUploadType(java.lang.String uploadType) {
        return (ProvisionAccountTicket) super.setUploadType(uploadType);
      }

      @Override
      public ProvisionAccountTicket setUploadProtocol(java.lang.String uploadProtocol) {
        return (ProvisionAccountTicket) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public ProvisionAccountTicket set(String parameterName, Object value) {
        return (ProvisionAccountTicket) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the UserLinks collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.UserLinks.List request = analyticsadmin.userLinks().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public UserLinks userLinks() {
      return new UserLinks();
    }

    /**
     * The "userLinks" collection of methods.
     */
    public class UserLinks {

      /**
       * Lists all user links on an account or property, including implicit ones that come from effective
       * permissions granted by groups or organization admin roles. If a returned user link does not have
       * direct permissions, they cannot be removed from the account or property directly with the
       * DeleteUserLink command. They have to be removed from the group/etc that gives them permissions,
       * which is currently only usable/discoverable in the GA or GMP UIs.
       *
       * Create a request for the method "userLinks.audit".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Audit#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: accounts/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksRequest}
       * @return the request
       */
      public Audit audit(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksRequest content) throws java.io.IOException {
        Audit result = new Audit(parent, content);
        initialize(result);
        return result;
      }

      public class Audit extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks:audit";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists all user links on an account or property, including implicit ones that come from
         * effective permissions granted by groups or organization admin roles. If a returned user link
         * does not have direct permissions, they cannot be removed from the account or property directly
         * with the DeleteUserLink command. They have to be removed from the group/etc that gives them
         * permissions, which is currently only usable/discoverable in the GA or GMP UIs.
         *
         * Create a request for the method "userLinks.audit".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Audit#execute()} method to invoke the remote operation.
         * <p> {@link
         * Audit#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: accounts/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksRequest}
         * @since 1.13
         */
        protected Audit(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Audit set$Xgafv(java.lang.String $Xgafv) {
          return (Audit) super.set$Xgafv($Xgafv);
        }

        @Override
        public Audit setAccessToken(java.lang.String accessToken) {
          return (Audit) super.setAccessToken(accessToken);
        }

        @Override
        public Audit setAlt(java.lang.String alt) {
          return (Audit) super.setAlt(alt);
        }

        @Override
        public Audit setCallback(java.lang.String callback) {
          return (Audit) super.setCallback(callback);
        }

        @Override
        public Audit setFields(java.lang.String fields) {
          return (Audit) super.setFields(fields);
        }

        @Override
        public Audit setKey(java.lang.String key) {
          return (Audit) super.setKey(key);
        }

        @Override
        public Audit setOauthToken(java.lang.String oauthToken) {
          return (Audit) super.setOauthToken(oauthToken);
        }

        @Override
        public Audit setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Audit) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Audit setQuotaUser(java.lang.String quotaUser) {
          return (Audit) super.setQuotaUser(quotaUser);
        }

        @Override
        public Audit setUploadType(java.lang.String uploadType) {
          return (Audit) super.setUploadType(uploadType);
        }

        @Override
        public Audit setUploadProtocol(java.lang.String uploadProtocol) {
          return (Audit) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: accounts/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: accounts/1234 */
        public Audit setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Audit set(String parameterName, Object value) {
          return (Audit) super.set(parameterName, value);
        }
      }
      /**
       * Creates information about multiple users' links to an account or property. This method is
       * transactional. If any UserLink cannot be created, none of the UserLinks will be created.
       *
       * Create a request for the method "userLinks.batchCreate".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that all user links in the request are for. This field is
       *        required. The parent field in the CreateUserLinkRequest messages must either be empty or
       *        match this field. Example format: accounts/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksRequest}
       * @return the request
       */
      public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksRequest content) throws java.io.IOException {
        BatchCreate result = new BatchCreate(parent, content);
        initialize(result);
        return result;
      }

      public class BatchCreate extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks:batchCreate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Creates information about multiple users' links to an account or property. This method is
         * transactional. If any UserLink cannot be created, none of the UserLinks will be created.
         *
         * Create a request for the method "userLinks.batchCreate".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that all user links in the request are for. This field is
       *        required. The parent field in the CreateUserLinkRequest messages must either be empty or
       *        match this field. Example format: accounts/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksRequest}
         * @since 1.13
         */
        protected BatchCreate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchCreate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchCreate setAccessToken(java.lang.String accessToken) {
          return (BatchCreate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchCreate setAlt(java.lang.String alt) {
          return (BatchCreate) super.setAlt(alt);
        }

        @Override
        public BatchCreate setCallback(java.lang.String callback) {
          return (BatchCreate) super.setCallback(callback);
        }

        @Override
        public BatchCreate setFields(java.lang.String fields) {
          return (BatchCreate) super.setFields(fields);
        }

        @Override
        public BatchCreate setKey(java.lang.String key) {
          return (BatchCreate) super.setKey(key);
        }

        @Override
        public BatchCreate setOauthToken(java.lang.String oauthToken) {
          return (BatchCreate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchCreate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchCreate setQuotaUser(java.lang.String quotaUser) {
          return (BatchCreate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchCreate setUploadType(java.lang.String uploadType) {
          return (BatchCreate) super.setUploadType(uploadType);
        }

        @Override
        public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchCreate) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that all user links in the request are for. This field
         * is required. The parent field in the CreateUserLinkRequest messages must either be empty
         * or match this field. Example format: accounts/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that all user links in the request are for. This field is
       required. The parent field in the CreateUserLinkRequest messages must either be empty or match this
       field. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that all user links in the request are for. This field
         * is required. The parent field in the CreateUserLinkRequest messages must either be empty
         * or match this field. Example format: accounts/1234
         */
        public BatchCreate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchCreate set(String parameterName, Object value) {
          return (BatchCreate) super.set(parameterName, value);
        }
      }
      /**
       * Deletes information about multiple users' links to an account or property.
       *
       * Create a request for the method "userLinks.batchDelete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that all user links in the request are for. The parent of all
       *        values for user link names to delete must match this field. Example format: accounts/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteUserLinksRequest}
       * @return the request
       */
      public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteUserLinksRequest content) throws java.io.IOException {
        BatchDelete result = new BatchDelete(parent, content);
        initialize(result);
        return result;
      }

      public class BatchDelete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks:batchDelete";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Deletes information about multiple users' links to an account or property.
         *
         * Create a request for the method "userLinks.batchDelete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that all user links in the request are for. The parent of all
       *        values for user link names to delete must match this field. Example format: accounts/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteUserLinksRequest}
         * @since 1.13
         */
        protected BatchDelete(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteUserLinksRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
          return (BatchDelete) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchDelete setAccessToken(java.lang.String accessToken) {
          return (BatchDelete) super.setAccessToken(accessToken);
        }

        @Override
        public BatchDelete setAlt(java.lang.String alt) {
          return (BatchDelete) super.setAlt(alt);
        }

        @Override
        public BatchDelete setCallback(java.lang.String callback) {
          return (BatchDelete) super.setCallback(callback);
        }

        @Override
        public BatchDelete setFields(java.lang.String fields) {
          return (BatchDelete) super.setFields(fields);
        }

        @Override
        public BatchDelete setKey(java.lang.String key) {
          return (BatchDelete) super.setKey(key);
        }

        @Override
        public BatchDelete setOauthToken(java.lang.String oauthToken) {
          return (BatchDelete) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchDelete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchDelete setQuotaUser(java.lang.String quotaUser) {
          return (BatchDelete) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchDelete setUploadType(java.lang.String uploadType) {
          return (BatchDelete) super.setUploadType(uploadType);
        }

        @Override
        public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchDelete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * of all values for user link names to delete must match this field. Example format:
         * accounts/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that all user links in the request are for. The parent of all
       values for user link names to delete must match this field. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * of all values for user link names to delete must match this field. Example format:
         * accounts/1234
         */
        public BatchDelete setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchDelete set(String parameterName, Object value) {
          return (BatchDelete) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about multiple users' links to an account or property.
       *
       * Create a request for the method "userLinks.batchGet".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The account or property that all user links in the request are for. The parent of all
       *        provided values for the 'names' field must match this field. Example format: accounts/1234
       * @return the request
       */
      public BatchGet batchGet(java.lang.String parent) throws java.io.IOException {
        BatchGet result = new BatchGet(parent);
        initialize(result);
        return result;
      }

      public class BatchGet extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchGetUserLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks:batchGet";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Gets information about multiple users' links to an account or property.
         *
         * Create a request for the method "userLinks.batchGet".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
         * <p> {@link
         * BatchGet#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that all user links in the request are for. The parent of all
       *        provided values for the 'names' field must match this field. Example format: accounts/1234
         * @since 1.13
         */
        protected BatchGet(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchGetUserLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public BatchGet set$Xgafv(java.lang.String $Xgafv) {
          return (BatchGet) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchGet setAccessToken(java.lang.String accessToken) {
          return (BatchGet) super.setAccessToken(accessToken);
        }

        @Override
        public BatchGet setAlt(java.lang.String alt) {
          return (BatchGet) super.setAlt(alt);
        }

        @Override
        public BatchGet setCallback(java.lang.String callback) {
          return (BatchGet) super.setCallback(callback);
        }

        @Override
        public BatchGet setFields(java.lang.String fields) {
          return (BatchGet) super.setFields(fields);
        }

        @Override
        public BatchGet setKey(java.lang.String key) {
          return (BatchGet) super.setKey(key);
        }

        @Override
        public BatchGet setOauthToken(java.lang.String oauthToken) {
          return (BatchGet) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchGet setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchGet) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchGet setQuotaUser(java.lang.String quotaUser) {
          return (BatchGet) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchGet setUploadType(java.lang.String uploadType) {
          return (BatchGet) super.setUploadType(uploadType);
        }

        @Override
        public BatchGet setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchGet) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * of all provided values for the 'names' field must match this field. Example format:
         * accounts/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that all user links in the request are for. The parent of all
       provided values for the 'names' field must match this field. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * of all provided values for the 'names' field must match this field. Example format:
         * accounts/1234
         */
        public BatchGet setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Required. The names of the user links to retrieve. A maximum of 1000 user links can be
         * retrieved in a batch. Format: accounts/{accountId}/userLinks/{userLinkId}
         */
        @com.google.api.client.util.Key
        private java.util.List<java.lang.String> names;

        /** Required. The names of the user links to retrieve. A maximum of 1000 user links can be retrieved in
       a batch. Format: accounts/{accountId}/userLinks/{userLinkId}
         */
        public java.util.List<java.lang.String> getNames() {
          return names;
        }

        /**
         * Required. The names of the user links to retrieve. A maximum of 1000 user links can be
         * retrieved in a batch. Format: accounts/{accountId}/userLinks/{userLinkId}
         */
        public BatchGet setNames(java.util.List<java.lang.String> names) {
          this.names = names;
          return this;
        }

        @Override
        public BatchGet set(String parameterName, Object value) {
          return (BatchGet) super.set(parameterName, value);
        }
      }
      /**
       * Updates information about multiple users' links to an account or property.
       *
       * Create a request for the method "userLinks.batchUpdate".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that all user links in the request are for. The parent field in
       *        the UpdateUserLinkRequest messages must either be empty or match this field. Example
       *        format: accounts/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksRequest}
       * @return the request
       */
      public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksRequest content) throws java.io.IOException {
        BatchUpdate result = new BatchUpdate(parent, content);
        initialize(result);
        return result;
      }

      public class BatchUpdate extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks:batchUpdate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Updates information about multiple users' links to an account or property.
         *
         * Create a request for the method "userLinks.batchUpdate".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that all user links in the request are for. The parent field in
       *        the UpdateUserLinkRequest messages must either be empty or match this field. Example
       *        format: accounts/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksRequest}
         * @since 1.13
         */
        protected BatchUpdate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchUpdate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchUpdate setAccessToken(java.lang.String accessToken) {
          return (BatchUpdate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchUpdate setAlt(java.lang.String alt) {
          return (BatchUpdate) super.setAlt(alt);
        }

        @Override
        public BatchUpdate setCallback(java.lang.String callback) {
          return (BatchUpdate) super.setCallback(callback);
        }

        @Override
        public BatchUpdate setFields(java.lang.String fields) {
          return (BatchUpdate) super.setFields(fields);
        }

        @Override
        public BatchUpdate setKey(java.lang.String key) {
          return (BatchUpdate) super.setKey(key);
        }

        @Override
        public BatchUpdate setOauthToken(java.lang.String oauthToken) {
          return (BatchUpdate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchUpdate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
          return (BatchUpdate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchUpdate setUploadType(java.lang.String uploadType) {
          return (BatchUpdate) super.setUploadType(uploadType);
        }

        @Override
        public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * field in the UpdateUserLinkRequest messages must either be empty or match this field.
         * Example format: accounts/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that all user links in the request are for. The parent field in
       the UpdateUserLinkRequest messages must either be empty or match this field. Example format:
       accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * field in the UpdateUserLinkRequest messages must either be empty or match this field.
         * Example format: accounts/1234
         */
        public BatchUpdate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchUpdate set(String parameterName, Object value) {
          return (BatchUpdate) super.set(parameterName, value);
        }
      }
      /**
       * Creates a user link on an account or property. If the user with the specified email already has
       * permissions on the account or property, then the user's existing permissions will be unioned with
       * the permissions specified in the new UserLink.
       *
       * Create a request for the method "userLinks.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: accounts/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Creates a user link on an account or property. If the user with the specified email already has
         * permissions on the account or property, then the user's existing permissions will be unioned
         * with the permissions specified in the new UserLink.
         *
         * Create a request for the method "userLinks.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: accounts/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: accounts/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: accounts/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. If set, then email the new user notifying them that they've been granted
         * permissions to the resource.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean notifyNewUser;

        /** Optional. If set, then email the new user notifying them that they've been granted permissions to
       the resource.
         */
        public java.lang.Boolean getNotifyNewUser() {
          return notifyNewUser;
        }

        /**
         * Optional. If set, then email the new user notifying them that they've been granted
         * permissions to the resource.
         */
        public Create setNotifyNewUser(java.lang.Boolean notifyNewUser) {
          this.notifyNewUser = notifyNewUser;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a user link on an account or property.
       *
       * Create a request for the method "userLinks.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Example format: accounts/1234/userLinks/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/userLinks/[^/]+$");

        /**
         * Deletes a user link on an account or property.
         *
         * Create a request for the method "userLinks.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Example format: accounts/1234/userLinks/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/userLinks/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: accounts/1234/userLinks/5678 */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Example format: accounts/1234/userLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Example format: accounts/1234/userLinks/5678 */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/userLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about a user's link to an account or property.
       *
       * Create a request for the method "userLinks.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Example format: accounts/1234/userLinks/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/userLinks/[^/]+$");

        /**
         * Gets information about a user's link to an account or property.
         *
         * Create a request for the method "userLinks.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Example format: accounts/1234/userLinks/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/userLinks/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: accounts/1234/userLinks/5678 */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Example format: accounts/1234/userLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Example format: accounts/1234/userLinks/5678 */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/userLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all user links on an account or property.
       *
       * Create a request for the method "userLinks.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: accounts/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListUserLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists all user links on an account or property.
         *
         * Create a request for the method "userLinks.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: accounts/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListUserLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: accounts/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: accounts/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of user links to return. The service may return fewer than this value.
         * If unspecified, at most 200 user links will be returned. The maximum value is 500; values
         * above 500 will be coerced to 500.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of user links to return. The service may return fewer than this value. If
       unspecified, at most 200 user links will be returned. The maximum value is 500; values above 500
       will be coerced to 500.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of user links to return. The service may return fewer than this value.
         * If unspecified, at most 200 user links will be returned. The maximum value is 500; values
         * above 500 will be coerced to 500.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListUserLinks` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListUserLinks` must
         * match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListUserLinks` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListUserLinks` must match the
       call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListUserLinks` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListUserLinks` must
         * match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a user link on an account or property.
       *
       * Create a request for the method "userLinks.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Example format: properties/1234/userLinks/5678
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/userLinks/[^/]+$");

        /**
         * Updates a user link on an account or property.
         *
         * Create a request for the method "userLinks.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Example format: properties/1234/userLinks/5678
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/userLinks/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** Example format: properties/1234/userLinks/5678 */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Example format: properties/1234/userLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /** Example format: properties/1234/userLinks/5678 */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/userLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Properties collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
   *   {@code GoogleAnalyticsAdmin.Properties.List request = analyticsadmin.properties().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Properties properties() {
    return new Properties();
  }

  /**
   * The "properties" collection of methods.
   */
  public class Properties {

    /**
     * Creates an "GA4" property with the specified location and attributes.
     *
     * Create a request for the method "properties.create".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty}
     * @return the request
     */
    public Create create(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty> {

      private static final String REST_PATH = "v1alpha/properties";

      /**
       * Creates an "GA4" property with the specified location and attributes.
       *
       * Create a request for the method "properties.create".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       * <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty}
       * @since 1.13
       */
      protected Create(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Marks target Property as soft-deleted (ie: "trashed") and returns it. This API does not have a
     * method to restore soft-deleted properties. However, they can be restored using the Trash Can UI.
     * If the properties are not restored before the expiration time, the Property and all child
     * resources (eg: GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
     * https://support.google.com/analytics/answer/6154772 Returns an error if the target is not found,
     * or is not an GA4 Property.
     *
     * Create a request for the method "properties.delete".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the Property to soft-delete. Format: properties/{property_id} Example:
     *        "properties/1000"
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+$");

      /**
       * Marks target Property as soft-deleted (ie: "trashed") and returns it. This API does not have a
       * method to restore soft-deleted properties. However, they can be restored using the Trash Can
       * UI. If the properties are not restored before the expiration time, the Property and all child
       * resources (eg: GoogleAdsLinks, Streams, UserLinks) will be permanently purged.
       * https://support.google.com/analytics/answer/6154772 Returns an error if the target is not
       * found, or is not an GA4 Property.
       *
       * Create a request for the method "properties.delete".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the Property to soft-delete. Format: properties/{property_id} Example:
     *        "properties/1000"
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the Property to soft-delete. Format: properties/{property_id}
       * Example: "properties/1000"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the Property to soft-delete. Format: properties/{property_id} Example:
     "properties/1000"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the Property to soft-delete. Format: properties/{property_id}
       * Example: "properties/1000"
       */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Lookup for a single "GA4" Property.
     *
     * Create a request for the method "properties.get".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the property to lookup. Format: properties/{property_id} Example:
     *        "properties/1000"
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+$");

      /**
       * Lookup for a single "GA4" Property.
       *
       * Create a request for the method "properties.get".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the property to lookup. Format: properties/{property_id} Example:
     *        "properties/1000"
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the property to lookup. Format: properties/{property_id} Example:
       * "properties/1000"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the property to lookup. Format: properties/{property_id} Example:
     "properties/1000"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the property to lookup. Format: properties/{property_id} Example:
       * "properties/1000"
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Returns child Properties under the specified parent Account. Only "GA4" properties will be
     * returned. Properties will be excluded if the caller does not have access. Soft-deleted (ie:
     * "trashed") properties are excluded by default. Returns an empty list if no relevant properties
     * are found.
     *
     * Create a request for the method "properties.list".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListPropertiesResponse> {

      private static final String REST_PATH = "v1alpha/properties";

      /**
       * Returns child Properties under the specified parent Account. Only "GA4" properties will be
       * returned. Properties will be excluded if the caller does not have access. Soft-deleted (ie:
       * "trashed") properties are excluded by default. Returns an empty list if no relevant properties
       * are found.
       *
       * Create a request for the method "properties.list".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListPropertiesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. An expression for filtering the results of the request. Fields eligible for
       * filtering are: `parent:`(The resource name of the parent account) or
       * `firebase_project:`(The id or number of the linked firebase project). Some examples of
       * filters: | Filter | Description |
       * |-----------------------------|-------------------------------------------| |
       * parent:accounts/123 | The account with account id: 123. | | firebase_project:project-id |
       * The firebase project with id: project-id. | | firebase_project:123 | The firebase project
       * with number: 123. |
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Required. An expression for filtering the results of the request. Fields eligible for filtering
     are: `parent:`(The resource name of the parent account) or `firebase_project:`(The id or number of
     the linked firebase project). Some examples of filters: | Filter | Description |
     |-----------------------------|-------------------------------------------| | parent:accounts/123 |
     The account with account id: 123. | | firebase_project:project-id | The firebase project with id:
     project-id. | | firebase_project:123 | The firebase project with number: 123. |
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * Required. An expression for filtering the results of the request. Fields eligible for
       * filtering are: `parent:`(The resource name of the parent account) or
       * `firebase_project:`(The id or number of the linked firebase project). Some examples of
       * filters: | Filter | Description |
       * |-----------------------------|-------------------------------------------| |
       * parent:accounts/123 | The account with account id: 123. | | firebase_project:project-id |
       * The firebase project with id: project-id. | | firebase_project:123 | The firebase project
       * with number: 123. |
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of resources to return. The service may return fewer than this value,
       * even if there are additional pages. If unspecified, at most 50 resources will be returned.
       * The maximum value is 200; (higher values will be coerced to the maximum)
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of resources to return. The service may return fewer than this value, even if
     there are additional pages. If unspecified, at most 50 resources will be returned. The maximum
     value is 200; (higher values will be coerced to the maximum)
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of resources to return. The service may return fewer than this value,
       * even if there are additional pages. If unspecified, at most 50 resources will be returned.
       * The maximum value is 200; (higher values will be coerced to the maximum)
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListProperties` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListProperties` must
       * match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListProperties` call. Provide this to retrieve the
     subsequent page. When paginating, all other parameters provided to `ListProperties` must match the
     call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListProperties` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListProperties` must
       * match the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * Whether to include soft-deleted (ie: "trashed") Properties in the results. Properties can
       * be inspected to determine whether they are deleted or not.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean showDeleted;

      /** Whether to include soft-deleted (ie: "trashed") Properties in the results. Properties can be
     inspected to determine whether they are deleted or not.
       */
      public java.lang.Boolean getShowDeleted() {
        return showDeleted;
      }

      /**
       * Whether to include soft-deleted (ie: "trashed") Properties in the results. Properties can
       * be inspected to determine whether they are deleted or not.
       */
      public List setShowDeleted(java.lang.Boolean showDeleted) {
        this.showDeleted = showDeleted;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a property.
     *
     * Create a request for the method "properties.patch".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name Output only. Resource name of this property. Format: properties/{property_id} Example:
     *        "properties/1000"
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+$");

      /**
       * Updates a property.
       *
       * Create a request for the method "properties.patch".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Output only. Resource name of this property. Format: properties/{property_id} Example:
     *        "properties/1000"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty content) {
        super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Output only. Resource name of this property. Format: properties/{property_id} Example:
       * "properties/1000"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. Resource name of this property. Format: properties/{property_id} Example:
     "properties/1000"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Output only. Resource name of this property. Format: properties/{property_id} Example:
       * "properties/1000"
       */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Required. The list of fields to be updated. Omitted fields will not be updated. To replace
       * the entire entity, use one path with the string "*" to match all fields.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
     entire entity, use one path with the string "*" to match all fields.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Required. The list of fields to be updated. Omitted fields will not be updated. To replace
       * the entire entity, use one path with the string "*" to match all fields.
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the AndroidAppDataStreams collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.AndroidAppDataStreams.List request = analyticsadmin.androidAppDataStreams().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AndroidAppDataStreams androidAppDataStreams() {
      return new AndroidAppDataStreams();
    }

    /**
     * The "androidAppDataStreams" collection of methods.
     */
    public class AndroidAppDataStreams {

      /**
       * Creates an android app stream with the specified location and attributes.
       *
       * Create a request for the method "androidAppDataStreams.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource where this android app data stream will be created. Format:
       *        properties/123
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream> {

        private static final String REST_PATH = "v1alpha/{+parent}/androidAppDataStreams";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates an android app stream with the specified location and attributes.
         *
         * Create a request for the method "androidAppDataStreams.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource where this android app data stream will be created. Format:
       *        properties/123
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent resource where this android app data stream will be created. Format:
         * properties/123
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource where this android app data stream will be created. Format:
       properties/123
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent resource where this android app data stream will be created. Format:
         * properties/123
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an android app stream on a property.
       *
       * Create a request for the method "androidAppDataStreams.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the android app data stream to delete. Format:
       *        properties/{property_id}/androidAppDataStreams/{stream_id} Example:
       *        "properties/123/androidAppDataStreams/456"
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/androidAppDataStreams/[^/]+$");

        /**
         * Deletes an android app stream on a property.
         *
         * Create a request for the method "androidAppDataStreams.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the android app data stream to delete. Format:
       *        properties/{property_id}/androidAppDataStreams/{stream_id} Example:
       *        "properties/123/androidAppDataStreams/456"
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/androidAppDataStreams/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the android app data stream to delete. Format:
         * properties/{property_id}/androidAppDataStreams/{stream_id} Example:
         * "properties/123/androidAppDataStreams/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the android app data stream to delete. Format:
       properties/{property_id}/androidAppDataStreams/{stream_id} Example:
       "properties/123/androidAppDataStreams/456"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the android app data stream to delete. Format:
         * properties/{property_id}/androidAppDataStreams/{stream_id} Example:
         * "properties/123/androidAppDataStreams/456"
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/androidAppDataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single AndroidAppDataStream
       *
       * Create a request for the method "androidAppDataStreams.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the android app data stream to lookup. Format:
       *        properties/{property_id}/androidAppDataStreams/{stream_id} Example:
       *        "properties/123/androidAppDataStreams/456"
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/androidAppDataStreams/[^/]+$");

        /**
         * Lookup for a single AndroidAppDataStream
         *
         * Create a request for the method "androidAppDataStreams.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the android app data stream to lookup. Format:
       *        properties/{property_id}/androidAppDataStreams/{stream_id} Example:
       *        "properties/123/androidAppDataStreams/456"
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/androidAppDataStreams/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the android app data stream to lookup. Format:
         * properties/{property_id}/androidAppDataStreams/{stream_id} Example:
         * "properties/123/androidAppDataStreams/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the android app data stream to lookup. Format:
       properties/{property_id}/androidAppDataStreams/{stream_id} Example:
       "properties/123/androidAppDataStreams/456"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the android app data stream to lookup. Format:
         * properties/{property_id}/androidAppDataStreams/{stream_id} Example:
         * "properties/123/androidAppDataStreams/456"
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/androidAppDataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns child android app streams under the specified parent property. Android app streams will
       * be excluded if the caller does not have access. Returns an empty list if no relevant android app
       * streams are found.
       *
       * Create a request for the method "androidAppDataStreams.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the parent property. For example, to limit results to app streams under the
       *        property with Id 123: "properties/123"
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAndroidAppDataStreamsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/androidAppDataStreams";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Returns child android app streams under the specified parent property. Android app streams will
         * be excluded if the caller does not have access. Returns an empty list if no relevant android
         * app streams are found.
         *
         * Create a request for the method "androidAppDataStreams.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the parent property. For example, to limit results to app streams under the
       *        property with Id 123: "properties/123"
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAndroidAppDataStreamsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the parent property. For example, to limit results to app streams
         * under the property with Id 123: "properties/123"
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the parent property. For example, to limit results to app streams under the
       property with Id 123: "properties/123"
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the parent property. For example, to limit results to app streams
         * under the property with Id 123: "properties/123"
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous call. Provide this to retrieve the subsequent
         * page. When paginating, all other parameters provided to `ListAndroidAppDataStreams` must
         * match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous call. Provide this to retrieve the subsequent page. When
       paginating, all other parameters provided to `ListAndroidAppDataStreams` must match the call that
       provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous call. Provide this to retrieve the subsequent
         * page. When paginating, all other parameters provided to `ListAndroidAppDataStreams` must
         * match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an android app stream on a property.
       *
       * Create a request for the method "androidAppDataStreams.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name of this Data Stream. Format:
       *        properties/{property_id}/androidAppDataStreams/{stream_id} Example:
       *        "properties/1000/androidAppDataStreams/2000"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/androidAppDataStreams/[^/]+$");

        /**
         * Updates an android app stream on a property.
         *
         * Create a request for the method "androidAppDataStreams.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of this Data Stream. Format:
       *        properties/{property_id}/androidAppDataStreams/{stream_id} Example:
       *        "properties/1000/androidAppDataStreams/2000"
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAndroidAppDataStream.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/androidAppDataStreams/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of this Data Stream. Format:
         * properties/{property_id}/androidAppDataStreams/{stream_id} Example:
         * "properties/1000/androidAppDataStreams/2000"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of this Data Stream. Format:
       properties/{property_id}/androidAppDataStreams/{stream_id} Example:
       "properties/1000/androidAppDataStreams/2000"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of this Data Stream. Format:
         * properties/{property_id}/androidAppDataStreams/{stream_id} Example:
         * "properties/1000/androidAppDataStreams/2000"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/androidAppDataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the FirebaseLinks collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.FirebaseLinks.List request = analyticsadmin.firebaseLinks().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public FirebaseLinks firebaseLinks() {
      return new FirebaseLinks();
    }

    /**
     * The "firebaseLinks" collection of methods.
     */
    public class FirebaseLinks {

      /**
       * Creates a FirebaseLink. Properties can have at most one FirebaseLink.
       *
       * Create a request for the method "firebaseLinks.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Format: properties/{property_id} Example: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink> {

        private static final String REST_PATH = "v1alpha/{+parent}/firebaseLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a FirebaseLink. Properties can have at most one FirebaseLink.
         *
         * Create a request for the method "firebaseLinks.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Format: properties/{property_id} Example: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: properties/{property_id} Example: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Format: properties/{property_id} Example: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Format: properties/{property_id} Example: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a FirebaseLink on a property
       *
       * Create a request for the method "firebaseLinks.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
       *        properties/1234/firebaseLinks/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/firebaseLinks/[^/]+$");

        /**
         * Deletes a FirebaseLink on a property
         *
         * Create a request for the method "firebaseLinks.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
       *        properties/1234/firebaseLinks/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/firebaseLinks/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
         * properties/1234/firebaseLinks/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
       properties/1234/firebaseLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
         * properties/1234/firebaseLinks/5678
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/firebaseLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lists FirebaseLinks on a property. Properties can have at most one FirebaseLink.
       *
       * Create a request for the method "firebaseLinks.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Format: properties/{property_id} Example: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListFirebaseLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/firebaseLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists FirebaseLinks on a property. Properties can have at most one FirebaseLink.
         *
         * Create a request for the method "firebaseLinks.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Format: properties/{property_id} Example: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListFirebaseLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: properties/{property_id} Example: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Format: properties/{property_id} Example: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Format: properties/{property_id} Example: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. The service may return fewer than this value,
         * even if there are additional pages. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. The service may return fewer than this value, even if
       there are additional pages. If unspecified, at most 50 resources will be returned. The maximum
       value is 200; (higher values will be coerced to the maximum)
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. The service may return fewer than this value,
         * even if there are additional pages. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListFirebaseLinks` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to `ListProperties`
         * must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListFirebaseLinks` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListProperties` must match the
       call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListFirebaseLinks` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to `ListProperties`
         * must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a FirebaseLink on a property
       *
       * Create a request for the method "firebaseLinks.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Example format: properties/1234/firebaseLinks/5678
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/firebaseLinks/[^/]+$");

        /**
         * Updates a FirebaseLink on a property
         *
         * Create a request for the method "firebaseLinks.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Example format: properties/1234/firebaseLinks/5678
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/firebaseLinks/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** Output only. Example format: properties/1234/firebaseLinks/5678 */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Example format: properties/1234/firebaseLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /** Output only. Example format: properties/1234/firebaseLinks/5678 */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/firebaseLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the GoogleAdsLinks collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.GoogleAdsLinks.List request = analyticsadmin.googleAdsLinks().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public GoogleAdsLinks googleAdsLinks() {
      return new GoogleAdsLinks();
    }

    /**
     * The "googleAdsLinks" collection of methods.
     */
    public class GoogleAdsLinks {

      /**
       * Creates a GoogleAdsLink.
       *
       * Create a request for the method "googleAdsLinks.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink> {

        private static final String REST_PATH = "v1alpha/{+parent}/googleAdsLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a GoogleAdsLink.
         *
         * Create a request for the method "googleAdsLinks.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a GoogleAdsLink on a property
       *
       * Create a request for the method "googleAdsLinks.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Example format: properties/1234/googleAdsLinks/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/googleAdsLinks/[^/]+$");

        /**
         * Deletes a GoogleAdsLink on a property
         *
         * Create a request for the method "googleAdsLinks.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Example format: properties/1234/googleAdsLinks/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/googleAdsLinks/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234/googleAdsLinks/5678 */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Example format: properties/1234/googleAdsLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Example format: properties/1234/googleAdsLinks/5678 */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/googleAdsLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lists GoogleAdsLinks on a property.
       *
       * Create a request for the method "googleAdsLinks.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListGoogleAdsLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/googleAdsLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists GoogleAdsLinks on a property.
         *
         * Create a request for the method "googleAdsLinks.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListGoogleAdsLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListGoogleAdsLinks` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListGoogleAdsLinks` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListGoogleAdsLinks` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListGoogleAdsLinks` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListGoogleAdsLinks` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListGoogleAdsLinks` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a GoogleAdsLink on a property
       *
       * Create a request for the method "googleAdsLinks.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Format: properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note: googleAdsLinkId
       *        is not the Google Ads customer ID.
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/googleAdsLinks/[^/]+$");

        /**
         * Updates a GoogleAdsLink on a property
         *
         * Create a request for the method "googleAdsLinks.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Format: properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note: googleAdsLinkId
       *        is not the Google Ads customer ID.
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/googleAdsLinks/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Format: properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note:
         * googleAdsLinkId is not the Google Ads customer ID.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Format: properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note: googleAdsLinkId
       is not the Google Ads customer ID.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Format: properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note:
         * googleAdsLinkId is not the Google Ads customer ID.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/googleAdsLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the IosAppDataStreams collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.IosAppDataStreams.List request = analyticsadmin.iosAppDataStreams().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public IosAppDataStreams iosAppDataStreams() {
      return new IosAppDataStreams();
    }

    /**
     * The "iosAppDataStreams" collection of methods.
     */
    public class IosAppDataStreams {

      /**
       * Creates an iOS app data stream with the specified location and attributes.
       *
       * Create a request for the method "iosAppDataStreams.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource where this ios app data stream will be created. Format: properties/123
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream> {

        private static final String REST_PATH = "v1alpha/{+parent}/iosAppDataStreams";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates an iOS app data stream with the specified location and attributes.
         *
         * Create a request for the method "iosAppDataStreams.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource where this ios app data stream will be created. Format: properties/123
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent resource where this ios app data stream will be created. Format:
         * properties/123
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource where this ios app data stream will be created. Format:
       properties/123
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent resource where this ios app data stream will be created. Format:
         * properties/123
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an iOS app stream on a property.
       *
       * Create a request for the method "iosAppDataStreams.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the iOS app data stream to delete. Format:
       *        properties/{property_id}/iosAppDataStreams/{stream_id} Example:
       *        "properties/123/iosAppDataStreams/456"
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/iosAppDataStreams/[^/]+$");

        /**
         * Deletes an iOS app stream on a property.
         *
         * Create a request for the method "iosAppDataStreams.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the iOS app data stream to delete. Format:
       *        properties/{property_id}/iosAppDataStreams/{stream_id} Example:
       *        "properties/123/iosAppDataStreams/456"
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/iosAppDataStreams/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the iOS app data stream to delete. Format:
         * properties/{property_id}/iosAppDataStreams/{stream_id} Example:
         * "properties/123/iosAppDataStreams/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the iOS app data stream to delete. Format:
       properties/{property_id}/iosAppDataStreams/{stream_id} Example:
       "properties/123/iosAppDataStreams/456"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the iOS app data stream to delete. Format:
         * properties/{property_id}/iosAppDataStreams/{stream_id} Example:
         * "properties/123/iosAppDataStreams/456"
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/iosAppDataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single IosAppDataStream
       *
       * Create a request for the method "iosAppDataStreams.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the iOS app data stream to lookup. Format:
       *        properties/{property_id}/iosAppDataStreams/{stream_id} Example:
       *        "properties/123/iosAppDataStreams/456"
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/iosAppDataStreams/[^/]+$");

        /**
         * Lookup for a single IosAppDataStream
         *
         * Create a request for the method "iosAppDataStreams.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the iOS app data stream to lookup. Format:
       *        properties/{property_id}/iosAppDataStreams/{stream_id} Example:
       *        "properties/123/iosAppDataStreams/456"
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/iosAppDataStreams/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the iOS app data stream to lookup. Format:
         * properties/{property_id}/iosAppDataStreams/{stream_id} Example:
         * "properties/123/iosAppDataStreams/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the iOS app data stream to lookup. Format:
       properties/{property_id}/iosAppDataStreams/{stream_id} Example:
       "properties/123/iosAppDataStreams/456"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the iOS app data stream to lookup. Format:
         * properties/{property_id}/iosAppDataStreams/{stream_id} Example:
         * "properties/123/iosAppDataStreams/456"
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/iosAppDataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns child iOS app data streams under the specified parent property. iOS app data streams will
       * be excluded if the caller does not have access. Returns an empty list if no relevant iOS app data
       * streams are found.
       *
       * Create a request for the method "iosAppDataStreams.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the parent property. For example, to list results of app streams under the
       *        property with Id 123: "properties/123"
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListIosAppDataStreamsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/iosAppDataStreams";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Returns child iOS app data streams under the specified parent property. iOS app data streams
         * will be excluded if the caller does not have access. Returns an empty list if no relevant iOS
         * app data streams are found.
         *
         * Create a request for the method "iosAppDataStreams.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the parent property. For example, to list results of app streams under the
       *        property with Id 123: "properties/123"
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListIosAppDataStreamsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the parent property. For example, to list results of app streams
         * under the property with Id 123: "properties/123"
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the parent property. For example, to list results of app streams under the
       property with Id 123: "properties/123"
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the parent property. For example, to list results of app streams
         * under the property with Id 123: "properties/123"
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListIosAppDataStreams` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListIosAppDataStreams` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListIosAppDataStreams` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListIosAppDataStreams` must
       match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListIosAppDataStreams` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListIosAppDataStreams` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an iOS app stream on a property.
       *
       * Create a request for the method "iosAppDataStreams.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name of this Data Stream. Format:
       *        properties/{property_id}/iosAppDataStreams/{stream_id} Example:
       *        "properties/1000/iosAppDataStreams/2000"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/iosAppDataStreams/[^/]+$");

        /**
         * Updates an iOS app stream on a property.
         *
         * Create a request for the method "iosAppDataStreams.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of this Data Stream. Format:
       *        properties/{property_id}/iosAppDataStreams/{stream_id} Example:
       *        "properties/1000/iosAppDataStreams/2000"
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaIosAppDataStream.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/iosAppDataStreams/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of this Data Stream. Format:
         * properties/{property_id}/iosAppDataStreams/{stream_id} Example:
         * "properties/1000/iosAppDataStreams/2000"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of this Data Stream. Format:
       properties/{property_id}/iosAppDataStreams/{stream_id} Example:
       "properties/1000/iosAppDataStreams/2000"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of this Data Stream. Format:
         * properties/{property_id}/iosAppDataStreams/{stream_id} Example:
         * "properties/1000/iosAppDataStreams/2000"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/iosAppDataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the UserLinks collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.UserLinks.List request = analyticsadmin.userLinks().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public UserLinks userLinks() {
      return new UserLinks();
    }

    /**
     * The "userLinks" collection of methods.
     */
    public class UserLinks {

      /**
       * Lists all user links on an account or property, including implicit ones that come from effective
       * permissions granted by groups or organization admin roles. If a returned user link does not have
       * direct permissions, they cannot be removed from the account or property directly with the
       * DeleteUserLink command. They have to be removed from the group/etc that gives them permissions,
       * which is currently only usable/discoverable in the GA or GMP UIs.
       *
       * Create a request for the method "userLinks.audit".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Audit#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: accounts/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksRequest}
       * @return the request
       */
      public Audit audit(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksRequest content) throws java.io.IOException {
        Audit result = new Audit(parent, content);
        initialize(result);
        return result;
      }

      public class Audit extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks:audit";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists all user links on an account or property, including implicit ones that come from
         * effective permissions granted by groups or organization admin roles. If a returned user link
         * does not have direct permissions, they cannot be removed from the account or property directly
         * with the DeleteUserLink command. They have to be removed from the group/etc that gives them
         * permissions, which is currently only usable/discoverable in the GA or GMP UIs.
         *
         * Create a request for the method "userLinks.audit".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Audit#execute()} method to invoke the remote operation.
         * <p> {@link
         * Audit#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: accounts/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksRequest}
         * @since 1.13
         */
        protected Audit(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAuditUserLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Audit set$Xgafv(java.lang.String $Xgafv) {
          return (Audit) super.set$Xgafv($Xgafv);
        }

        @Override
        public Audit setAccessToken(java.lang.String accessToken) {
          return (Audit) super.setAccessToken(accessToken);
        }

        @Override
        public Audit setAlt(java.lang.String alt) {
          return (Audit) super.setAlt(alt);
        }

        @Override
        public Audit setCallback(java.lang.String callback) {
          return (Audit) super.setCallback(callback);
        }

        @Override
        public Audit setFields(java.lang.String fields) {
          return (Audit) super.setFields(fields);
        }

        @Override
        public Audit setKey(java.lang.String key) {
          return (Audit) super.setKey(key);
        }

        @Override
        public Audit setOauthToken(java.lang.String oauthToken) {
          return (Audit) super.setOauthToken(oauthToken);
        }

        @Override
        public Audit setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Audit) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Audit setQuotaUser(java.lang.String quotaUser) {
          return (Audit) super.setQuotaUser(quotaUser);
        }

        @Override
        public Audit setUploadType(java.lang.String uploadType) {
          return (Audit) super.setUploadType(uploadType);
        }

        @Override
        public Audit setUploadProtocol(java.lang.String uploadProtocol) {
          return (Audit) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: accounts/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: accounts/1234 */
        public Audit setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Audit set(String parameterName, Object value) {
          return (Audit) super.set(parameterName, value);
        }
      }
      /**
       * Creates information about multiple users' links to an account or property. This method is
       * transactional. If any UserLink cannot be created, none of the UserLinks will be created.
       *
       * Create a request for the method "userLinks.batchCreate".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that all user links in the request are for. This field is
       *        required. The parent field in the CreateUserLinkRequest messages must either be empty or
       *        match this field. Example format: accounts/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksRequest}
       * @return the request
       */
      public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksRequest content) throws java.io.IOException {
        BatchCreate result = new BatchCreate(parent, content);
        initialize(result);
        return result;
      }

      public class BatchCreate extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks:batchCreate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates information about multiple users' links to an account or property. This method is
         * transactional. If any UserLink cannot be created, none of the UserLinks will be created.
         *
         * Create a request for the method "userLinks.batchCreate".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that all user links in the request are for. This field is
       *        required. The parent field in the CreateUserLinkRequest messages must either be empty or
       *        match this field. Example format: accounts/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksRequest}
         * @since 1.13
         */
        protected BatchCreate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateUserLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchCreate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchCreate setAccessToken(java.lang.String accessToken) {
          return (BatchCreate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchCreate setAlt(java.lang.String alt) {
          return (BatchCreate) super.setAlt(alt);
        }

        @Override
        public BatchCreate setCallback(java.lang.String callback) {
          return (BatchCreate) super.setCallback(callback);
        }

        @Override
        public BatchCreate setFields(java.lang.String fields) {
          return (BatchCreate) super.setFields(fields);
        }

        @Override
        public BatchCreate setKey(java.lang.String key) {
          return (BatchCreate) super.setKey(key);
        }

        @Override
        public BatchCreate setOauthToken(java.lang.String oauthToken) {
          return (BatchCreate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchCreate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchCreate setQuotaUser(java.lang.String quotaUser) {
          return (BatchCreate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchCreate setUploadType(java.lang.String uploadType) {
          return (BatchCreate) super.setUploadType(uploadType);
        }

        @Override
        public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchCreate) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that all user links in the request are for. This field
         * is required. The parent field in the CreateUserLinkRequest messages must either be empty
         * or match this field. Example format: accounts/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that all user links in the request are for. This field is
       required. The parent field in the CreateUserLinkRequest messages must either be empty or match this
       field. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that all user links in the request are for. This field
         * is required. The parent field in the CreateUserLinkRequest messages must either be empty
         * or match this field. Example format: accounts/1234
         */
        public BatchCreate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchCreate set(String parameterName, Object value) {
          return (BatchCreate) super.set(parameterName, value);
        }
      }
      /**
       * Deletes information about multiple users' links to an account or property.
       *
       * Create a request for the method "userLinks.batchDelete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that all user links in the request are for. The parent of all
       *        values for user link names to delete must match this field. Example format: accounts/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteUserLinksRequest}
       * @return the request
       */
      public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteUserLinksRequest content) throws java.io.IOException {
        BatchDelete result = new BatchDelete(parent, content);
        initialize(result);
        return result;
      }

      public class BatchDelete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks:batchDelete";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Deletes information about multiple users' links to an account or property.
         *
         * Create a request for the method "userLinks.batchDelete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that all user links in the request are for. The parent of all
       *        values for user link names to delete must match this field. Example format: accounts/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteUserLinksRequest}
         * @since 1.13
         */
        protected BatchDelete(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteUserLinksRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
          return (BatchDelete) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchDelete setAccessToken(java.lang.String accessToken) {
          return (BatchDelete) super.setAccessToken(accessToken);
        }

        @Override
        public BatchDelete setAlt(java.lang.String alt) {
          return (BatchDelete) super.setAlt(alt);
        }

        @Override
        public BatchDelete setCallback(java.lang.String callback) {
          return (BatchDelete) super.setCallback(callback);
        }

        @Override
        public BatchDelete setFields(java.lang.String fields) {
          return (BatchDelete) super.setFields(fields);
        }

        @Override
        public BatchDelete setKey(java.lang.String key) {
          return (BatchDelete) super.setKey(key);
        }

        @Override
        public BatchDelete setOauthToken(java.lang.String oauthToken) {
          return (BatchDelete) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchDelete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchDelete setQuotaUser(java.lang.String quotaUser) {
          return (BatchDelete) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchDelete setUploadType(java.lang.String uploadType) {
          return (BatchDelete) super.setUploadType(uploadType);
        }

        @Override
        public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchDelete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * of all values for user link names to delete must match this field. Example format:
         * accounts/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that all user links in the request are for. The parent of all
       values for user link names to delete must match this field. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * of all values for user link names to delete must match this field. Example format:
         * accounts/1234
         */
        public BatchDelete setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchDelete set(String parameterName, Object value) {
          return (BatchDelete) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about multiple users' links to an account or property.
       *
       * Create a request for the method "userLinks.batchGet".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The account or property that all user links in the request are for. The parent of all
       *        provided values for the 'names' field must match this field. Example format: accounts/1234
       * @return the request
       */
      public BatchGet batchGet(java.lang.String parent) throws java.io.IOException {
        BatchGet result = new BatchGet(parent);
        initialize(result);
        return result;
      }

      public class BatchGet extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchGetUserLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks:batchGet";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Gets information about multiple users' links to an account or property.
         *
         * Create a request for the method "userLinks.batchGet".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
         * <p> {@link
         * BatchGet#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that all user links in the request are for. The parent of all
       *        provided values for the 'names' field must match this field. Example format: accounts/1234
         * @since 1.13
         */
        protected BatchGet(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchGetUserLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public BatchGet set$Xgafv(java.lang.String $Xgafv) {
          return (BatchGet) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchGet setAccessToken(java.lang.String accessToken) {
          return (BatchGet) super.setAccessToken(accessToken);
        }

        @Override
        public BatchGet setAlt(java.lang.String alt) {
          return (BatchGet) super.setAlt(alt);
        }

        @Override
        public BatchGet setCallback(java.lang.String callback) {
          return (BatchGet) super.setCallback(callback);
        }

        @Override
        public BatchGet setFields(java.lang.String fields) {
          return (BatchGet) super.setFields(fields);
        }

        @Override
        public BatchGet setKey(java.lang.String key) {
          return (BatchGet) super.setKey(key);
        }

        @Override
        public BatchGet setOauthToken(java.lang.String oauthToken) {
          return (BatchGet) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchGet setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchGet) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchGet setQuotaUser(java.lang.String quotaUser) {
          return (BatchGet) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchGet setUploadType(java.lang.String uploadType) {
          return (BatchGet) super.setUploadType(uploadType);
        }

        @Override
        public BatchGet setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchGet) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * of all provided values for the 'names' field must match this field. Example format:
         * accounts/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that all user links in the request are for. The parent of all
       provided values for the 'names' field must match this field. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * of all provided values for the 'names' field must match this field. Example format:
         * accounts/1234
         */
        public BatchGet setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Required. The names of the user links to retrieve. A maximum of 1000 user links can be
         * retrieved in a batch. Format: accounts/{accountId}/userLinks/{userLinkId}
         */
        @com.google.api.client.util.Key
        private java.util.List<java.lang.String> names;

        /** Required. The names of the user links to retrieve. A maximum of 1000 user links can be retrieved in
       a batch. Format: accounts/{accountId}/userLinks/{userLinkId}
         */
        public java.util.List<java.lang.String> getNames() {
          return names;
        }

        /**
         * Required. The names of the user links to retrieve. A maximum of 1000 user links can be
         * retrieved in a batch. Format: accounts/{accountId}/userLinks/{userLinkId}
         */
        public BatchGet setNames(java.util.List<java.lang.String> names) {
          this.names = names;
          return this;
        }

        @Override
        public BatchGet set(String parameterName, Object value) {
          return (BatchGet) super.set(parameterName, value);
        }
      }
      /**
       * Updates information about multiple users' links to an account or property.
       *
       * Create a request for the method "userLinks.batchUpdate".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that all user links in the request are for. The parent field in
       *        the UpdateUserLinkRequest messages must either be empty or match this field. Example
       *        format: accounts/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksRequest}
       * @return the request
       */
      public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksRequest content) throws java.io.IOException {
        BatchUpdate result = new BatchUpdate(parent, content);
        initialize(result);
        return result;
      }

      public class BatchUpdate extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks:batchUpdate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Updates information about multiple users' links to an account or property.
         *
         * Create a request for the method "userLinks.batchUpdate".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that all user links in the request are for. The parent field in
       *        the UpdateUserLinkRequest messages must either be empty or match this field. Example
       *        format: accounts/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksRequest}
         * @since 1.13
         */
        protected BatchUpdate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateUserLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchUpdate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchUpdate setAccessToken(java.lang.String accessToken) {
          return (BatchUpdate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchUpdate setAlt(java.lang.String alt) {
          return (BatchUpdate) super.setAlt(alt);
        }

        @Override
        public BatchUpdate setCallback(java.lang.String callback) {
          return (BatchUpdate) super.setCallback(callback);
        }

        @Override
        public BatchUpdate setFields(java.lang.String fields) {
          return (BatchUpdate) super.setFields(fields);
        }

        @Override
        public BatchUpdate setKey(java.lang.String key) {
          return (BatchUpdate) super.setKey(key);
        }

        @Override
        public BatchUpdate setOauthToken(java.lang.String oauthToken) {
          return (BatchUpdate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchUpdate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
          return (BatchUpdate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchUpdate setUploadType(java.lang.String uploadType) {
          return (BatchUpdate) super.setUploadType(uploadType);
        }

        @Override
        public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * field in the UpdateUserLinkRequest messages must either be empty or match this field.
         * Example format: accounts/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that all user links in the request are for. The parent field in
       the UpdateUserLinkRequest messages must either be empty or match this field. Example format:
       accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that all user links in the request are for. The parent
         * field in the UpdateUserLinkRequest messages must either be empty or match this field.
         * Example format: accounts/1234
         */
        public BatchUpdate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchUpdate set(String parameterName, Object value) {
          return (BatchUpdate) super.set(parameterName, value);
        }
      }
      /**
       * Creates a user link on an account or property. If the user with the specified email already has
       * permissions on the account or property, then the user's existing permissions will be unioned with
       * the permissions specified in the new UserLink.
       *
       * Create a request for the method "userLinks.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: accounts/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a user link on an account or property. If the user with the specified email already has
         * permissions on the account or property, then the user's existing permissions will be unioned
         * with the permissions specified in the new UserLink.
         *
         * Create a request for the method "userLinks.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: accounts/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: accounts/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: accounts/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. If set, then email the new user notifying them that they've been granted
         * permissions to the resource.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean notifyNewUser;

        /** Optional. If set, then email the new user notifying them that they've been granted permissions to
       the resource.
         */
        public java.lang.Boolean getNotifyNewUser() {
          return notifyNewUser;
        }

        /**
         * Optional. If set, then email the new user notifying them that they've been granted
         * permissions to the resource.
         */
        public Create setNotifyNewUser(java.lang.Boolean notifyNewUser) {
          this.notifyNewUser = notifyNewUser;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a user link on an account or property.
       *
       * Create a request for the method "userLinks.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Example format: accounts/1234/userLinks/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/userLinks/[^/]+$");

        /**
         * Deletes a user link on an account or property.
         *
         * Create a request for the method "userLinks.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Example format: accounts/1234/userLinks/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/userLinks/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: accounts/1234/userLinks/5678 */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Example format: accounts/1234/userLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Example format: accounts/1234/userLinks/5678 */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/userLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about a user's link to an account or property.
       *
       * Create a request for the method "userLinks.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Example format: accounts/1234/userLinks/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/userLinks/[^/]+$");

        /**
         * Gets information about a user's link to an account or property.
         *
         * Create a request for the method "userLinks.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Example format: accounts/1234/userLinks/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/userLinks/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: accounts/1234/userLinks/5678 */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Example format: accounts/1234/userLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Example format: accounts/1234/userLinks/5678 */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/userLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all user links on an account or property.
       *
       * Create a request for the method "userLinks.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: accounts/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListUserLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/userLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists all user links on an account or property.
         *
         * Create a request for the method "userLinks.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: accounts/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListUserLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: accounts/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: accounts/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: accounts/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of user links to return. The service may return fewer than this value.
         * If unspecified, at most 200 user links will be returned. The maximum value is 500; values
         * above 500 will be coerced to 500.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of user links to return. The service may return fewer than this value. If
       unspecified, at most 200 user links will be returned. The maximum value is 500; values above 500
       will be coerced to 500.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of user links to return. The service may return fewer than this value.
         * If unspecified, at most 200 user links will be returned. The maximum value is 500; values
         * above 500 will be coerced to 500.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListUserLinks` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListUserLinks` must
         * match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListUserLinks` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListUserLinks` must match the
       call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListUserLinks` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListUserLinks` must
         * match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a user link on an account or property.
       *
       * Create a request for the method "userLinks.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Example format: properties/1234/userLinks/5678
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/userLinks/[^/]+$");

        /**
         * Updates a user link on an account or property.
         *
         * Create a request for the method "userLinks.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Example format: properties/1234/userLinks/5678
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaUserLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/userLinks/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /** Example format: properties/1234/userLinks/5678 */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Example format: properties/1234/userLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /** Example format: properties/1234/userLinks/5678 */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/userLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the WebDataStreams collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.WebDataStreams.List request = analyticsadmin.webDataStreams().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public WebDataStreams webDataStreams() {
      return new WebDataStreams();
    }

    /**
     * The "webDataStreams" collection of methods.
     */
    public class WebDataStreams {

      /**
       * Creates a web stream with the specified location and attributes.
       *
       * Create a request for the method "webDataStreams.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource where this web data stream will be created. Format: properties/123
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream> {

        private static final String REST_PATH = "v1alpha/{+parent}/webDataStreams";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a web stream with the specified location and attributes.
         *
         * Create a request for the method "webDataStreams.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource where this web data stream will be created. Format: properties/123
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent resource where this web data stream will be created. Format:
         * properties/123
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource where this web data stream will be created. Format: properties/123
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent resource where this web data stream will be created. Format:
         * properties/123
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a web stream on a property.
       *
       * Create a request for the method "webDataStreams.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the web data stream to delete. Format:
       *        properties/{property_id}/webDataStreams/{stream_id} Example:
       *        "properties/123/webDataStreams/456"
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/webDataStreams/[^/]+$");

        /**
         * Deletes a web stream on a property.
         *
         * Create a request for the method "webDataStreams.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the web data stream to delete. Format:
       *        properties/{property_id}/webDataStreams/{stream_id} Example:
       *        "properties/123/webDataStreams/456"
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the web data stream to delete. Format:
         * properties/{property_id}/webDataStreams/{stream_id} Example:
         * "properties/123/webDataStreams/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the web data stream to delete. Format:
       properties/{property_id}/webDataStreams/{stream_id} Example: "properties/123/webDataStreams/456"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the web data stream to delete. Format:
         * properties/{property_id}/webDataStreams/{stream_id} Example:
         * "properties/123/webDataStreams/456"
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single WebDataStream
       *
       * Create a request for the method "webDataStreams.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the web data stream to lookup. Format:
       *        properties/{property_id}/webDataStreams/{stream_id} Example:
       *        "properties/123/webDataStreams/456"
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/webDataStreams/[^/]+$");

        /**
         * Lookup for a single WebDataStream
         *
         * Create a request for the method "webDataStreams.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the web data stream to lookup. Format:
       *        properties/{property_id}/webDataStreams/{stream_id} Example:
       *        "properties/123/webDataStreams/456"
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the web data stream to lookup. Format:
         * properties/{property_id}/webDataStreams/{stream_id} Example:
         * "properties/123/webDataStreams/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the web data stream to lookup. Format:
       properties/{property_id}/webDataStreams/{stream_id} Example: "properties/123/webDataStreams/456"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the web data stream to lookup. Format:
         * properties/{property_id}/webDataStreams/{stream_id} Example:
         * "properties/123/webDataStreams/456"
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns the singleton enhanced measurement settings for this web stream. Note that the stream
       * must enable enhanced measurement for these settings to take effect.
       *
       * Create a request for the method "webDataStreams.getEnhancedMeasurementSettings".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link GetEnhancedMeasurementSettings#execute()} method to invoke
       * the remote operation.
       *
       * @param name Required. The name of the settings to lookup. Format:
       *        properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings Example:
       *        "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
       * @return the request
       */
      public GetEnhancedMeasurementSettings getEnhancedMeasurementSettings(java.lang.String name) throws java.io.IOException {
        GetEnhancedMeasurementSettings result = new GetEnhancedMeasurementSettings(name);
        initialize(result);
        return result;
      }

      public class GetEnhancedMeasurementSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/webDataStreams/[^/]+/enhancedMeasurementSettings$");

        /**
         * Returns the singleton enhanced measurement settings for this web stream. Note that the stream
         * must enable enhanced measurement for these settings to take effect.
         *
         * Create a request for the method "webDataStreams.getEnhancedMeasurementSettings".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link GetEnhancedMeasurementSettings#execute()} method to invoke
         * the remote operation. <p> {@link GetEnhancedMeasurementSettings#initialize(com.google.api.clien
         * t.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the settings to lookup. Format:
       *        properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings Example:
       *        "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
         * @since 1.13
         */
        protected GetEnhancedMeasurementSettings(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+/enhancedMeasurementSettings$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetEnhancedMeasurementSettings set$Xgafv(java.lang.String $Xgafv) {
          return (GetEnhancedMeasurementSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetEnhancedMeasurementSettings setAccessToken(java.lang.String accessToken) {
          return (GetEnhancedMeasurementSettings) super.setAccessToken(accessToken);
        }

        @Override
        public GetEnhancedMeasurementSettings setAlt(java.lang.String alt) {
          return (GetEnhancedMeasurementSettings) super.setAlt(alt);
        }

        @Override
        public GetEnhancedMeasurementSettings setCallback(java.lang.String callback) {
          return (GetEnhancedMeasurementSettings) super.setCallback(callback);
        }

        @Override
        public GetEnhancedMeasurementSettings setFields(java.lang.String fields) {
          return (GetEnhancedMeasurementSettings) super.setFields(fields);
        }

        @Override
        public GetEnhancedMeasurementSettings setKey(java.lang.String key) {
          return (GetEnhancedMeasurementSettings) super.setKey(key);
        }

        @Override
        public GetEnhancedMeasurementSettings setOauthToken(java.lang.String oauthToken) {
          return (GetEnhancedMeasurementSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public GetEnhancedMeasurementSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetEnhancedMeasurementSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetEnhancedMeasurementSettings setQuotaUser(java.lang.String quotaUser) {
          return (GetEnhancedMeasurementSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetEnhancedMeasurementSettings setUploadType(java.lang.String uploadType) {
          return (GetEnhancedMeasurementSettings) super.setUploadType(uploadType);
        }

        @Override
        public GetEnhancedMeasurementSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetEnhancedMeasurementSettings) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the settings to lookup. Format:
         * properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings Example:
         * "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the settings to lookup. Format:
       properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings Example:
       "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the settings to lookup. Format:
         * properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings Example:
         * "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
         */
        public GetEnhancedMeasurementSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+/enhancedMeasurementSettings$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetEnhancedMeasurementSettings set(String parameterName, Object value) {
          return (GetEnhancedMeasurementSettings) super.set(parameterName, value);
        }
      }
      /**
       * Returns the Site Tag for the specified web stream. Site Tags are immutable singletons.
       *
       * Create a request for the method "webDataStreams.getGlobalSiteTag".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link GetGlobalSiteTag#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The name of the site tag to lookup. Note that site tags are singletons and do not have
       *        unique IDs. Format: properties/{property_id}/webDataStreams/{stream_id}/globalSiteTag
       *        Example: "properties/123/webDataStreams/456/globalSiteTag"
       * @return the request
       */
      public GetGlobalSiteTag getGlobalSiteTag(java.lang.String name) throws java.io.IOException {
        GetGlobalSiteTag result = new GetGlobalSiteTag(name);
        initialize(result);
        return result;
      }

      public class GetGlobalSiteTag extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGlobalSiteTag> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/webDataStreams/[^/]+/globalSiteTag$");

        /**
         * Returns the Site Tag for the specified web stream. Site Tags are immutable singletons.
         *
         * Create a request for the method "webDataStreams.getGlobalSiteTag".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link GetGlobalSiteTag#execute()} method to invoke the remote
         * operation. <p> {@link GetGlobalSiteTag#initialize(com.google.api.client.googleapis.services.Abs
         * tractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The name of the site tag to lookup. Note that site tags are singletons and do not have
       *        unique IDs. Format: properties/{property_id}/webDataStreams/{stream_id}/globalSiteTag
       *        Example: "properties/123/webDataStreams/456/globalSiteTag"
         * @since 1.13
         */
        protected GetGlobalSiteTag(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGlobalSiteTag.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+/globalSiteTag$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetGlobalSiteTag set$Xgafv(java.lang.String $Xgafv) {
          return (GetGlobalSiteTag) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetGlobalSiteTag setAccessToken(java.lang.String accessToken) {
          return (GetGlobalSiteTag) super.setAccessToken(accessToken);
        }

        @Override
        public GetGlobalSiteTag setAlt(java.lang.String alt) {
          return (GetGlobalSiteTag) super.setAlt(alt);
        }

        @Override
        public GetGlobalSiteTag setCallback(java.lang.String callback) {
          return (GetGlobalSiteTag) super.setCallback(callback);
        }

        @Override
        public GetGlobalSiteTag setFields(java.lang.String fields) {
          return (GetGlobalSiteTag) super.setFields(fields);
        }

        @Override
        public GetGlobalSiteTag setKey(java.lang.String key) {
          return (GetGlobalSiteTag) super.setKey(key);
        }

        @Override
        public GetGlobalSiteTag setOauthToken(java.lang.String oauthToken) {
          return (GetGlobalSiteTag) super.setOauthToken(oauthToken);
        }

        @Override
        public GetGlobalSiteTag setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetGlobalSiteTag) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetGlobalSiteTag setQuotaUser(java.lang.String quotaUser) {
          return (GetGlobalSiteTag) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetGlobalSiteTag setUploadType(java.lang.String uploadType) {
          return (GetGlobalSiteTag) super.setUploadType(uploadType);
        }

        @Override
        public GetGlobalSiteTag setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetGlobalSiteTag) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the site tag to lookup. Note that site tags are singletons and do
         * not have unique IDs. Format:
         * properties/{property_id}/webDataStreams/{stream_id}/globalSiteTag Example:
         * "properties/123/webDataStreams/456/globalSiteTag"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the site tag to lookup. Note that site tags are singletons and do not have
       unique IDs. Format: properties/{property_id}/webDataStreams/{stream_id}/globalSiteTag Example:
       "properties/123/webDataStreams/456/globalSiteTag"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the site tag to lookup. Note that site tags are singletons and do
         * not have unique IDs. Format:
         * properties/{property_id}/webDataStreams/{stream_id}/globalSiteTag Example:
         * "properties/123/webDataStreams/456/globalSiteTag"
         */
        public GetGlobalSiteTag setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+/globalSiteTag$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetGlobalSiteTag set(String parameterName, Object value) {
          return (GetGlobalSiteTag) super.set(parameterName, value);
        }
      }
      /**
       * Returns child web data streams under the specified parent property. Web data streams will be
       * excluded if the caller does not have access. Returns an empty list if no relevant web data
       * streams are found.
       *
       * Create a request for the method "webDataStreams.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the parent property. For example, to list results of web streams under the
       *        property with Id 123: "properties/123"
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListWebDataStreamsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/webDataStreams";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Returns child web data streams under the specified parent property. Web data streams will be
         * excluded if the caller does not have access. Returns an empty list if no relevant web data
         * streams are found.
         *
         * Create a request for the method "webDataStreams.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the parent property. For example, to list results of web streams under the
       *        property with Id 123: "properties/123"
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListWebDataStreamsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the parent property. For example, to list results of web streams
         * under the property with Id 123: "properties/123"
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the parent property. For example, to list results of web streams under the
       property with Id 123: "properties/123"
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the parent property. For example, to list results of web streams
         * under the property with Id 123: "properties/123"
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListWebDataStreams` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListWebDataStreams` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListWebDataStreams` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListWebDataStreams` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListWebDataStreams` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListWebDataStreams` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a web stream on a property.
       *
       * Create a request for the method "webDataStreams.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name of this Data Stream. Format:
       *        properties/{property_id}/webDataStreams/{stream_id} Example:
       *        "properties/1000/webDataStreams/2000"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/webDataStreams/[^/]+$");

        /**
         * Updates a web stream on a property.
         *
         * Create a request for the method "webDataStreams.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of this Data Stream. Format:
       *        properties/{property_id}/webDataStreams/{stream_id} Example:
       *        "properties/1000/webDataStreams/2000"
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaWebDataStream.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of this Data Stream. Format:
         * properties/{property_id}/webDataStreams/{stream_id} Example:
         * "properties/1000/webDataStreams/2000"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of this Data Stream. Format:
       properties/{property_id}/webDataStreams/{stream_id} Example: "properties/1000/webDataStreams/2000"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of this Data Stream. Format:
         * properties/{property_id}/webDataStreams/{stream_id} Example:
         * "properties/1000/webDataStreams/2000"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Updates the singleton enhanced measurement settings for this web stream. Note that the stream
       * must enable enhanced measurement for these settings to take effect.
       *
       * Create a request for the method "webDataStreams.updateEnhancedMeasurementSettings".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link UpdateEnhancedMeasurementSettings#execute()} method to
       * invoke the remote operation.
       *
       * @param name Output only. Resource name of this Data Stream. Format:
       *        properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings Example:
       *        "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings}
       * @return the request
       */
      public UpdateEnhancedMeasurementSettings updateEnhancedMeasurementSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings content) throws java.io.IOException {
        UpdateEnhancedMeasurementSettings result = new UpdateEnhancedMeasurementSettings(name, content);
        initialize(result);
        return result;
      }

      public class UpdateEnhancedMeasurementSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/webDataStreams/[^/]+/enhancedMeasurementSettings$");

        /**
         * Updates the singleton enhanced measurement settings for this web stream. Note that the stream
         * must enable enhanced measurement for these settings to take effect.
         *
         * Create a request for the method "webDataStreams.updateEnhancedMeasurementSettings".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link UpdateEnhancedMeasurementSettings#execute()} method to
         * invoke the remote operation. <p> {@link UpdateEnhancedMeasurementSettings#initialize(com.google
         * .api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
         * instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of this Data Stream. Format:
       *        properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings Example:
       *        "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings}
         * @since 1.13
         */
        protected UpdateEnhancedMeasurementSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+/enhancedMeasurementSettings$");
          }
        }

        @Override
        public UpdateEnhancedMeasurementSettings set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateEnhancedMeasurementSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setAccessToken(java.lang.String accessToken) {
          return (UpdateEnhancedMeasurementSettings) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setAlt(java.lang.String alt) {
          return (UpdateEnhancedMeasurementSettings) super.setAlt(alt);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setCallback(java.lang.String callback) {
          return (UpdateEnhancedMeasurementSettings) super.setCallback(callback);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setFields(java.lang.String fields) {
          return (UpdateEnhancedMeasurementSettings) super.setFields(fields);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setKey(java.lang.String key) {
          return (UpdateEnhancedMeasurementSettings) super.setKey(key);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setOauthToken(java.lang.String oauthToken) {
          return (UpdateEnhancedMeasurementSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateEnhancedMeasurementSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setQuotaUser(java.lang.String quotaUser) {
          return (UpdateEnhancedMeasurementSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setUploadType(java.lang.String uploadType) {
          return (UpdateEnhancedMeasurementSettings) super.setUploadType(uploadType);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateEnhancedMeasurementSettings) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of this Data Stream. Format:
         * properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings Example:
         * "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of this Data Stream. Format:
       properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings Example:
       "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of this Data Stream. Format:
         * properties/{property_id}/webDataStreams/{stream_id}/enhancedMeasurementSettings Example:
         * "properties/1000/webDataStreams/2000/enhancedMeasurementSettings"
         */
        public UpdateEnhancedMeasurementSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/webDataStreams/[^/]+/enhancedMeasurementSettings$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public UpdateEnhancedMeasurementSettings setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateEnhancedMeasurementSettings set(String parameterName, Object value) {
          return (UpdateEnhancedMeasurementSettings) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link GoogleAnalyticsAdmin}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link GoogleAnalyticsAdmin}. */
    @Override
    public GoogleAnalyticsAdmin build() {
      return new GoogleAnalyticsAdmin(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link GoogleAnalyticsAdminRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setGoogleAnalyticsAdminRequestInitializer(
        GoogleAnalyticsAdminRequestInitializer googleanalyticsadminRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleanalyticsadminRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
