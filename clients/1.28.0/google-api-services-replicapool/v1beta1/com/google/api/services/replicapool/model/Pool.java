/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.replicapool.model;

/**
 * Model definition for Pool.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Replica Pool API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Pool extends com.google.api.client.json.GenericJson {

  /**
   * Whether replicas in this pool should be restarted if they experience a failure. The default
   * value is true.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean autoRestart;

  /**
   * The base instance name to use for the replicas in this pool. This must match the regex
   * [a-z]([-a-z0-9]*[a-z0-9])?. If specified, the instances in this replica pool will be named in
   * the format -. The  postfix will be a four character alphanumeric identifier generated by the
   * service.
   *
   * If this is not specified by the user, a random base instance name is generated by the service.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String baseInstanceName;

  /**
   * [Output Only] The current number of replicas in the pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer currentNumReplicas;

  /**
   * An optional description of the replica pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Deprecated. Please use template[].healthChecks instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<HealthCheck> healthChecks;

  static {
    // hack to force ProGuard to consider HealthCheck used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(HealthCheck.class);
  }

  /**
   * The initial number of replicas this pool should have. You must provide a value greater than or
   * equal to 0.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer initialNumReplicas;

  /**
   * A list of labels to attach to this replica pool and all created virtual machines in this
   * replica pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Label> labels;

  static {
    // hack to force ProGuard to consider Label used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Label.class);
  }

  /**
   * The name of the replica pool. Must follow the regex [a-z]([-a-z0-9]*[a-z0-9])? and be 1-28
   * characters long.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Deprecated! Use initial_num_replicas instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer numReplicas;

  /**
   * The list of resource views that should be updated with all the replicas that are managed by
   * this pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> resourceViews;

  /**
   * [Output Only] A self-link to the replica pool.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String selfLink;

  /**
   * Deprecated, please use target_pools instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetPool;

  /**
   * A list of target pools to update with the replicas that are managed by this pool. If specified,
   * the replicas in this replica pool will be added to the specified target pools for load
   * balancing purposes. The replica pool must live in the same region as the specified target
   * pools. These values must be the target pool resource names, and not fully qualified URLs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> targetPools;

  /**
   * The template to use when creating replicas in this pool. This template is used during initial
   * instance creation of the pool, when growing the pool in size, or when a replica restarts.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Template template;

  /**
   * Deprecated! Do not set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Whether replicas in this pool should be restarted if they experience a failure. The default
   * value is true.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAutoRestart() {
    return autoRestart;
  }

  /**
   * Whether replicas in this pool should be restarted if they experience a failure. The default
   * value is true.
   * @param autoRestart autoRestart or {@code null} for none
   */
  public Pool setAutoRestart(java.lang.Boolean autoRestart) {
    this.autoRestart = autoRestart;
    return this;
  }

  /**
   * The base instance name to use for the replicas in this pool. This must match the regex
   * [a-z]([-a-z0-9]*[a-z0-9])?. If specified, the instances in this replica pool will be named in
   * the format -. The  postfix will be a four character alphanumeric identifier generated by the
   * service.
   *
   * If this is not specified by the user, a random base instance name is generated by the service.
   * @return value or {@code null} for none
   */
  public java.lang.String getBaseInstanceName() {
    return baseInstanceName;
  }

  /**
   * The base instance name to use for the replicas in this pool. This must match the regex
   * [a-z]([-a-z0-9]*[a-z0-9])?. If specified, the instances in this replica pool will be named in
   * the format -. The  postfix will be a four character alphanumeric identifier generated by the
   * service.
   *
   * If this is not specified by the user, a random base instance name is generated by the service.
   * @param baseInstanceName baseInstanceName or {@code null} for none
   */
  public Pool setBaseInstanceName(java.lang.String baseInstanceName) {
    this.baseInstanceName = baseInstanceName;
    return this;
  }

  /**
   * [Output Only] The current number of replicas in the pool.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getCurrentNumReplicas() {
    return currentNumReplicas;
  }

  /**
   * [Output Only] The current number of replicas in the pool.
   * @param currentNumReplicas currentNumReplicas or {@code null} for none
   */
  public Pool setCurrentNumReplicas(java.lang.Integer currentNumReplicas) {
    this.currentNumReplicas = currentNumReplicas;
    return this;
  }

  /**
   * An optional description of the replica pool.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * An optional description of the replica pool.
   * @param description description or {@code null} for none
   */
  public Pool setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Deprecated. Please use template[].healthChecks instead.
   * @return value or {@code null} for none
   */
  public java.util.List<HealthCheck> getHealthChecks() {
    return healthChecks;
  }

  /**
   * Deprecated. Please use template[].healthChecks instead.
   * @param healthChecks healthChecks or {@code null} for none
   */
  public Pool setHealthChecks(java.util.List<HealthCheck> healthChecks) {
    this.healthChecks = healthChecks;
    return this;
  }

  /**
   * The initial number of replicas this pool should have. You must provide a value greater than or
   * equal to 0.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getInitialNumReplicas() {
    return initialNumReplicas;
  }

  /**
   * The initial number of replicas this pool should have. You must provide a value greater than or
   * equal to 0.
   * @param initialNumReplicas initialNumReplicas or {@code null} for none
   */
  public Pool setInitialNumReplicas(java.lang.Integer initialNumReplicas) {
    this.initialNumReplicas = initialNumReplicas;
    return this;
  }

  /**
   * A list of labels to attach to this replica pool and all created virtual machines in this
   * replica pool.
   * @return value or {@code null} for none
   */
  public java.util.List<Label> getLabels() {
    return labels;
  }

  /**
   * A list of labels to attach to this replica pool and all created virtual machines in this
   * replica pool.
   * @param labels labels or {@code null} for none
   */
  public Pool setLabels(java.util.List<Label> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * The name of the replica pool. Must follow the regex [a-z]([-a-z0-9]*[a-z0-9])? and be 1-28
   * characters long.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The name of the replica pool. Must follow the regex [a-z]([-a-z0-9]*[a-z0-9])? and be 1-28
   * characters long.
   * @param name name or {@code null} for none
   */
  public Pool setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Deprecated! Use initial_num_replicas instead.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNumReplicas() {
    return numReplicas;
  }

  /**
   * Deprecated! Use initial_num_replicas instead.
   * @param numReplicas numReplicas or {@code null} for none
   */
  public Pool setNumReplicas(java.lang.Integer numReplicas) {
    this.numReplicas = numReplicas;
    return this;
  }

  /**
   * The list of resource views that should be updated with all the replicas that are managed by
   * this pool.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getResourceViews() {
    return resourceViews;
  }

  /**
   * The list of resource views that should be updated with all the replicas that are managed by
   * this pool.
   * @param resourceViews resourceViews or {@code null} for none
   */
  public Pool setResourceViews(java.util.List<java.lang.String> resourceViews) {
    this.resourceViews = resourceViews;
    return this;
  }

  /**
   * [Output Only] A self-link to the replica pool.
   * @return value or {@code null} for none
   */
  public java.lang.String getSelfLink() {
    return selfLink;
  }

  /**
   * [Output Only] A self-link to the replica pool.
   * @param selfLink selfLink or {@code null} for none
   */
  public Pool setSelfLink(java.lang.String selfLink) {
    this.selfLink = selfLink;
    return this;
  }

  /**
   * Deprecated, please use target_pools instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetPool() {
    return targetPool;
  }

  /**
   * Deprecated, please use target_pools instead.
   * @param targetPool targetPool or {@code null} for none
   */
  public Pool setTargetPool(java.lang.String targetPool) {
    this.targetPool = targetPool;
    return this;
  }

  /**
   * A list of target pools to update with the replicas that are managed by this pool. If specified,
   * the replicas in this replica pool will be added to the specified target pools for load
   * balancing purposes. The replica pool must live in the same region as the specified target
   * pools. These values must be the target pool resource names, and not fully qualified URLs.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getTargetPools() {
    return targetPools;
  }

  /**
   * A list of target pools to update with the replicas that are managed by this pool. If specified,
   * the replicas in this replica pool will be added to the specified target pools for load
   * balancing purposes. The replica pool must live in the same region as the specified target
   * pools. These values must be the target pool resource names, and not fully qualified URLs.
   * @param targetPools targetPools or {@code null} for none
   */
  public Pool setTargetPools(java.util.List<java.lang.String> targetPools) {
    this.targetPools = targetPools;
    return this;
  }

  /**
   * The template to use when creating replicas in this pool. This template is used during initial
   * instance creation of the pool, when growing the pool in size, or when a replica restarts.
   * @return value or {@code null} for none
   */
  public Template getTemplate() {
    return template;
  }

  /**
   * The template to use when creating replicas in this pool. This template is used during initial
   * instance creation of the pool, when growing the pool in size, or when a replica restarts.
   * @param template template or {@code null} for none
   */
  public Pool setTemplate(Template template) {
    this.template = template;
    return this;
  }

  /**
   * Deprecated! Do not set.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Deprecated! Do not set.
   * @param type type or {@code null} for none
   */
  public Pool setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public Pool set(String fieldName, Object value) {
    return (Pool) super.set(fieldName, value);
  }

  @Override
  public Pool clone() {
    return (Pool) super.clone();
  }

}
