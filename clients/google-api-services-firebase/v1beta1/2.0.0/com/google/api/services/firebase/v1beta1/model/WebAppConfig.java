/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.firebase.v1beta1.model;

/**
 * Configuration metadata of a single Firebase App for the web.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Firebase Management API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class WebAppConfig extends com.google.api.client.json.GenericJson {

  /**
   * The [`keyString`](https://cloud.google.com/api-
   * keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key
   * associated with the `WebApp`. Note that this value is _not_ the
   * [`apiKeyId`](../projects.webApps#WebApp.FIELDS.api_key_id) (the UID) of the API key associated
   * with the `WebApp`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String apiKey;

  /**
   * Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String appId;

  /**
   * The domain Firebase Auth configures for OAuth redirects, in the format:
   * PROJECT_ID.firebaseapp.com
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authDomain;

  /**
   * **DEPRECATED.** _Instead, find the URL of the default Realtime Database instance using the
   * [list endpoint](https://firebase.google.com/docs/reference/rest/database/database-
   * management/rest/v1beta/projects.locations.instances/list) within the Firebase Realtime Database
   * REST API. If the default instance for the Project has not yet been provisioned, the return
   * might not contain a default instance. Note that the config that's generated for the Firebase
   * console or the Firebase CLI uses the Realtime Database endpoint to populate this value for that
   * config._ The URL of the default Firebase Realtime Database instance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String databaseURL;

  /**
   * **DEPRECATED.** _Instead, use product-specific REST APIs to find the location of each resource
   * in a Project. This field may not be populated, especially for newly provisioned projects after
   * October 30, 2024._ The ID of the Project's ["location for default Google Cloud
   * resources"](https://firebase.google.com/docs/projects/locations#default-cloud-location), which
   * are resources associated with Google App Engine. The location is one of the available [App
   * Engine locations](https://cloud.google.com/about/locations#region). This field is omitted if
   * the location for default Google Cloud resources has not been set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String locationId;

  /**
   * The unique Google-assigned identifier of the Google Analytics web stream associated with the
   * `WebApp`. Firebase SDKs use this ID to interact with Google Analytics APIs. This field is only
   * present if the `WebApp` is linked to a web stream in a Google Analytics App + Web property.
   * Learn more about this ID and Google Analytics web streams in the [Analytics
   * documentation](https://support.google.com/analytics/answer/9304153). To generate a
   * `measurementId` and link the `WebApp` with a Google Analytics web stream, call
   * [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics). For apps using the Firebase
   * JavaScript SDK v7.20.0 and later, Firebase dynamically fetches the `measurementId` when your
   * app initializes Analytics. Having this ID in your config object is optional, but it does serve
   * as a fallback in the rare case that the dynamic fetch fails.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String measurementId;

  /**
   * The sender ID for use with Firebase Cloud Messaging.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String messagingSenderId;

  /**
   * Immutable. A user-assigned unique identifier for the `FirebaseProject`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectId;

  /**
   * Output only. Immutable. The globally unique, Google-assigned canonical identifier for the
   * Project. Use this identifier when configuring integrations and/or making API calls to Google
   * Cloud or third-party services.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectNumber;

  /**
   * Optional. Duplicate field for the URL of the default Realtime Database instances (if the
   * default instance has been provisioned). If the request asks for the V2 config format, this
   * field will be populated instead of `realtime_database_instance_uri`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String realtimeDatabaseUrl;

  /**
   * **DEPRECATED.** _Instead, find the name of the default Cloud Storage for Firebase bucket using
   * the [list endpoint](https://firebase.google.com/docs/reference/rest/storage/rest/v1beta/project
   * s.buckets/list) within the Cloud Storage for Firebase REST API. If the default bucket for the
   * Project has not yet been provisioned, the return might not contain a default bucket. Note that
   * the config that's generated for the Firebase console or the Firebase CLI uses the Cloud Storage
   * for Firebase endpoint to populate this value for that config._ The name of the default Cloud
   * Storage for Firebase bucket.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String storageBucket;

  /**
   * Version of the config specification.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * The [`keyString`](https://cloud.google.com/api-
   * keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key
   * associated with the `WebApp`. Note that this value is _not_ the
   * [`apiKeyId`](../projects.webApps#WebApp.FIELDS.api_key_id) (the UID) of the API key associated
   * with the `WebApp`.
   * @return value or {@code null} for none
   */
  public java.lang.String getApiKey() {
    return apiKey;
  }

  /**
   * The [`keyString`](https://cloud.google.com/api-
   * keys/docs/reference/rest/v2/projects.locations.keys#Key.FIELDS.key_string) of the API key
   * associated with the `WebApp`. Note that this value is _not_ the
   * [`apiKeyId`](../projects.webApps#WebApp.FIELDS.api_key_id) (the UID) of the API key associated
   * with the `WebApp`.
   * @param apiKey apiKey or {@code null} for none
   */
  public WebAppConfig setApiKey(java.lang.String apiKey) {
    this.apiKey = apiKey;
    return this;
  }

  /**
   * Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`.
   * @return value or {@code null} for none
   */
  public java.lang.String getAppId() {
    return appId;
  }

  /**
   * Immutable. The globally unique, Firebase-assigned identifier for the `WebApp`.
   * @param appId appId or {@code null} for none
   */
  public WebAppConfig setAppId(java.lang.String appId) {
    this.appId = appId;
    return this;
  }

  /**
   * The domain Firebase Auth configures for OAuth redirects, in the format:
   * PROJECT_ID.firebaseapp.com
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthDomain() {
    return authDomain;
  }

  /**
   * The domain Firebase Auth configures for OAuth redirects, in the format:
   * PROJECT_ID.firebaseapp.com
   * @param authDomain authDomain or {@code null} for none
   */
  public WebAppConfig setAuthDomain(java.lang.String authDomain) {
    this.authDomain = authDomain;
    return this;
  }

  /**
   * **DEPRECATED.** _Instead, find the URL of the default Realtime Database instance using the
   * [list endpoint](https://firebase.google.com/docs/reference/rest/database/database-
   * management/rest/v1beta/projects.locations.instances/list) within the Firebase Realtime Database
   * REST API. If the default instance for the Project has not yet been provisioned, the return
   * might not contain a default instance. Note that the config that's generated for the Firebase
   * console or the Firebase CLI uses the Realtime Database endpoint to populate this value for that
   * config._ The URL of the default Firebase Realtime Database instance.
   * @return value or {@code null} for none
   */
  public java.lang.String getDatabaseURL() {
    return databaseURL;
  }

  /**
   * **DEPRECATED.** _Instead, find the URL of the default Realtime Database instance using the
   * [list endpoint](https://firebase.google.com/docs/reference/rest/database/database-
   * management/rest/v1beta/projects.locations.instances/list) within the Firebase Realtime Database
   * REST API. If the default instance for the Project has not yet been provisioned, the return
   * might not contain a default instance. Note that the config that's generated for the Firebase
   * console or the Firebase CLI uses the Realtime Database endpoint to populate this value for that
   * config._ The URL of the default Firebase Realtime Database instance.
   * @param databaseURL databaseURL or {@code null} for none
   */
  public WebAppConfig setDatabaseURL(java.lang.String databaseURL) {
    this.databaseURL = databaseURL;
    return this;
  }

  /**
   * **DEPRECATED.** _Instead, use product-specific REST APIs to find the location of each resource
   * in a Project. This field may not be populated, especially for newly provisioned projects after
   * October 30, 2024._ The ID of the Project's ["location for default Google Cloud
   * resources"](https://firebase.google.com/docs/projects/locations#default-cloud-location), which
   * are resources associated with Google App Engine. The location is one of the available [App
   * Engine locations](https://cloud.google.com/about/locations#region). This field is omitted if
   * the location for default Google Cloud resources has not been set.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocationId() {
    return locationId;
  }

  /**
   * **DEPRECATED.** _Instead, use product-specific REST APIs to find the location of each resource
   * in a Project. This field may not be populated, especially for newly provisioned projects after
   * October 30, 2024._ The ID of the Project's ["location for default Google Cloud
   * resources"](https://firebase.google.com/docs/projects/locations#default-cloud-location), which
   * are resources associated with Google App Engine. The location is one of the available [App
   * Engine locations](https://cloud.google.com/about/locations#region). This field is omitted if
   * the location for default Google Cloud resources has not been set.
   * @param locationId locationId or {@code null} for none
   */
  public WebAppConfig setLocationId(java.lang.String locationId) {
    this.locationId = locationId;
    return this;
  }

  /**
   * The unique Google-assigned identifier of the Google Analytics web stream associated with the
   * `WebApp`. Firebase SDKs use this ID to interact with Google Analytics APIs. This field is only
   * present if the `WebApp` is linked to a web stream in a Google Analytics App + Web property.
   * Learn more about this ID and Google Analytics web streams in the [Analytics
   * documentation](https://support.google.com/analytics/answer/9304153). To generate a
   * `measurementId` and link the `WebApp` with a Google Analytics web stream, call
   * [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics). For apps using the Firebase
   * JavaScript SDK v7.20.0 and later, Firebase dynamically fetches the `measurementId` when your
   * app initializes Analytics. Having this ID in your config object is optional, but it does serve
   * as a fallback in the rare case that the dynamic fetch fails.
   * @return value or {@code null} for none
   */
  public java.lang.String getMeasurementId() {
    return measurementId;
  }

  /**
   * The unique Google-assigned identifier of the Google Analytics web stream associated with the
   * `WebApp`. Firebase SDKs use this ID to interact with Google Analytics APIs. This field is only
   * present if the `WebApp` is linked to a web stream in a Google Analytics App + Web property.
   * Learn more about this ID and Google Analytics web streams in the [Analytics
   * documentation](https://support.google.com/analytics/answer/9304153). To generate a
   * `measurementId` and link the `WebApp` with a Google Analytics web stream, call
   * [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics). For apps using the Firebase
   * JavaScript SDK v7.20.0 and later, Firebase dynamically fetches the `measurementId` when your
   * app initializes Analytics. Having this ID in your config object is optional, but it does serve
   * as a fallback in the rare case that the dynamic fetch fails.
   * @param measurementId measurementId or {@code null} for none
   */
  public WebAppConfig setMeasurementId(java.lang.String measurementId) {
    this.measurementId = measurementId;
    return this;
  }

  /**
   * The sender ID for use with Firebase Cloud Messaging.
   * @return value or {@code null} for none
   */
  public java.lang.String getMessagingSenderId() {
    return messagingSenderId;
  }

  /**
   * The sender ID for use with Firebase Cloud Messaging.
   * @param messagingSenderId messagingSenderId or {@code null} for none
   */
  public WebAppConfig setMessagingSenderId(java.lang.String messagingSenderId) {
    this.messagingSenderId = messagingSenderId;
    return this;
  }

  /**
   * Immutable. A user-assigned unique identifier for the `FirebaseProject`.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectId() {
    return projectId;
  }

  /**
   * Immutable. A user-assigned unique identifier for the `FirebaseProject`.
   * @param projectId projectId or {@code null} for none
   */
  public WebAppConfig setProjectId(java.lang.String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Output only. Immutable. The globally unique, Google-assigned canonical identifier for the
   * Project. Use this identifier when configuring integrations and/or making API calls to Google
   * Cloud or third-party services.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectNumber() {
    return projectNumber;
  }

  /**
   * Output only. Immutable. The globally unique, Google-assigned canonical identifier for the
   * Project. Use this identifier when configuring integrations and/or making API calls to Google
   * Cloud or third-party services.
   * @param projectNumber projectNumber or {@code null} for none
   */
  public WebAppConfig setProjectNumber(java.lang.String projectNumber) {
    this.projectNumber = projectNumber;
    return this;
  }

  /**
   * Optional. Duplicate field for the URL of the default Realtime Database instances (if the
   * default instance has been provisioned). If the request asks for the V2 config format, this
   * field will be populated instead of `realtime_database_instance_uri`.
   * @return value or {@code null} for none
   */
  public java.lang.String getRealtimeDatabaseUrl() {
    return realtimeDatabaseUrl;
  }

  /**
   * Optional. Duplicate field for the URL of the default Realtime Database instances (if the
   * default instance has been provisioned). If the request asks for the V2 config format, this
   * field will be populated instead of `realtime_database_instance_uri`.
   * @param realtimeDatabaseUrl realtimeDatabaseUrl or {@code null} for none
   */
  public WebAppConfig setRealtimeDatabaseUrl(java.lang.String realtimeDatabaseUrl) {
    this.realtimeDatabaseUrl = realtimeDatabaseUrl;
    return this;
  }

  /**
   * **DEPRECATED.** _Instead, find the name of the default Cloud Storage for Firebase bucket using
   * the [list endpoint](https://firebase.google.com/docs/reference/rest/storage/rest/v1beta/project
   * s.buckets/list) within the Cloud Storage for Firebase REST API. If the default bucket for the
   * Project has not yet been provisioned, the return might not contain a default bucket. Note that
   * the config that's generated for the Firebase console or the Firebase CLI uses the Cloud Storage
   * for Firebase endpoint to populate this value for that config._ The name of the default Cloud
   * Storage for Firebase bucket.
   * @return value or {@code null} for none
   */
  public java.lang.String getStorageBucket() {
    return storageBucket;
  }

  /**
   * **DEPRECATED.** _Instead, find the name of the default Cloud Storage for Firebase bucket using
   * the [list endpoint](https://firebase.google.com/docs/reference/rest/storage/rest/v1beta/project
   * s.buckets/list) within the Cloud Storage for Firebase REST API. If the default bucket for the
   * Project has not yet been provisioned, the return might not contain a default bucket. Note that
   * the config that's generated for the Firebase console or the Firebase CLI uses the Cloud Storage
   * for Firebase endpoint to populate this value for that config._ The name of the default Cloud
   * Storage for Firebase bucket.
   * @param storageBucket storageBucket or {@code null} for none
   */
  public WebAppConfig setStorageBucket(java.lang.String storageBucket) {
    this.storageBucket = storageBucket;
    return this;
  }

  /**
   * Version of the config specification.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * Version of the config specification.
   * @param version version or {@code null} for none
   */
  public WebAppConfig setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public WebAppConfig set(String fieldName, Object value) {
    return (WebAppConfig) super.set(fieldName, value);
  }

  @Override
  public WebAppConfig clone() {
    return (WebAppConfig) super.clone();
  }

}
