/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Next id: 8
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiCoreTypesCalendarEventAttendee extends com.google.api.client.json.GenericJson {

  /**
   * Display name, present only if available.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Email address of the attendee (calendar), for regular events. For +Events, this field is not
   * populated, instead "id" is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String email;

  /**
   * Given (first) name, present only if available. This is used for generating meeting titles as
   * given name is preferred over display (full) name (ie: "Jeff : Sundar" is better than "Jeff Dean
   * : Sundar Pichai").
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String givenName;

  /**
   * Profile ID of the principal, for +Events. For regular events, this field is not populated,
   * instead "email" is used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Is this the organizer?
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean organizer;

  /**
   * Attendees response status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String responseStatus;

  /**
   * Is this the owner of this copy of the event?
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean self;

  /**
   * Display name, present only if available.
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Display name, present only if available.
   * @param displayName displayName or {@code null} for none
   */
  public AssistantApiCoreTypesCalendarEventAttendee setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Email address of the attendee (calendar), for regular events. For +Events, this field is not
   * populated, instead "id" is used.
   * @return value or {@code null} for none
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * Email address of the attendee (calendar), for regular events. For +Events, this field is not
   * populated, instead "id" is used.
   * @param email email or {@code null} for none
   */
  public AssistantApiCoreTypesCalendarEventAttendee setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  /**
   * Given (first) name, present only if available. This is used for generating meeting titles as
   * given name is preferred over display (full) name (ie: "Jeff : Sundar" is better than "Jeff Dean
   * : Sundar Pichai").
   * @return value or {@code null} for none
   */
  public java.lang.String getGivenName() {
    return givenName;
  }

  /**
   * Given (first) name, present only if available. This is used for generating meeting titles as
   * given name is preferred over display (full) name (ie: "Jeff : Sundar" is better than "Jeff Dean
   * : Sundar Pichai").
   * @param givenName givenName or {@code null} for none
   */
  public AssistantApiCoreTypesCalendarEventAttendee setGivenName(java.lang.String givenName) {
    this.givenName = givenName;
    return this;
  }

  /**
   * Profile ID of the principal, for +Events. For regular events, this field is not populated,
   * instead "email" is used.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Profile ID of the principal, for +Events. For regular events, this field is not populated,
   * instead "email" is used.
   * @param id id or {@code null} for none
   */
  public AssistantApiCoreTypesCalendarEventAttendee setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Is this the organizer?
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOrganizer() {
    return organizer;
  }

  /**
   * Is this the organizer?
   * @param organizer organizer or {@code null} for none
   */
  public AssistantApiCoreTypesCalendarEventAttendee setOrganizer(java.lang.Boolean organizer) {
    this.organizer = organizer;
    return this;
  }

  /**
   * Attendees response status.
   * @return value or {@code null} for none
   */
  public java.lang.String getResponseStatus() {
    return responseStatus;
  }

  /**
   * Attendees response status.
   * @param responseStatus responseStatus or {@code null} for none
   */
  public AssistantApiCoreTypesCalendarEventAttendee setResponseStatus(java.lang.String responseStatus) {
    this.responseStatus = responseStatus;
    return this;
  }

  /**
   * Is this the owner of this copy of the event?
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSelf() {
    return self;
  }

  /**
   * Is this the owner of this copy of the event?
   * @param self self or {@code null} for none
   */
  public AssistantApiCoreTypesCalendarEventAttendee setSelf(java.lang.Boolean self) {
    this.self = self;
    return this;
  }

  @Override
  public AssistantApiCoreTypesCalendarEventAttendee set(String fieldName, Object value) {
    return (AssistantApiCoreTypesCalendarEventAttendee) super.set(fieldName, value);
  }

  @Override
  public AssistantApiCoreTypesCalendarEventAttendee clone() {
    return (AssistantApiCoreTypesCalendarEventAttendee) super.clone();
  }

}
