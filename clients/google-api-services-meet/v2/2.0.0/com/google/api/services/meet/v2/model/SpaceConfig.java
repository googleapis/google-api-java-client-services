/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.meet.v2.model;

/**
 * The configuration pertaining to a meeting space.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Meet API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SpaceConfig extends com.google.api.client.json.GenericJson {

  /**
   * Access type of the meeting space that determines who can join without knocking. Default: The
   * user's default access settings. Controlled by the user's admin for enterprise users or
   * RESTRICTED.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String accessType;

  /**
   * Configuration pertaining to the auto-generated artifacts that the meeting supports.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ArtifactConfig artifactConfig;

  /**
   * Whether attendance report is enabled for the meeting space.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String attendanceReportGenerationType;

  /**
   * Defines the entry points that can be used to join meetings hosted in this meeting space.
   * Default: EntryPointAccess.ALL
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String entryPointAccess;

  /**
   * The pre-configured moderation mode for the Meeting. Default: Controlled by the user's policies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String moderation;

  /**
   * When moderation.ON, these restrictions go into effect for the meeting. When moderation.OFF,
   * will be reset to default ModerationRestrictions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ModerationRestrictions moderationRestrictions;

  /**
   * Access type of the meeting space that determines who can join without knocking. Default: The
   * user's default access settings. Controlled by the user's admin for enterprise users or
   * RESTRICTED.
   * @return value or {@code null} for none
   */
  public java.lang.String getAccessType() {
    return accessType;
  }

  /**
   * Access type of the meeting space that determines who can join without knocking. Default: The
   * user's default access settings. Controlled by the user's admin for enterprise users or
   * RESTRICTED.
   * @param accessType accessType or {@code null} for none
   */
  public SpaceConfig setAccessType(java.lang.String accessType) {
    this.accessType = accessType;
    return this;
  }

  /**
   * Configuration pertaining to the auto-generated artifacts that the meeting supports.
   * @return value or {@code null} for none
   */
  public ArtifactConfig getArtifactConfig() {
    return artifactConfig;
  }

  /**
   * Configuration pertaining to the auto-generated artifacts that the meeting supports.
   * @param artifactConfig artifactConfig or {@code null} for none
   */
  public SpaceConfig setArtifactConfig(ArtifactConfig artifactConfig) {
    this.artifactConfig = artifactConfig;
    return this;
  }

  /**
   * Whether attendance report is enabled for the meeting space.
   * @return value or {@code null} for none
   */
  public java.lang.String getAttendanceReportGenerationType() {
    return attendanceReportGenerationType;
  }

  /**
   * Whether attendance report is enabled for the meeting space.
   * @param attendanceReportGenerationType attendanceReportGenerationType or {@code null} for none
   */
  public SpaceConfig setAttendanceReportGenerationType(java.lang.String attendanceReportGenerationType) {
    this.attendanceReportGenerationType = attendanceReportGenerationType;
    return this;
  }

  /**
   * Defines the entry points that can be used to join meetings hosted in this meeting space.
   * Default: EntryPointAccess.ALL
   * @return value or {@code null} for none
   */
  public java.lang.String getEntryPointAccess() {
    return entryPointAccess;
  }

  /**
   * Defines the entry points that can be used to join meetings hosted in this meeting space.
   * Default: EntryPointAccess.ALL
   * @param entryPointAccess entryPointAccess or {@code null} for none
   */
  public SpaceConfig setEntryPointAccess(java.lang.String entryPointAccess) {
    this.entryPointAccess = entryPointAccess;
    return this;
  }

  /**
   * The pre-configured moderation mode for the Meeting. Default: Controlled by the user's policies.
   * @return value or {@code null} for none
   */
  public java.lang.String getModeration() {
    return moderation;
  }

  /**
   * The pre-configured moderation mode for the Meeting. Default: Controlled by the user's policies.
   * @param moderation moderation or {@code null} for none
   */
  public SpaceConfig setModeration(java.lang.String moderation) {
    this.moderation = moderation;
    return this;
  }

  /**
   * When moderation.ON, these restrictions go into effect for the meeting. When moderation.OFF,
   * will be reset to default ModerationRestrictions.
   * @return value or {@code null} for none
   */
  public ModerationRestrictions getModerationRestrictions() {
    return moderationRestrictions;
  }

  /**
   * When moderation.ON, these restrictions go into effect for the meeting. When moderation.OFF,
   * will be reset to default ModerationRestrictions.
   * @param moderationRestrictions moderationRestrictions or {@code null} for none
   */
  public SpaceConfig setModerationRestrictions(ModerationRestrictions moderationRestrictions) {
    this.moderationRestrictions = moderationRestrictions;
    return this;
  }

  @Override
  public SpaceConfig set(String fieldName, Object value) {
    return (SpaceConfig) super.set(fieldName, value);
  }

  @Override
  public SpaceConfig clone() {
    return (SpaceConfig) super.clone();
  }

}
