/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.language.v1beta2.model;

/**
 * The data statistics of a series of values that share the same DataType.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Natural Language API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class XPSDataStats extends com.google.api.client.json.GenericJson {

  /**
   * The statistics for ARRAY DataType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private XPSArrayStats arrayStats;

  /**
   * The statistics for CATEGORY DataType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private XPSCategoryStats categoryStats;

  /**
   * The number of distinct values.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long distinctValueCount;

  /**
   * The statistics for FLOAT64 DataType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private XPSFloat64Stats float64Stats;

  /**
   * The number of values that are null.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long nullValueCount;

  /**
   * The statistics for STRING DataType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private XPSStringStats stringStats;

  /**
   * The statistics for STRUCT DataType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private XPSStructStats structStats;

  /**
   * The statistics for TIMESTAMP DataType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private XPSTimestampStats timestampStats;

  /**
   * The number of values that are valid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long validValueCount;

  /**
   * The statistics for ARRAY DataType.
   * @return value or {@code null} for none
   */
  public XPSArrayStats getArrayStats() {
    return arrayStats;
  }

  /**
   * The statistics for ARRAY DataType.
   * @param arrayStats arrayStats or {@code null} for none
   */
  public XPSDataStats setArrayStats(XPSArrayStats arrayStats) {
    this.arrayStats = arrayStats;
    return this;
  }

  /**
   * The statistics for CATEGORY DataType.
   * @return value or {@code null} for none
   */
  public XPSCategoryStats getCategoryStats() {
    return categoryStats;
  }

  /**
   * The statistics for CATEGORY DataType.
   * @param categoryStats categoryStats or {@code null} for none
   */
  public XPSDataStats setCategoryStats(XPSCategoryStats categoryStats) {
    this.categoryStats = categoryStats;
    return this;
  }

  /**
   * The number of distinct values.
   * @return value or {@code null} for none
   */
  public java.lang.Long getDistinctValueCount() {
    return distinctValueCount;
  }

  /**
   * The number of distinct values.
   * @param distinctValueCount distinctValueCount or {@code null} for none
   */
  public XPSDataStats setDistinctValueCount(java.lang.Long distinctValueCount) {
    this.distinctValueCount = distinctValueCount;
    return this;
  }

  /**
   * The statistics for FLOAT64 DataType.
   * @return value or {@code null} for none
   */
  public XPSFloat64Stats getFloat64Stats() {
    return float64Stats;
  }

  /**
   * The statistics for FLOAT64 DataType.
   * @param float64Stats float64Stats or {@code null} for none
   */
  public XPSDataStats setFloat64Stats(XPSFloat64Stats float64Stats) {
    this.float64Stats = float64Stats;
    return this;
  }

  /**
   * The number of values that are null.
   * @return value or {@code null} for none
   */
  public java.lang.Long getNullValueCount() {
    return nullValueCount;
  }

  /**
   * The number of values that are null.
   * @param nullValueCount nullValueCount or {@code null} for none
   */
  public XPSDataStats setNullValueCount(java.lang.Long nullValueCount) {
    this.nullValueCount = nullValueCount;
    return this;
  }

  /**
   * The statistics for STRING DataType.
   * @return value or {@code null} for none
   */
  public XPSStringStats getStringStats() {
    return stringStats;
  }

  /**
   * The statistics for STRING DataType.
   * @param stringStats stringStats or {@code null} for none
   */
  public XPSDataStats setStringStats(XPSStringStats stringStats) {
    this.stringStats = stringStats;
    return this;
  }

  /**
   * The statistics for STRUCT DataType.
   * @return value or {@code null} for none
   */
  public XPSStructStats getStructStats() {
    return structStats;
  }

  /**
   * The statistics for STRUCT DataType.
   * @param structStats structStats or {@code null} for none
   */
  public XPSDataStats setStructStats(XPSStructStats structStats) {
    this.structStats = structStats;
    return this;
  }

  /**
   * The statistics for TIMESTAMP DataType.
   * @return value or {@code null} for none
   */
  public XPSTimestampStats getTimestampStats() {
    return timestampStats;
  }

  /**
   * The statistics for TIMESTAMP DataType.
   * @param timestampStats timestampStats or {@code null} for none
   */
  public XPSDataStats setTimestampStats(XPSTimestampStats timestampStats) {
    this.timestampStats = timestampStats;
    return this;
  }

  /**
   * The number of values that are valid.
   * @return value or {@code null} for none
   */
  public java.lang.Long getValidValueCount() {
    return validValueCount;
  }

  /**
   * The number of values that are valid.
   * @param validValueCount validValueCount or {@code null} for none
   */
  public XPSDataStats setValidValueCount(java.lang.Long validValueCount) {
    this.validValueCount = validValueCount;
    return this;
  }

  @Override
  public XPSDataStats set(String fieldName, Object value) {
    return (XPSDataStats) super.set(fieldName, value);
  }

  @Override
  public XPSDataStats clone() {
    return (XPSDataStats) super.clone();
  }

}
