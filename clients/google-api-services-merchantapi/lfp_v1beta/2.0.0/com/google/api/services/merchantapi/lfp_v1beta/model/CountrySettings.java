/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.merchantapi.lfp_v1beta.model;

/**
 * Country-specific settings for the merchant.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Merchant API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CountrySettings extends com.google.api.client.json.GenericJson {

  /**
   * True if this merchant has enabled free local listings in MC.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean freeLocalListingsEnabled;

  /**
   * Output only. The verification state of this merchant's instock serving feature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String instockServingVerificationState;

  /**
   * Output only. The verification state of this merchant's inventory check.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String inventoryVerificationState;

  /**
   * True if this merchant has enabled local inventory ads in MC.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean localInventoryAdsEnabled;

  /**
   * Output only. The verification state of this merchant's pickup serving feature.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pickupServingVerificationState;

  /**
   * Output only. The product page type selected by this merchant.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String productPageType;

  /**
   * Required. The [CLDR territory code](https://github.com/unicode-
   * org/cldr/blob/latest/common/main/en.xml) for the country for which these settings are defined.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String regionCode;

  /**
   * True if this merchant has enabled free local listings in MC.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFreeLocalListingsEnabled() {
    return freeLocalListingsEnabled;
  }

  /**
   * True if this merchant has enabled free local listings in MC.
   * @param freeLocalListingsEnabled freeLocalListingsEnabled or {@code null} for none
   */
  public CountrySettings setFreeLocalListingsEnabled(java.lang.Boolean freeLocalListingsEnabled) {
    this.freeLocalListingsEnabled = freeLocalListingsEnabled;
    return this;
  }

  /**
   * Output only. The verification state of this merchant's instock serving feature.
   * @return value or {@code null} for none
   */
  public java.lang.String getInstockServingVerificationState() {
    return instockServingVerificationState;
  }

  /**
   * Output only. The verification state of this merchant's instock serving feature.
   * @param instockServingVerificationState instockServingVerificationState or {@code null} for none
   */
  public CountrySettings setInstockServingVerificationState(java.lang.String instockServingVerificationState) {
    this.instockServingVerificationState = instockServingVerificationState;
    return this;
  }

  /**
   * Output only. The verification state of this merchant's inventory check.
   * @return value or {@code null} for none
   */
  public java.lang.String getInventoryVerificationState() {
    return inventoryVerificationState;
  }

  /**
   * Output only. The verification state of this merchant's inventory check.
   * @param inventoryVerificationState inventoryVerificationState or {@code null} for none
   */
  public CountrySettings setInventoryVerificationState(java.lang.String inventoryVerificationState) {
    this.inventoryVerificationState = inventoryVerificationState;
    return this;
  }

  /**
   * True if this merchant has enabled local inventory ads in MC.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLocalInventoryAdsEnabled() {
    return localInventoryAdsEnabled;
  }

  /**
   * True if this merchant has enabled local inventory ads in MC.
   * @param localInventoryAdsEnabled localInventoryAdsEnabled or {@code null} for none
   */
  public CountrySettings setLocalInventoryAdsEnabled(java.lang.Boolean localInventoryAdsEnabled) {
    this.localInventoryAdsEnabled = localInventoryAdsEnabled;
    return this;
  }

  /**
   * Output only. The verification state of this merchant's pickup serving feature.
   * @return value or {@code null} for none
   */
  public java.lang.String getPickupServingVerificationState() {
    return pickupServingVerificationState;
  }

  /**
   * Output only. The verification state of this merchant's pickup serving feature.
   * @param pickupServingVerificationState pickupServingVerificationState or {@code null} for none
   */
  public CountrySettings setPickupServingVerificationState(java.lang.String pickupServingVerificationState) {
    this.pickupServingVerificationState = pickupServingVerificationState;
    return this;
  }

  /**
   * Output only. The product page type selected by this merchant.
   * @return value or {@code null} for none
   */
  public java.lang.String getProductPageType() {
    return productPageType;
  }

  /**
   * Output only. The product page type selected by this merchant.
   * @param productPageType productPageType or {@code null} for none
   */
  public CountrySettings setProductPageType(java.lang.String productPageType) {
    this.productPageType = productPageType;
    return this;
  }

  /**
   * Required. The [CLDR territory code](https://github.com/unicode-
   * org/cldr/blob/latest/common/main/en.xml) for the country for which these settings are defined.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegionCode() {
    return regionCode;
  }

  /**
   * Required. The [CLDR territory code](https://github.com/unicode-
   * org/cldr/blob/latest/common/main/en.xml) for the country for which these settings are defined.
   * @param regionCode regionCode or {@code null} for none
   */
  public CountrySettings setRegionCode(java.lang.String regionCode) {
    this.regionCode = regionCode;
    return this;
  }

  @Override
  public CountrySettings set(String fieldName, Object value) {
    return (CountrySettings) super.set(fieldName, value);
  }

  @Override
  public CountrySettings clone() {
    return (CountrySettings) super.clone();
  }

}
