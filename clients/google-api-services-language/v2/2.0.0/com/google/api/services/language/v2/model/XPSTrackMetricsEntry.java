/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.language.v2.model;

/**
 * Track matching model metrics for a single track match threshold and multiple label match
 * confidence thresholds. Next tag: 6.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Natural Language API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class XPSTrackMetricsEntry extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Metrics for each label-match confidence_threshold from
   * 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<XPSTrackMetricsEntryConfidenceMetricsEntry> confidenceMetricsEntries;

  /**
   * Output only. The intersection-over-union threshold value between bounding boxes across frames
   * used to compute this metric entry.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float iouThreshold;

  /**
   * Output only. The mean bounding box iou over all confidence thresholds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float meanBoundingBoxIou;

  /**
   * Output only. The mean mismatch rate over all confidence thresholds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float meanMismatchRate;

  /**
   * Output only. The mean average precision over all confidence thresholds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float meanTrackingAveragePrecision;

  /**
   * Output only. Metrics for each label-match confidence_threshold from
   * 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them.
   * @return value or {@code null} for none
   */
  public java.util.List<XPSTrackMetricsEntryConfidenceMetricsEntry> getConfidenceMetricsEntries() {
    return confidenceMetricsEntries;
  }

  /**
   * Output only. Metrics for each label-match confidence_threshold from
   * 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99. Precision-recall curve is derived from them.
   * @param confidenceMetricsEntries confidenceMetricsEntries or {@code null} for none
   */
  public XPSTrackMetricsEntry setConfidenceMetricsEntries(java.util.List<XPSTrackMetricsEntryConfidenceMetricsEntry> confidenceMetricsEntries) {
    this.confidenceMetricsEntries = confidenceMetricsEntries;
    return this;
  }

  /**
   * Output only. The intersection-over-union threshold value between bounding boxes across frames
   * used to compute this metric entry.
   * @return value or {@code null} for none
   */
  public java.lang.Float getIouThreshold() {
    return iouThreshold;
  }

  /**
   * Output only. The intersection-over-union threshold value between bounding boxes across frames
   * used to compute this metric entry.
   * @param iouThreshold iouThreshold or {@code null} for none
   */
  public XPSTrackMetricsEntry setIouThreshold(java.lang.Float iouThreshold) {
    this.iouThreshold = iouThreshold;
    return this;
  }

  /**
   * Output only. The mean bounding box iou over all confidence thresholds.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMeanBoundingBoxIou() {
    return meanBoundingBoxIou;
  }

  /**
   * Output only. The mean bounding box iou over all confidence thresholds.
   * @param meanBoundingBoxIou meanBoundingBoxIou or {@code null} for none
   */
  public XPSTrackMetricsEntry setMeanBoundingBoxIou(java.lang.Float meanBoundingBoxIou) {
    this.meanBoundingBoxIou = meanBoundingBoxIou;
    return this;
  }

  /**
   * Output only. The mean mismatch rate over all confidence thresholds.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMeanMismatchRate() {
    return meanMismatchRate;
  }

  /**
   * Output only. The mean mismatch rate over all confidence thresholds.
   * @param meanMismatchRate meanMismatchRate or {@code null} for none
   */
  public XPSTrackMetricsEntry setMeanMismatchRate(java.lang.Float meanMismatchRate) {
    this.meanMismatchRate = meanMismatchRate;
    return this;
  }

  /**
   * Output only. The mean average precision over all confidence thresholds.
   * @return value or {@code null} for none
   */
  public java.lang.Float getMeanTrackingAveragePrecision() {
    return meanTrackingAveragePrecision;
  }

  /**
   * Output only. The mean average precision over all confidence thresholds.
   * @param meanTrackingAveragePrecision meanTrackingAveragePrecision or {@code null} for none
   */
  public XPSTrackMetricsEntry setMeanTrackingAveragePrecision(java.lang.Float meanTrackingAveragePrecision) {
    this.meanTrackingAveragePrecision = meanTrackingAveragePrecision;
    return this;
  }

  @Override
  public XPSTrackMetricsEntry set(String fieldName, Object value) {
    return (XPSTrackMetricsEntry) super.set(fieldName, value);
  }

  @Override
  public XPSTrackMetricsEntry clone() {
    return (XPSTrackMetricsEntry) super.clone();
  }

}
