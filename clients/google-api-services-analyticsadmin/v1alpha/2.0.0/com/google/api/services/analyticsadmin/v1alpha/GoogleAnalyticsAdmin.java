/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.analyticsadmin.v1alpha;

/**
 * Service definition for GoogleAnalyticsAdmin (v1alpha).
 *
 * <p>
 * Manage properties in Google Analytics. Warning: Creating multiple Customer Applications, Accounts, or Projects to simulate or act as a single Customer Application, Account, or Project (respectively) or to circumvent Service-specific usage limits or quotas is a direct violation of Google Cloud Platform Terms of Service as well as Google APIs Terms of Service. These actions can result in immediate termination of your GCP project(s) without any warning.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="http://code.google.com/apis/analytics/docs/mgmt/home.html" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link GoogleAnalyticsAdminRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class GoogleAnalyticsAdmin extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Google Analytics Admin API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://analyticsadmin.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://analyticsadmin.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public GoogleAnalyticsAdmin(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  GoogleAnalyticsAdmin(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the AccountSummaries collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
   *   {@code GoogleAnalyticsAdmin.AccountSummaries.List request = analyticsadmin.accountSummaries().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public AccountSummaries accountSummaries() {
    return new AccountSummaries();
  }

  /**
   * The "accountSummaries" collection of methods.
   */
  public class AccountSummaries {

    /**
     * Returns summaries of all accounts accessible by the caller.
     *
     * Create a request for the method "accountSummaries.list".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccountSummariesResponse> {

      private static final String REST_PATH = "v1alpha/accountSummaries";

      /**
       * Returns summaries of all accounts accessible by the caller.
       *
       * Create a request for the method "accountSummaries.list".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccountSummariesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The maximum number of AccountSummary resources to return. The service may return fewer than
       * this value, even if there are additional pages. If unspecified, at most 50 resources will
       * be returned. The maximum value is 200; (higher values will be coerced to the maximum)
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of AccountSummary resources to return. The service may return fewer than this
     value, even if there are additional pages. If unspecified, at most 50 resources will be returned.
     The maximum value is 200; (higher values will be coerced to the maximum)
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of AccountSummary resources to return. The service may return fewer than
       * this value, even if there are additional pages. If unspecified, at most 50 resources will
       * be returned. The maximum value is 200; (higher values will be coerced to the maximum)
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListAccountSummaries` call. Provide this to
       * retrieve the subsequent page. When paginating, all other parameters provided to
       * `ListAccountSummaries` must match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListAccountSummaries` call. Provide this to retrieve the
     subsequent page. When paginating, all other parameters provided to `ListAccountSummaries` must
     match the call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListAccountSummaries` call. Provide this to
       * retrieve the subsequent page. When paginating, all other parameters provided to
       * `ListAccountSummaries` must match the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Accounts collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
   *   {@code GoogleAnalyticsAdmin.Accounts.List request = analyticsadmin.accounts().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Accounts accounts() {
    return new Accounts();
  }

  /**
   * The "accounts" collection of methods.
   */
  public class Accounts {

    /**
     * Marks target Account as soft-deleted (ie: "trashed") and returns it. This API does not have a
     * method to restore soft-deleted accounts. However, they can be restored using the Trash Can UI. If
     * the accounts are not restored before the expiration time, the account and all child resources
     * (eg: Properties, GoogleAdsLinks, Streams, AccessBindings) will be permanently purged.
     * https://support.google.com/analytics/answer/6154772 Returns an error if the target is not found.
     *
     * Create a request for the method "accounts.delete".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the Account to soft-delete. Format: accounts/{account} Example: "accounts/100"
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Marks target Account as soft-deleted (ie: "trashed") and returns it. This API does not have a
       * method to restore soft-deleted accounts. However, they can be restored using the Trash Can UI.
       * If the accounts are not restored before the expiration time, the account and all child
       * resources (eg: Properties, GoogleAdsLinks, Streams, AccessBindings) will be permanently purged.
       * https://support.google.com/analytics/answer/6154772 Returns an error if the target is not
       * found.
       *
       * Create a request for the method "accounts.delete".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the Account to soft-delete. Format: accounts/{account} Example: "accounts/100"
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the Account to soft-delete. Format: accounts/{account} Example:
       * "accounts/100"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the Account to soft-delete. Format: accounts/{account} Example:
     "accounts/100"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the Account to soft-delete. Format: accounts/{account} Example:
       * "accounts/100"
       */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Lookup for a single Account.
     *
     * Create a request for the method "accounts.get".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the account to lookup. Format: accounts/{account} Example: "accounts/100"
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Lookup for a single Account.
       *
       * Create a request for the method "accounts.get".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the account to lookup. Format: accounts/{account} Example: "accounts/100"
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the account to lookup. Format: accounts/{account} Example:
       * "accounts/100"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the account to lookup. Format: accounts/{account} Example: "accounts/100"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the account to lookup. Format: accounts/{account} Example:
       * "accounts/100"
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Get data sharing settings on an account. Data sharing settings are singletons.
     *
     * Create a request for the method "accounts.getDataSharingSettings".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link GetDataSharingSettings#execute()} method to invoke the
     * remote operation.
     *
     * @param name Required. The name of the settings to lookup. Format: accounts/{account}/dataSharingSettings
     *        Example: `accounts/1000/dataSharingSettings`
     * @return the request
     */
    public GetDataSharingSettings getDataSharingSettings(java.lang.String name) throws java.io.IOException {
      GetDataSharingSettings result = new GetDataSharingSettings(name);
      initialize(result);
      return result;
    }

    public class GetDataSharingSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataSharingSettings> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+/dataSharingSettings$");

      /**
       * Get data sharing settings on an account. Data sharing settings are singletons.
       *
       * Create a request for the method "accounts.getDataSharingSettings".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link GetDataSharingSettings#execute()} method to invoke the
       * remote operation. <p> {@link GetDataSharingSettings#initialize(com.google.api.client.googleapis
       * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param name Required. The name of the settings to lookup. Format: accounts/{account}/dataSharingSettings
     *        Example: `accounts/1000/dataSharingSettings`
       * @since 1.13
       */
      protected GetDataSharingSettings(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataSharingSettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+/dataSharingSettings$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetDataSharingSettings set$Xgafv(java.lang.String $Xgafv) {
        return (GetDataSharingSettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetDataSharingSettings setAccessToken(java.lang.String accessToken) {
        return (GetDataSharingSettings) super.setAccessToken(accessToken);
      }

      @Override
      public GetDataSharingSettings setAlt(java.lang.String alt) {
        return (GetDataSharingSettings) super.setAlt(alt);
      }

      @Override
      public GetDataSharingSettings setCallback(java.lang.String callback) {
        return (GetDataSharingSettings) super.setCallback(callback);
      }

      @Override
      public GetDataSharingSettings setFields(java.lang.String fields) {
        return (GetDataSharingSettings) super.setFields(fields);
      }

      @Override
      public GetDataSharingSettings setKey(java.lang.String key) {
        return (GetDataSharingSettings) super.setKey(key);
      }

      @Override
      public GetDataSharingSettings setOauthToken(java.lang.String oauthToken) {
        return (GetDataSharingSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public GetDataSharingSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetDataSharingSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetDataSharingSettings setQuotaUser(java.lang.String quotaUser) {
        return (GetDataSharingSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetDataSharingSettings setUploadType(java.lang.String uploadType) {
        return (GetDataSharingSettings) super.setUploadType(uploadType);
      }

      @Override
      public GetDataSharingSettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetDataSharingSettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the settings to lookup. Format:
       * accounts/{account}/dataSharingSettings Example: `accounts/1000/dataSharingSettings`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the settings to lookup. Format: accounts/{account}/dataSharingSettings
     Example: `accounts/1000/dataSharingSettings`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the settings to lookup. Format:
       * accounts/{account}/dataSharingSettings Example: `accounts/1000/dataSharingSettings`
       */
      public GetDataSharingSettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+/dataSharingSettings$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetDataSharingSettings set(String parameterName, Object value) {
        return (GetDataSharingSettings) super.set(parameterName, value);
      }
    }
    /**
     * Returns all accounts accessible by the caller. Note that these accounts might not currently have
     * GA properties. Soft-deleted (ie: "trashed") accounts are excluded by default. Returns an empty
     * list if no relevant accounts are found.
     *
     * Create a request for the method "accounts.list".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccountsResponse> {

      private static final String REST_PATH = "v1alpha/accounts";

      /**
       * Returns all accounts accessible by the caller. Note that these accounts might not currently
       * have GA properties. Soft-deleted (ie: "trashed") accounts are excluded by default. Returns an
       * empty list if no relevant accounts are found.
       *
       * Create a request for the method "accounts.list".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccountsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The maximum number of resources to return. The service may return fewer than this value,
       * even if there are additional pages. If unspecified, at most 50 resources will be returned.
       * The maximum value is 200; (higher values will be coerced to the maximum)
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of resources to return. The service may return fewer than this value, even if
     there are additional pages. If unspecified, at most 50 resources will be returned. The maximum
     value is 200; (higher values will be coerced to the maximum)
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of resources to return. The service may return fewer than this value,
       * even if there are additional pages. If unspecified, at most 50 resources will be returned.
       * The maximum value is 200; (higher values will be coerced to the maximum)
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListAccounts` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListAccounts` must
       * match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListAccounts` call. Provide this to retrieve the subsequent
     page. When paginating, all other parameters provided to `ListAccounts` must match the call that
     provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListAccounts` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListAccounts` must
       * match the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * Whether to include soft-deleted (ie: "trashed") Accounts in the results. Accounts can be
       * inspected to determine whether they are deleted or not.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean showDeleted;

      /** Whether to include soft-deleted (ie: "trashed") Accounts in the results. Accounts can be inspected
     to determine whether they are deleted or not.
       */
      public java.lang.Boolean getShowDeleted() {
        return showDeleted;
      }

      /**
       * Whether to include soft-deleted (ie: "trashed") Accounts in the results. Accounts can be
       * inspected to determine whether they are deleted or not.
       */
      public List setShowDeleted(java.lang.Boolean showDeleted) {
        this.showDeleted = showDeleted;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates an account.
     *
     * Create a request for the method "accounts.patch".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name Output only. Resource name of this account. Format: accounts/{account} Example: "accounts/100"
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Updates an account.
       *
       * Create a request for the method "accounts.patch".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Output only. Resource name of this account. Format: accounts/{account} Example: "accounts/100"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount content) {
        super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccount.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Output only. Resource name of this account. Format: accounts/{account} Example:
       * "accounts/100"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. Resource name of this account. Format: accounts/{account} Example: "accounts/100"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Output only. Resource name of this account. Format: accounts/{account} Example:
       * "accounts/100"
       */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Required. The list of fields to be updated. Field names must be in snake case (for example,
       * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
       * one path with the string "*" to match all fields.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Required. The list of fields to be updated. Field names must be in snake case (for example,
     "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
     with the string "*" to match all fields.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Required. The list of fields to be updated. Field names must be in snake case (for example,
       * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
       * one path with the string "*" to match all fields.
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Requests a ticket for creating an account.
     *
     * Create a request for the method "accounts.provisionAccountTicket".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link ProvisionAccountTicket#execute()} method to invoke the
     * remote operation.
     *
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketRequest}
     * @return the request
     */
    public ProvisionAccountTicket provisionAccountTicket(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketRequest content) throws java.io.IOException {
      ProvisionAccountTicket result = new ProvisionAccountTicket(content);
      initialize(result);
      return result;
    }

    public class ProvisionAccountTicket extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketResponse> {

      private static final String REST_PATH = "v1alpha/accounts:provisionAccountTicket";

      /**
       * Requests a ticket for creating an account.
       *
       * Create a request for the method "accounts.provisionAccountTicket".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link ProvisionAccountTicket#execute()} method to invoke the
       * remote operation. <p> {@link ProvisionAccountTicket#initialize(com.google.api.client.googleapis
       * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketRequest}
       * @since 1.13
       */
      protected ProvisionAccountTicket(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionAccountTicketResponse.class);
      }

      @Override
      public ProvisionAccountTicket set$Xgafv(java.lang.String $Xgafv) {
        return (ProvisionAccountTicket) super.set$Xgafv($Xgafv);
      }

      @Override
      public ProvisionAccountTicket setAccessToken(java.lang.String accessToken) {
        return (ProvisionAccountTicket) super.setAccessToken(accessToken);
      }

      @Override
      public ProvisionAccountTicket setAlt(java.lang.String alt) {
        return (ProvisionAccountTicket) super.setAlt(alt);
      }

      @Override
      public ProvisionAccountTicket setCallback(java.lang.String callback) {
        return (ProvisionAccountTicket) super.setCallback(callback);
      }

      @Override
      public ProvisionAccountTicket setFields(java.lang.String fields) {
        return (ProvisionAccountTicket) super.setFields(fields);
      }

      @Override
      public ProvisionAccountTicket setKey(java.lang.String key) {
        return (ProvisionAccountTicket) super.setKey(key);
      }

      @Override
      public ProvisionAccountTicket setOauthToken(java.lang.String oauthToken) {
        return (ProvisionAccountTicket) super.setOauthToken(oauthToken);
      }

      @Override
      public ProvisionAccountTicket setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ProvisionAccountTicket) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ProvisionAccountTicket setQuotaUser(java.lang.String quotaUser) {
        return (ProvisionAccountTicket) super.setQuotaUser(quotaUser);
      }

      @Override
      public ProvisionAccountTicket setUploadType(java.lang.String uploadType) {
        return (ProvisionAccountTicket) super.setUploadType(uploadType);
      }

      @Override
      public ProvisionAccountTicket setUploadProtocol(java.lang.String uploadProtocol) {
        return (ProvisionAccountTicket) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public ProvisionAccountTicket set(String parameterName, Object value) {
        return (ProvisionAccountTicket) super.set(parameterName, value);
      }
    }
    /**
     * Returns a customized report of data access records. The report provides records of each time a
     * user reads Google Analytics reporting data. Access records are retained for up to 2 years. Data
     * Access Reports can be requested for a property. Reports may be requested for any property, but
     * dimensions that aren't related to quota can only be requested on Google Analytics 360 properties.
     * This method is only available to Administrators. These data access records include GA UI
     * Reporting, GA UI Explorations, GA Data API, and other products like Firebase & Admob that can
     * retrieve data from Google Analytics through a linkage. These records don't include property
     * configuration changes like adding a stream or changing a property's time zone. For configuration
     * change history, see [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides
     * /config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents). To give your feedback on this
     * API, complete the [Google Analytics Access Reports feedback](https://docs.google.com/forms/d/e/1F
     * AIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform) form.
     *
     * Create a request for the method "accounts.runAccessReport".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link RunAccessReport#execute()} method to invoke the remote
     * operation.
     *
     * @param entity The Data Access Report supports requesting at the property level or account level. If requested at
     *        the account level, Data Access Reports include all access for all properties under that
     *        account. To request at the property level, entity should be for example 'properties/123'
     *        if "123" is your Google Analytics property ID. To request at the account level, entity
     *        should be for example 'accounts/1234' if "1234" is your Google Analytics Account ID.
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportRequest}
     * @return the request
     */
    public RunAccessReport runAccessReport(java.lang.String entity, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportRequest content) throws java.io.IOException {
      RunAccessReport result = new RunAccessReport(entity, content);
      initialize(result);
      return result;
    }

    public class RunAccessReport extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportResponse> {

      private static final String REST_PATH = "v1alpha/{+entity}:runAccessReport";

      private final java.util.regex.Pattern ENTITY_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Returns a customized report of data access records. The report provides records of each time a
       * user reads Google Analytics reporting data. Access records are retained for up to 2 years. Data
       * Access Reports can be requested for a property. Reports may be requested for any property, but
       * dimensions that aren't related to quota can only be requested on Google Analytics 360
       * properties. This method is only available to Administrators. These data access records include
       * GA UI Reporting, GA UI Explorations, GA Data API, and other products like Firebase & Admob that
       * can retrieve data from Google Analytics through a linkage. These records don't include property
       * configuration changes like adding a stream or changing a property's time zone. For
       * configuration change history, see [searchChangeHistoryEvents](https://developers.google.com/ana
       * lytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents). To give your
       * feedback on this API, complete the [Google Analytics Access Reports feedback](https://docs.goog
       * le.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform) form.
       *
       * Create a request for the method "accounts.runAccessReport".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link RunAccessReport#execute()} method to invoke the remote
       * operation. <p> {@link RunAccessReport#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param entity The Data Access Report supports requesting at the property level or account level. If requested at
     *        the account level, Data Access Reports include all access for all properties under that
     *        account. To request at the property level, entity should be for example 'properties/123'
     *        if "123" is your Google Analytics property ID. To request at the account level, entity
     *        should be for example 'accounts/1234' if "1234" is your Google Analytics Account ID.
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportRequest}
       * @since 1.13
       */
      protected RunAccessReport(java.lang.String entity, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportResponse.class);
        this.entity = com.google.api.client.util.Preconditions.checkNotNull(entity, "Required parameter entity must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ENTITY_PATTERN.matcher(entity).matches(),
              "Parameter entity must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public RunAccessReport set$Xgafv(java.lang.String $Xgafv) {
        return (RunAccessReport) super.set$Xgafv($Xgafv);
      }

      @Override
      public RunAccessReport setAccessToken(java.lang.String accessToken) {
        return (RunAccessReport) super.setAccessToken(accessToken);
      }

      @Override
      public RunAccessReport setAlt(java.lang.String alt) {
        return (RunAccessReport) super.setAlt(alt);
      }

      @Override
      public RunAccessReport setCallback(java.lang.String callback) {
        return (RunAccessReport) super.setCallback(callback);
      }

      @Override
      public RunAccessReport setFields(java.lang.String fields) {
        return (RunAccessReport) super.setFields(fields);
      }

      @Override
      public RunAccessReport setKey(java.lang.String key) {
        return (RunAccessReport) super.setKey(key);
      }

      @Override
      public RunAccessReport setOauthToken(java.lang.String oauthToken) {
        return (RunAccessReport) super.setOauthToken(oauthToken);
      }

      @Override
      public RunAccessReport setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RunAccessReport) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RunAccessReport setQuotaUser(java.lang.String quotaUser) {
        return (RunAccessReport) super.setQuotaUser(quotaUser);
      }

      @Override
      public RunAccessReport setUploadType(java.lang.String uploadType) {
        return (RunAccessReport) super.setUploadType(uploadType);
      }

      @Override
      public RunAccessReport setUploadProtocol(java.lang.String uploadProtocol) {
        return (RunAccessReport) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The Data Access Report supports requesting at the property level or account level. If
       * requested at the account level, Data Access Reports include all access for all properties
       * under that account. To request at the property level, entity should be for example
       * 'properties/123' if "123" is your Google Analytics property ID. To request at the account
       * level, entity should be for example 'accounts/1234' if "1234" is your Google Analytics
       * Account ID.
       */
      @com.google.api.client.util.Key
      private java.lang.String entity;

      /** The Data Access Report supports requesting at the property level or account level. If requested at
     the account level, Data Access Reports include all access for all properties under that account. To
     request at the property level, entity should be for example 'properties/123' if "123" is your
     Google Analytics property ID. To request at the account level, entity should be for example
     'accounts/1234' if "1234" is your Google Analytics Account ID.
       */
      public java.lang.String getEntity() {
        return entity;
      }

      /**
       * The Data Access Report supports requesting at the property level or account level. If
       * requested at the account level, Data Access Reports include all access for all properties
       * under that account. To request at the property level, entity should be for example
       * 'properties/123' if "123" is your Google Analytics property ID. To request at the account
       * level, entity should be for example 'accounts/1234' if "1234" is your Google Analytics
       * Account ID.
       */
      public RunAccessReport setEntity(java.lang.String entity) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ENTITY_PATTERN.matcher(entity).matches(),
              "Parameter entity must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.entity = entity;
        return this;
      }

      @Override
      public RunAccessReport set(String parameterName, Object value) {
        return (RunAccessReport) super.set(parameterName, value);
      }
    }
    /**
     * Searches through all changes to an account or its children given the specified set of filters.
     * Only returns the subset of changes supported by the API. The UI may return additional changes.
     *
     * Create a request for the method "accounts.searchChangeHistoryEvents".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link SearchChangeHistoryEvents#execute()} method to invoke the
     * remote operation.
     *
     * @param account Required. The account resource for which to return change history resources. Format:
     *        accounts/{account} Example: `accounts/100`
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsRequest}
     * @return the request
     */
    public SearchChangeHistoryEvents searchChangeHistoryEvents(java.lang.String account, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsRequest content) throws java.io.IOException {
      SearchChangeHistoryEvents result = new SearchChangeHistoryEvents(account, content);
      initialize(result);
      return result;
    }

    public class SearchChangeHistoryEvents extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsResponse> {

      private static final String REST_PATH = "v1alpha/{+account}:searchChangeHistoryEvents";

      private final java.util.regex.Pattern ACCOUNT_PATTERN =
          java.util.regex.Pattern.compile("^accounts/[^/]+$");

      /**
       * Searches through all changes to an account or its children given the specified set of filters.
       * Only returns the subset of changes supported by the API. The UI may return additional changes.
       *
       * Create a request for the method "accounts.searchChangeHistoryEvents".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link SearchChangeHistoryEvents#execute()} method to invoke the
       * remote operation. <p> {@link SearchChangeHistoryEvents#initialize(com.google.api.client.googlea
       * pis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param account Required. The account resource for which to return change history resources. Format:
     *        accounts/{account} Example: `accounts/100`
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsRequest}
       * @since 1.13
       */
      protected SearchChangeHistoryEvents(java.lang.String account, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchChangeHistoryEventsResponse.class);
        this.account = com.google.api.client.util.Preconditions.checkNotNull(account, "Required parameter account must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ACCOUNT_PATTERN.matcher(account).matches(),
              "Parameter account must conform to the pattern " +
              "^accounts/[^/]+$");
        }
      }

      @Override
      public SearchChangeHistoryEvents set$Xgafv(java.lang.String $Xgafv) {
        return (SearchChangeHistoryEvents) super.set$Xgafv($Xgafv);
      }

      @Override
      public SearchChangeHistoryEvents setAccessToken(java.lang.String accessToken) {
        return (SearchChangeHistoryEvents) super.setAccessToken(accessToken);
      }

      @Override
      public SearchChangeHistoryEvents setAlt(java.lang.String alt) {
        return (SearchChangeHistoryEvents) super.setAlt(alt);
      }

      @Override
      public SearchChangeHistoryEvents setCallback(java.lang.String callback) {
        return (SearchChangeHistoryEvents) super.setCallback(callback);
      }

      @Override
      public SearchChangeHistoryEvents setFields(java.lang.String fields) {
        return (SearchChangeHistoryEvents) super.setFields(fields);
      }

      @Override
      public SearchChangeHistoryEvents setKey(java.lang.String key) {
        return (SearchChangeHistoryEvents) super.setKey(key);
      }

      @Override
      public SearchChangeHistoryEvents setOauthToken(java.lang.String oauthToken) {
        return (SearchChangeHistoryEvents) super.setOauthToken(oauthToken);
      }

      @Override
      public SearchChangeHistoryEvents setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SearchChangeHistoryEvents) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SearchChangeHistoryEvents setQuotaUser(java.lang.String quotaUser) {
        return (SearchChangeHistoryEvents) super.setQuotaUser(quotaUser);
      }

      @Override
      public SearchChangeHistoryEvents setUploadType(java.lang.String uploadType) {
        return (SearchChangeHistoryEvents) super.setUploadType(uploadType);
      }

      @Override
      public SearchChangeHistoryEvents setUploadProtocol(java.lang.String uploadProtocol) {
        return (SearchChangeHistoryEvents) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The account resource for which to return change history resources. Format:
       * accounts/{account} Example: `accounts/100`
       */
      @com.google.api.client.util.Key
      private java.lang.String account;

      /** Required. The account resource for which to return change history resources. Format:
     accounts/{account} Example: `accounts/100`
       */
      public java.lang.String getAccount() {
        return account;
      }

      /**
       * Required. The account resource for which to return change history resources. Format:
       * accounts/{account} Example: `accounts/100`
       */
      public SearchChangeHistoryEvents setAccount(java.lang.String account) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ACCOUNT_PATTERN.matcher(account).matches(),
              "Parameter account must conform to the pattern " +
              "^accounts/[^/]+$");
        }
        this.account = account;
        return this;
      }

      @Override
      public SearchChangeHistoryEvents set(String parameterName, Object value) {
        return (SearchChangeHistoryEvents) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the AccessBindings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.AccessBindings.List request = analyticsadmin.accessBindings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AccessBindings accessBindings() {
      return new AccessBindings();
    }

    /**
     * The "accessBindings" collection of methods.
     */
    public class AccessBindings {

      /**
       * Creates information about multiple access bindings to an account or property. This method is
       * transactional. If any AccessBinding cannot be created, none of the AccessBindings will be
       * created.
       *
       * Create a request for the method "accessBindings.batchCreate".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that owns the access bindings. The parent field in the
       *        CreateAccessBindingRequest messages must either be empty or match this field. Formats: -
       *        accounts/{account} - properties/{property}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest}
       * @return the request
       */
      public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest content) throws java.io.IOException {
        BatchCreate result = new BatchCreate(parent, content);
        initialize(result);
        return result;
      }

      public class BatchCreate extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings:batchCreate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Creates information about multiple access bindings to an account or property. This method is
         * transactional. If any AccessBinding cannot be created, none of the AccessBindings will be
         * created.
         *
         * Create a request for the method "accessBindings.batchCreate".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that owns the access bindings. The parent field in the
       *        CreateAccessBindingRequest messages must either be empty or match this field. Formats: -
       *        accounts/{account} - properties/{property}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest}
         * @since 1.13
         */
        protected BatchCreate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchCreate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchCreate setAccessToken(java.lang.String accessToken) {
          return (BatchCreate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchCreate setAlt(java.lang.String alt) {
          return (BatchCreate) super.setAlt(alt);
        }

        @Override
        public BatchCreate setCallback(java.lang.String callback) {
          return (BatchCreate) super.setCallback(callback);
        }

        @Override
        public BatchCreate setFields(java.lang.String fields) {
          return (BatchCreate) super.setFields(fields);
        }

        @Override
        public BatchCreate setKey(java.lang.String key) {
          return (BatchCreate) super.setKey(key);
        }

        @Override
        public BatchCreate setOauthToken(java.lang.String oauthToken) {
          return (BatchCreate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchCreate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchCreate setQuotaUser(java.lang.String quotaUser) {
          return (BatchCreate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchCreate setUploadType(java.lang.String uploadType) {
          return (BatchCreate) super.setUploadType(uploadType);
        }

        @Override
        public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchCreate) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that owns the access bindings. The parent field in the
         * CreateAccessBindingRequest messages must either be empty or match this field. Formats: -
         * accounts/{account} - properties/{property}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that owns the access bindings. The parent field in the
       CreateAccessBindingRequest messages must either be empty or match this field. Formats: -
       accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that owns the access bindings. The parent field in the
         * CreateAccessBindingRequest messages must either be empty or match this field. Formats: -
         * accounts/{account} - properties/{property}
         */
        public BatchCreate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchCreate set(String parameterName, Object value) {
          return (BatchCreate) super.set(parameterName, value);
        }
      }
      /**
       * Deletes information about multiple users' links to an account or property.
       *
       * Create a request for the method "accessBindings.batchDelete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that owns the access bindings. The parent of all provided values
       *        for the 'names' field in DeleteAccessBindingRequest messages must match this field.
       *        Formats: - accounts/{account} - properties/{property}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest}
       * @return the request
       */
      public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest content) throws java.io.IOException {
        BatchDelete result = new BatchDelete(parent, content);
        initialize(result);
        return result;
      }

      public class BatchDelete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings:batchDelete";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Deletes information about multiple users' links to an account or property.
         *
         * Create a request for the method "accessBindings.batchDelete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that owns the access bindings. The parent of all provided values
       *        for the 'names' field in DeleteAccessBindingRequest messages must match this field.
       *        Formats: - accounts/{account} - properties/{property}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest}
         * @since 1.13
         */
        protected BatchDelete(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
          return (BatchDelete) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchDelete setAccessToken(java.lang.String accessToken) {
          return (BatchDelete) super.setAccessToken(accessToken);
        }

        @Override
        public BatchDelete setAlt(java.lang.String alt) {
          return (BatchDelete) super.setAlt(alt);
        }

        @Override
        public BatchDelete setCallback(java.lang.String callback) {
          return (BatchDelete) super.setCallback(callback);
        }

        @Override
        public BatchDelete setFields(java.lang.String fields) {
          return (BatchDelete) super.setFields(fields);
        }

        @Override
        public BatchDelete setKey(java.lang.String key) {
          return (BatchDelete) super.setKey(key);
        }

        @Override
        public BatchDelete setOauthToken(java.lang.String oauthToken) {
          return (BatchDelete) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchDelete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchDelete setQuotaUser(java.lang.String quotaUser) {
          return (BatchDelete) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchDelete setUploadType(java.lang.String uploadType) {
          return (BatchDelete) super.setUploadType(uploadType);
        }

        @Override
        public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchDelete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided values for the 'names' field in DeleteAccessBindingRequest messages must match
         * this field. Formats: - accounts/{account} - properties/{property}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that owns the access bindings. The parent of all provided values
       for the 'names' field in DeleteAccessBindingRequest messages must match this field. Formats: -
       accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided values for the 'names' field in DeleteAccessBindingRequest messages must match
         * this field. Formats: - accounts/{account} - properties/{property}
         */
        public BatchDelete setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchDelete set(String parameterName, Object value) {
          return (BatchDelete) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about multiple access bindings to an account or property.
       *
       * Create a request for the method "accessBindings.batchGet".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The account or property that owns the access bindings. The parent of all provided values
       *        for the 'names' field must match this field. Formats: - accounts/{account} -
       *        properties/{property}
       * @return the request
       */
      public BatchGet batchGet(java.lang.String parent) throws java.io.IOException {
        BatchGet result = new BatchGet(parent);
        initialize(result);
        return result;
      }

      public class BatchGet extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchGetAccessBindingsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings:batchGet";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Gets information about multiple access bindings to an account or property.
         *
         * Create a request for the method "accessBindings.batchGet".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
         * <p> {@link
         * BatchGet#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that owns the access bindings. The parent of all provided values
       *        for the 'names' field must match this field. Formats: - accounts/{account} -
       *        properties/{property}
         * @since 1.13
         */
        protected BatchGet(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchGetAccessBindingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public BatchGet set$Xgafv(java.lang.String $Xgafv) {
          return (BatchGet) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchGet setAccessToken(java.lang.String accessToken) {
          return (BatchGet) super.setAccessToken(accessToken);
        }

        @Override
        public BatchGet setAlt(java.lang.String alt) {
          return (BatchGet) super.setAlt(alt);
        }

        @Override
        public BatchGet setCallback(java.lang.String callback) {
          return (BatchGet) super.setCallback(callback);
        }

        @Override
        public BatchGet setFields(java.lang.String fields) {
          return (BatchGet) super.setFields(fields);
        }

        @Override
        public BatchGet setKey(java.lang.String key) {
          return (BatchGet) super.setKey(key);
        }

        @Override
        public BatchGet setOauthToken(java.lang.String oauthToken) {
          return (BatchGet) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchGet setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchGet) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchGet setQuotaUser(java.lang.String quotaUser) {
          return (BatchGet) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchGet setUploadType(java.lang.String uploadType) {
          return (BatchGet) super.setUploadType(uploadType);
        }

        @Override
        public BatchGet setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchGet) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided values for the 'names' field must match this field. Formats: -
         * accounts/{account} - properties/{property}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that owns the access bindings. The parent of all provided values
       for the 'names' field must match this field. Formats: - accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided values for the 'names' field must match this field. Formats: -
         * accounts/{account} - properties/{property}
         */
        public BatchGet setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Required. The names of the access bindings to retrieve. A maximum of 1000 access bindings
         * can be retrieved in a batch. Formats: - accounts/{account}/accessBindings/{accessBinding}
         * - properties/{property}/accessBindings/{accessBinding}
         */
        @com.google.api.client.util.Key
        private java.util.List<java.lang.String> names;

        /** Required. The names of the access bindings to retrieve. A maximum of 1000 access bindings can be
       retrieved in a batch. Formats: - accounts/{account}/accessBindings/{accessBinding} -
       properties/{property}/accessBindings/{accessBinding}
         */
        public java.util.List<java.lang.String> getNames() {
          return names;
        }

        /**
         * Required. The names of the access bindings to retrieve. A maximum of 1000 access bindings
         * can be retrieved in a batch. Formats: - accounts/{account}/accessBindings/{accessBinding}
         * - properties/{property}/accessBindings/{accessBinding}
         */
        public BatchGet setNames(java.util.List<java.lang.String> names) {
          this.names = names;
          return this;
        }

        @Override
        public BatchGet set(String parameterName, Object value) {
          return (BatchGet) super.set(parameterName, value);
        }
      }
      /**
       * Updates information about multiple access bindings to an account or property.
       *
       * Create a request for the method "accessBindings.batchUpdate".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that owns the access bindings. The parent of all provided
       *        AccessBinding in UpdateAccessBindingRequest messages must match this field. Formats: -
       *        accounts/{account} - properties/{property}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest}
       * @return the request
       */
      public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest content) throws java.io.IOException {
        BatchUpdate result = new BatchUpdate(parent, content);
        initialize(result);
        return result;
      }

      public class BatchUpdate extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings:batchUpdate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Updates information about multiple access bindings to an account or property.
         *
         * Create a request for the method "accessBindings.batchUpdate".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that owns the access bindings. The parent of all provided
       *        AccessBinding in UpdateAccessBindingRequest messages must match this field. Formats: -
       *        accounts/{account} - properties/{property}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest}
         * @since 1.13
         */
        protected BatchUpdate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchUpdate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchUpdate setAccessToken(java.lang.String accessToken) {
          return (BatchUpdate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchUpdate setAlt(java.lang.String alt) {
          return (BatchUpdate) super.setAlt(alt);
        }

        @Override
        public BatchUpdate setCallback(java.lang.String callback) {
          return (BatchUpdate) super.setCallback(callback);
        }

        @Override
        public BatchUpdate setFields(java.lang.String fields) {
          return (BatchUpdate) super.setFields(fields);
        }

        @Override
        public BatchUpdate setKey(java.lang.String key) {
          return (BatchUpdate) super.setKey(key);
        }

        @Override
        public BatchUpdate setOauthToken(java.lang.String oauthToken) {
          return (BatchUpdate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchUpdate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
          return (BatchUpdate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchUpdate setUploadType(java.lang.String uploadType) {
          return (BatchUpdate) super.setUploadType(uploadType);
        }

        @Override
        public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided AccessBinding in UpdateAccessBindingRequest messages must match this field.
         * Formats: - accounts/{account} - properties/{property}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that owns the access bindings. The parent of all provided
       AccessBinding in UpdateAccessBindingRequest messages must match this field. Formats: -
       accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided AccessBinding in UpdateAccessBindingRequest messages must match this field.
         * Formats: - accounts/{account} - properties/{property}
         */
        public BatchUpdate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchUpdate set(String parameterName, Object value) {
          return (BatchUpdate) super.set(parameterName, value);
        }
      }
      /**
       * Creates an access binding on an account or property.
       *
       * Create a request for the method "accessBindings.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Formats: - accounts/{account} - properties/{property}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Creates an access binding on an account or property.
         *
         * Create a request for the method "accessBindings.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Formats: - accounts/{account} - properties/{property}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Formats: - accounts/{account} - properties/{property} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Formats: - accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Formats: - accounts/{account} - properties/{property} */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an access binding on an account or property.
       *
       * Create a request for the method "accessBindings.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Formats: - accounts/{account}/accessBindings/{accessBinding} -
       *        properties/{property}/accessBindings/{accessBinding}
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/accessBindings/[^/]+$");

        /**
         * Deletes an access binding on an account or property.
         *
         * Create a request for the method "accessBindings.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Formats: - accounts/{account}/accessBindings/{accessBinding} -
       *        properties/{property}/accessBindings/{accessBinding}
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/accessBindings/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Formats: - accounts/{account}/accessBindings/{accessBinding} -
         * properties/{property}/accessBindings/{accessBinding}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Formats: - accounts/{account}/accessBindings/{accessBinding} -
       properties/{property}/accessBindings/{accessBinding}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Formats: - accounts/{account}/accessBindings/{accessBinding} -
         * properties/{property}/accessBindings/{accessBinding}
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/accessBindings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about an access binding.
       *
       * Create a request for the method "accessBindings.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the access binding to retrieve. Formats: -
       *        accounts/{account}/accessBindings/{accessBinding} -
       *        properties/{property}/accessBindings/{accessBinding}
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/accessBindings/[^/]+$");

        /**
         * Gets information about an access binding.
         *
         * Create a request for the method "accessBindings.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the access binding to retrieve. Formats: -
       *        accounts/{account}/accessBindings/{accessBinding} -
       *        properties/{property}/accessBindings/{accessBinding}
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/accessBindings/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the access binding to retrieve. Formats: -
         * accounts/{account}/accessBindings/{accessBinding} -
         * properties/{property}/accessBindings/{accessBinding}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the access binding to retrieve. Formats: -
       accounts/{account}/accessBindings/{accessBinding} -
       properties/{property}/accessBindings/{accessBinding}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the access binding to retrieve. Formats: -
         * accounts/{account}/accessBindings/{accessBinding} -
         * properties/{property}/accessBindings/{accessBinding}
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/accessBindings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all access bindings on an account or property.
       *
       * Create a request for the method "accessBindings.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Formats: - accounts/{account} - properties/{property}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccessBindingsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+$");

        /**
         * Lists all access bindings on an account or property.
         *
         * Create a request for the method "accessBindings.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Formats: - accounts/{account} - properties/{property}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccessBindingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Formats: - accounts/{account} - properties/{property} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Formats: - accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Formats: - accounts/{account} - properties/{property} */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^accounts/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of access bindings to return. The service may return fewer than this
         * value. If unspecified, at most 200 access bindings will be returned. The maximum value is
         * 500; values above 500 will be coerced to 500.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of access bindings to return. The service may return fewer than this value. If
       unspecified, at most 200 access bindings will be returned. The maximum value is 500; values above
       500 will be coerced to 500.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of access bindings to return. The service may return fewer than this
         * value. If unspecified, at most 200 access bindings will be returned. The maximum value is
         * 500; values above 500 will be coerced to 500.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListAccessBindings` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListAccessBindings` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListAccessBindings` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListAccessBindings` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListAccessBindings` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListAccessBindings` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an access binding on an account or property.
       *
       * Create a request for the method "accessBindings.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name of this binding. Format:
       *        accounts/{account}/accessBindings/{access_binding} or
       *        properties/{property}/accessBindings/{access_binding} Example:
       *        "accounts/100/accessBindings/200"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^accounts/[^/]+/accessBindings/[^/]+$");

        /**
         * Updates an access binding on an account or property.
         *
         * Create a request for the method "accessBindings.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of this binding. Format:
       *        accounts/{account}/accessBindings/{access_binding} or
       *        properties/{property}/accessBindings/{access_binding} Example:
       *        "accounts/100/accessBindings/200"
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/accessBindings/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of this binding. Format:
         * accounts/{account}/accessBindings/{access_binding} or
         * properties/{property}/accessBindings/{access_binding} Example:
         * "accounts/100/accessBindings/200"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of this binding. Format:
       accounts/{account}/accessBindings/{access_binding} or
       properties/{property}/accessBindings/{access_binding} Example: "accounts/100/accessBindings/200"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of this binding. Format:
         * accounts/{account}/accessBindings/{access_binding} or
         * properties/{property}/accessBindings/{access_binding} Example:
         * "accounts/100/accessBindings/200"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^accounts/[^/]+/accessBindings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Properties collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
   *   {@code GoogleAnalyticsAdmin.Properties.List request = analyticsadmin.properties().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Properties properties() {
    return new Properties();
  }

  /**
   * The "properties" collection of methods.
   */
  public class Properties {

    /**
     * Acknowledges the terms of user data collection for the specified property. This acknowledgement
     * must be completed (either in the Google Analytics UI or through this API) before
     * MeasurementProtocolSecret resources may be created.
     *
     * Create a request for the method "properties.acknowledgeUserDataCollection".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link AcknowledgeUserDataCollection#execute()} method to invoke
     * the remote operation.
     *
     * @param property Required. The property for which to acknowledge user data collection.
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionRequest}
     * @return the request
     */
    public AcknowledgeUserDataCollection acknowledgeUserDataCollection(java.lang.String property, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionRequest content) throws java.io.IOException {
      AcknowledgeUserDataCollection result = new AcknowledgeUserDataCollection(property, content);
      initialize(result);
      return result;
    }

    public class AcknowledgeUserDataCollection extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionResponse> {

      private static final String REST_PATH = "v1alpha/{+property}:acknowledgeUserDataCollection";

      private final java.util.regex.Pattern PROPERTY_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+$");

      /**
       * Acknowledges the terms of user data collection for the specified property. This acknowledgement
       * must be completed (either in the Google Analytics UI or through this API) before
       * MeasurementProtocolSecret resources may be created.
       *
       * Create a request for the method "properties.acknowledgeUserDataCollection".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link AcknowledgeUserDataCollection#execute()} method to invoke
       * the remote operation. <p> {@link AcknowledgeUserDataCollection#initialize(com.google.api.client
       * .googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param property Required. The property for which to acknowledge user data collection.
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionRequest}
       * @since 1.13
       */
      protected AcknowledgeUserDataCollection(java.lang.String property, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAcknowledgeUserDataCollectionResponse.class);
        this.property = com.google.api.client.util.Preconditions.checkNotNull(property, "Required parameter property must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROPERTY_PATTERN.matcher(property).matches(),
              "Parameter property must conform to the pattern " +
              "^properties/[^/]+$");
        }
      }

      @Override
      public AcknowledgeUserDataCollection set$Xgafv(java.lang.String $Xgafv) {
        return (AcknowledgeUserDataCollection) super.set$Xgafv($Xgafv);
      }

      @Override
      public AcknowledgeUserDataCollection setAccessToken(java.lang.String accessToken) {
        return (AcknowledgeUserDataCollection) super.setAccessToken(accessToken);
      }

      @Override
      public AcknowledgeUserDataCollection setAlt(java.lang.String alt) {
        return (AcknowledgeUserDataCollection) super.setAlt(alt);
      }

      @Override
      public AcknowledgeUserDataCollection setCallback(java.lang.String callback) {
        return (AcknowledgeUserDataCollection) super.setCallback(callback);
      }

      @Override
      public AcknowledgeUserDataCollection setFields(java.lang.String fields) {
        return (AcknowledgeUserDataCollection) super.setFields(fields);
      }

      @Override
      public AcknowledgeUserDataCollection setKey(java.lang.String key) {
        return (AcknowledgeUserDataCollection) super.setKey(key);
      }

      @Override
      public AcknowledgeUserDataCollection setOauthToken(java.lang.String oauthToken) {
        return (AcknowledgeUserDataCollection) super.setOauthToken(oauthToken);
      }

      @Override
      public AcknowledgeUserDataCollection setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AcknowledgeUserDataCollection) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AcknowledgeUserDataCollection setQuotaUser(java.lang.String quotaUser) {
        return (AcknowledgeUserDataCollection) super.setQuotaUser(quotaUser);
      }

      @Override
      public AcknowledgeUserDataCollection setUploadType(java.lang.String uploadType) {
        return (AcknowledgeUserDataCollection) super.setUploadType(uploadType);
      }

      @Override
      public AcknowledgeUserDataCollection setUploadProtocol(java.lang.String uploadProtocol) {
        return (AcknowledgeUserDataCollection) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. The property for which to acknowledge user data collection. */
      @com.google.api.client.util.Key
      private java.lang.String property;

      /** Required. The property for which to acknowledge user data collection.
       */
      public java.lang.String getProperty() {
        return property;
      }

      /** Required. The property for which to acknowledge user data collection. */
      public AcknowledgeUserDataCollection setProperty(java.lang.String property) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROPERTY_PATTERN.matcher(property).matches(),
              "Parameter property must conform to the pattern " +
              "^properties/[^/]+$");
        }
        this.property = property;
        return this;
      }

      @Override
      public AcknowledgeUserDataCollection set(String parameterName, Object value) {
        return (AcknowledgeUserDataCollection) super.set(parameterName, value);
      }
    }
    /**
     * Creates a Google Analytics property with the specified location and attributes.
     *
     * Create a request for the method "properties.create".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty}
     * @return the request
     */
    public Create create(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty> {

      private static final String REST_PATH = "v1alpha/properties";

      /**
       * Creates a Google Analytics property with the specified location and attributes.
       *
       * Create a request for the method "properties.create".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       * <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty}
       * @since 1.13
       */
      protected Create(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Creates a connected site tag for a Universal Analytics property. You can create a maximum of 20
     * connected site tags per property. Note: This API cannot be used on GA4 properties.
     *
     * Create a request for the method "properties.createConnectedSiteTag".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link CreateConnectedSiteTag#execute()} method to invoke the
     * remote operation.
     *
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest}
     * @return the request
     */
    public CreateConnectedSiteTag createConnectedSiteTag(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest content) throws java.io.IOException {
      CreateConnectedSiteTag result = new CreateConnectedSiteTag(content);
      initialize(result);
      return result;
    }

    public class CreateConnectedSiteTag extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateConnectedSiteTagResponse> {

      private static final String REST_PATH = "v1alpha/properties:createConnectedSiteTag";

      /**
       * Creates a connected site tag for a Universal Analytics property. You can create a maximum of 20
       * connected site tags per property. Note: This API cannot be used on GA4 properties.
       *
       * Create a request for the method "properties.createConnectedSiteTag".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link CreateConnectedSiteTag#execute()} method to invoke the
       * remote operation. <p> {@link CreateConnectedSiteTag#initialize(com.google.api.client.googleapis
       * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest}
       * @since 1.13
       */
      protected CreateConnectedSiteTag(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateConnectedSiteTagRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateConnectedSiteTagResponse.class);
      }

      @Override
      public CreateConnectedSiteTag set$Xgafv(java.lang.String $Xgafv) {
        return (CreateConnectedSiteTag) super.set$Xgafv($Xgafv);
      }

      @Override
      public CreateConnectedSiteTag setAccessToken(java.lang.String accessToken) {
        return (CreateConnectedSiteTag) super.setAccessToken(accessToken);
      }

      @Override
      public CreateConnectedSiteTag setAlt(java.lang.String alt) {
        return (CreateConnectedSiteTag) super.setAlt(alt);
      }

      @Override
      public CreateConnectedSiteTag setCallback(java.lang.String callback) {
        return (CreateConnectedSiteTag) super.setCallback(callback);
      }

      @Override
      public CreateConnectedSiteTag setFields(java.lang.String fields) {
        return (CreateConnectedSiteTag) super.setFields(fields);
      }

      @Override
      public CreateConnectedSiteTag setKey(java.lang.String key) {
        return (CreateConnectedSiteTag) super.setKey(key);
      }

      @Override
      public CreateConnectedSiteTag setOauthToken(java.lang.String oauthToken) {
        return (CreateConnectedSiteTag) super.setOauthToken(oauthToken);
      }

      @Override
      public CreateConnectedSiteTag setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CreateConnectedSiteTag) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CreateConnectedSiteTag setQuotaUser(java.lang.String quotaUser) {
        return (CreateConnectedSiteTag) super.setQuotaUser(quotaUser);
      }

      @Override
      public CreateConnectedSiteTag setUploadType(java.lang.String uploadType) {
        return (CreateConnectedSiteTag) super.setUploadType(uploadType);
      }

      @Override
      public CreateConnectedSiteTag setUploadProtocol(java.lang.String uploadProtocol) {
        return (CreateConnectedSiteTag) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public CreateConnectedSiteTag set(String parameterName, Object value) {
        return (CreateConnectedSiteTag) super.set(parameterName, value);
      }
    }
    /**
     * Create a roll-up property and all roll-up property source links.
     *
     * Create a request for the method "properties.createRollupProperty".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link CreateRollupProperty#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateRollupPropertyRequest}
     * @return the request
     */
    public CreateRollupProperty createRollupProperty(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateRollupPropertyRequest content) throws java.io.IOException {
      CreateRollupProperty result = new CreateRollupProperty(content);
      initialize(result);
      return result;
    }

    public class CreateRollupProperty extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse> {

      private static final String REST_PATH = "v1alpha/properties:createRollupProperty";

      /**
       * Create a roll-up property and all roll-up property source links.
       *
       * Create a request for the method "properties.createRollupProperty".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link CreateRollupProperty#execute()} method to invoke the
       * remote operation. <p> {@link CreateRollupProperty#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateRollupPropertyRequest}
       * @since 1.13
       */
      protected CreateRollupProperty(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateRollupPropertyRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCreateRollupPropertyResponse.class);
      }

      @Override
      public CreateRollupProperty set$Xgafv(java.lang.String $Xgafv) {
        return (CreateRollupProperty) super.set$Xgafv($Xgafv);
      }

      @Override
      public CreateRollupProperty setAccessToken(java.lang.String accessToken) {
        return (CreateRollupProperty) super.setAccessToken(accessToken);
      }

      @Override
      public CreateRollupProperty setAlt(java.lang.String alt) {
        return (CreateRollupProperty) super.setAlt(alt);
      }

      @Override
      public CreateRollupProperty setCallback(java.lang.String callback) {
        return (CreateRollupProperty) super.setCallback(callback);
      }

      @Override
      public CreateRollupProperty setFields(java.lang.String fields) {
        return (CreateRollupProperty) super.setFields(fields);
      }

      @Override
      public CreateRollupProperty setKey(java.lang.String key) {
        return (CreateRollupProperty) super.setKey(key);
      }

      @Override
      public CreateRollupProperty setOauthToken(java.lang.String oauthToken) {
        return (CreateRollupProperty) super.setOauthToken(oauthToken);
      }

      @Override
      public CreateRollupProperty setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (CreateRollupProperty) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public CreateRollupProperty setQuotaUser(java.lang.String quotaUser) {
        return (CreateRollupProperty) super.setQuotaUser(quotaUser);
      }

      @Override
      public CreateRollupProperty setUploadType(java.lang.String uploadType) {
        return (CreateRollupProperty) super.setUploadType(uploadType);
      }

      @Override
      public CreateRollupProperty setUploadProtocol(java.lang.String uploadProtocol) {
        return (CreateRollupProperty) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public CreateRollupProperty set(String parameterName, Object value) {
        return (CreateRollupProperty) super.set(parameterName, value);
      }
    }
    /**
     * Marks target Property as soft-deleted (ie: "trashed") and returns it. This API does not have a
     * method to restore soft-deleted properties. However, they can be restored using the Trash Can UI.
     * If the properties are not restored before the expiration time, the Property and all child
     * resources (eg: GoogleAdsLinks, Streams, AccessBindings) will be permanently purged.
     * https://support.google.com/analytics/answer/6154772 Returns an error if the target is not found.
     *
     * Create a request for the method "properties.delete".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the Property to soft-delete. Format: properties/{property_id} Example:
     *        "properties/1000"
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+$");

      /**
       * Marks target Property as soft-deleted (ie: "trashed") and returns it. This API does not have a
       * method to restore soft-deleted properties. However, they can be restored using the Trash Can
       * UI. If the properties are not restored before the expiration time, the Property and all child
       * resources (eg: GoogleAdsLinks, Streams, AccessBindings) will be permanently purged.
       * https://support.google.com/analytics/answer/6154772 Returns an error if the target is not
       * found.
       *
       * Create a request for the method "properties.delete".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the Property to soft-delete. Format: properties/{property_id} Example:
     *        "properties/1000"
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the Property to soft-delete. Format: properties/{property_id}
       * Example: "properties/1000"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the Property to soft-delete. Format: properties/{property_id} Example:
     "properties/1000"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the Property to soft-delete. Format: properties/{property_id}
       * Example: "properties/1000"
       */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a connected site tag for a Universal Analytics property. Note: this has no effect on GA4
     * properties.
     *
     * Create a request for the method "properties.deleteConnectedSiteTag".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link DeleteConnectedSiteTag#execute()} method to invoke the
     * remote operation.
     *
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDeleteConnectedSiteTagRequest}
     * @return the request
     */
    public DeleteConnectedSiteTag deleteConnectedSiteTag(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDeleteConnectedSiteTagRequest content) throws java.io.IOException {
      DeleteConnectedSiteTag result = new DeleteConnectedSiteTag(content);
      initialize(result);
      return result;
    }

    public class DeleteConnectedSiteTag extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

      private static final String REST_PATH = "v1alpha/properties:deleteConnectedSiteTag";

      /**
       * Deletes a connected site tag for a Universal Analytics property. Note: this has no effect on
       * GA4 properties.
       *
       * Create a request for the method "properties.deleteConnectedSiteTag".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link DeleteConnectedSiteTag#execute()} method to invoke the
       * remote operation. <p> {@link DeleteConnectedSiteTag#initialize(com.google.api.client.googleapis
       * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDeleteConnectedSiteTagRequest}
       * @since 1.13
       */
      protected DeleteConnectedSiteTag(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDeleteConnectedSiteTagRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
      }

      @Override
      public DeleteConnectedSiteTag set$Xgafv(java.lang.String $Xgafv) {
        return (DeleteConnectedSiteTag) super.set$Xgafv($Xgafv);
      }

      @Override
      public DeleteConnectedSiteTag setAccessToken(java.lang.String accessToken) {
        return (DeleteConnectedSiteTag) super.setAccessToken(accessToken);
      }

      @Override
      public DeleteConnectedSiteTag setAlt(java.lang.String alt) {
        return (DeleteConnectedSiteTag) super.setAlt(alt);
      }

      @Override
      public DeleteConnectedSiteTag setCallback(java.lang.String callback) {
        return (DeleteConnectedSiteTag) super.setCallback(callback);
      }

      @Override
      public DeleteConnectedSiteTag setFields(java.lang.String fields) {
        return (DeleteConnectedSiteTag) super.setFields(fields);
      }

      @Override
      public DeleteConnectedSiteTag setKey(java.lang.String key) {
        return (DeleteConnectedSiteTag) super.setKey(key);
      }

      @Override
      public DeleteConnectedSiteTag setOauthToken(java.lang.String oauthToken) {
        return (DeleteConnectedSiteTag) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteConnectedSiteTag setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteConnectedSiteTag) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteConnectedSiteTag setQuotaUser(java.lang.String quotaUser) {
        return (DeleteConnectedSiteTag) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteConnectedSiteTag setUploadType(java.lang.String uploadType) {
        return (DeleteConnectedSiteTag) super.setUploadType(uploadType);
      }

      @Override
      public DeleteConnectedSiteTag setUploadProtocol(java.lang.String uploadProtocol) {
        return (DeleteConnectedSiteTag) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public DeleteConnectedSiteTag set(String parameterName, Object value) {
        return (DeleteConnectedSiteTag) super.set(parameterName, value);
      }
    }
    /**
     * Fetches the opt out status for the automated GA4 setup process for a UA property. Note: this has
     * no effect on GA4 property.
     *
     * Create a request for the method "properties.fetchAutomatedGa4ConfigurationOptOut".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link FetchAutomatedGa4ConfigurationOptOut#execute()} method to
     * invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutRequest}
     * @return the request
     */
    public FetchAutomatedGa4ConfigurationOptOut fetchAutomatedGa4ConfigurationOptOut(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutRequest content) throws java.io.IOException {
      FetchAutomatedGa4ConfigurationOptOut result = new FetchAutomatedGa4ConfigurationOptOut(content);
      initialize(result);
      return result;
    }

    public class FetchAutomatedGa4ConfigurationOptOut extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutResponse> {

      private static final String REST_PATH = "v1alpha/properties:fetchAutomatedGa4ConfigurationOptOut";

      /**
       * Fetches the opt out status for the automated GA4 setup process for a UA property. Note: this
       * has no effect on GA4 property.
       *
       * Create a request for the method "properties.fetchAutomatedGa4ConfigurationOptOut".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link FetchAutomatedGa4ConfigurationOptOut#execute()} method to
       * invoke the remote operation. <p> {@link FetchAutomatedGa4ConfigurationOptOut#initialize(com.goo
       * gle.api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize
       * this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutRequest}
       * @since 1.13
       */
      protected FetchAutomatedGa4ConfigurationOptOut(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFetchAutomatedGa4ConfigurationOptOutResponse.class);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut set$Xgafv(java.lang.String $Xgafv) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.set$Xgafv($Xgafv);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut setAccessToken(java.lang.String accessToken) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.setAccessToken(accessToken);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut setAlt(java.lang.String alt) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.setAlt(alt);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut setCallback(java.lang.String callback) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.setCallback(callback);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut setFields(java.lang.String fields) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.setFields(fields);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut setKey(java.lang.String key) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.setKey(key);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut setOauthToken(java.lang.String oauthToken) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.setOauthToken(oauthToken);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut setQuotaUser(java.lang.String quotaUser) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.setQuotaUser(quotaUser);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut setUploadType(java.lang.String uploadType) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.setUploadType(uploadType);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut setUploadProtocol(java.lang.String uploadProtocol) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public FetchAutomatedGa4ConfigurationOptOut set(String parameterName, Object value) {
        return (FetchAutomatedGa4ConfigurationOptOut) super.set(parameterName, value);
      }
    }
    /**
     * Given a specified UA property, looks up the GA4 property connected to it. Note: this cannot be
     * used with GA4 properties.
     *
     * Create a request for the method "properties.fetchConnectedGa4Property".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link FetchConnectedGa4Property#execute()} method to invoke the
     * remote operation.
     *
     * @return the request
     */
    public FetchConnectedGa4Property fetchConnectedGa4Property() throws java.io.IOException {
      FetchConnectedGa4Property result = new FetchConnectedGa4Property();
      initialize(result);
      return result;
    }

    public class FetchConnectedGa4Property extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFetchConnectedGa4PropertyResponse> {

      private static final String REST_PATH = "v1alpha/properties:fetchConnectedGa4Property";

      /**
       * Given a specified UA property, looks up the GA4 property connected to it. Note: this cannot be
       * used with GA4 properties.
       *
       * Create a request for the method "properties.fetchConnectedGa4Property".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link FetchConnectedGa4Property#execute()} method to invoke the
       * remote operation. <p> {@link FetchConnectedGa4Property#initialize(com.google.api.client.googlea
       * pis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected FetchConnectedGa4Property() {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFetchConnectedGa4PropertyResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public FetchConnectedGa4Property set$Xgafv(java.lang.String $Xgafv) {
        return (FetchConnectedGa4Property) super.set$Xgafv($Xgafv);
      }

      @Override
      public FetchConnectedGa4Property setAccessToken(java.lang.String accessToken) {
        return (FetchConnectedGa4Property) super.setAccessToken(accessToken);
      }

      @Override
      public FetchConnectedGa4Property setAlt(java.lang.String alt) {
        return (FetchConnectedGa4Property) super.setAlt(alt);
      }

      @Override
      public FetchConnectedGa4Property setCallback(java.lang.String callback) {
        return (FetchConnectedGa4Property) super.setCallback(callback);
      }

      @Override
      public FetchConnectedGa4Property setFields(java.lang.String fields) {
        return (FetchConnectedGa4Property) super.setFields(fields);
      }

      @Override
      public FetchConnectedGa4Property setKey(java.lang.String key) {
        return (FetchConnectedGa4Property) super.setKey(key);
      }

      @Override
      public FetchConnectedGa4Property setOauthToken(java.lang.String oauthToken) {
        return (FetchConnectedGa4Property) super.setOauthToken(oauthToken);
      }

      @Override
      public FetchConnectedGa4Property setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (FetchConnectedGa4Property) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public FetchConnectedGa4Property setQuotaUser(java.lang.String quotaUser) {
        return (FetchConnectedGa4Property) super.setQuotaUser(quotaUser);
      }

      @Override
      public FetchConnectedGa4Property setUploadType(java.lang.String uploadType) {
        return (FetchConnectedGa4Property) super.setUploadType(uploadType);
      }

      @Override
      public FetchConnectedGa4Property setUploadProtocol(java.lang.String uploadProtocol) {
        return (FetchConnectedGa4Property) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The UA property for which to look up the connected GA4 property. Note this
       * request uses the internal property ID, not the tracking ID of the form UA-XXXXXX-YY.
       * Format: properties/{internal_web_property_id} Example: properties/1234
       */
      @com.google.api.client.util.Key
      private java.lang.String property;

      /** Required. The UA property for which to look up the connected GA4 property. Note this request uses
     the internal property ID, not the tracking ID of the form UA-XXXXXX-YY. Format:
     properties/{internal_web_property_id} Example: properties/1234
       */
      public java.lang.String getProperty() {
        return property;
      }

      /**
       * Required. The UA property for which to look up the connected GA4 property. Note this
       * request uses the internal property ID, not the tracking ID of the form UA-XXXXXX-YY.
       * Format: properties/{internal_web_property_id} Example: properties/1234
       */
      public FetchConnectedGa4Property setProperty(java.lang.String property) {
        this.property = property;
        return this;
      }

      @Override
      public FetchConnectedGa4Property set(String parameterName, Object value) {
        return (FetchConnectedGa4Property) super.set(parameterName, value);
      }
    }
    /**
     * Lookup for a single GA Property.
     *
     * Create a request for the method "properties.get".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the property to lookup. Format: properties/{property_id} Example:
     *        "properties/1000"
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+$");

      /**
       * Lookup for a single GA Property.
       *
       * Create a request for the method "properties.get".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the property to lookup. Format: properties/{property_id} Example:
     *        "properties/1000"
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the property to lookup. Format: properties/{property_id} Example:
       * "properties/1000"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the property to lookup. Format: properties/{property_id} Example:
     "properties/1000"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the property to lookup. Format: properties/{property_id} Example:
       * "properties/1000"
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lookup for a AttributionSettings singleton.
     *
     * Create a request for the method "properties.getAttributionSettings".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link GetAttributionSettings#execute()} method to invoke the
     * remote operation.
     *
     * @param name Required. The name of the attribution settings to retrieve. Format:
     *        properties/{property}/attributionSettings
     * @return the request
     */
    public GetAttributionSettings getAttributionSettings(java.lang.String name) throws java.io.IOException {
      GetAttributionSettings result = new GetAttributionSettings(name);
      initialize(result);
      return result;
    }

    public class GetAttributionSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAttributionSettings> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+/attributionSettings$");

      /**
       * Lookup for a AttributionSettings singleton.
       *
       * Create a request for the method "properties.getAttributionSettings".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link GetAttributionSettings#execute()} method to invoke the
       * remote operation. <p> {@link GetAttributionSettings#initialize(com.google.api.client.googleapis
       * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param name Required. The name of the attribution settings to retrieve. Format:
     *        properties/{property}/attributionSettings
       * @since 1.13
       */
      protected GetAttributionSettings(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAttributionSettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/attributionSettings$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetAttributionSettings set$Xgafv(java.lang.String $Xgafv) {
        return (GetAttributionSettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetAttributionSettings setAccessToken(java.lang.String accessToken) {
        return (GetAttributionSettings) super.setAccessToken(accessToken);
      }

      @Override
      public GetAttributionSettings setAlt(java.lang.String alt) {
        return (GetAttributionSettings) super.setAlt(alt);
      }

      @Override
      public GetAttributionSettings setCallback(java.lang.String callback) {
        return (GetAttributionSettings) super.setCallback(callback);
      }

      @Override
      public GetAttributionSettings setFields(java.lang.String fields) {
        return (GetAttributionSettings) super.setFields(fields);
      }

      @Override
      public GetAttributionSettings setKey(java.lang.String key) {
        return (GetAttributionSettings) super.setKey(key);
      }

      @Override
      public GetAttributionSettings setOauthToken(java.lang.String oauthToken) {
        return (GetAttributionSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public GetAttributionSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetAttributionSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetAttributionSettings setQuotaUser(java.lang.String quotaUser) {
        return (GetAttributionSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetAttributionSettings setUploadType(java.lang.String uploadType) {
        return (GetAttributionSettings) super.setUploadType(uploadType);
      }

      @Override
      public GetAttributionSettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetAttributionSettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the attribution settings to retrieve. Format:
       * properties/{property}/attributionSettings
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the attribution settings to retrieve. Format:
     properties/{property}/attributionSettings
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the attribution settings to retrieve. Format:
       * properties/{property}/attributionSettings
       */
      public GetAttributionSettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/attributionSettings$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetAttributionSettings set(String parameterName, Object value) {
        return (GetAttributionSettings) super.set(parameterName, value);
      }
    }
    /**
     * Returns the singleton data retention settings for this property.
     *
     * Create a request for the method "properties.getDataRetentionSettings".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link GetDataRetentionSettings#execute()} method to invoke the
     * remote operation.
     *
     * @param name Required. The name of the settings to lookup. Format: properties/{property}/dataRetentionSettings
     *        Example: "properties/1000/dataRetentionSettings"
     * @return the request
     */
    public GetDataRetentionSettings getDataRetentionSettings(java.lang.String name) throws java.io.IOException {
      GetDataRetentionSettings result = new GetDataRetentionSettings(name);
      initialize(result);
      return result;
    }

    public class GetDataRetentionSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRetentionSettings> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+/dataRetentionSettings$");

      /**
       * Returns the singleton data retention settings for this property.
       *
       * Create a request for the method "properties.getDataRetentionSettings".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link GetDataRetentionSettings#execute()} method to invoke the
       * remote operation. <p> {@link GetDataRetentionSettings#initialize(com.google.api.client.googleap
       * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the settings to lookup. Format: properties/{property}/dataRetentionSettings
     *        Example: "properties/1000/dataRetentionSettings"
       * @since 1.13
       */
      protected GetDataRetentionSettings(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRetentionSettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/dataRetentionSettings$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetDataRetentionSettings set$Xgafv(java.lang.String $Xgafv) {
        return (GetDataRetentionSettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetDataRetentionSettings setAccessToken(java.lang.String accessToken) {
        return (GetDataRetentionSettings) super.setAccessToken(accessToken);
      }

      @Override
      public GetDataRetentionSettings setAlt(java.lang.String alt) {
        return (GetDataRetentionSettings) super.setAlt(alt);
      }

      @Override
      public GetDataRetentionSettings setCallback(java.lang.String callback) {
        return (GetDataRetentionSettings) super.setCallback(callback);
      }

      @Override
      public GetDataRetentionSettings setFields(java.lang.String fields) {
        return (GetDataRetentionSettings) super.setFields(fields);
      }

      @Override
      public GetDataRetentionSettings setKey(java.lang.String key) {
        return (GetDataRetentionSettings) super.setKey(key);
      }

      @Override
      public GetDataRetentionSettings setOauthToken(java.lang.String oauthToken) {
        return (GetDataRetentionSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public GetDataRetentionSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetDataRetentionSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetDataRetentionSettings setQuotaUser(java.lang.String quotaUser) {
        return (GetDataRetentionSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetDataRetentionSettings setUploadType(java.lang.String uploadType) {
        return (GetDataRetentionSettings) super.setUploadType(uploadType);
      }

      @Override
      public GetDataRetentionSettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetDataRetentionSettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the settings to lookup. Format:
       * properties/{property}/dataRetentionSettings Example:
       * "properties/1000/dataRetentionSettings"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the settings to lookup. Format: properties/{property}/dataRetentionSettings
     Example: "properties/1000/dataRetentionSettings"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the settings to lookup. Format:
       * properties/{property}/dataRetentionSettings Example:
       * "properties/1000/dataRetentionSettings"
       */
      public GetDataRetentionSettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/dataRetentionSettings$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetDataRetentionSettings set(String parameterName, Object value) {
        return (GetDataRetentionSettings) super.set(parameterName, value);
      }
    }
    /**
     * Lookup for Google Signals settings for a property.
     *
     * Create a request for the method "properties.getGoogleSignalsSettings".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link GetGoogleSignalsSettings#execute()} method to invoke the
     * remote operation.
     *
     * @param name Required. The name of the google signals settings to retrieve. Format:
     *        properties/{property}/googleSignalsSettings
     * @return the request
     */
    public GetGoogleSignalsSettings getGoogleSignalsSettings(java.lang.String name) throws java.io.IOException {
      GetGoogleSignalsSettings result = new GetGoogleSignalsSettings(name);
      initialize(result);
      return result;
    }

    public class GetGoogleSignalsSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleSignalsSettings> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+/googleSignalsSettings$");

      /**
       * Lookup for Google Signals settings for a property.
       *
       * Create a request for the method "properties.getGoogleSignalsSettings".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link GetGoogleSignalsSettings#execute()} method to invoke the
       * remote operation. <p> {@link GetGoogleSignalsSettings#initialize(com.google.api.client.googleap
       * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param name Required. The name of the google signals settings to retrieve. Format:
     *        properties/{property}/googleSignalsSettings
       * @since 1.13
       */
      protected GetGoogleSignalsSettings(java.lang.String name) {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleSignalsSettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/googleSignalsSettings$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetGoogleSignalsSettings set$Xgafv(java.lang.String $Xgafv) {
        return (GetGoogleSignalsSettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetGoogleSignalsSettings setAccessToken(java.lang.String accessToken) {
        return (GetGoogleSignalsSettings) super.setAccessToken(accessToken);
      }

      @Override
      public GetGoogleSignalsSettings setAlt(java.lang.String alt) {
        return (GetGoogleSignalsSettings) super.setAlt(alt);
      }

      @Override
      public GetGoogleSignalsSettings setCallback(java.lang.String callback) {
        return (GetGoogleSignalsSettings) super.setCallback(callback);
      }

      @Override
      public GetGoogleSignalsSettings setFields(java.lang.String fields) {
        return (GetGoogleSignalsSettings) super.setFields(fields);
      }

      @Override
      public GetGoogleSignalsSettings setKey(java.lang.String key) {
        return (GetGoogleSignalsSettings) super.setKey(key);
      }

      @Override
      public GetGoogleSignalsSettings setOauthToken(java.lang.String oauthToken) {
        return (GetGoogleSignalsSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public GetGoogleSignalsSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetGoogleSignalsSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetGoogleSignalsSettings setQuotaUser(java.lang.String quotaUser) {
        return (GetGoogleSignalsSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetGoogleSignalsSettings setUploadType(java.lang.String uploadType) {
        return (GetGoogleSignalsSettings) super.setUploadType(uploadType);
      }

      @Override
      public GetGoogleSignalsSettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetGoogleSignalsSettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the google signals settings to retrieve. Format:
       * properties/{property}/googleSignalsSettings
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the google signals settings to retrieve. Format:
     properties/{property}/googleSignalsSettings
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the google signals settings to retrieve. Format:
       * properties/{property}/googleSignalsSettings
       */
      public GetGoogleSignalsSettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/googleSignalsSettings$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetGoogleSignalsSettings set(String parameterName, Object value) {
        return (GetGoogleSignalsSettings) super.set(parameterName, value);
      }
    }
    /**
     * Returns child Properties under the specified parent Account. Properties will be excluded if the
     * caller does not have access. Soft-deleted (ie: "trashed") properties are excluded by default.
     * Returns an empty list if no relevant properties are found.
     *
     * Create a request for the method "properties.list".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListPropertiesResponse> {

      private static final String REST_PATH = "v1alpha/properties";

      /**
       * Returns child Properties under the specified parent Account. Properties will be excluded if the
       * caller does not have access. Soft-deleted (ie: "trashed") properties are excluded by default.
       * Returns an empty list if no relevant properties are found.
       *
       * Create a request for the method "properties.list".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListPropertiesResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. An expression for filtering the results of the request. Fields eligible for
       * filtering are: `parent:`(The resource name of the parent account/property) or
       * `ancestor:`(The resource name of the parent account) or `firebase_project:`(The id or
       * number of the linked firebase project). Some examples of filters: ``` | Filter |
       * Description | |-----------------------------|-------------------------------------------| |
       * parent:accounts/123 | The account with account id: 123. | | parent:properties/123 | The
       * property with property id: 123. | | ancestor:accounts/123 | The account with account id:
       * 123. | | firebase_project:project-id | The firebase project with id: project-id. | |
       * firebase_project:123 | The firebase project with number: 123. | ```
       */
      @com.google.api.client.util.Key
      private java.lang.String filter;

      /** Required. An expression for filtering the results of the request. Fields eligible for filtering
     are: `parent:`(The resource name of the parent account/property) or `ancestor:`(The resource name
     of the parent account) or `firebase_project:`(The id or number of the linked firebase project).
     Some examples of filters: ``` | Filter | Description |
     |-----------------------------|-------------------------------------------| | parent:accounts/123 |
     The account with account id: 123. | | parent:properties/123 | The property with property id: 123. |
     | ancestor:accounts/123 | The account with account id: 123. | | firebase_project:project-id | The
     firebase project with id: project-id. | | firebase_project:123 | The firebase project with number:
     123. | ```
       */
      public java.lang.String getFilter() {
        return filter;
      }

      /**
       * Required. An expression for filtering the results of the request. Fields eligible for
       * filtering are: `parent:`(The resource name of the parent account/property) or
       * `ancestor:`(The resource name of the parent account) or `firebase_project:`(The id or
       * number of the linked firebase project). Some examples of filters: ``` | Filter |
       * Description | |-----------------------------|-------------------------------------------| |
       * parent:accounts/123 | The account with account id: 123. | | parent:properties/123 | The
       * property with property id: 123. | | ancestor:accounts/123 | The account with account id:
       * 123. | | firebase_project:project-id | The firebase project with id: project-id. | |
       * firebase_project:123 | The firebase project with number: 123. | ```
       */
      public List setFilter(java.lang.String filter) {
        this.filter = filter;
        return this;
      }

      /**
       * The maximum number of resources to return. The service may return fewer than this value,
       * even if there are additional pages. If unspecified, at most 50 resources will be returned.
       * The maximum value is 200; (higher values will be coerced to the maximum)
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of resources to return. The service may return fewer than this value, even if
     there are additional pages. If unspecified, at most 50 resources will be returned. The maximum
     value is 200; (higher values will be coerced to the maximum)
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of resources to return. The service may return fewer than this value,
       * even if there are additional pages. If unspecified, at most 50 resources will be returned.
       * The maximum value is 200; (higher values will be coerced to the maximum)
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A page token, received from a previous `ListProperties` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListProperties` must
       * match the call that provided the page token.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A page token, received from a previous `ListProperties` call. Provide this to retrieve the
     subsequent page. When paginating, all other parameters provided to `ListProperties` must match the
     call that provided the page token.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A page token, received from a previous `ListProperties` call. Provide this to retrieve the
       * subsequent page. When paginating, all other parameters provided to `ListProperties` must
       * match the call that provided the page token.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * Whether to include soft-deleted (ie: "trashed") Properties in the results. Properties can
       * be inspected to determine whether they are deleted or not.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean showDeleted;

      /** Whether to include soft-deleted (ie: "trashed") Properties in the results. Properties can be
     inspected to determine whether they are deleted or not.
       */
      public java.lang.Boolean getShowDeleted() {
        return showDeleted;
      }

      /**
       * Whether to include soft-deleted (ie: "trashed") Properties in the results. Properties can
       * be inspected to determine whether they are deleted or not.
       */
      public List setShowDeleted(java.lang.Boolean showDeleted) {
        this.showDeleted = showDeleted;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Lists the connected site tags for a Universal Analytics property. A maximum of 20 connected site
     * tags will be returned. Note: this has no effect on GA4 property.
     *
     * Create a request for the method "properties.listConnectedSiteTags".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link ListConnectedSiteTags#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListConnectedSiteTagsRequest}
     * @return the request
     */
    public ListConnectedSiteTags listConnectedSiteTags(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListConnectedSiteTagsRequest content) throws java.io.IOException {
      ListConnectedSiteTags result = new ListConnectedSiteTags(content);
      initialize(result);
      return result;
    }

    public class ListConnectedSiteTags extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse> {

      private static final String REST_PATH = "v1alpha/properties:listConnectedSiteTags";

      /**
       * Lists the connected site tags for a Universal Analytics property. A maximum of 20 connected
       * site tags will be returned. Note: this has no effect on GA4 property.
       *
       * Create a request for the method "properties.listConnectedSiteTags".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link ListConnectedSiteTags#execute()} method to invoke the
       * remote operation. <p> {@link ListConnectedSiteTags#initialize(com.google.api.client.googleapis.
       * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListConnectedSiteTagsRequest}
       * @since 1.13
       */
      protected ListConnectedSiteTags(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListConnectedSiteTagsRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListConnectedSiteTagsResponse.class);
      }

      @Override
      public ListConnectedSiteTags set$Xgafv(java.lang.String $Xgafv) {
        return (ListConnectedSiteTags) super.set$Xgafv($Xgafv);
      }

      @Override
      public ListConnectedSiteTags setAccessToken(java.lang.String accessToken) {
        return (ListConnectedSiteTags) super.setAccessToken(accessToken);
      }

      @Override
      public ListConnectedSiteTags setAlt(java.lang.String alt) {
        return (ListConnectedSiteTags) super.setAlt(alt);
      }

      @Override
      public ListConnectedSiteTags setCallback(java.lang.String callback) {
        return (ListConnectedSiteTags) super.setCallback(callback);
      }

      @Override
      public ListConnectedSiteTags setFields(java.lang.String fields) {
        return (ListConnectedSiteTags) super.setFields(fields);
      }

      @Override
      public ListConnectedSiteTags setKey(java.lang.String key) {
        return (ListConnectedSiteTags) super.setKey(key);
      }

      @Override
      public ListConnectedSiteTags setOauthToken(java.lang.String oauthToken) {
        return (ListConnectedSiteTags) super.setOauthToken(oauthToken);
      }

      @Override
      public ListConnectedSiteTags setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ListConnectedSiteTags) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ListConnectedSiteTags setQuotaUser(java.lang.String quotaUser) {
        return (ListConnectedSiteTags) super.setQuotaUser(quotaUser);
      }

      @Override
      public ListConnectedSiteTags setUploadType(java.lang.String uploadType) {
        return (ListConnectedSiteTags) super.setUploadType(uploadType);
      }

      @Override
      public ListConnectedSiteTags setUploadProtocol(java.lang.String uploadProtocol) {
        return (ListConnectedSiteTags) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public ListConnectedSiteTags set(String parameterName, Object value) {
        return (ListConnectedSiteTags) super.set(parameterName, value);
      }
    }
    /**
     * Updates a property.
     *
     * Create a request for the method "properties.patch".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name Output only. Resource name of this property. Format: properties/{property_id} Example:
     *        "properties/1000"
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+$");

      /**
       * Updates a property.
       *
       * Create a request for the method "properties.patch".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Output only. Resource name of this property. Format: properties/{property_id} Example:
     *        "properties/1000"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty content) {
        super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProperty.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Output only. Resource name of this property. Format: properties/{property_id} Example:
       * "properties/1000"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. Resource name of this property. Format: properties/{property_id} Example:
     "properties/1000"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Output only. Resource name of this property. Format: properties/{property_id} Example:
       * "properties/1000"
       */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
       * one path with the string "*" to match all fields.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
     "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
     with the string "*" to match all fields.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
       * one path with the string "*" to match all fields.
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Create a subproperty and a subproperty event filter that applies to the created subproperty.
     *
     * Create a request for the method "properties.provisionSubproperty".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link ProvisionSubproperty#execute()} method to invoke the remote
     * operation.
     *
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionSubpropertyRequest}
     * @return the request
     */
    public ProvisionSubproperty provisionSubproperty(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionSubpropertyRequest content) throws java.io.IOException {
      ProvisionSubproperty result = new ProvisionSubproperty(content);
      initialize(result);
      return result;
    }

    public class ProvisionSubproperty extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionSubpropertyResponse> {

      private static final String REST_PATH = "v1alpha/properties:provisionSubproperty";

      /**
       * Create a subproperty and a subproperty event filter that applies to the created subproperty.
       *
       * Create a request for the method "properties.provisionSubproperty".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link ProvisionSubproperty#execute()} method to invoke the
       * remote operation. <p> {@link ProvisionSubproperty#initialize(com.google.api.client.googleapis.s
       * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionSubpropertyRequest}
       * @since 1.13
       */
      protected ProvisionSubproperty(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionSubpropertyRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaProvisionSubpropertyResponse.class);
      }

      @Override
      public ProvisionSubproperty set$Xgafv(java.lang.String $Xgafv) {
        return (ProvisionSubproperty) super.set$Xgafv($Xgafv);
      }

      @Override
      public ProvisionSubproperty setAccessToken(java.lang.String accessToken) {
        return (ProvisionSubproperty) super.setAccessToken(accessToken);
      }

      @Override
      public ProvisionSubproperty setAlt(java.lang.String alt) {
        return (ProvisionSubproperty) super.setAlt(alt);
      }

      @Override
      public ProvisionSubproperty setCallback(java.lang.String callback) {
        return (ProvisionSubproperty) super.setCallback(callback);
      }

      @Override
      public ProvisionSubproperty setFields(java.lang.String fields) {
        return (ProvisionSubproperty) super.setFields(fields);
      }

      @Override
      public ProvisionSubproperty setKey(java.lang.String key) {
        return (ProvisionSubproperty) super.setKey(key);
      }

      @Override
      public ProvisionSubproperty setOauthToken(java.lang.String oauthToken) {
        return (ProvisionSubproperty) super.setOauthToken(oauthToken);
      }

      @Override
      public ProvisionSubproperty setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ProvisionSubproperty) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ProvisionSubproperty setQuotaUser(java.lang.String quotaUser) {
        return (ProvisionSubproperty) super.setQuotaUser(quotaUser);
      }

      @Override
      public ProvisionSubproperty setUploadType(java.lang.String uploadType) {
        return (ProvisionSubproperty) super.setUploadType(uploadType);
      }

      @Override
      public ProvisionSubproperty setUploadProtocol(java.lang.String uploadProtocol) {
        return (ProvisionSubproperty) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public ProvisionSubproperty set(String parameterName, Object value) {
        return (ProvisionSubproperty) super.set(parameterName, value);
      }
    }
    /**
     * Returns a customized report of data access records. The report provides records of each time a
     * user reads Google Analytics reporting data. Access records are retained for up to 2 years. Data
     * Access Reports can be requested for a property. Reports may be requested for any property, but
     * dimensions that aren't related to quota can only be requested on Google Analytics 360 properties.
     * This method is only available to Administrators. These data access records include GA UI
     * Reporting, GA UI Explorations, GA Data API, and other products like Firebase & Admob that can
     * retrieve data from Google Analytics through a linkage. These records don't include property
     * configuration changes like adding a stream or changing a property's time zone. For configuration
     * change history, see [searchChangeHistoryEvents](https://developers.google.com/analytics/devguides
     * /config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents). To give your feedback on this
     * API, complete the [Google Analytics Access Reports feedback](https://docs.google.com/forms/d/e/1F
     * AIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform) form.
     *
     * Create a request for the method "properties.runAccessReport".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link RunAccessReport#execute()} method to invoke the remote
     * operation.
     *
     * @param entity The Data Access Report supports requesting at the property level or account level. If requested at
     *        the account level, Data Access Reports include all access for all properties under that
     *        account. To request at the property level, entity should be for example 'properties/123'
     *        if "123" is your Google Analytics property ID. To request at the account level, entity
     *        should be for example 'accounts/1234' if "1234" is your Google Analytics Account ID.
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportRequest}
     * @return the request
     */
    public RunAccessReport runAccessReport(java.lang.String entity, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportRequest content) throws java.io.IOException {
      RunAccessReport result = new RunAccessReport(entity, content);
      initialize(result);
      return result;
    }

    public class RunAccessReport extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportResponse> {

      private static final String REST_PATH = "v1alpha/{+entity}:runAccessReport";

      private final java.util.regex.Pattern ENTITY_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+$");

      /**
       * Returns a customized report of data access records. The report provides records of each time a
       * user reads Google Analytics reporting data. Access records are retained for up to 2 years. Data
       * Access Reports can be requested for a property. Reports may be requested for any property, but
       * dimensions that aren't related to quota can only be requested on Google Analytics 360
       * properties. This method is only available to Administrators. These data access records include
       * GA UI Reporting, GA UI Explorations, GA Data API, and other products like Firebase & Admob that
       * can retrieve data from Google Analytics through a linkage. These records don't include property
       * configuration changes like adding a stream or changing a property's time zone. For
       * configuration change history, see [searchChangeHistoryEvents](https://developers.google.com/ana
       * lytics/devguides/config/admin/v1/rest/v1alpha/accounts/searchChangeHistoryEvents). To give your
       * feedback on this API, complete the [Google Analytics Access Reports feedback](https://docs.goog
       * le.com/forms/d/e/1FAIpQLSdmEBUrMzAEdiEKk5TV5dEHvDUZDRlgWYdQdAeSdtR4hVjEhw/viewform) form.
       *
       * Create a request for the method "properties.runAccessReport".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link RunAccessReport#execute()} method to invoke the remote
       * operation. <p> {@link RunAccessReport#initialize(com.google.api.client.googleapis.services.Abst
       * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param entity The Data Access Report supports requesting at the property level or account level. If requested at
     *        the account level, Data Access Reports include all access for all properties under that
     *        account. To request at the property level, entity should be for example 'properties/123'
     *        if "123" is your Google Analytics property ID. To request at the account level, entity
     *        should be for example 'accounts/1234' if "1234" is your Google Analytics Account ID.
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportRequest}
       * @since 1.13
       */
      protected RunAccessReport(java.lang.String entity, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRunAccessReportResponse.class);
        this.entity = com.google.api.client.util.Preconditions.checkNotNull(entity, "Required parameter entity must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ENTITY_PATTERN.matcher(entity).matches(),
              "Parameter entity must conform to the pattern " +
              "^properties/[^/]+$");
        }
      }

      @Override
      public RunAccessReport set$Xgafv(java.lang.String $Xgafv) {
        return (RunAccessReport) super.set$Xgafv($Xgafv);
      }

      @Override
      public RunAccessReport setAccessToken(java.lang.String accessToken) {
        return (RunAccessReport) super.setAccessToken(accessToken);
      }

      @Override
      public RunAccessReport setAlt(java.lang.String alt) {
        return (RunAccessReport) super.setAlt(alt);
      }

      @Override
      public RunAccessReport setCallback(java.lang.String callback) {
        return (RunAccessReport) super.setCallback(callback);
      }

      @Override
      public RunAccessReport setFields(java.lang.String fields) {
        return (RunAccessReport) super.setFields(fields);
      }

      @Override
      public RunAccessReport setKey(java.lang.String key) {
        return (RunAccessReport) super.setKey(key);
      }

      @Override
      public RunAccessReport setOauthToken(java.lang.String oauthToken) {
        return (RunAccessReport) super.setOauthToken(oauthToken);
      }

      @Override
      public RunAccessReport setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (RunAccessReport) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public RunAccessReport setQuotaUser(java.lang.String quotaUser) {
        return (RunAccessReport) super.setQuotaUser(quotaUser);
      }

      @Override
      public RunAccessReport setUploadType(java.lang.String uploadType) {
        return (RunAccessReport) super.setUploadType(uploadType);
      }

      @Override
      public RunAccessReport setUploadProtocol(java.lang.String uploadProtocol) {
        return (RunAccessReport) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The Data Access Report supports requesting at the property level or account level. If
       * requested at the account level, Data Access Reports include all access for all properties
       * under that account. To request at the property level, entity should be for example
       * 'properties/123' if "123" is your Google Analytics property ID. To request at the account
       * level, entity should be for example 'accounts/1234' if "1234" is your Google Analytics
       * Account ID.
       */
      @com.google.api.client.util.Key
      private java.lang.String entity;

      /** The Data Access Report supports requesting at the property level or account level. If requested at
     the account level, Data Access Reports include all access for all properties under that account. To
     request at the property level, entity should be for example 'properties/123' if "123" is your
     Google Analytics property ID. To request at the account level, entity should be for example
     'accounts/1234' if "1234" is your Google Analytics Account ID.
       */
      public java.lang.String getEntity() {
        return entity;
      }

      /**
       * The Data Access Report supports requesting at the property level or account level. If
       * requested at the account level, Data Access Reports include all access for all properties
       * under that account. To request at the property level, entity should be for example
       * 'properties/123' if "123" is your Google Analytics property ID. To request at the account
       * level, entity should be for example 'accounts/1234' if "1234" is your Google Analytics
       * Account ID.
       */
      public RunAccessReport setEntity(java.lang.String entity) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ENTITY_PATTERN.matcher(entity).matches(),
              "Parameter entity must conform to the pattern " +
              "^properties/[^/]+$");
        }
        this.entity = entity;
        return this;
      }

      @Override
      public RunAccessReport set(String parameterName, Object value) {
        return (RunAccessReport) super.set(parameterName, value);
      }
    }
    /**
     * Sets the opt out status for the automated GA4 setup process for a UA property. Note: this has no
     * effect on GA4 property.
     *
     * Create a request for the method "properties.setAutomatedGa4ConfigurationOptOut".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link SetAutomatedGa4ConfigurationOptOut#execute()} method to
     * invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest}
     * @return the request
     */
    public SetAutomatedGa4ConfigurationOptOut setAutomatedGa4ConfigurationOptOut(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest content) throws java.io.IOException {
      SetAutomatedGa4ConfigurationOptOut result = new SetAutomatedGa4ConfigurationOptOut(content);
      initialize(result);
      return result;
    }

    public class SetAutomatedGa4ConfigurationOptOut extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutResponse> {

      private static final String REST_PATH = "v1alpha/properties:setAutomatedGa4ConfigurationOptOut";

      /**
       * Sets the opt out status for the automated GA4 setup process for a UA property. Note: this has
       * no effect on GA4 property.
       *
       * Create a request for the method "properties.setAutomatedGa4ConfigurationOptOut".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link SetAutomatedGa4ConfigurationOptOut#execute()} method to
       * invoke the remote operation. <p> {@link SetAutomatedGa4ConfigurationOptOut#initialize(com.googl
       * e.api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize
       * this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest}
       * @since 1.13
       */
      protected SetAutomatedGa4ConfigurationOptOut(com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutRequest content) {
        super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSetAutomatedGa4ConfigurationOptOutResponse.class);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut set$Xgafv(java.lang.String $Xgafv) {
        return (SetAutomatedGa4ConfigurationOptOut) super.set$Xgafv($Xgafv);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut setAccessToken(java.lang.String accessToken) {
        return (SetAutomatedGa4ConfigurationOptOut) super.setAccessToken(accessToken);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut setAlt(java.lang.String alt) {
        return (SetAutomatedGa4ConfigurationOptOut) super.setAlt(alt);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut setCallback(java.lang.String callback) {
        return (SetAutomatedGa4ConfigurationOptOut) super.setCallback(callback);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut setFields(java.lang.String fields) {
        return (SetAutomatedGa4ConfigurationOptOut) super.setFields(fields);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut setKey(java.lang.String key) {
        return (SetAutomatedGa4ConfigurationOptOut) super.setKey(key);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut setOauthToken(java.lang.String oauthToken) {
        return (SetAutomatedGa4ConfigurationOptOut) super.setOauthToken(oauthToken);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetAutomatedGa4ConfigurationOptOut) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut setQuotaUser(java.lang.String quotaUser) {
        return (SetAutomatedGa4ConfigurationOptOut) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut setUploadType(java.lang.String uploadType) {
        return (SetAutomatedGa4ConfigurationOptOut) super.setUploadType(uploadType);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut setUploadProtocol(java.lang.String uploadProtocol) {
        return (SetAutomatedGa4ConfigurationOptOut) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public SetAutomatedGa4ConfigurationOptOut set(String parameterName, Object value) {
        return (SetAutomatedGa4ConfigurationOptOut) super.set(parameterName, value);
      }
    }
    /**
     * Updates attribution settings on a property.
     *
     * Create a request for the method "properties.updateAttributionSettings".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link UpdateAttributionSettings#execute()} method to invoke the
     * remote operation.
     *
     * @param name Output only. Resource name of this attribution settings resource. Format:
     *        properties/{property_id}/attributionSettings Example:
     *        "properties/1000/attributionSettings"
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAttributionSettings}
     * @return the request
     */
    public UpdateAttributionSettings updateAttributionSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAttributionSettings content) throws java.io.IOException {
      UpdateAttributionSettings result = new UpdateAttributionSettings(name, content);
      initialize(result);
      return result;
    }

    public class UpdateAttributionSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAttributionSettings> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+/attributionSettings$");

      /**
       * Updates attribution settings on a property.
       *
       * Create a request for the method "properties.updateAttributionSettings".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link UpdateAttributionSettings#execute()} method to invoke the
       * remote operation. <p> {@link UpdateAttributionSettings#initialize(com.google.api.client.googlea
       * pis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param name Output only. Resource name of this attribution settings resource. Format:
     *        properties/{property_id}/attributionSettings Example:
     *        "properties/1000/attributionSettings"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAttributionSettings}
       * @since 1.13
       */
      protected UpdateAttributionSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAttributionSettings content) {
        super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAttributionSettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/attributionSettings$");
        }
      }

      @Override
      public UpdateAttributionSettings set$Xgafv(java.lang.String $Xgafv) {
        return (UpdateAttributionSettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public UpdateAttributionSettings setAccessToken(java.lang.String accessToken) {
        return (UpdateAttributionSettings) super.setAccessToken(accessToken);
      }

      @Override
      public UpdateAttributionSettings setAlt(java.lang.String alt) {
        return (UpdateAttributionSettings) super.setAlt(alt);
      }

      @Override
      public UpdateAttributionSettings setCallback(java.lang.String callback) {
        return (UpdateAttributionSettings) super.setCallback(callback);
      }

      @Override
      public UpdateAttributionSettings setFields(java.lang.String fields) {
        return (UpdateAttributionSettings) super.setFields(fields);
      }

      @Override
      public UpdateAttributionSettings setKey(java.lang.String key) {
        return (UpdateAttributionSettings) super.setKey(key);
      }

      @Override
      public UpdateAttributionSettings setOauthToken(java.lang.String oauthToken) {
        return (UpdateAttributionSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateAttributionSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateAttributionSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateAttributionSettings setQuotaUser(java.lang.String quotaUser) {
        return (UpdateAttributionSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateAttributionSettings setUploadType(java.lang.String uploadType) {
        return (UpdateAttributionSettings) super.setUploadType(uploadType);
      }

      @Override
      public UpdateAttributionSettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (UpdateAttributionSettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Output only. Resource name of this attribution settings resource. Format:
       * properties/{property_id}/attributionSettings Example: "properties/1000/attributionSettings"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. Resource name of this attribution settings resource. Format:
     properties/{property_id}/attributionSettings Example: "properties/1000/attributionSettings"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Output only. Resource name of this attribution settings resource. Format:
       * properties/{property_id}/attributionSettings Example: "properties/1000/attributionSettings"
       */
      public UpdateAttributionSettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/attributionSettings$");
        }
        this.name = name;
        return this;
      }

      /**
       * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
       * one path with the string "*" to match all fields.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
     "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
     with the string "*" to match all fields.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
       * one path with the string "*" to match all fields.
       */
      public UpdateAttributionSettings setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public UpdateAttributionSettings set(String parameterName, Object value) {
        return (UpdateAttributionSettings) super.set(parameterName, value);
      }
    }
    /**
     * Updates the singleton data retention settings for this property.
     *
     * Create a request for the method "properties.updateDataRetentionSettings".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link UpdateDataRetentionSettings#execute()} method to invoke the
     * remote operation.
     *
     * @param name Output only. Resource name for this DataRetentionSetting resource. Format:
     *        properties/{property}/dataRetentionSettings
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRetentionSettings}
     * @return the request
     */
    public UpdateDataRetentionSettings updateDataRetentionSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRetentionSettings content) throws java.io.IOException {
      UpdateDataRetentionSettings result = new UpdateDataRetentionSettings(name, content);
      initialize(result);
      return result;
    }

    public class UpdateDataRetentionSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRetentionSettings> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+/dataRetentionSettings$");

      /**
       * Updates the singleton data retention settings for this property.
       *
       * Create a request for the method "properties.updateDataRetentionSettings".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link UpdateDataRetentionSettings#execute()} method to invoke
       * the remote operation. <p> {@link UpdateDataRetentionSettings#initialize(com.google.api.client.g
       * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param name Output only. Resource name for this DataRetentionSetting resource. Format:
     *        properties/{property}/dataRetentionSettings
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRetentionSettings}
       * @since 1.13
       */
      protected UpdateDataRetentionSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRetentionSettings content) {
        super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRetentionSettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/dataRetentionSettings$");
        }
      }

      @Override
      public UpdateDataRetentionSettings set$Xgafv(java.lang.String $Xgafv) {
        return (UpdateDataRetentionSettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public UpdateDataRetentionSettings setAccessToken(java.lang.String accessToken) {
        return (UpdateDataRetentionSettings) super.setAccessToken(accessToken);
      }

      @Override
      public UpdateDataRetentionSettings setAlt(java.lang.String alt) {
        return (UpdateDataRetentionSettings) super.setAlt(alt);
      }

      @Override
      public UpdateDataRetentionSettings setCallback(java.lang.String callback) {
        return (UpdateDataRetentionSettings) super.setCallback(callback);
      }

      @Override
      public UpdateDataRetentionSettings setFields(java.lang.String fields) {
        return (UpdateDataRetentionSettings) super.setFields(fields);
      }

      @Override
      public UpdateDataRetentionSettings setKey(java.lang.String key) {
        return (UpdateDataRetentionSettings) super.setKey(key);
      }

      @Override
      public UpdateDataRetentionSettings setOauthToken(java.lang.String oauthToken) {
        return (UpdateDataRetentionSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateDataRetentionSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateDataRetentionSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateDataRetentionSettings setQuotaUser(java.lang.String quotaUser) {
        return (UpdateDataRetentionSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateDataRetentionSettings setUploadType(java.lang.String uploadType) {
        return (UpdateDataRetentionSettings) super.setUploadType(uploadType);
      }

      @Override
      public UpdateDataRetentionSettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (UpdateDataRetentionSettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Output only. Resource name for this DataRetentionSetting resource. Format:
       * properties/{property}/dataRetentionSettings
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. Resource name for this DataRetentionSetting resource. Format:
     properties/{property}/dataRetentionSettings
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Output only. Resource name for this DataRetentionSetting resource. Format:
       * properties/{property}/dataRetentionSettings
       */
      public UpdateDataRetentionSettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/dataRetentionSettings$");
        }
        this.name = name;
        return this;
      }

      /**
       * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
       * one path with the string "*" to match all fields.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
     "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
     with the string "*" to match all fields.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
       * one path with the string "*" to match all fields.
       */
      public UpdateDataRetentionSettings setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public UpdateDataRetentionSettings set(String parameterName, Object value) {
        return (UpdateDataRetentionSettings) super.set(parameterName, value);
      }
    }
    /**
     * Updates Google Signals settings for a property.
     *
     * Create a request for the method "properties.updateGoogleSignalsSettings".
     *
     * This request holds the parameters needed by the analyticsadmin server.  After setting any
     * optional parameters, call the {@link UpdateGoogleSignalsSettings#execute()} method to invoke the
     * remote operation.
     *
     * @param name Output only. Resource name of this setting. Format: properties/{property_id}/googleSignalsSettings
     *        Example: "properties/1000/googleSignalsSettings"
     * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleSignalsSettings}
     * @return the request
     */
    public UpdateGoogleSignalsSettings updateGoogleSignalsSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleSignalsSettings content) throws java.io.IOException {
      UpdateGoogleSignalsSettings result = new UpdateGoogleSignalsSettings(name, content);
      initialize(result);
      return result;
    }

    public class UpdateGoogleSignalsSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleSignalsSettings> {

      private static final String REST_PATH = "v1alpha/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^properties/[^/]+/googleSignalsSettings$");

      /**
       * Updates Google Signals settings for a property.
       *
       * Create a request for the method "properties.updateGoogleSignalsSettings".
       *
       * This request holds the parameters needed by the the analyticsadmin server.  After setting any
       * optional parameters, call the {@link UpdateGoogleSignalsSettings#execute()} method to invoke
       * the remote operation. <p> {@link UpdateGoogleSignalsSettings#initialize(com.google.api.client.g
       * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
       * immediately after invoking the constructor. </p>
       *
       * @param name Output only. Resource name of this setting. Format: properties/{property_id}/googleSignalsSettings
     *        Example: "properties/1000/googleSignalsSettings"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleSignalsSettings}
       * @since 1.13
       */
      protected UpdateGoogleSignalsSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleSignalsSettings content) {
        super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleSignalsSettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/googleSignalsSettings$");
        }
      }

      @Override
      public UpdateGoogleSignalsSettings set$Xgafv(java.lang.String $Xgafv) {
        return (UpdateGoogleSignalsSettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public UpdateGoogleSignalsSettings setAccessToken(java.lang.String accessToken) {
        return (UpdateGoogleSignalsSettings) super.setAccessToken(accessToken);
      }

      @Override
      public UpdateGoogleSignalsSettings setAlt(java.lang.String alt) {
        return (UpdateGoogleSignalsSettings) super.setAlt(alt);
      }

      @Override
      public UpdateGoogleSignalsSettings setCallback(java.lang.String callback) {
        return (UpdateGoogleSignalsSettings) super.setCallback(callback);
      }

      @Override
      public UpdateGoogleSignalsSettings setFields(java.lang.String fields) {
        return (UpdateGoogleSignalsSettings) super.setFields(fields);
      }

      @Override
      public UpdateGoogleSignalsSettings setKey(java.lang.String key) {
        return (UpdateGoogleSignalsSettings) super.setKey(key);
      }

      @Override
      public UpdateGoogleSignalsSettings setOauthToken(java.lang.String oauthToken) {
        return (UpdateGoogleSignalsSettings) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateGoogleSignalsSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateGoogleSignalsSettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateGoogleSignalsSettings setQuotaUser(java.lang.String quotaUser) {
        return (UpdateGoogleSignalsSettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateGoogleSignalsSettings setUploadType(java.lang.String uploadType) {
        return (UpdateGoogleSignalsSettings) super.setUploadType(uploadType);
      }

      @Override
      public UpdateGoogleSignalsSettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (UpdateGoogleSignalsSettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Output only. Resource name of this setting. Format:
       * properties/{property_id}/googleSignalsSettings Example:
       * "properties/1000/googleSignalsSettings"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. Resource name of this setting. Format: properties/{property_id}/googleSignalsSettings
     Example: "properties/1000/googleSignalsSettings"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Output only. Resource name of this setting. Format:
       * properties/{property_id}/googleSignalsSettings Example:
       * "properties/1000/googleSignalsSettings"
       */
      public UpdateGoogleSignalsSettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^properties/[^/]+/googleSignalsSettings$");
        }
        this.name = name;
        return this;
      }

      /**
       * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
       * one path with the string "*" to match all fields.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
     "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
     with the string "*" to match all fields.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
       * one path with the string "*" to match all fields.
       */
      public UpdateGoogleSignalsSettings setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public UpdateGoogleSignalsSettings set(String parameterName, Object value) {
        return (UpdateGoogleSignalsSettings) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the AccessBindings collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.AccessBindings.List request = analyticsadmin.accessBindings().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AccessBindings accessBindings() {
      return new AccessBindings();
    }

    /**
     * The "accessBindings" collection of methods.
     */
    public class AccessBindings {

      /**
       * Creates information about multiple access bindings to an account or property. This method is
       * transactional. If any AccessBinding cannot be created, none of the AccessBindings will be
       * created.
       *
       * Create a request for the method "accessBindings.batchCreate".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that owns the access bindings. The parent field in the
       *        CreateAccessBindingRequest messages must either be empty or match this field. Formats: -
       *        accounts/{account} - properties/{property}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest}
       * @return the request
       */
      public BatchCreate batchCreate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest content) throws java.io.IOException {
        BatchCreate result = new BatchCreate(parent, content);
        initialize(result);
        return result;
      }

      public class BatchCreate extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings:batchCreate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates information about multiple access bindings to an account or property. This method is
         * transactional. If any AccessBinding cannot be created, none of the AccessBindings will be
         * created.
         *
         * Create a request for the method "accessBindings.batchCreate".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchCreate#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchCreate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that owns the access bindings. The parent field in the
       *        CreateAccessBindingRequest messages must either be empty or match this field. Formats: -
       *        accounts/{account} - properties/{property}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest}
         * @since 1.13
         */
        protected BatchCreate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchCreateAccessBindingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public BatchCreate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchCreate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchCreate setAccessToken(java.lang.String accessToken) {
          return (BatchCreate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchCreate setAlt(java.lang.String alt) {
          return (BatchCreate) super.setAlt(alt);
        }

        @Override
        public BatchCreate setCallback(java.lang.String callback) {
          return (BatchCreate) super.setCallback(callback);
        }

        @Override
        public BatchCreate setFields(java.lang.String fields) {
          return (BatchCreate) super.setFields(fields);
        }

        @Override
        public BatchCreate setKey(java.lang.String key) {
          return (BatchCreate) super.setKey(key);
        }

        @Override
        public BatchCreate setOauthToken(java.lang.String oauthToken) {
          return (BatchCreate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchCreate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchCreate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchCreate setQuotaUser(java.lang.String quotaUser) {
          return (BatchCreate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchCreate setUploadType(java.lang.String uploadType) {
          return (BatchCreate) super.setUploadType(uploadType);
        }

        @Override
        public BatchCreate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchCreate) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that owns the access bindings. The parent field in the
         * CreateAccessBindingRequest messages must either be empty or match this field. Formats: -
         * accounts/{account} - properties/{property}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that owns the access bindings. The parent field in the
       CreateAccessBindingRequest messages must either be empty or match this field. Formats: -
       accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that owns the access bindings. The parent field in the
         * CreateAccessBindingRequest messages must either be empty or match this field. Formats: -
         * accounts/{account} - properties/{property}
         */
        public BatchCreate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchCreate set(String parameterName, Object value) {
          return (BatchCreate) super.set(parameterName, value);
        }
      }
      /**
       * Deletes information about multiple users' links to an account or property.
       *
       * Create a request for the method "accessBindings.batchDelete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that owns the access bindings. The parent of all provided values
       *        for the 'names' field in DeleteAccessBindingRequest messages must match this field.
       *        Formats: - accounts/{account} - properties/{property}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest}
       * @return the request
       */
      public BatchDelete batchDelete(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest content) throws java.io.IOException {
        BatchDelete result = new BatchDelete(parent, content);
        initialize(result);
        return result;
      }

      public class BatchDelete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings:batchDelete";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Deletes information about multiple users' links to an account or property.
         *
         * Create a request for the method "accessBindings.batchDelete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchDelete#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchDelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that owns the access bindings. The parent of all provided values
       *        for the 'names' field in DeleteAccessBindingRequest messages must match this field.
       *        Formats: - accounts/{account} - properties/{property}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest}
         * @since 1.13
         */
        protected BatchDelete(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchDeleteAccessBindingsRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public BatchDelete set$Xgafv(java.lang.String $Xgafv) {
          return (BatchDelete) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchDelete setAccessToken(java.lang.String accessToken) {
          return (BatchDelete) super.setAccessToken(accessToken);
        }

        @Override
        public BatchDelete setAlt(java.lang.String alt) {
          return (BatchDelete) super.setAlt(alt);
        }

        @Override
        public BatchDelete setCallback(java.lang.String callback) {
          return (BatchDelete) super.setCallback(callback);
        }

        @Override
        public BatchDelete setFields(java.lang.String fields) {
          return (BatchDelete) super.setFields(fields);
        }

        @Override
        public BatchDelete setKey(java.lang.String key) {
          return (BatchDelete) super.setKey(key);
        }

        @Override
        public BatchDelete setOauthToken(java.lang.String oauthToken) {
          return (BatchDelete) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchDelete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchDelete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchDelete setQuotaUser(java.lang.String quotaUser) {
          return (BatchDelete) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchDelete setUploadType(java.lang.String uploadType) {
          return (BatchDelete) super.setUploadType(uploadType);
        }

        @Override
        public BatchDelete setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchDelete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided values for the 'names' field in DeleteAccessBindingRequest messages must match
         * this field. Formats: - accounts/{account} - properties/{property}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that owns the access bindings. The parent of all provided values
       for the 'names' field in DeleteAccessBindingRequest messages must match this field. Formats: -
       accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided values for the 'names' field in DeleteAccessBindingRequest messages must match
         * this field. Formats: - accounts/{account} - properties/{property}
         */
        public BatchDelete setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchDelete set(String parameterName, Object value) {
          return (BatchDelete) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about multiple access bindings to an account or property.
       *
       * Create a request for the method "accessBindings.batchGet".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The account or property that owns the access bindings. The parent of all provided values
       *        for the 'names' field must match this field. Formats: - accounts/{account} -
       *        properties/{property}
       * @return the request
       */
      public BatchGet batchGet(java.lang.String parent) throws java.io.IOException {
        BatchGet result = new BatchGet(parent);
        initialize(result);
        return result;
      }

      public class BatchGet extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchGetAccessBindingsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings:batchGet";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Gets information about multiple access bindings to an account or property.
         *
         * Create a request for the method "accessBindings.batchGet".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchGet#execute()} method to invoke the remote operation.
         * <p> {@link
         * BatchGet#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that owns the access bindings. The parent of all provided values
       *        for the 'names' field must match this field. Formats: - accounts/{account} -
       *        properties/{property}
         * @since 1.13
         */
        protected BatchGet(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchGetAccessBindingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public BatchGet set$Xgafv(java.lang.String $Xgafv) {
          return (BatchGet) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchGet setAccessToken(java.lang.String accessToken) {
          return (BatchGet) super.setAccessToken(accessToken);
        }

        @Override
        public BatchGet setAlt(java.lang.String alt) {
          return (BatchGet) super.setAlt(alt);
        }

        @Override
        public BatchGet setCallback(java.lang.String callback) {
          return (BatchGet) super.setCallback(callback);
        }

        @Override
        public BatchGet setFields(java.lang.String fields) {
          return (BatchGet) super.setFields(fields);
        }

        @Override
        public BatchGet setKey(java.lang.String key) {
          return (BatchGet) super.setKey(key);
        }

        @Override
        public BatchGet setOauthToken(java.lang.String oauthToken) {
          return (BatchGet) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchGet setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchGet) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchGet setQuotaUser(java.lang.String quotaUser) {
          return (BatchGet) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchGet setUploadType(java.lang.String uploadType) {
          return (BatchGet) super.setUploadType(uploadType);
        }

        @Override
        public BatchGet setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchGet) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided values for the 'names' field must match this field. Formats: -
         * accounts/{account} - properties/{property}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that owns the access bindings. The parent of all provided values
       for the 'names' field must match this field. Formats: - accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided values for the 'names' field must match this field. Formats: -
         * accounts/{account} - properties/{property}
         */
        public BatchGet setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Required. The names of the access bindings to retrieve. A maximum of 1000 access bindings
         * can be retrieved in a batch. Formats: - accounts/{account}/accessBindings/{accessBinding}
         * - properties/{property}/accessBindings/{accessBinding}
         */
        @com.google.api.client.util.Key
        private java.util.List<java.lang.String> names;

        /** Required. The names of the access bindings to retrieve. A maximum of 1000 access bindings can be
       retrieved in a batch. Formats: - accounts/{account}/accessBindings/{accessBinding} -
       properties/{property}/accessBindings/{accessBinding}
         */
        public java.util.List<java.lang.String> getNames() {
          return names;
        }

        /**
         * Required. The names of the access bindings to retrieve. A maximum of 1000 access bindings
         * can be retrieved in a batch. Formats: - accounts/{account}/accessBindings/{accessBinding}
         * - properties/{property}/accessBindings/{accessBinding}
         */
        public BatchGet setNames(java.util.List<java.lang.String> names) {
          this.names = names;
          return this;
        }

        @Override
        public BatchGet set(String parameterName, Object value) {
          return (BatchGet) super.set(parameterName, value);
        }
      }
      /**
       * Updates information about multiple access bindings to an account or property.
       *
       * Create a request for the method "accessBindings.batchUpdate".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
       * operation.
       *
       * @param parent Required. The account or property that owns the access bindings. The parent of all provided
       *        AccessBinding in UpdateAccessBindingRequest messages must match this field. Formats: -
       *        accounts/{account} - properties/{property}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest}
       * @return the request
       */
      public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest content) throws java.io.IOException {
        BatchUpdate result = new BatchUpdate(parent, content);
        initialize(result);
        return result;
      }

      public class BatchUpdate extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings:batchUpdate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Updates information about multiple access bindings to an account or property.
         *
         * Create a request for the method "accessBindings.batchUpdate".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link BatchUpdate#execute()} method to invoke the remote
         * operation. <p> {@link
         * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The account or property that owns the access bindings. The parent of all provided
       *        AccessBinding in UpdateAccessBindingRequest messages must match this field. Formats: -
       *        accounts/{account} - properties/{property}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest}
         * @since 1.13
         */
        protected BatchUpdate(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBatchUpdateAccessBindingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
          return (BatchUpdate) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchUpdate setAccessToken(java.lang.String accessToken) {
          return (BatchUpdate) super.setAccessToken(accessToken);
        }

        @Override
        public BatchUpdate setAlt(java.lang.String alt) {
          return (BatchUpdate) super.setAlt(alt);
        }

        @Override
        public BatchUpdate setCallback(java.lang.String callback) {
          return (BatchUpdate) super.setCallback(callback);
        }

        @Override
        public BatchUpdate setFields(java.lang.String fields) {
          return (BatchUpdate) super.setFields(fields);
        }

        @Override
        public BatchUpdate setKey(java.lang.String key) {
          return (BatchUpdate) super.setKey(key);
        }

        @Override
        public BatchUpdate setOauthToken(java.lang.String oauthToken) {
          return (BatchUpdate) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchUpdate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
          return (BatchUpdate) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchUpdate setUploadType(java.lang.String uploadType) {
          return (BatchUpdate) super.setUploadType(uploadType);
        }

        @Override
        public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided AccessBinding in UpdateAccessBindingRequest messages must match this field.
         * Formats: - accounts/{account} - properties/{property}
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The account or property that owns the access bindings. The parent of all provided
       AccessBinding in UpdateAccessBindingRequest messages must match this field. Formats: -
       accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The account or property that owns the access bindings. The parent of all
         * provided AccessBinding in UpdateAccessBindingRequest messages must match this field.
         * Formats: - accounts/{account} - properties/{property}
         */
        public BatchUpdate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public BatchUpdate set(String parameterName, Object value) {
          return (BatchUpdate) super.set(parameterName, value);
        }
      }
      /**
       * Creates an access binding on an account or property.
       *
       * Create a request for the method "accessBindings.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Formats: - accounts/{account} - properties/{property}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates an access binding on an account or property.
         *
         * Create a request for the method "accessBindings.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Formats: - accounts/{account} - properties/{property}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Formats: - accounts/{account} - properties/{property} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Formats: - accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Formats: - accounts/{account} - properties/{property} */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an access binding on an account or property.
       *
       * Create a request for the method "accessBindings.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Formats: - accounts/{account}/accessBindings/{accessBinding} -
       *        properties/{property}/accessBindings/{accessBinding}
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/accessBindings/[^/]+$");

        /**
         * Deletes an access binding on an account or property.
         *
         * Create a request for the method "accessBindings.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Formats: - accounts/{account}/accessBindings/{accessBinding} -
       *        properties/{property}/accessBindings/{accessBinding}
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/accessBindings/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Formats: - accounts/{account}/accessBindings/{accessBinding} -
         * properties/{property}/accessBindings/{accessBinding}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Formats: - accounts/{account}/accessBindings/{accessBinding} -
       properties/{property}/accessBindings/{accessBinding}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Formats: - accounts/{account}/accessBindings/{accessBinding} -
         * properties/{property}/accessBindings/{accessBinding}
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/accessBindings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets information about an access binding.
       *
       * Create a request for the method "accessBindings.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the access binding to retrieve. Formats: -
       *        accounts/{account}/accessBindings/{accessBinding} -
       *        properties/{property}/accessBindings/{accessBinding}
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/accessBindings/[^/]+$");

        /**
         * Gets information about an access binding.
         *
         * Create a request for the method "accessBindings.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the access binding to retrieve. Formats: -
       *        accounts/{account}/accessBindings/{accessBinding} -
       *        properties/{property}/accessBindings/{accessBinding}
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/accessBindings/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the access binding to retrieve. Formats: -
         * accounts/{account}/accessBindings/{accessBinding} -
         * properties/{property}/accessBindings/{accessBinding}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the access binding to retrieve. Formats: -
       accounts/{account}/accessBindings/{accessBinding} -
       properties/{property}/accessBindings/{accessBinding}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the access binding to retrieve. Formats: -
         * accounts/{account}/accessBindings/{accessBinding} -
         * properties/{property}/accessBindings/{accessBinding}
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/accessBindings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all access bindings on an account or property.
       *
       * Create a request for the method "accessBindings.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Formats: - accounts/{account} - properties/{property}
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccessBindingsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/accessBindings";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists all access bindings on an account or property.
         *
         * Create a request for the method "accessBindings.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Formats: - accounts/{account} - properties/{property}
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAccessBindingsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Formats: - accounts/{account} - properties/{property} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Formats: - accounts/{account} - properties/{property}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Formats: - accounts/{account} - properties/{property} */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of access bindings to return. The service may return fewer than this
         * value. If unspecified, at most 200 access bindings will be returned. The maximum value is
         * 500; values above 500 will be coerced to 500.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of access bindings to return. The service may return fewer than this value. If
       unspecified, at most 200 access bindings will be returned. The maximum value is 500; values above
       500 will be coerced to 500.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of access bindings to return. The service may return fewer than this
         * value. If unspecified, at most 200 access bindings will be returned. The maximum value is
         * 500; values above 500 will be coerced to 500.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListAccessBindings` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListAccessBindings` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListAccessBindings` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListAccessBindings` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListAccessBindings` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListAccessBindings` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an access binding on an account or property.
       *
       * Create a request for the method "accessBindings.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name of this binding. Format:
       *        accounts/{account}/accessBindings/{access_binding} or
       *        properties/{property}/accessBindings/{access_binding} Example:
       *        "accounts/100/accessBindings/200"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/accessBindings/[^/]+$");

        /**
         * Updates an access binding on an account or property.
         *
         * Create a request for the method "accessBindings.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of this binding. Format:
       *        accounts/{account}/accessBindings/{access_binding} or
       *        properties/{property}/accessBindings/{access_binding} Example:
       *        "accounts/100/accessBindings/200"
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAccessBinding.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/accessBindings/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of this binding. Format:
         * accounts/{account}/accessBindings/{access_binding} or
         * properties/{property}/accessBindings/{access_binding} Example:
         * "accounts/100/accessBindings/200"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of this binding. Format:
       accounts/{account}/accessBindings/{access_binding} or
       properties/{property}/accessBindings/{access_binding} Example: "accounts/100/accessBindings/200"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of this binding. Format:
         * accounts/{account}/accessBindings/{access_binding} or
         * properties/{property}/accessBindings/{access_binding} Example:
         * "accounts/100/accessBindings/200"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/accessBindings/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the AdSenseLinks collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.AdSenseLinks.List request = analyticsadmin.adSenseLinks().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public AdSenseLinks adSenseLinks() {
      return new AdSenseLinks();
    }

    /**
     * The "adSenseLinks" collection of methods.
     */
    public class AdSenseLinks {

      /**
       * Creates an AdSenseLink.
       *
       * Create a request for the method "adSenseLinks.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The property for which to create an AdSense Link. Format: properties/{propertyId} Example:
       *        properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAdSenseLink}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAdSenseLink content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAdSenseLink> {

        private static final String REST_PATH = "v1alpha/{+parent}/adSenseLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates an AdSenseLink.
         *
         * Create a request for the method "adSenseLinks.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The property for which to create an AdSense Link. Format: properties/{propertyId} Example:
       *        properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAdSenseLink}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAdSenseLink content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAdSenseLink.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The property for which to create an AdSense Link. Format:
         * properties/{propertyId} Example: properties/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The property for which to create an AdSense Link. Format: properties/{propertyId}
       Example: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The property for which to create an AdSense Link. Format:
         * properties/{propertyId} Example: properties/1234
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an AdSenseLink.
       *
       * Create a request for the method "adSenseLinks.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Unique identifier for the AdSense Link to be deleted. Format:
       *        properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/adSenseLinks/[^/]+$");

        /**
         * Deletes an AdSenseLink.
         *
         * Create a request for the method "adSenseLinks.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Unique identifier for the AdSense Link to be deleted. Format:
       *        properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/adSenseLinks/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Unique identifier for the AdSense Link to be deleted. Format:
         * properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Unique identifier for the AdSense Link to be deleted. Format:
       properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Unique identifier for the AdSense Link to be deleted. Format:
         * properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/adSenseLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Looks up a single AdSenseLink.
       *
       * Create a request for the method "adSenseLinks.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Unique identifier for the AdSense Link requested. Format:
       *        properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAdSenseLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/adSenseLinks/[^/]+$");

        /**
         * Looks up a single AdSenseLink.
         *
         * Create a request for the method "adSenseLinks.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Unique identifier for the AdSense Link requested. Format:
       *        properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAdSenseLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/adSenseLinks/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Unique identifier for the AdSense Link requested. Format:
         * properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Unique identifier for the AdSense Link requested. Format:
       properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Unique identifier for the AdSense Link requested. Format:
         * properties/{propertyId}/adSenseLinks/{linkId} Example: properties/1234/adSenseLinks/5678
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/adSenseLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists AdSenseLinks on a property.
       *
       * Create a request for the method "adSenseLinks.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource name of the parent property. Format: properties/{propertyId} Example:
       *        properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAdSenseLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/adSenseLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists AdSenseLinks on a property.
         *
         * Create a request for the method "adSenseLinks.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource name of the parent property. Format: properties/{propertyId} Example:
       *        properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAdSenseLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name of the parent property. Format: properties/{propertyId} Example:
         * properties/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource name of the parent property. Format: properties/{propertyId} Example:
       properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Resource name of the parent property. Format: properties/{propertyId} Example:
         * properties/1234
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token received from a previous `ListAdSenseLinks` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to `ListAdSenseLinks`
         * must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token received from a previous `ListAdSenseLinks` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListAdSenseLinks` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token received from a previous `ListAdSenseLinks` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to `ListAdSenseLinks`
         * must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Audiences collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.Audiences.List request = analyticsadmin.audiences().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Audiences audiences() {
      return new Audiences();
    }

    /**
     * The "audiences" collection of methods.
     */
    public class Audiences {

      /**
       * Archives an Audience on a property.
       *
       * Create a request for the method "audiences.archive".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Archive#execute()} method to invoke the remote operation.
       *
       * @param name Required. Example format: properties/1234/audiences/5678
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveAudienceRequest}
       * @return the request
       */
      public Archive archive(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveAudienceRequest content) throws java.io.IOException {
        Archive result = new Archive(name, content);
        initialize(result);
        return result;
      }

      public class Archive extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}:archive";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/audiences/[^/]+$");

        /**
         * Archives an Audience on a property.
         *
         * Create a request for the method "audiences.archive".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Archive#execute()} method to invoke the remote operation.
         * <p> {@link
         * Archive#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Example format: properties/1234/audiences/5678
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveAudienceRequest}
         * @since 1.13
         */
        protected Archive(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveAudienceRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/audiences/[^/]+$");
          }
        }

        @Override
        public Archive set$Xgafv(java.lang.String $Xgafv) {
          return (Archive) super.set$Xgafv($Xgafv);
        }

        @Override
        public Archive setAccessToken(java.lang.String accessToken) {
          return (Archive) super.setAccessToken(accessToken);
        }

        @Override
        public Archive setAlt(java.lang.String alt) {
          return (Archive) super.setAlt(alt);
        }

        @Override
        public Archive setCallback(java.lang.String callback) {
          return (Archive) super.setCallback(callback);
        }

        @Override
        public Archive setFields(java.lang.String fields) {
          return (Archive) super.setFields(fields);
        }

        @Override
        public Archive setKey(java.lang.String key) {
          return (Archive) super.setKey(key);
        }

        @Override
        public Archive setOauthToken(java.lang.String oauthToken) {
          return (Archive) super.setOauthToken(oauthToken);
        }

        @Override
        public Archive setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Archive) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Archive setQuotaUser(java.lang.String quotaUser) {
          return (Archive) super.setQuotaUser(quotaUser);
        }

        @Override
        public Archive setUploadType(java.lang.String uploadType) {
          return (Archive) super.setUploadType(uploadType);
        }

        @Override
        public Archive setUploadProtocol(java.lang.String uploadProtocol) {
          return (Archive) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234/audiences/5678 */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Example format: properties/1234/audiences/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Example format: properties/1234/audiences/5678 */
        public Archive setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/audiences/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Archive set(String parameterName, Object value) {
          return (Archive) super.set(parameterName, value);
        }
      }
      /**
       * Creates an Audience.
       *
       * Create a request for the method "audiences.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience> {

        private static final String REST_PATH = "v1alpha/{+parent}/audiences";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates an Audience.
         *
         * Create a request for the method "audiences.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single Audience. Audiences created before 2020 may not be supported. Default
       * audiences will not show filter definitions.
       *
       * Create a request for the method "audiences.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Audience to get. Example format: properties/1234/audiences/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/audiences/[^/]+$");

        /**
         * Lookup for a single Audience. Audiences created before 2020 may not be supported. Default
         * audiences will not show filter definitions.
         *
         * Create a request for the method "audiences.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the Audience to get. Example format: properties/1234/audiences/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/audiences/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Audience to get. Example format: properties/1234/audiences/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Audience to get. Example format: properties/1234/audiences/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Audience to get. Example format: properties/1234/audiences/5678
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/audiences/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists Audiences on a property. Audiences created before 2020 may not be supported. Default
       * audiences will not show filter definitions.
       *
       * Create a request for the method "audiences.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAudiencesResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/audiences";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists Audiences on a property. Audiences created before 2020 may not be supported. Default
         * audiences will not show filter definitions.
         *
         * Create a request for the method "audiences.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListAudiencesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListAudiences` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListAudiences` must
         * match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListAudiences` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListAudiences` must match the
       call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListAudiences` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListAudiences` must
         * match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an Audience on a property.
       *
       * Create a request for the method "audiences.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. The resource name for this Audience resource. Format:
       *        properties/{propertyId}/audiences/{audienceId}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/audiences/[^/]+$");

        /**
         * Updates an Audience on a property.
         *
         * Create a request for the method "audiences.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. The resource name for this Audience resource. Format:
       *        properties/{propertyId}/audiences/{audienceId}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaAudience.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/audiences/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. The resource name for this Audience resource. Format:
         * properties/{propertyId}/audiences/{audienceId}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. The resource name for this Audience resource. Format:
       properties/{propertyId}/audiences/{audienceId}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. The resource name for this Audience resource. Format:
         * properties/{propertyId}/audiences/{audienceId}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/audiences/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
       with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the BigQueryLinks collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.BigQueryLinks.List request = analyticsadmin.bigQueryLinks().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public BigQueryLinks bigQueryLinks() {
      return new BigQueryLinks();
    }

    /**
     * The "bigQueryLinks" collection of methods.
     */
    public class BigQueryLinks {

      /**
       * Creates a BigQueryLink.
       *
       * Create a request for the method "bigQueryLinks.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink> {

        private static final String REST_PATH = "v1alpha/{+parent}/bigQueryLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a BigQueryLink.
         *
         * Create a request for the method "bigQueryLinks.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a BigQueryLink on a property.
       *
       * Create a request for the method "bigQueryLinks.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The BigQueryLink to delete. Example format: properties/1234/bigQueryLinks/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/bigQueryLinks/[^/]+$");

        /**
         * Deletes a BigQueryLink on a property.
         *
         * Create a request for the method "bigQueryLinks.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The BigQueryLink to delete. Example format: properties/1234/bigQueryLinks/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/bigQueryLinks/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The BigQueryLink to delete. Example format: properties/1234/bigQueryLinks/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The BigQueryLink to delete. Example format: properties/1234/bigQueryLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The BigQueryLink to delete. Example format: properties/1234/bigQueryLinks/5678
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/bigQueryLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single BigQuery Link.
       *
       * Create a request for the method "bigQueryLinks.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the BigQuery link to lookup. Format:
       *        properties/{property_id}/bigQueryLinks/{bigquery_link_id} Example:
       *        properties/123/bigQueryLinks/456
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/bigQueryLinks/[^/]+$");

        /**
         * Lookup for a single BigQuery Link.
         *
         * Create a request for the method "bigQueryLinks.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the BigQuery link to lookup. Format:
       *        properties/{property_id}/bigQueryLinks/{bigquery_link_id} Example:
       *        properties/123/bigQueryLinks/456
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/bigQueryLinks/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the BigQuery link to lookup. Format:
         * properties/{property_id}/bigQueryLinks/{bigquery_link_id} Example:
         * properties/123/bigQueryLinks/456
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the BigQuery link to lookup. Format:
       properties/{property_id}/bigQueryLinks/{bigquery_link_id} Example: properties/123/bigQueryLinks/456
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the BigQuery link to lookup. Format:
         * properties/{property_id}/bigQueryLinks/{bigquery_link_id} Example:
         * properties/123/bigQueryLinks/456
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/bigQueryLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists BigQuery Links on a property.
       *
       * Create a request for the method "bigQueryLinks.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the property to list BigQuery links under. Format: properties/{property_id}
       *        Example: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListBigQueryLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/bigQueryLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists BigQuery Links on a property.
         *
         * Create a request for the method "bigQueryLinks.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the property to list BigQuery links under. Format: properties/{property_id}
       *        Example: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListBigQueryLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the property to list BigQuery links under. Format:
         * properties/{property_id} Example: properties/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the property to list BigQuery links under. Format: properties/{property_id}
       Example: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the property to list BigQuery links under. Format:
         * properties/{property_id} Example: properties/1234
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. The service may return fewer than this value,
         * even if there are additional pages. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. The service may return fewer than this value, even if
       there are additional pages. If unspecified, at most 50 resources will be returned. The maximum
       value is 200; (higher values will be coerced to the maximum)
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. The service may return fewer than this value,
         * even if there are additional pages. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListBigQueryLinks` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListBigQueryLinks` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListBigQueryLinks` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListBigQueryLinks` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListBigQueryLinks` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListBigQueryLinks` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a BigQueryLink.
       *
       * Create a request for the method "bigQueryLinks.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name of this BigQuery link. Format:
       *        'properties/{property_id}/bigQueryLinks/{bigquery_link_id}' Format:
       *        'properties/1234/bigQueryLinks/abc567'
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/bigQueryLinks/[^/]+$");

        /**
         * Updates a BigQueryLink.
         *
         * Create a request for the method "bigQueryLinks.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of this BigQuery link. Format:
       *        'properties/{property_id}/bigQueryLinks/{bigquery_link_id}' Format:
       *        'properties/1234/bigQueryLinks/abc567'
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaBigQueryLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/bigQueryLinks/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of this BigQuery link. Format:
         * 'properties/{property_id}/bigQueryLinks/{bigquery_link_id}' Format:
         * 'properties/1234/bigQueryLinks/abc567'
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of this BigQuery link. Format:
       'properties/{property_id}/bigQueryLinks/{bigquery_link_id}' Format:
       'properties/1234/bigQueryLinks/abc567'
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of this BigQuery link. Format:
         * 'properties/{property_id}/bigQueryLinks/{bigquery_link_id}' Format:
         * 'properties/1234/bigQueryLinks/abc567'
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/bigQueryLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
       with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the CalculatedMetrics collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.CalculatedMetrics.List request = analyticsadmin.calculatedMetrics().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public CalculatedMetrics calculatedMetrics() {
      return new CalculatedMetrics();
    }

    /**
     * The "calculatedMetrics" collection of methods.
     */
    public class CalculatedMetrics {

      /**
       * Creates a CalculatedMetric.
       *
       * Create a request for the method "calculatedMetrics.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Format: properties/{property_id} Example: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric> {

        private static final String REST_PATH = "v1alpha/{+parent}/calculatedMetrics";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a CalculatedMetric.
         *
         * Create a request for the method "calculatedMetrics.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Format: properties/{property_id} Example: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: properties/{property_id} Example: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Format: properties/{property_id} Example: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Format: properties/{property_id} Example: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Required. The ID to use for the calculated metric which will become the final component
         * of the calculated metric's resource name. This value should be 1-80 characters and valid
         * characters are /[a-zA-Z0-9_]/, no spaces allowed. calculated_metric_id must be unique
         * between all calculated metrics under a property. The calculated_metric_id is used when
         * referencing this calculated metric from external APIs, for example,
         * "calcMetric:{calculated_metric_id}".
         */
        @com.google.api.client.util.Key
        private java.lang.String calculatedMetricId;

        /** Required. The ID to use for the calculated metric which will become the final component of the
       calculated metric's resource name. This value should be 1-80 characters and valid characters are
       /[a-zA-Z0-9_]/, no spaces allowed. calculated_metric_id must be unique between all calculated
       metrics under a property. The calculated_metric_id is used when referencing this calculated metric
       from external APIs, for example, "calcMetric:{calculated_metric_id}".
         */
        public java.lang.String getCalculatedMetricId() {
          return calculatedMetricId;
        }

        /**
         * Required. The ID to use for the calculated metric which will become the final component
         * of the calculated metric's resource name. This value should be 1-80 characters and valid
         * characters are /[a-zA-Z0-9_]/, no spaces allowed. calculated_metric_id must be unique
         * between all calculated metrics under a property. The calculated_metric_id is used when
         * referencing this calculated metric from external APIs, for example,
         * "calcMetric:{calculated_metric_id}".
         */
        public Create setCalculatedMetricId(java.lang.String calculatedMetricId) {
          this.calculatedMetricId = calculatedMetricId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a CalculatedMetric on a property.
       *
       * Create a request for the method "calculatedMetrics.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the CalculatedMetric to delete. Format:
       *        properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example:
       *        properties/1234/calculatedMetrics/Metric01
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/calculatedMetrics/[^/]+$");

        /**
         * Deletes a CalculatedMetric on a property.
         *
         * Create a request for the method "calculatedMetrics.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the CalculatedMetric to delete. Format:
       *        properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example:
       *        properties/1234/calculatedMetrics/Metric01
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/calculatedMetrics/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the CalculatedMetric to delete. Format:
         * properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example:
         * properties/1234/calculatedMetrics/Metric01
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the CalculatedMetric to delete. Format:
       properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example:
       properties/1234/calculatedMetrics/Metric01
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the CalculatedMetric to delete. Format:
         * properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example:
         * properties/1234/calculatedMetrics/Metric01
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/calculatedMetrics/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single CalculatedMetric.
       *
       * Create a request for the method "calculatedMetrics.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the CalculatedMetric to get. Format:
       *        properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example:
       *        properties/1234/calculatedMetrics/Metric01
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/calculatedMetrics/[^/]+$");

        /**
         * Lookup for a single CalculatedMetric.
         *
         * Create a request for the method "calculatedMetrics.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the CalculatedMetric to get. Format:
       *        properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example:
       *        properties/1234/calculatedMetrics/Metric01
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/calculatedMetrics/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the CalculatedMetric to get. Format:
         * properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example:
         * properties/1234/calculatedMetrics/Metric01
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the CalculatedMetric to get. Format:
       properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example:
       properties/1234/calculatedMetrics/Metric01
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the CalculatedMetric to get. Format:
         * properties/{property_id}/calculatedMetrics/{calculated_metric_id} Example:
         * properties/1234/calculatedMetrics/Metric01
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/calculatedMetrics/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists CalculatedMetrics on a property.
       *
       * Create a request for the method "calculatedMetrics.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListCalculatedMetricsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/calculatedMetrics";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists CalculatedMetrics on a property.
         *
         * Create a request for the method "calculatedMetrics.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListCalculatedMetricsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of resources to return. If unspecified, at most 50 resources
         * will be returned. The maximum value is 200 (higher values will be coerced to the
         * maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of resources to return. If unspecified, at most 50 resources will be
       returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of resources to return. If unspecified, at most 50 resources
         * will be returned. The maximum value is 200 (higher values will be coerced to the
         * maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListCalculatedMetrics` call. Provide
         * this to retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListCalculatedMetrics` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListCalculatedMetrics` call. Provide this to
       retrieve the subsequent page. When paginating, all other parameters provided to
       `ListCalculatedMetrics` must match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListCalculatedMetrics` call. Provide
         * this to retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListCalculatedMetrics` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a CalculatedMetric on a property.
       *
       * Create a request for the method "calculatedMetrics.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name for this CalculatedMetric. Format:
       *        'properties/{property_id}/calculatedMetrics/{calculated_metric_id}'
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/calculatedMetrics/[^/]+$");

        /**
         * Updates a CalculatedMetric on a property.
         *
         * Create a request for the method "calculatedMetrics.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name for this CalculatedMetric. Format:
       *        'properties/{property_id}/calculatedMetrics/{calculated_metric_id}'
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCalculatedMetric.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/calculatedMetrics/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name for this CalculatedMetric. Format:
         * 'properties/{property_id}/calculatedMetrics/{calculated_metric_id}'
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name for this CalculatedMetric. Format:
       'properties/{property_id}/calculatedMetrics/{calculated_metric_id}'
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name for this CalculatedMetric. Format:
         * 'properties/{property_id}/calculatedMetrics/{calculated_metric_id}'
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/calculatedMetrics/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the ChannelGroups collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.ChannelGroups.List request = analyticsadmin.channelGroups().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public ChannelGroups channelGroups() {
      return new ChannelGroups();
    }

    /**
     * The "channelGroups" collection of methods.
     */
    public class ChannelGroups {

      /**
       * Creates a ChannelGroup.
       *
       * Create a request for the method "channelGroups.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The property for which to create a ChannelGroup. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup> {

        private static final String REST_PATH = "v1alpha/{+parent}/channelGroups";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a ChannelGroup.
         *
         * Create a request for the method "channelGroups.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The property for which to create a ChannelGroup. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The property for which to create a ChannelGroup. Example format:
         * properties/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The property for which to create a ChannelGroup. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The property for which to create a ChannelGroup. Example format:
         * properties/1234
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a ChannelGroup on a property.
       *
       * Create a request for the method "channelGroups.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The ChannelGroup to delete. Example format: properties/1234/channelGroups/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/channelGroups/[^/]+$");

        /**
         * Deletes a ChannelGroup on a property.
         *
         * Create a request for the method "channelGroups.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The ChannelGroup to delete. Example format: properties/1234/channelGroups/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/channelGroups/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The ChannelGroup to delete. Example format: properties/1234/channelGroups/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The ChannelGroup to delete. Example format: properties/1234/channelGroups/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The ChannelGroup to delete. Example format: properties/1234/channelGroups/5678
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/channelGroups/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single ChannelGroup.
       *
       * Create a request for the method "channelGroups.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The ChannelGroup to get. Example format: properties/1234/channelGroups/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/channelGroups/[^/]+$");

        /**
         * Lookup for a single ChannelGroup.
         *
         * Create a request for the method "channelGroups.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The ChannelGroup to get. Example format: properties/1234/channelGroups/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/channelGroups/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The ChannelGroup to get. Example format: properties/1234/channelGroups/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The ChannelGroup to get. Example format: properties/1234/channelGroups/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The ChannelGroup to get. Example format: properties/1234/channelGroups/5678
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/channelGroups/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists ChannelGroups on a property.
       *
       * Create a request for the method "channelGroups.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The property for which to list ChannelGroups. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListChannelGroupsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/channelGroups";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists ChannelGroups on a property.
         *
         * Create a request for the method "channelGroups.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The property for which to list ChannelGroups. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListChannelGroupsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The property for which to list ChannelGroups. Example format: properties/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The property for which to list ChannelGroups. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The property for which to list ChannelGroups. Example format: properties/1234
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListChannelGroups` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListChannelGroups` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListChannelGroups` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListChannelGroups` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListChannelGroups` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListChannelGroups` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a ChannelGroup.
       *
       * Create a request for the method "channelGroups.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. The resource name for this Channel Group resource. Format:
       *        properties/{property}/channelGroups/{channel_group}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/channelGroups/[^/]+$");

        /**
         * Updates a ChannelGroup.
         *
         * Create a request for the method "channelGroups.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. The resource name for this Channel Group resource. Format:
       *        properties/{property}/channelGroups/{channel_group}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaChannelGroup.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/channelGroups/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. The resource name for this Channel Group resource. Format:
         * properties/{property}/channelGroups/{channel_group}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. The resource name for this Channel Group resource. Format:
       properties/{property}/channelGroups/{channel_group}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. The resource name for this Channel Group resource. Format:
         * properties/{property}/channelGroups/{channel_group}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/channelGroups/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
       with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the ConversionEvents collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.ConversionEvents.List request = analyticsadmin.conversionEvents().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public ConversionEvents conversionEvents() {
      return new ConversionEvents();
    }

    /**
     * The "conversionEvents" collection of methods.
     */
    public class ConversionEvents {

      /**
       * Deprecated: Use `CreateKeyEvent` instead. Creates a conversion event with the specified
       * attributes.
       *
       * Create a request for the method "conversionEvents.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource name of the parent property where this conversion event will be created.
       *        Format: properties/123
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent> {

        private static final String REST_PATH = "v1alpha/{+parent}/conversionEvents";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Deprecated: Use `CreateKeyEvent` instead. Creates a conversion event with the specified
         * attributes.
         *
         * Create a request for the method "conversionEvents.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource name of the parent property where this conversion event will be created.
       *        Format: properties/123
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the parent property where this conversion event will be
         * created. Format: properties/123
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource name of the parent property where this conversion event will be created.
       Format: properties/123
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The resource name of the parent property where this conversion event will be
         * created. Format: properties/123
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deprecated: Use `DeleteKeyEvent` instead. Deletes a conversion event in a property.
       *
       * Create a request for the method "conversionEvents.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the conversion event to delete. Format:
       *        properties/{property}/conversionEvents/{conversion_event} Example:
       *        "properties/123/conversionEvents/456"
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/conversionEvents/[^/]+$");

        /**
         * Deprecated: Use `DeleteKeyEvent` instead. Deletes a conversion event in a property.
         *
         * Create a request for the method "conversionEvents.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the conversion event to delete. Format:
       *        properties/{property}/conversionEvents/{conversion_event} Example:
       *        "properties/123/conversionEvents/456"
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/conversionEvents/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the conversion event to delete. Format:
         * properties/{property}/conversionEvents/{conversion_event} Example:
         * "properties/123/conversionEvents/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the conversion event to delete. Format:
       properties/{property}/conversionEvents/{conversion_event} Example:
       "properties/123/conversionEvents/456"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the conversion event to delete. Format:
         * properties/{property}/conversionEvents/{conversion_event} Example:
         * "properties/123/conversionEvents/456"
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/conversionEvents/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Deprecated: Use `GetKeyEvent` instead. Retrieve a single conversion event.
       *
       * Create a request for the method "conversionEvents.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the conversion event to retrieve. Format:
       *        properties/{property}/conversionEvents/{conversion_event} Example:
       *        "properties/123/conversionEvents/456"
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/conversionEvents/[^/]+$");

        /**
         * Deprecated: Use `GetKeyEvent` instead. Retrieve a single conversion event.
         *
         * Create a request for the method "conversionEvents.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the conversion event to retrieve. Format:
       *        properties/{property}/conversionEvents/{conversion_event} Example:
       *        "properties/123/conversionEvents/456"
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/conversionEvents/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the conversion event to retrieve. Format:
         * properties/{property}/conversionEvents/{conversion_event} Example:
         * "properties/123/conversionEvents/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the conversion event to retrieve. Format:
       properties/{property}/conversionEvents/{conversion_event} Example:
       "properties/123/conversionEvents/456"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the conversion event to retrieve. Format:
         * properties/{property}/conversionEvents/{conversion_event} Example:
         * "properties/123/conversionEvents/456"
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/conversionEvents/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Deprecated: Use `ListKeyEvents` instead. Returns a list of conversion events in the specified
       * parent property. Returns an empty list if no conversion events are found.
       *
       * Create a request for the method "conversionEvents.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource name of the parent property. Example: 'properties/123'
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListConversionEventsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/conversionEvents";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Deprecated: Use `ListKeyEvents` instead. Returns a list of conversion events in the specified
         * parent property. Returns an empty list if no conversion events are found.
         *
         * Create a request for the method "conversionEvents.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource name of the parent property. Example: 'properties/123'
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListConversionEventsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name of the parent property. Example: 'properties/123' */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource name of the parent property. Example: 'properties/123'
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The resource name of the parent property. Example: 'properties/123' */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListConversionEvents` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListConversionEvents` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListConversionEvents` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListConversionEvents` must
       match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListConversionEvents` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListConversionEvents` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Deprecated: Use `UpdateKeyEvent` instead. Updates a conversion event with the specified
       * attributes.
       *
       * Create a request for the method "conversionEvents.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name of this conversion event. Format:
       *        properties/{property}/conversionEvents/{conversion_event}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/conversionEvents/[^/]+$");

        /**
         * Deprecated: Use `UpdateKeyEvent` instead. Updates a conversion event with the specified
         * attributes.
         *
         * Create a request for the method "conversionEvents.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of this conversion event. Format:
       *        properties/{property}/conversionEvents/{conversion_event}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaConversionEvent.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/conversionEvents/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of this conversion event. Format:
         * properties/{property}/conversionEvents/{conversion_event}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of this conversion event. Format:
       properties/{property}/conversionEvents/{conversion_event}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of this conversion event. Format:
         * properties/{property}/conversionEvents/{conversion_event}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/conversionEvents/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
       with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the CustomDimensions collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.CustomDimensions.List request = analyticsadmin.customDimensions().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public CustomDimensions customDimensions() {
      return new CustomDimensions();
    }

    /**
     * The "customDimensions" collection of methods.
     */
    public class CustomDimensions {

      /**
       * Archives a CustomDimension on a property.
       *
       * Create a request for the method "customDimensions.archive".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Archive#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the CustomDimension to archive. Example format:
       *        properties/1234/customDimensions/5678
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveCustomDimensionRequest}
       * @return the request
       */
      public Archive archive(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveCustomDimensionRequest content) throws java.io.IOException {
        Archive result = new Archive(name, content);
        initialize(result);
        return result;
      }

      public class Archive extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}:archive";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/customDimensions/[^/]+$");

        /**
         * Archives a CustomDimension on a property.
         *
         * Create a request for the method "customDimensions.archive".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Archive#execute()} method to invoke the remote operation.
         * <p> {@link
         * Archive#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the CustomDimension to archive. Example format:
       *        properties/1234/customDimensions/5678
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveCustomDimensionRequest}
         * @since 1.13
         */
        protected Archive(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveCustomDimensionRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customDimensions/[^/]+$");
          }
        }

        @Override
        public Archive set$Xgafv(java.lang.String $Xgafv) {
          return (Archive) super.set$Xgafv($Xgafv);
        }

        @Override
        public Archive setAccessToken(java.lang.String accessToken) {
          return (Archive) super.setAccessToken(accessToken);
        }

        @Override
        public Archive setAlt(java.lang.String alt) {
          return (Archive) super.setAlt(alt);
        }

        @Override
        public Archive setCallback(java.lang.String callback) {
          return (Archive) super.setCallback(callback);
        }

        @Override
        public Archive setFields(java.lang.String fields) {
          return (Archive) super.setFields(fields);
        }

        @Override
        public Archive setKey(java.lang.String key) {
          return (Archive) super.setKey(key);
        }

        @Override
        public Archive setOauthToken(java.lang.String oauthToken) {
          return (Archive) super.setOauthToken(oauthToken);
        }

        @Override
        public Archive setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Archive) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Archive setQuotaUser(java.lang.String quotaUser) {
          return (Archive) super.setQuotaUser(quotaUser);
        }

        @Override
        public Archive setUploadType(java.lang.String uploadType) {
          return (Archive) super.setUploadType(uploadType);
        }

        @Override
        public Archive setUploadProtocol(java.lang.String uploadProtocol) {
          return (Archive) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the CustomDimension to archive. Example format:
         * properties/1234/customDimensions/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the CustomDimension to archive. Example format:
       properties/1234/customDimensions/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the CustomDimension to archive. Example format:
         * properties/1234/customDimensions/5678
         */
        public Archive setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customDimensions/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Archive set(String parameterName, Object value) {
          return (Archive) super.set(parameterName, value);
        }
      }
      /**
       * Creates a CustomDimension.
       *
       * Create a request for the method "customDimensions.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension> {

        private static final String REST_PATH = "v1alpha/{+parent}/customDimensions";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a CustomDimension.
         *
         * Create a request for the method "customDimensions.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single CustomDimension.
       *
       * Create a request for the method "customDimensions.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the CustomDimension to get. Example format:
       *        properties/1234/customDimensions/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/customDimensions/[^/]+$");

        /**
         * Lookup for a single CustomDimension.
         *
         * Create a request for the method "customDimensions.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the CustomDimension to get. Example format:
       *        properties/1234/customDimensions/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customDimensions/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the CustomDimension to get. Example format:
         * properties/1234/customDimensions/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the CustomDimension to get. Example format:
       properties/1234/customDimensions/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the CustomDimension to get. Example format:
         * properties/1234/customDimensions/5678
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customDimensions/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists CustomDimensions on a property.
       *
       * Create a request for the method "customDimensions.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListCustomDimensionsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/customDimensions";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists CustomDimensions on a property.
         *
         * Create a request for the method "customDimensions.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListCustomDimensionsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListCustomDimensions` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListCustomDimensions` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListCustomDimensions` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListCustomDimensions` must
       match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListCustomDimensions` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListCustomDimensions` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a CustomDimension on a property.
       *
       * Create a request for the method "customDimensions.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name for this CustomDimension resource. Format:
       *        properties/{property}/customDimensions/{customDimension}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/customDimensions/[^/]+$");

        /**
         * Updates a CustomDimension on a property.
         *
         * Create a request for the method "customDimensions.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name for this CustomDimension resource. Format:
       *        properties/{property}/customDimensions/{customDimension}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomDimension.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customDimensions/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name for this CustomDimension resource. Format:
         * properties/{property}/customDimensions/{customDimension}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name for this CustomDimension resource. Format:
       properties/{property}/customDimensions/{customDimension}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name for this CustomDimension resource. Format:
         * properties/{property}/customDimensions/{customDimension}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customDimensions/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the CustomMetrics collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.CustomMetrics.List request = analyticsadmin.customMetrics().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public CustomMetrics customMetrics() {
      return new CustomMetrics();
    }

    /**
     * The "customMetrics" collection of methods.
     */
    public class CustomMetrics {

      /**
       * Archives a CustomMetric on a property.
       *
       * Create a request for the method "customMetrics.archive".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Archive#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the CustomMetric to archive. Example format:
       *        properties/1234/customMetrics/5678
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveCustomMetricRequest}
       * @return the request
       */
      public Archive archive(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveCustomMetricRequest content) throws java.io.IOException {
        Archive result = new Archive(name, content);
        initialize(result);
        return result;
      }

      public class Archive extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}:archive";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/customMetrics/[^/]+$");

        /**
         * Archives a CustomMetric on a property.
         *
         * Create a request for the method "customMetrics.archive".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Archive#execute()} method to invoke the remote operation.
         * <p> {@link
         * Archive#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the CustomMetric to archive. Example format:
       *        properties/1234/customMetrics/5678
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveCustomMetricRequest}
         * @since 1.13
         */
        protected Archive(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaArchiveCustomMetricRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customMetrics/[^/]+$");
          }
        }

        @Override
        public Archive set$Xgafv(java.lang.String $Xgafv) {
          return (Archive) super.set$Xgafv($Xgafv);
        }

        @Override
        public Archive setAccessToken(java.lang.String accessToken) {
          return (Archive) super.setAccessToken(accessToken);
        }

        @Override
        public Archive setAlt(java.lang.String alt) {
          return (Archive) super.setAlt(alt);
        }

        @Override
        public Archive setCallback(java.lang.String callback) {
          return (Archive) super.setCallback(callback);
        }

        @Override
        public Archive setFields(java.lang.String fields) {
          return (Archive) super.setFields(fields);
        }

        @Override
        public Archive setKey(java.lang.String key) {
          return (Archive) super.setKey(key);
        }

        @Override
        public Archive setOauthToken(java.lang.String oauthToken) {
          return (Archive) super.setOauthToken(oauthToken);
        }

        @Override
        public Archive setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Archive) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Archive setQuotaUser(java.lang.String quotaUser) {
          return (Archive) super.setQuotaUser(quotaUser);
        }

        @Override
        public Archive setUploadType(java.lang.String uploadType) {
          return (Archive) super.setUploadType(uploadType);
        }

        @Override
        public Archive setUploadProtocol(java.lang.String uploadProtocol) {
          return (Archive) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the CustomMetric to archive. Example format:
         * properties/1234/customMetrics/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the CustomMetric to archive. Example format:
       properties/1234/customMetrics/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the CustomMetric to archive. Example format:
         * properties/1234/customMetrics/5678
         */
        public Archive setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customMetrics/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Archive set(String parameterName, Object value) {
          return (Archive) super.set(parameterName, value);
        }
      }
      /**
       * Creates a CustomMetric.
       *
       * Create a request for the method "customMetrics.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric> {

        private static final String REST_PATH = "v1alpha/{+parent}/customMetrics";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a CustomMetric.
         *
         * Create a request for the method "customMetrics.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single CustomMetric.
       *
       * Create a request for the method "customMetrics.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the CustomMetric to get. Example format: properties/1234/customMetrics/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/customMetrics/[^/]+$");

        /**
         * Lookup for a single CustomMetric.
         *
         * Create a request for the method "customMetrics.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the CustomMetric to get. Example format: properties/1234/customMetrics/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customMetrics/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the CustomMetric to get. Example format:
         * properties/1234/customMetrics/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the CustomMetric to get. Example format: properties/1234/customMetrics/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the CustomMetric to get. Example format:
         * properties/1234/customMetrics/5678
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customMetrics/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists CustomMetrics on a property.
       *
       * Create a request for the method "customMetrics.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListCustomMetricsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/customMetrics";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists CustomMetrics on a property.
         *
         * Create a request for the method "customMetrics.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListCustomMetricsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListCustomMetrics` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListCustomMetrics` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListCustomMetrics` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListCustomMetrics` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListCustomMetrics` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListCustomMetrics` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a CustomMetric on a property.
       *
       * Create a request for the method "customMetrics.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name for this CustomMetric resource. Format:
       *        properties/{property}/customMetrics/{customMetric}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/customMetrics/[^/]+$");

        /**
         * Updates a CustomMetric on a property.
         *
         * Create a request for the method "customMetrics.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name for this CustomMetric resource. Format:
       *        properties/{property}/customMetrics/{customMetric}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCustomMetric.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customMetrics/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name for this CustomMetric resource. Format:
         * properties/{property}/customMetrics/{customMetric}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name for this CustomMetric resource. Format:
       properties/{property}/customMetrics/{customMetric}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name for this CustomMetric resource. Format:
         * properties/{property}/customMetrics/{customMetric}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/customMetrics/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the DataStreams collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.DataStreams.List request = analyticsadmin.dataStreams().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public DataStreams dataStreams() {
      return new DataStreams();
    }

    /**
     * The "dataStreams" collection of methods.
     */
    public class DataStreams {

      /**
       * Creates a DataStream.
       *
       * Create a request for the method "dataStreams.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream> {

        private static final String REST_PATH = "v1alpha/{+parent}/dataStreams";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a DataStream.
         *
         * Create a request for the method "dataStreams.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a DataStream on a property.
       *
       * Create a request for the method "dataStreams.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the DataStream to delete. Example format: properties/1234/dataStreams/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

        /**
         * Deletes a DataStream on a property.
         *
         * Create a request for the method "dataStreams.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the DataStream to delete. Example format: properties/1234/dataStreams/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the DataStream to delete. Example format:
         * properties/1234/dataStreams/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the DataStream to delete. Example format: properties/1234/dataStreams/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the DataStream to delete. Example format:
         * properties/1234/dataStreams/5678
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single DataStream.
       *
       * Create a request for the method "dataStreams.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the DataStream to get. Example format: properties/1234/dataStreams/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

        /**
         * Lookup for a single DataStream.
         *
         * Create a request for the method "dataStreams.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the DataStream to get. Example format: properties/1234/dataStreams/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the DataStream to get. Example format:
         * properties/1234/dataStreams/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the DataStream to get. Example format: properties/1234/dataStreams/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the DataStream to get. Example format:
         * properties/1234/dataStreams/5678
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single DataRedactionSettings.
       *
       * Create a request for the method "dataStreams.getDataRedactionSettings".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link GetDataRedactionSettings#execute()} method to invoke the
       * remote operation.
       *
       * @param name Required. The name of the settings to lookup. Format:
       *        properties/{property}/dataStreams/{data_stream}/dataRedactionSettings Example:
       *        "properties/1000/dataStreams/2000/dataRedactionSettings"
       * @return the request
       */
      public GetDataRedactionSettings getDataRedactionSettings(java.lang.String name) throws java.io.IOException {
        GetDataRedactionSettings result = new GetDataRedactionSettings(name);
        initialize(result);
        return result;
      }

      public class GetDataRedactionSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRedactionSettings> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/dataRedactionSettings$");

        /**
         * Lookup for a single DataRedactionSettings.
         *
         * Create a request for the method "dataStreams.getDataRedactionSettings".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link GetDataRedactionSettings#execute()} method to invoke the
         * remote operation. <p> {@link GetDataRedactionSettings#initialize(com.google.api.client.googleap
         * is.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the settings to lookup. Format:
       *        properties/{property}/dataStreams/{data_stream}/dataRedactionSettings Example:
       *        "properties/1000/dataStreams/2000/dataRedactionSettings"
         * @since 1.13
         */
        protected GetDataRedactionSettings(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRedactionSettings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+/dataRedactionSettings$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetDataRedactionSettings set$Xgafv(java.lang.String $Xgafv) {
          return (GetDataRedactionSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetDataRedactionSettings setAccessToken(java.lang.String accessToken) {
          return (GetDataRedactionSettings) super.setAccessToken(accessToken);
        }

        @Override
        public GetDataRedactionSettings setAlt(java.lang.String alt) {
          return (GetDataRedactionSettings) super.setAlt(alt);
        }

        @Override
        public GetDataRedactionSettings setCallback(java.lang.String callback) {
          return (GetDataRedactionSettings) super.setCallback(callback);
        }

        @Override
        public GetDataRedactionSettings setFields(java.lang.String fields) {
          return (GetDataRedactionSettings) super.setFields(fields);
        }

        @Override
        public GetDataRedactionSettings setKey(java.lang.String key) {
          return (GetDataRedactionSettings) super.setKey(key);
        }

        @Override
        public GetDataRedactionSettings setOauthToken(java.lang.String oauthToken) {
          return (GetDataRedactionSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public GetDataRedactionSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetDataRedactionSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetDataRedactionSettings setQuotaUser(java.lang.String quotaUser) {
          return (GetDataRedactionSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetDataRedactionSettings setUploadType(java.lang.String uploadType) {
          return (GetDataRedactionSettings) super.setUploadType(uploadType);
        }

        @Override
        public GetDataRedactionSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetDataRedactionSettings) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the settings to lookup. Format:
         * properties/{property}/dataStreams/{data_stream}/dataRedactionSettings Example:
         * "properties/1000/dataStreams/2000/dataRedactionSettings"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the settings to lookup. Format:
       properties/{property}/dataStreams/{data_stream}/dataRedactionSettings Example:
       "properties/1000/dataStreams/2000/dataRedactionSettings"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the settings to lookup. Format:
         * properties/{property}/dataStreams/{data_stream}/dataRedactionSettings Example:
         * "properties/1000/dataStreams/2000/dataRedactionSettings"
         */
        public GetDataRedactionSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+/dataRedactionSettings$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetDataRedactionSettings set(String parameterName, Object value) {
          return (GetDataRedactionSettings) super.set(parameterName, value);
        }
      }
      /**
       * Returns the enhanced measurement settings for this data stream. Note that the stream must enable
       * enhanced measurement for these settings to take effect.
       *
       * Create a request for the method "dataStreams.getEnhancedMeasurementSettings".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link GetEnhancedMeasurementSettings#execute()} method to invoke
       * the remote operation.
       *
       * @param name Required. The name of the settings to lookup. Format:
       *        properties/{property}/dataStreams/{data_stream}/enhancedMeasurementSettings Example:
       *        "properties/1000/dataStreams/2000/enhancedMeasurementSettings"
       * @return the request
       */
      public GetEnhancedMeasurementSettings getEnhancedMeasurementSettings(java.lang.String name) throws java.io.IOException {
        GetEnhancedMeasurementSettings result = new GetEnhancedMeasurementSettings(name);
        initialize(result);
        return result;
      }

      public class GetEnhancedMeasurementSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/enhancedMeasurementSettings$");

        /**
         * Returns the enhanced measurement settings for this data stream. Note that the stream must
         * enable enhanced measurement for these settings to take effect.
         *
         * Create a request for the method "dataStreams.getEnhancedMeasurementSettings".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link GetEnhancedMeasurementSettings#execute()} method to invoke
         * the remote operation. <p> {@link GetEnhancedMeasurementSettings#initialize(com.google.api.clien
         * t.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the settings to lookup. Format:
       *        properties/{property}/dataStreams/{data_stream}/enhancedMeasurementSettings Example:
       *        "properties/1000/dataStreams/2000/enhancedMeasurementSettings"
         * @since 1.13
         */
        protected GetEnhancedMeasurementSettings(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+/enhancedMeasurementSettings$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetEnhancedMeasurementSettings set$Xgafv(java.lang.String $Xgafv) {
          return (GetEnhancedMeasurementSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetEnhancedMeasurementSettings setAccessToken(java.lang.String accessToken) {
          return (GetEnhancedMeasurementSettings) super.setAccessToken(accessToken);
        }

        @Override
        public GetEnhancedMeasurementSettings setAlt(java.lang.String alt) {
          return (GetEnhancedMeasurementSettings) super.setAlt(alt);
        }

        @Override
        public GetEnhancedMeasurementSettings setCallback(java.lang.String callback) {
          return (GetEnhancedMeasurementSettings) super.setCallback(callback);
        }

        @Override
        public GetEnhancedMeasurementSettings setFields(java.lang.String fields) {
          return (GetEnhancedMeasurementSettings) super.setFields(fields);
        }

        @Override
        public GetEnhancedMeasurementSettings setKey(java.lang.String key) {
          return (GetEnhancedMeasurementSettings) super.setKey(key);
        }

        @Override
        public GetEnhancedMeasurementSettings setOauthToken(java.lang.String oauthToken) {
          return (GetEnhancedMeasurementSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public GetEnhancedMeasurementSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetEnhancedMeasurementSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetEnhancedMeasurementSettings setQuotaUser(java.lang.String quotaUser) {
          return (GetEnhancedMeasurementSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetEnhancedMeasurementSettings setUploadType(java.lang.String uploadType) {
          return (GetEnhancedMeasurementSettings) super.setUploadType(uploadType);
        }

        @Override
        public GetEnhancedMeasurementSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetEnhancedMeasurementSettings) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the settings to lookup. Format:
         * properties/{property}/dataStreams/{data_stream}/enhancedMeasurementSettings Example:
         * "properties/1000/dataStreams/2000/enhancedMeasurementSettings"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the settings to lookup. Format:
       properties/{property}/dataStreams/{data_stream}/enhancedMeasurementSettings Example:
       "properties/1000/dataStreams/2000/enhancedMeasurementSettings"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the settings to lookup. Format:
         * properties/{property}/dataStreams/{data_stream}/enhancedMeasurementSettings Example:
         * "properties/1000/dataStreams/2000/enhancedMeasurementSettings"
         */
        public GetEnhancedMeasurementSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+/enhancedMeasurementSettings$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetEnhancedMeasurementSettings set(String parameterName, Object value) {
          return (GetEnhancedMeasurementSettings) super.set(parameterName, value);
        }
      }
      /**
       * Returns the Site Tag for the specified web stream. Site Tags are immutable singletons.
       *
       * Create a request for the method "dataStreams.getGlobalSiteTag".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link GetGlobalSiteTag#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The name of the site tag to lookup. Note that site tags are singletons and do not have
       *        unique IDs. Format: properties/{property_id}/dataStreams/{stream_id}/globalSiteTag
       *        Example: `properties/123/dataStreams/456/globalSiteTag`
       * @return the request
       */
      public GetGlobalSiteTag getGlobalSiteTag(java.lang.String name) throws java.io.IOException {
        GetGlobalSiteTag result = new GetGlobalSiteTag(name);
        initialize(result);
        return result;
      }

      public class GetGlobalSiteTag extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGlobalSiteTag> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/globalSiteTag$");

        /**
         * Returns the Site Tag for the specified web stream. Site Tags are immutable singletons.
         *
         * Create a request for the method "dataStreams.getGlobalSiteTag".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link GetGlobalSiteTag#execute()} method to invoke the remote
         * operation. <p> {@link GetGlobalSiteTag#initialize(com.google.api.client.googleapis.services.Abs
         * tractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The name of the site tag to lookup. Note that site tags are singletons and do not have
       *        unique IDs. Format: properties/{property_id}/dataStreams/{stream_id}/globalSiteTag
       *        Example: `properties/123/dataStreams/456/globalSiteTag`
         * @since 1.13
         */
        protected GetGlobalSiteTag(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGlobalSiteTag.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+/globalSiteTag$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetGlobalSiteTag set$Xgafv(java.lang.String $Xgafv) {
          return (GetGlobalSiteTag) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetGlobalSiteTag setAccessToken(java.lang.String accessToken) {
          return (GetGlobalSiteTag) super.setAccessToken(accessToken);
        }

        @Override
        public GetGlobalSiteTag setAlt(java.lang.String alt) {
          return (GetGlobalSiteTag) super.setAlt(alt);
        }

        @Override
        public GetGlobalSiteTag setCallback(java.lang.String callback) {
          return (GetGlobalSiteTag) super.setCallback(callback);
        }

        @Override
        public GetGlobalSiteTag setFields(java.lang.String fields) {
          return (GetGlobalSiteTag) super.setFields(fields);
        }

        @Override
        public GetGlobalSiteTag setKey(java.lang.String key) {
          return (GetGlobalSiteTag) super.setKey(key);
        }

        @Override
        public GetGlobalSiteTag setOauthToken(java.lang.String oauthToken) {
          return (GetGlobalSiteTag) super.setOauthToken(oauthToken);
        }

        @Override
        public GetGlobalSiteTag setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetGlobalSiteTag) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetGlobalSiteTag setQuotaUser(java.lang.String quotaUser) {
          return (GetGlobalSiteTag) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetGlobalSiteTag setUploadType(java.lang.String uploadType) {
          return (GetGlobalSiteTag) super.setUploadType(uploadType);
        }

        @Override
        public GetGlobalSiteTag setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetGlobalSiteTag) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the site tag to lookup. Note that site tags are singletons and do
         * not have unique IDs. Format:
         * properties/{property_id}/dataStreams/{stream_id}/globalSiteTag Example:
         * `properties/123/dataStreams/456/globalSiteTag`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the site tag to lookup. Note that site tags are singletons and do not have
       unique IDs. Format: properties/{property_id}/dataStreams/{stream_id}/globalSiteTag Example:
       `properties/123/dataStreams/456/globalSiteTag`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the site tag to lookup. Note that site tags are singletons and do
         * not have unique IDs. Format:
         * properties/{property_id}/dataStreams/{stream_id}/globalSiteTag Example:
         * `properties/123/dataStreams/456/globalSiteTag`
         */
        public GetGlobalSiteTag setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+/globalSiteTag$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetGlobalSiteTag set(String parameterName, Object value) {
          return (GetGlobalSiteTag) super.set(parameterName, value);
        }
      }
      /**
       * Lists DataStreams on a property.
       *
       * Create a request for the method "dataStreams.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListDataStreamsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/dataStreams";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists DataStreams on a property.
         *
         * Create a request for the method "dataStreams.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListDataStreamsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListDataStreams` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to `ListDataStreams`
         * must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListDataStreams` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListDataStreams` must match the
       call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListDataStreams` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to `ListDataStreams`
         * must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a DataStream on a property.
       *
       * Create a request for the method "dataStreams.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name of this Data Stream. Format:
       *        properties/{property_id}/dataStreams/{stream_id} Example:
       *        "properties/1000/dataStreams/2000"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

        /**
         * Updates a DataStream on a property.
         *
         * Create a request for the method "dataStreams.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of this Data Stream. Format:
       *        properties/{property_id}/dataStreams/{stream_id} Example:
       *        "properties/1000/dataStreams/2000"
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataStream.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of this Data Stream. Format:
         * properties/{property_id}/dataStreams/{stream_id} Example:
         * "properties/1000/dataStreams/2000"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of this Data Stream. Format:
       properties/{property_id}/dataStreams/{stream_id} Example: "properties/1000/dataStreams/2000"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of this Data Stream. Format:
         * properties/{property_id}/dataStreams/{stream_id} Example:
         * "properties/1000/dataStreams/2000"
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Updates a DataRedactionSettings on a property.
       *
       * Create a request for the method "dataStreams.updateDataRedactionSettings".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link UpdateDataRedactionSettings#execute()} method to invoke the
       * remote operation.
       *
       * @param name Output only. Name of this Data Redaction Settings resource. Format:
       *        properties/{property_id}/dataStreams/{data_stream}/dataRedactionSettings Example:
       *        "properties/1000/dataStreams/2000/dataRedactionSettings"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRedactionSettings}
       * @return the request
       */
      public UpdateDataRedactionSettings updateDataRedactionSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRedactionSettings content) throws java.io.IOException {
        UpdateDataRedactionSettings result = new UpdateDataRedactionSettings(name, content);
        initialize(result);
        return result;
      }

      public class UpdateDataRedactionSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRedactionSettings> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/dataRedactionSettings$");

        /**
         * Updates a DataRedactionSettings on a property.
         *
         * Create a request for the method "dataStreams.updateDataRedactionSettings".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link UpdateDataRedactionSettings#execute()} method to invoke
         * the remote operation. <p> {@link UpdateDataRedactionSettings#initialize(com.google.api.client.g
         * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
         * immediately after invoking the constructor. </p>
         *
         * @param name Output only. Name of this Data Redaction Settings resource. Format:
       *        properties/{property_id}/dataStreams/{data_stream}/dataRedactionSettings Example:
       *        "properties/1000/dataStreams/2000/dataRedactionSettings"
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRedactionSettings}
         * @since 1.13
         */
        protected UpdateDataRedactionSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRedactionSettings content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDataRedactionSettings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+/dataRedactionSettings$");
          }
        }

        @Override
        public UpdateDataRedactionSettings set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateDataRedactionSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateDataRedactionSettings setAccessToken(java.lang.String accessToken) {
          return (UpdateDataRedactionSettings) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateDataRedactionSettings setAlt(java.lang.String alt) {
          return (UpdateDataRedactionSettings) super.setAlt(alt);
        }

        @Override
        public UpdateDataRedactionSettings setCallback(java.lang.String callback) {
          return (UpdateDataRedactionSettings) super.setCallback(callback);
        }

        @Override
        public UpdateDataRedactionSettings setFields(java.lang.String fields) {
          return (UpdateDataRedactionSettings) super.setFields(fields);
        }

        @Override
        public UpdateDataRedactionSettings setKey(java.lang.String key) {
          return (UpdateDataRedactionSettings) super.setKey(key);
        }

        @Override
        public UpdateDataRedactionSettings setOauthToken(java.lang.String oauthToken) {
          return (UpdateDataRedactionSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateDataRedactionSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateDataRedactionSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateDataRedactionSettings setQuotaUser(java.lang.String quotaUser) {
          return (UpdateDataRedactionSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateDataRedactionSettings setUploadType(java.lang.String uploadType) {
          return (UpdateDataRedactionSettings) super.setUploadType(uploadType);
        }

        @Override
        public UpdateDataRedactionSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateDataRedactionSettings) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Name of this Data Redaction Settings resource. Format:
         * properties/{property_id}/dataStreams/{data_stream}/dataRedactionSettings Example:
         * "properties/1000/dataStreams/2000/dataRedactionSettings"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Name of this Data Redaction Settings resource. Format:
       properties/{property_id}/dataStreams/{data_stream}/dataRedactionSettings Example:
       "properties/1000/dataStreams/2000/dataRedactionSettings"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Name of this Data Redaction Settings resource. Format:
         * properties/{property_id}/dataStreams/{data_stream}/dataRedactionSettings Example:
         * "properties/1000/dataStreams/2000/dataRedactionSettings"
         */
        public UpdateDataRedactionSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+/dataRedactionSettings$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
       with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        public UpdateDataRedactionSettings setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateDataRedactionSettings set(String parameterName, Object value) {
          return (UpdateDataRedactionSettings) super.set(parameterName, value);
        }
      }
      /**
       * Updates the enhanced measurement settings for this data stream. Note that the stream must enable
       * enhanced measurement for these settings to take effect.
       *
       * Create a request for the method "dataStreams.updateEnhancedMeasurementSettings".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link UpdateEnhancedMeasurementSettings#execute()} method to
       * invoke the remote operation.
       *
       * @param name Output only. Resource name of the Enhanced Measurement Settings. Format:
       *        properties/{property_id}/dataStreams/{data_stream}/enhancedMeasurementSettings Example:
       *        "properties/1000/dataStreams/2000/enhancedMeasurementSettings"
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings}
       * @return the request
       */
      public UpdateEnhancedMeasurementSettings updateEnhancedMeasurementSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings content) throws java.io.IOException {
        UpdateEnhancedMeasurementSettings result = new UpdateEnhancedMeasurementSettings(name, content);
        initialize(result);
        return result;
      }

      public class UpdateEnhancedMeasurementSettings extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/enhancedMeasurementSettings$");

        /**
         * Updates the enhanced measurement settings for this data stream. Note that the stream must
         * enable enhanced measurement for these settings to take effect.
         *
         * Create a request for the method "dataStreams.updateEnhancedMeasurementSettings".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link UpdateEnhancedMeasurementSettings#execute()} method to
         * invoke the remote operation. <p> {@link UpdateEnhancedMeasurementSettings#initialize(com.google
         * .api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to initialize this
         * instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of the Enhanced Measurement Settings. Format:
       *        properties/{property_id}/dataStreams/{data_stream}/enhancedMeasurementSettings Example:
       *        "properties/1000/dataStreams/2000/enhancedMeasurementSettings"
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings}
         * @since 1.13
         */
        protected UpdateEnhancedMeasurementSettings(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEnhancedMeasurementSettings.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+/enhancedMeasurementSettings$");
          }
        }

        @Override
        public UpdateEnhancedMeasurementSettings set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateEnhancedMeasurementSettings) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setAccessToken(java.lang.String accessToken) {
          return (UpdateEnhancedMeasurementSettings) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setAlt(java.lang.String alt) {
          return (UpdateEnhancedMeasurementSettings) super.setAlt(alt);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setCallback(java.lang.String callback) {
          return (UpdateEnhancedMeasurementSettings) super.setCallback(callback);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setFields(java.lang.String fields) {
          return (UpdateEnhancedMeasurementSettings) super.setFields(fields);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setKey(java.lang.String key) {
          return (UpdateEnhancedMeasurementSettings) super.setKey(key);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setOauthToken(java.lang.String oauthToken) {
          return (UpdateEnhancedMeasurementSettings) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateEnhancedMeasurementSettings) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setQuotaUser(java.lang.String quotaUser) {
          return (UpdateEnhancedMeasurementSettings) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setUploadType(java.lang.String uploadType) {
          return (UpdateEnhancedMeasurementSettings) super.setUploadType(uploadType);
        }

        @Override
        public UpdateEnhancedMeasurementSettings setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateEnhancedMeasurementSettings) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of the Enhanced Measurement Settings. Format:
         * properties/{property_id}/dataStreams/{data_stream}/enhancedMeasurementSettings Example:
         * "properties/1000/dataStreams/2000/enhancedMeasurementSettings"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of the Enhanced Measurement Settings. Format:
       properties/{property_id}/dataStreams/{data_stream}/enhancedMeasurementSettings Example:
       "properties/1000/dataStreams/2000/enhancedMeasurementSettings"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of the Enhanced Measurement Settings. Format:
         * properties/{property_id}/dataStreams/{data_stream}/enhancedMeasurementSettings Example:
         * "properties/1000/dataStreams/2000/enhancedMeasurementSettings"
         */
        public UpdateEnhancedMeasurementSettings setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/dataStreams/[^/]+/enhancedMeasurementSettings$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
       with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        public UpdateEnhancedMeasurementSettings setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateEnhancedMeasurementSettings set(String parameterName, Object value) {
          return (UpdateEnhancedMeasurementSettings) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the EventCreateRules collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
       *   {@code GoogleAnalyticsAdmin.EventCreateRules.List request = analyticsadmin.eventCreateRules().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public EventCreateRules eventCreateRules() {
        return new EventCreateRules();
      }

      /**
       * The "eventCreateRules" collection of methods.
       */
      public class EventCreateRules {

        /**
         * Creates an EventCreateRule.
         *
         * Create a request for the method "eventCreateRules.create".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Example format: properties/123/dataStreams/456
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule> {

          private static final String REST_PATH = "v1alpha/{+parent}/eventCreateRules";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

          /**
           * Creates an EventCreateRule.
           *
           * Create a request for the method "eventCreateRules.create".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Example format: properties/123/dataStreams/456
           * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule content) {
            super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Example format: properties/123/dataStreams/456 */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Example format: properties/123/dataStreams/456
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Example format: properties/123/dataStreams/456 */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an EventCreateRule.
         *
         * Create a request for the method "eventCreateRules.delete".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Example format: properties/123/dataStreams/456/eventCreateRules/789
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/eventCreateRules/[^/]+$");

          /**
           * Deletes an EventCreateRule.
           *
           * Create a request for the method "eventCreateRules.delete".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Example format: properties/123/dataStreams/456/eventCreateRules/789
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventCreateRules/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Example format: properties/123/dataStreams/456/eventCreateRules/789 */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Example format: properties/123/dataStreams/456/eventCreateRules/789
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Example format: properties/123/dataStreams/456/eventCreateRules/789 */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventCreateRules/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Lookup for a single EventCreateRule.
         *
         * Create a request for the method "eventCreateRules.get".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the EventCreateRule to get. Example format:
         *        properties/123/dataStreams/456/eventCreateRules/789
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/eventCreateRules/[^/]+$");

          /**
           * Lookup for a single EventCreateRule.
           *
           * Create a request for the method "eventCreateRules.get".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the EventCreateRule to get. Example format:
         *        properties/123/dataStreams/456/eventCreateRules/789
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventCreateRules/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the EventCreateRule to get. Example format:
           * properties/123/dataStreams/456/eventCreateRules/789
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the EventCreateRule to get. Example format:
         properties/123/dataStreams/456/eventCreateRules/789
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the EventCreateRule to get. Example format:
           * properties/123/dataStreams/456/eventCreateRules/789
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventCreateRules/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists EventCreateRules on a web data stream.
         *
         * Create a request for the method "eventCreateRules.list".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Example format: properties/123/dataStreams/456
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListEventCreateRulesResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/eventCreateRules";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

          /**
           * Lists EventCreateRules on a web data stream.
           *
           * Create a request for the method "eventCreateRules.list".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Example format: properties/123/dataStreams/456
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListEventCreateRulesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Example format: properties/123/dataStreams/456 */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Example format: properties/123/dataStreams/456
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Example format: properties/123/dataStreams/456 */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of resources to return. If unspecified, at most 50 resources will be
           * returned. The maximum value is 200 (higher values will be coerced to the maximum).
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
         The maximum value is 200 (higher values will be coerced to the maximum).
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of resources to return. If unspecified, at most 50 resources will be
           * returned. The maximum value is 200 (higher values will be coerced to the maximum).
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListEventCreateRules` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListEventCreateRules` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListEventCreateRules` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `ListEventCreateRules` must
         match the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListEventCreateRules` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListEventCreateRules` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an EventCreateRule.
         *
         * Create a request for the method "eventCreateRules.patch".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Resource name for this EventCreateRule resource. Format:
         *        properties/{property}/dataStreams/{data_stream}/eventCreateRules/{event_create_rule}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/eventCreateRules/[^/]+$");

          /**
           * Updates an EventCreateRule.
           *
           * Create a request for the method "eventCreateRules.patch".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Resource name for this EventCreateRule resource. Format:
         *        properties/{property}/dataStreams/{data_stream}/eventCreateRules/{event_create_rule}
           * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule content) {
            super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventCreateRule.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventCreateRules/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. Resource name for this EventCreateRule resource. Format:
           * properties/{property}/dataStreams/{data_stream}/eventCreateRules/{event_create_rule}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Resource name for this EventCreateRule resource. Format:
         properties/{property}/dataStreams/{data_stream}/eventCreateRules/{event_create_rule}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. Resource name for this EventCreateRule resource. Format:
           * properties/{property}/dataStreams/{data_stream}/eventCreateRules/{event_create_rule}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventCreateRules/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
           * "field_to_update"). Omitted fields will not be updated. To replace the entire entity,
           * use one path with the string "*" to match all fields.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
         with the string "*" to match all fields.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
           * "field_to_update"). Omitted fields will not be updated. To replace the entire entity,
           * use one path with the string "*" to match all fields.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the EventEditRules collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
       *   {@code GoogleAnalyticsAdmin.EventEditRules.List request = analyticsadmin.eventEditRules().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public EventEditRules eventEditRules() {
        return new EventEditRules();
      }

      /**
       * The "eventEditRules" collection of methods.
       */
      public class EventEditRules {

        /**
         * Creates an EventEditRule.
         *
         * Create a request for the method "eventEditRules.create".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Example format: properties/123/dataStreams/456
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule> {

          private static final String REST_PATH = "v1alpha/{+parent}/eventEditRules";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

          /**
           * Creates an EventEditRule.
           *
           * Create a request for the method "eventEditRules.create".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Example format: properties/123/dataStreams/456
           * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule content) {
            super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Example format: properties/123/dataStreams/456 */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Example format: properties/123/dataStreams/456
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Example format: properties/123/dataStreams/456 */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an EventEditRule.
         *
         * Create a request for the method "eventEditRules.delete".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Example format: properties/123/dataStreams/456/eventEditRules/789
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/eventEditRules/[^/]+$");

          /**
           * Deletes an EventEditRule.
           *
           * Create a request for the method "eventEditRules.delete".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Example format: properties/123/dataStreams/456/eventEditRules/789
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventEditRules/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Example format: properties/123/dataStreams/456/eventEditRules/789 */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Example format: properties/123/dataStreams/456/eventEditRules/789
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. Example format: properties/123/dataStreams/456/eventEditRules/789 */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventEditRules/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Lookup for a single EventEditRule.
         *
         * Create a request for the method "eventEditRules.get".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the EventEditRule to get. Example format:
         *        properties/123/dataStreams/456/eventEditRules/789
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/eventEditRules/[^/]+$");

          /**
           * Lookup for a single EventEditRule.
           *
           * Create a request for the method "eventEditRules.get".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the EventEditRule to get. Example format:
         *        properties/123/dataStreams/456/eventEditRules/789
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventEditRules/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the EventEditRule to get. Example format:
           * properties/123/dataStreams/456/eventEditRules/789
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the EventEditRule to get. Example format:
         properties/123/dataStreams/456/eventEditRules/789
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the EventEditRule to get. Example format:
           * properties/123/dataStreams/456/eventEditRules/789
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventEditRules/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists EventEditRules on a web data stream.
         *
         * Create a request for the method "eventEditRules.list".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Example format: properties/123/dataStreams/456
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListEventEditRulesResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/eventEditRules";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

          /**
           * Lists EventEditRules on a web data stream.
           *
           * Create a request for the method "eventEditRules.list".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Example format: properties/123/dataStreams/456
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListEventEditRulesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Example format: properties/123/dataStreams/456 */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Example format: properties/123/dataStreams/456
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Example format: properties/123/dataStreams/456 */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of resources to return. If unspecified, at most 50
           * resources will be returned. The maximum value is 200 (higher values will be coerced to
           * the maximum).
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of resources to return. If unspecified, at most 50 resources will be
         returned. The maximum value is 200 (higher values will be coerced to the maximum).
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of resources to return. If unspecified, at most 50
           * resources will be returned. The maximum value is 200 (higher values will be coerced to
           * the maximum).
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token, received from a previous `ListEventEditRules` call. Provide
           * this to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListEventEditRules` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token, received from a previous `ListEventEditRules` call. Provide this to
         retrieve the subsequent page. When paginating, all other parameters provided to
         `ListEventEditRules` must match the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token, received from a previous `ListEventEditRules` call. Provide
           * this to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListEventEditRules` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an EventEditRule.
         *
         * Create a request for the method "eventEditRules.patch".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Identifier. Resource name for this EventEditRule resource. Format:
         *        properties/{property}/dataStreams/{data_stream}/eventEditRules/{event_edit_rule}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/eventEditRules/[^/]+$");

          /**
           * Updates an EventEditRule.
           *
           * Create a request for the method "eventEditRules.patch".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Identifier. Resource name for this EventEditRule resource. Format:
         *        properties/{property}/dataStreams/{data_stream}/eventEditRules/{event_edit_rule}
           * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule content) {
            super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaEventEditRule.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventEditRules/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Identifier. Resource name for this EventEditRule resource. Format:
           * properties/{property}/dataStreams/{data_stream}/eventEditRules/{event_edit_rule}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Identifier. Resource name for this EventEditRule resource. Format:
         properties/{property}/dataStreams/{data_stream}/eventEditRules/{event_edit_rule}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Identifier. Resource name for this EventEditRule resource. Format:
           * properties/{property}/dataStreams/{data_stream}/eventEditRules/{event_edit_rule}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/eventEditRules/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
           * "field_to_update"). Omitted fields will not be updated. To replace the entire entity,
           * use one path with the string "*" to match all fields.
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
         with the string "*" to match all fields.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
           * "field_to_update"). Omitted fields will not be updated. To replace the entire entity,
           * use one path with the string "*" to match all fields.
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Changes the processing order of event edit rules on the specified stream.
         *
         * Create a request for the method "eventEditRules.reorder".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Reorder#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Example format: properties/123/dataStreams/456
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaReorderEventEditRulesRequest}
         * @return the request
         */
        public Reorder reorder(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaReorderEventEditRulesRequest content) throws java.io.IOException {
          Reorder result = new Reorder(parent, content);
          initialize(result);
          return result;
        }

        public class Reorder extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1alpha/{+parent}/eventEditRules:reorder";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

          /**
           * Changes the processing order of event edit rules on the specified stream.
           *
           * Create a request for the method "eventEditRules.reorder".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Reorder#execute()} method to invoke the remote operation.
           * <p> {@link
           * Reorder#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Example format: properties/123/dataStreams/456
           * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaReorderEventEditRulesRequest}
           * @since 1.13
           */
          protected Reorder(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaReorderEventEditRulesRequest content) {
            super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
          }

          @Override
          public Reorder set$Xgafv(java.lang.String $Xgafv) {
            return (Reorder) super.set$Xgafv($Xgafv);
          }

          @Override
          public Reorder setAccessToken(java.lang.String accessToken) {
            return (Reorder) super.setAccessToken(accessToken);
          }

          @Override
          public Reorder setAlt(java.lang.String alt) {
            return (Reorder) super.setAlt(alt);
          }

          @Override
          public Reorder setCallback(java.lang.String callback) {
            return (Reorder) super.setCallback(callback);
          }

          @Override
          public Reorder setFields(java.lang.String fields) {
            return (Reorder) super.setFields(fields);
          }

          @Override
          public Reorder setKey(java.lang.String key) {
            return (Reorder) super.setKey(key);
          }

          @Override
          public Reorder setOauthToken(java.lang.String oauthToken) {
            return (Reorder) super.setOauthToken(oauthToken);
          }

          @Override
          public Reorder setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Reorder) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Reorder setQuotaUser(java.lang.String quotaUser) {
            return (Reorder) super.setQuotaUser(quotaUser);
          }

          @Override
          public Reorder setUploadType(java.lang.String uploadType) {
            return (Reorder) super.setUploadType(uploadType);
          }

          @Override
          public Reorder setUploadProtocol(java.lang.String uploadProtocol) {
            return (Reorder) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Example format: properties/123/dataStreams/456 */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Example format: properties/123/dataStreams/456
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. Example format: properties/123/dataStreams/456 */
          public Reorder setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Reorder set(String parameterName, Object value) {
            return (Reorder) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the MeasurementProtocolSecrets collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
       *   {@code GoogleAnalyticsAdmin.MeasurementProtocolSecrets.List request = analyticsadmin.measurementProtocolSecrets().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public MeasurementProtocolSecrets measurementProtocolSecrets() {
        return new MeasurementProtocolSecrets();
      }

      /**
       * The "measurementProtocolSecrets" collection of methods.
       */
      public class MeasurementProtocolSecrets {

        /**
         * Creates a measurement protocol secret.
         *
         * Create a request for the method "measurementProtocolSecrets.create".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource where this secret will be created. Format:
         *        properties/{property}/dataStreams/{dataStream}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret> {

          private static final String REST_PATH = "v1alpha/{+parent}/measurementProtocolSecrets";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

          /**
           * Creates a measurement protocol secret.
           *
           * Create a request for the method "measurementProtocolSecrets.create".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource where this secret will be created. Format:
         *        properties/{property}/dataStreams/{dataStream}
           * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret content) {
            super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource where this secret will be created. Format:
           * properties/{property}/dataStreams/{dataStream}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource where this secret will be created. Format:
         properties/{property}/dataStreams/{dataStream}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource where this secret will be created. Format:
           * properties/{property}/dataStreams/{dataStream}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes target MeasurementProtocolSecret.
         *
         * Create a request for the method "measurementProtocolSecrets.delete".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the MeasurementProtocolSecret to delete. Format: properties/{property}/dataStr
         *        eams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/measurementProtocolSecrets/[^/]+$");

          /**
           * Deletes target MeasurementProtocolSecret.
           *
           * Create a request for the method "measurementProtocolSecrets.delete".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the MeasurementProtocolSecret to delete. Format: properties/{property}/dataStr
         *        eams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/measurementProtocolSecrets/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the MeasurementProtocolSecret to delete. Format: properties/{prop
           * erty}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the MeasurementProtocolSecret to delete. Format: properties/{property}/dataSt
         reams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the MeasurementProtocolSecret to delete. Format: properties/{prop
           * erty}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/measurementProtocolSecrets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Lookup for a single MeasurementProtocolSecret.
         *
         * Create a request for the method "measurementProtocolSecrets.get".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the measurement protocol secret to lookup. Format: properties/{property}/dataS
         *        treams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/measurementProtocolSecrets/[^/]+$");

          /**
           * Lookup for a single MeasurementProtocolSecret.
           *
           * Create a request for the method "measurementProtocolSecrets.get".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the measurement protocol secret to lookup. Format: properties/{property}/dataS
         *        treams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/measurementProtocolSecrets/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the measurement protocol secret to lookup. Format: properties/{pr
           * operty}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the measurement protocol secret to lookup. Format: properties/{property}/data
         Streams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the measurement protocol secret to lookup. Format: properties/{pr
           * operty}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/measurementProtocolSecrets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns child MeasurementProtocolSecrets under the specified parent Property.
         *
         * Create a request for the method "measurementProtocolSecrets.list".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The resource name of the parent stream. Format:
         *        properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListMeasurementProtocolSecretsResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/measurementProtocolSecrets";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

          /**
           * Returns child MeasurementProtocolSecrets under the specified parent Property.
           *
           * Create a request for the method "measurementProtocolSecrets.list".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The resource name of the parent stream. Format:
         *        properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListMeasurementProtocolSecretsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of the parent stream. Format:
           * properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The resource name of the parent stream. Format:
         properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The resource name of the parent stream. Format:
           * properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of resources to return. If unspecified, at most 10 resources will be
           * returned. The maximum value is 10. Higher values will be coerced to the maximum.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of resources to return. If unspecified, at most 10 resources will be returned.
         The maximum value is 10. Higher values will be coerced to the maximum.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of resources to return. If unspecified, at most 10 resources will be
           * returned. The maximum value is 10. Higher values will be coerced to the maximum.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListMeasurementProtocolSecrets` call. Provide
           * this to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListMeasurementProtocolSecrets` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListMeasurementProtocolSecrets` call. Provide this to
         retrieve the subsequent page. When paginating, all other parameters provided to
         `ListMeasurementProtocolSecrets` must match the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListMeasurementProtocolSecrets` call. Provide
           * this to retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListMeasurementProtocolSecrets` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a measurement protocol secret.
         *
         * Create a request for the method "measurementProtocolSecrets.patch".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Resource name of this secret. This secret may be a child of any type of stream. Format:
         *        properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProt
         *        ocolSecret}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/measurementProtocolSecrets/[^/]+$");

          /**
           * Updates a measurement protocol secret.
           *
           * Create a request for the method "measurementProtocolSecrets.patch".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Resource name of this secret. This secret may be a child of any type of stream. Format:
         *        properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProt
         *        ocolSecret}
           * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret content) {
            super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaMeasurementProtocolSecret.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/measurementProtocolSecrets/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. Resource name of this secret. This secret may be a child of any type of
           * stream. Format: properties/{property}/dataStreams/{dataStream}/measurementProtocolSecre
           * ts/{measurementProtocolSecret}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Resource name of this secret. This secret may be a child of any type of stream.
         Format: properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProto
         colSecret}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. Resource name of this secret. This secret may be a child of any type of
           * stream. Format: properties/{property}/dataStreams/{dataStream}/measurementProtocolSecre
           * ts/{measurementProtocolSecret}
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/measurementProtocolSecrets/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The list of fields to be updated. Omitted fields will not be updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The list of fields to be updated. Omitted fields will not be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The list of fields to be updated. Omitted fields will not be updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the SKAdNetworkConversionValueSchema collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
       *   {@code GoogleAnalyticsAdmin.SKAdNetworkConversionValueSchema.List request = analyticsadmin.sKAdNetworkConversionValueSchema().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public SKAdNetworkConversionValueSchema sKAdNetworkConversionValueSchema() {
        return new SKAdNetworkConversionValueSchema();
      }

      /**
       * The "sKAdNetworkConversionValueSchema" collection of methods.
       */
      public class SKAdNetworkConversionValueSchema {

        /**
         * Creates a SKAdNetworkConversionValueSchema.
         *
         * Create a request for the method "sKAdNetworkConversionValueSchema.create".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource where this schema will be created. Format:
         *        properties/{property}/dataStreams/{dataStream}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema> {

          private static final String REST_PATH = "v1alpha/{+parent}/sKAdNetworkConversionValueSchema";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

          /**
           * Creates a SKAdNetworkConversionValueSchema.
           *
           * Create a request for the method "sKAdNetworkConversionValueSchema.create".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource where this schema will be created. Format:
         *        properties/{property}/dataStreams/{dataStream}
           * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema content) {
            super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource where this schema will be created. Format:
           * properties/{property}/dataStreams/{dataStream}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource where this schema will be created. Format:
         properties/{property}/dataStreams/{dataStream}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource where this schema will be created. Format:
           * properties/{property}/dataStreams/{dataStream}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes target SKAdNetworkConversionValueSchema.
         *
         * Create a request for the method "sKAdNetworkConversionValueSchema.delete".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the SKAdNetworkConversionValueSchema to delete. Format: properties/{property}/
         *        dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_conversion_value_sc
         *        hema}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/sKAdNetworkConversionValueSchema/[^/]+$");

          /**
           * Deletes target SKAdNetworkConversionValueSchema.
           *
           * Create a request for the method "sKAdNetworkConversionValueSchema.delete".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the SKAdNetworkConversionValueSchema to delete. Format: properties/{property}/
         *        dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_conversion_value_sc
         *        hema}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/sKAdNetworkConversionValueSchema/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the SKAdNetworkConversionValueSchema to delete. Format: propertie
           * s/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_con
           * version_value_schema}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the SKAdNetworkConversionValueSchema to delete. Format: properties/{property}
         /dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_conversion_value_schema}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the SKAdNetworkConversionValueSchema to delete. Format: propertie
           * s/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_con
           * version_value_schema}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/sKAdNetworkConversionValueSchema/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Looks up a single SKAdNetworkConversionValueSchema.
         *
         * Create a request for the method "sKAdNetworkConversionValueSchema.get".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of SKAdNetwork conversion value schema to look up. Format: properties/{p
         *        roperty}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_conversion
         *        _value_schema}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/sKAdNetworkConversionValueSchema/[^/]+$");

          /**
           * Looks up a single SKAdNetworkConversionValueSchema.
           *
           * Create a request for the method "sKAdNetworkConversionValueSchema.get".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of SKAdNetwork conversion value schema to look up. Format: properties/{p
         *        roperty}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_conversion
         *        _value_schema}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/sKAdNetworkConversionValueSchema/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of SKAdNetwork conversion value schema to look up. Format:
           * properties/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadne
           * twork_conversion_value_schema}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of SKAdNetwork conversion value schema to look up. Format: properties/{
         property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadnetwork_conversion_value_s
         chema}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of SKAdNetwork conversion value schema to look up. Format:
           * properties/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema/{skadne
           * twork_conversion_value_schema}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/sKAdNetworkConversionValueSchema/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists SKAdNetworkConversionValueSchema on a stream. Properties can have at most one
         * SKAdNetworkConversionValueSchema.
         *
         * Create a request for the method "sKAdNetworkConversionValueSchema.list".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The DataStream resource to list schemas for. Format:
         *        properties/{property_id}/dataStreams/{dataStream} Example:
         *        properties/1234/dataStreams/5678
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListSKAdNetworkConversionValueSchemasResponse> {

          private static final String REST_PATH = "v1alpha/{+parent}/sKAdNetworkConversionValueSchema";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+$");

          /**
           * Lists SKAdNetworkConversionValueSchema on a stream. Properties can have at most one
           * SKAdNetworkConversionValueSchema.
           *
           * Create a request for the method "sKAdNetworkConversionValueSchema.list".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The DataStream resource to list schemas for. Format:
         *        properties/{property_id}/dataStreams/{dataStream} Example:
         *        properties/1234/dataStreams/5678
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListSKAdNetworkConversionValueSchemasResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The DataStream resource to list schemas for. Format:
           * properties/{property_id}/dataStreams/{dataStream} Example:
           * properties/1234/dataStreams/5678
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The DataStream resource to list schemas for. Format:
         properties/{property_id}/dataStreams/{dataStream} Example: properties/1234/dataStreams/5678
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The DataStream resource to list schemas for. Format:
           * properties/{property_id}/dataStreams/{dataStream} Example:
           * properties/1234/dataStreams/5678
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The maximum number of resources to return. The service may return fewer than this
           * value, even if there are additional pages. If unspecified, at most 50 resources will be
           * returned. The maximum value is 200; (higher values will be coerced to the maximum)
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of resources to return. The service may return fewer than this value, even if
         there are additional pages. If unspecified, at most 50 resources will be returned. The maximum
         value is 200; (higher values will be coerced to the maximum)
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of resources to return. The service may return fewer than this
           * value, even if there are additional pages. If unspecified, at most 50 resources will be
           * returned. The maximum value is 200; (higher values will be coerced to the maximum)
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListSKAdNetworkConversionValueSchemas` call.
           * Provide this to retrieve the subsequent page. When paginating, all other parameters
           * provided to `ListSKAdNetworkConversionValueSchema` must match the call that provided
           * the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListSKAdNetworkConversionValueSchemas` call. Provide this
         to retrieve the subsequent page. When paginating, all other parameters provided to
         `ListSKAdNetworkConversionValueSchema` must match the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListSKAdNetworkConversionValueSchemas` call.
           * Provide this to retrieve the subsequent page. When paginating, all other parameters
           * provided to `ListSKAdNetworkConversionValueSchema` must match the call that provided
           * the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a SKAdNetworkConversionValueSchema.
         *
         * Create a request for the method "sKAdNetworkConversionValueSchema.patch".
         *
         * This request holds the parameters needed by the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Output only. Resource name of the schema. This will be child of ONLY an iOS stream, and there can be
         *        at most one such child under an iOS stream. Format:
         *        properties/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema> {

          private static final String REST_PATH = "v1alpha/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^properties/[^/]+/dataStreams/[^/]+/sKAdNetworkConversionValueSchema/[^/]+$");

          /**
           * Updates a SKAdNetworkConversionValueSchema.
           *
           * Create a request for the method "sKAdNetworkConversionValueSchema.patch".
           *
           * This request holds the parameters needed by the the analyticsadmin server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Output only. Resource name of the schema. This will be child of ONLY an iOS stream, and there can be
         *        at most one such child under an iOS stream. Format:
         *        properties/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema
           * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema content) {
            super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSKAdNetworkConversionValueSchema.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/sKAdNetworkConversionValueSchema/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Output only. Resource name of the schema. This will be child of ONLY an iOS stream, and
           * there can be at most one such child under an iOS stream. Format:
           * properties/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Output only. Resource name of the schema. This will be child of ONLY an iOS stream, and there can
         be at most one such child under an iOS stream. Format:
         properties/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Output only. Resource name of the schema. This will be child of ONLY an iOS stream, and
           * there can be at most one such child under an iOS stream. Format:
           * properties/{property}/dataStreams/{dataStream}/sKAdNetworkConversionValueSchema
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^properties/[^/]+/dataStreams/[^/]+/sKAdNetworkConversionValueSchema/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The list of fields to be updated. Omitted fields will not be updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The list of fields to be updated. Omitted fields will not be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The list of fields to be updated. Omitted fields will not be updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the DisplayVideo360AdvertiserLinkProposals collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.DisplayVideo360AdvertiserLinkProposals.List request = analyticsadmin.displayVideo360AdvertiserLinkProposals().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public DisplayVideo360AdvertiserLinkProposals displayVideo360AdvertiserLinkProposals() {
      return new DisplayVideo360AdvertiserLinkProposals();
    }

    /**
     * The "displayVideo360AdvertiserLinkProposals" collection of methods.
     */
    public class DisplayVideo360AdvertiserLinkProposals {

      /**
       * Approves a DisplayVideo360AdvertiserLinkProposal. The DisplayVideo360AdvertiserLinkProposal will
       * be deleted and a new DisplayVideo360AdvertiserLink will be created.
       *
       * Create a request for the method "displayVideo360AdvertiserLinkProposals.approve".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Approve#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the DisplayVideo360AdvertiserLinkProposal to approve. Example format:
       *        properties/1234/displayVideo360AdvertiserLinkProposals/5678
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalRequest}
       * @return the request
       */
      public Approve approve(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalRequest content) throws java.io.IOException {
        Approve result = new Approve(name, content);
        initialize(result);
        return result;
      }

      public class Approve extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse> {

        private static final String REST_PATH = "v1alpha/{+name}:approve";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");

        /**
         * Approves a DisplayVideo360AdvertiserLinkProposal. The DisplayVideo360AdvertiserLinkProposal
         * will be deleted and a new DisplayVideo360AdvertiserLink will be created.
         *
         * Create a request for the method "displayVideo360AdvertiserLinkProposals.approve".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Approve#execute()} method to invoke the remote operation.
         * <p> {@link
         * Approve#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the DisplayVideo360AdvertiserLinkProposal to approve. Example format:
       *        properties/1234/displayVideo360AdvertiserLinkProposals/5678
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalRequest}
         * @since 1.13
         */
        protected Approve(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaApproveDisplayVideo360AdvertiserLinkProposalResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");
          }
        }

        @Override
        public Approve set$Xgafv(java.lang.String $Xgafv) {
          return (Approve) super.set$Xgafv($Xgafv);
        }

        @Override
        public Approve setAccessToken(java.lang.String accessToken) {
          return (Approve) super.setAccessToken(accessToken);
        }

        @Override
        public Approve setAlt(java.lang.String alt) {
          return (Approve) super.setAlt(alt);
        }

        @Override
        public Approve setCallback(java.lang.String callback) {
          return (Approve) super.setCallback(callback);
        }

        @Override
        public Approve setFields(java.lang.String fields) {
          return (Approve) super.setFields(fields);
        }

        @Override
        public Approve setKey(java.lang.String key) {
          return (Approve) super.setKey(key);
        }

        @Override
        public Approve setOauthToken(java.lang.String oauthToken) {
          return (Approve) super.setOauthToken(oauthToken);
        }

        @Override
        public Approve setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Approve) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Approve setQuotaUser(java.lang.String quotaUser) {
          return (Approve) super.setQuotaUser(quotaUser);
        }

        @Override
        public Approve setUploadType(java.lang.String uploadType) {
          return (Approve) super.setUploadType(uploadType);
        }

        @Override
        public Approve setUploadProtocol(java.lang.String uploadProtocol) {
          return (Approve) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLinkProposal to approve. Example
         * format: properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the DisplayVideo360AdvertiserLinkProposal to approve. Example format:
       properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLinkProposal to approve. Example
         * format: properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        public Approve setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Approve set(String parameterName, Object value) {
          return (Approve) super.set(parameterName, value);
        }
      }
      /**
       * Cancels a DisplayVideo360AdvertiserLinkProposal. Cancelling can mean either: - Declining a
       * proposal initiated from Display & Video 360 - Withdrawing a proposal initiated from Google
       * Analytics After being cancelled, a proposal will eventually be deleted automatically.
       *
       * Create a request for the method "displayVideo360AdvertiserLinkProposals.cancel".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the DisplayVideo360AdvertiserLinkProposal to cancel. Example format:
       *        properties/1234/displayVideo360AdvertiserLinkProposals/5678
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCancelDisplayVideo360AdvertiserLinkProposalRequest}
       * @return the request
       */
      public Cancel cancel(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCancelDisplayVideo360AdvertiserLinkProposalRequest content) throws java.io.IOException {
        Cancel result = new Cancel(name, content);
        initialize(result);
        return result;
      }

      public class Cancel extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal> {

        private static final String REST_PATH = "v1alpha/{+name}:cancel";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");

        /**
         * Cancels a DisplayVideo360AdvertiserLinkProposal. Cancelling can mean either: - Declining a
         * proposal initiated from Display & Video 360 - Withdrawing a proposal initiated from Google
         * Analytics After being cancelled, a proposal will eventually be deleted automatically.
         *
         * Create a request for the method "displayVideo360AdvertiserLinkProposals.cancel".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
         * <p> {@link
         * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the DisplayVideo360AdvertiserLinkProposal to cancel. Example format:
       *        properties/1234/displayVideo360AdvertiserLinkProposals/5678
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCancelDisplayVideo360AdvertiserLinkProposalRequest}
         * @since 1.13
         */
        protected Cancel(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaCancelDisplayVideo360AdvertiserLinkProposalRequest content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");
          }
        }

        @Override
        public Cancel set$Xgafv(java.lang.String $Xgafv) {
          return (Cancel) super.set$Xgafv($Xgafv);
        }

        @Override
        public Cancel setAccessToken(java.lang.String accessToken) {
          return (Cancel) super.setAccessToken(accessToken);
        }

        @Override
        public Cancel setAlt(java.lang.String alt) {
          return (Cancel) super.setAlt(alt);
        }

        @Override
        public Cancel setCallback(java.lang.String callback) {
          return (Cancel) super.setCallback(callback);
        }

        @Override
        public Cancel setFields(java.lang.String fields) {
          return (Cancel) super.setFields(fields);
        }

        @Override
        public Cancel setKey(java.lang.String key) {
          return (Cancel) super.setKey(key);
        }

        @Override
        public Cancel setOauthToken(java.lang.String oauthToken) {
          return (Cancel) super.setOauthToken(oauthToken);
        }

        @Override
        public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Cancel) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Cancel setQuotaUser(java.lang.String quotaUser) {
          return (Cancel) super.setQuotaUser(quotaUser);
        }

        @Override
        public Cancel setUploadType(java.lang.String uploadType) {
          return (Cancel) super.setUploadType(uploadType);
        }

        @Override
        public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
          return (Cancel) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLinkProposal to cancel. Example
         * format: properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the DisplayVideo360AdvertiserLinkProposal to cancel. Example format:
       properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLinkProposal to cancel. Example
         * format: properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        public Cancel setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Cancel set(String parameterName, Object value) {
          return (Cancel) super.set(parameterName, value);
        }
      }
      /**
       * Creates a DisplayVideo360AdvertiserLinkProposal.
       *
       * Create a request for the method "displayVideo360AdvertiserLinkProposals.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal> {

        private static final String REST_PATH = "v1alpha/{+parent}/displayVideo360AdvertiserLinkProposals";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a DisplayVideo360AdvertiserLinkProposal.
         *
         * Create a request for the method "displayVideo360AdvertiserLinkProposals.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a DisplayVideo360AdvertiserLinkProposal on a property. This can only be used on cancelled
       * proposals.
       *
       * Create a request for the method "displayVideo360AdvertiserLinkProposals.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the DisplayVideo360AdvertiserLinkProposal to delete. Example format:
       *        properties/1234/displayVideo360AdvertiserLinkProposals/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");

        /**
         * Deletes a DisplayVideo360AdvertiserLinkProposal on a property. This can only be used on
         * cancelled proposals.
         *
         * Create a request for the method "displayVideo360AdvertiserLinkProposals.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the DisplayVideo360AdvertiserLinkProposal to delete. Example format:
       *        properties/1234/displayVideo360AdvertiserLinkProposals/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLinkProposal to delete. Example
         * format: properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the DisplayVideo360AdvertiserLinkProposal to delete. Example format:
       properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLinkProposal to delete. Example
         * format: properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single DisplayVideo360AdvertiserLinkProposal.
       *
       * Create a request for the method "displayVideo360AdvertiserLinkProposals.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the DisplayVideo360AdvertiserLinkProposal to get. Example format:
       *        properties/1234/displayVideo360AdvertiserLinkProposals/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");

        /**
         * Lookup for a single DisplayVideo360AdvertiserLinkProposal.
         *
         * Create a request for the method "displayVideo360AdvertiserLinkProposals.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the DisplayVideo360AdvertiserLinkProposal to get. Example format:
       *        properties/1234/displayVideo360AdvertiserLinkProposals/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLinkProposal.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLinkProposal to get. Example format:
         * properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the DisplayVideo360AdvertiserLinkProposal to get. Example format:
       properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLinkProposal to get. Example format:
         * properties/1234/displayVideo360AdvertiserLinkProposals/5678
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinkProposals/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists DisplayVideo360AdvertiserLinkProposals on a property.
       *
       * Create a request for the method "displayVideo360AdvertiserLinkProposals.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/displayVideo360AdvertiserLinkProposals";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists DisplayVideo360AdvertiserLinkProposals on a property.
         *
         * Create a request for the method "displayVideo360AdvertiserLinkProposals.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinkProposalsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListDisplayVideo360AdvertiserLinkProposals` call.
         * Provide this to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListDisplayVideo360AdvertiserLinkProposals` must match the call that
         * provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListDisplayVideo360AdvertiserLinkProposals` call. Provide
       this to retrieve the subsequent page. When paginating, all other parameters provided to
       `ListDisplayVideo360AdvertiserLinkProposals` must match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListDisplayVideo360AdvertiserLinkProposals` call.
         * Provide this to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListDisplayVideo360AdvertiserLinkProposals` must match the call that
         * provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the DisplayVideo360AdvertiserLinks collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.DisplayVideo360AdvertiserLinks.List request = analyticsadmin.displayVideo360AdvertiserLinks().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public DisplayVideo360AdvertiserLinks displayVideo360AdvertiserLinks() {
      return new DisplayVideo360AdvertiserLinks();
    }

    /**
     * The "displayVideo360AdvertiserLinks" collection of methods.
     */
    public class DisplayVideo360AdvertiserLinks {

      /**
       * Creates a DisplayVideo360AdvertiserLink. This can only be utilized by users who have proper
       * authorization both on the Google Analytics property and on the Display & Video 360 advertiser.
       * Users who do not have access to the Display & Video 360 advertiser should instead seek to create
       * a DisplayVideo360LinkProposal.
       *
       * Create a request for the method "displayVideo360AdvertiserLinks.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink> {

        private static final String REST_PATH = "v1alpha/{+parent}/displayVideo360AdvertiserLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a DisplayVideo360AdvertiserLink. This can only be utilized by users who have proper
         * authorization both on the Google Analytics property and on the Display & Video 360 advertiser.
         * Users who do not have access to the Display & Video 360 advertiser should instead seek to
         * create a DisplayVideo360LinkProposal.
         *
         * Create a request for the method "displayVideo360AdvertiserLinks.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a DisplayVideo360AdvertiserLink on a property.
       *
       * Create a request for the method "displayVideo360AdvertiserLinks.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the DisplayVideo360AdvertiserLink to delete. Example format:
       *        properties/1234/displayVideo360AdvertiserLinks/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/displayVideo360AdvertiserLinks/[^/]+$");

        /**
         * Deletes a DisplayVideo360AdvertiserLink on a property.
         *
         * Create a request for the method "displayVideo360AdvertiserLinks.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the DisplayVideo360AdvertiserLink to delete. Example format:
       *        properties/1234/displayVideo360AdvertiserLinks/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinks/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLink to delete. Example format:
         * properties/1234/displayVideo360AdvertiserLinks/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the DisplayVideo360AdvertiserLink to delete. Example format:
       properties/1234/displayVideo360AdvertiserLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLink to delete. Example format:
         * properties/1234/displayVideo360AdvertiserLinks/5678
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Look up a single DisplayVideo360AdvertiserLink
       *
       * Create a request for the method "displayVideo360AdvertiserLinks.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the DisplayVideo360AdvertiserLink to get. Example format:
       *        properties/1234/displayVideo360AdvertiserLink/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/displayVideo360AdvertiserLinks/[^/]+$");

        /**
         * Look up a single DisplayVideo360AdvertiserLink
         *
         * Create a request for the method "displayVideo360AdvertiserLinks.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the DisplayVideo360AdvertiserLink to get. Example format:
       *        properties/1234/displayVideo360AdvertiserLink/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinks/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLink to get. Example format:
         * properties/1234/displayVideo360AdvertiserLink/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the DisplayVideo360AdvertiserLink to get. Example format:
       properties/1234/displayVideo360AdvertiserLink/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the DisplayVideo360AdvertiserLink to get. Example format:
         * properties/1234/displayVideo360AdvertiserLink/5678
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all DisplayVideo360AdvertiserLinks on a property.
       *
       * Create a request for the method "displayVideo360AdvertiserLinks.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/displayVideo360AdvertiserLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists all DisplayVideo360AdvertiserLinks on a property.
         *
         * Create a request for the method "displayVideo360AdvertiserLinks.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListDisplayVideo360AdvertiserLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListDisplayVideo360AdvertiserLinks` call. Provide
         * this to retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListDisplayVideo360AdvertiserLinks` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListDisplayVideo360AdvertiserLinks` call. Provide this to
       retrieve the subsequent page. When paginating, all other parameters provided to
       `ListDisplayVideo360AdvertiserLinks` must match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListDisplayVideo360AdvertiserLinks` call. Provide
         * this to retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListDisplayVideo360AdvertiserLinks` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a DisplayVideo360AdvertiserLink on a property.
       *
       * Create a request for the method "displayVideo360AdvertiserLinks.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. The resource name for this DisplayVideo360AdvertiserLink resource. Format:
       *        properties/{propertyId}/displayVideo360AdvertiserLinks/{linkId} Note: linkId is not the
       *        Display & Video 360 Advertiser ID
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/displayVideo360AdvertiserLinks/[^/]+$");

        /**
         * Updates a DisplayVideo360AdvertiserLink on a property.
         *
         * Create a request for the method "displayVideo360AdvertiserLinks.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. The resource name for this DisplayVideo360AdvertiserLink resource. Format:
       *        properties/{propertyId}/displayVideo360AdvertiserLinks/{linkId} Note: linkId is not the
       *        Display & Video 360 Advertiser ID
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaDisplayVideo360AdvertiserLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinks/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. The resource name for this DisplayVideo360AdvertiserLink resource. Format:
         * properties/{propertyId}/displayVideo360AdvertiserLinks/{linkId} Note: linkId is not the
         * Display & Video 360 Advertiser ID
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. The resource name for this DisplayVideo360AdvertiserLink resource. Format:
       properties/{propertyId}/displayVideo360AdvertiserLinks/{linkId} Note: linkId is not the Display &
       Video 360 Advertiser ID
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. The resource name for this DisplayVideo360AdvertiserLink resource. Format:
         * properties/{propertyId}/displayVideo360AdvertiserLinks/{linkId} Note: linkId is not the
         * Display & Video 360 Advertiser ID
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/displayVideo360AdvertiserLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the ExpandedDataSets collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.ExpandedDataSets.List request = analyticsadmin.expandedDataSets().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public ExpandedDataSets expandedDataSets() {
      return new ExpandedDataSets();
    }

    /**
     * The "expandedDataSets" collection of methods.
     */
    public class ExpandedDataSets {

      /**
       * Creates a ExpandedDataSet.
       *
       * Create a request for the method "expandedDataSets.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet> {

        private static final String REST_PATH = "v1alpha/{+parent}/expandedDataSets";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a ExpandedDataSet.
         *
         * Create a request for the method "expandedDataSets.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a ExpandedDataSet on a property.
       *
       * Create a request for the method "expandedDataSets.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Example format: properties/1234/expandedDataSets/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/expandedDataSets/[^/]+$");

        /**
         * Deletes a ExpandedDataSet on a property.
         *
         * Create a request for the method "expandedDataSets.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Example format: properties/1234/expandedDataSets/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/expandedDataSets/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234/expandedDataSets/5678 */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Example format: properties/1234/expandedDataSets/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Example format: properties/1234/expandedDataSets/5678 */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/expandedDataSets/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single ExpandedDataSet.
       *
       * Create a request for the method "expandedDataSets.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the ExpandedDataSet to get. Example format:
       *        properties/1234/expandedDataSets/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/expandedDataSets/[^/]+$");

        /**
         * Lookup for a single ExpandedDataSet.
         *
         * Create a request for the method "expandedDataSets.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the ExpandedDataSet to get. Example format:
       *        properties/1234/expandedDataSets/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/expandedDataSets/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the ExpandedDataSet to get. Example format:
         * properties/1234/expandedDataSets/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the ExpandedDataSet to get. Example format:
       properties/1234/expandedDataSets/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the ExpandedDataSet to get. Example format:
         * properties/1234/expandedDataSets/5678
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/expandedDataSets/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists ExpandedDataSets on a property.
       *
       * Create a request for the method "expandedDataSets.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListExpandedDataSetsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/expandedDataSets";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists ExpandedDataSets on a property.
         *
         * Create a request for the method "expandedDataSets.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListExpandedDataSetsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListExpandedDataSets` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListExpandedDataSet` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListExpandedDataSets` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListExpandedDataSet` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListExpandedDataSets` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListExpandedDataSet` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a ExpandedDataSet on a property.
       *
       * Create a request for the method "expandedDataSets.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. The resource name for this ExpandedDataSet resource. Format:
       *        properties/{property_id}/expandedDataSets/{expanded_data_set}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/expandedDataSets/[^/]+$");

        /**
         * Updates a ExpandedDataSet on a property.
         *
         * Create a request for the method "expandedDataSets.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. The resource name for this ExpandedDataSet resource. Format:
       *        properties/{property_id}/expandedDataSets/{expanded_data_set}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaExpandedDataSet.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/expandedDataSets/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. The resource name for this ExpandedDataSet resource. Format:
         * properties/{property_id}/expandedDataSets/{expanded_data_set}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. The resource name for this ExpandedDataSet resource. Format:
       properties/{property_id}/expandedDataSets/{expanded_data_set}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. The resource name for this ExpandedDataSet resource. Format:
         * properties/{property_id}/expandedDataSets/{expanded_data_set}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/expandedDataSets/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
       with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the FirebaseLinks collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.FirebaseLinks.List request = analyticsadmin.firebaseLinks().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public FirebaseLinks firebaseLinks() {
      return new FirebaseLinks();
    }

    /**
     * The "firebaseLinks" collection of methods.
     */
    public class FirebaseLinks {

      /**
       * Creates a FirebaseLink. Properties can have at most one FirebaseLink.
       *
       * Create a request for the method "firebaseLinks.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Format: properties/{property_id} Example: `properties/1234`
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink> {

        private static final String REST_PATH = "v1alpha/{+parent}/firebaseLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a FirebaseLink. Properties can have at most one FirebaseLink.
         *
         * Create a request for the method "firebaseLinks.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Format: properties/{property_id} Example: `properties/1234`
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaFirebaseLink.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: properties/{property_id} Example: `properties/1234` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Format: properties/{property_id} Example: `properties/1234`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Format: properties/{property_id} Example: `properties/1234` */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a FirebaseLink on a property
       *
       * Create a request for the method "firebaseLinks.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
       *        `properties/1234/firebaseLinks/5678`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/firebaseLinks/[^/]+$");

        /**
         * Deletes a FirebaseLink on a property
         *
         * Create a request for the method "firebaseLinks.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
       *        `properties/1234/firebaseLinks/5678`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/firebaseLinks/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
         * `properties/1234/firebaseLinks/5678`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
       `properties/1234/firebaseLinks/5678`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Format: properties/{property_id}/firebaseLinks/{firebase_link_id} Example:
         * `properties/1234/firebaseLinks/5678`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/firebaseLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lists FirebaseLinks on a property. Properties can have at most one FirebaseLink.
       *
       * Create a request for the method "firebaseLinks.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Format: properties/{property_id} Example: `properties/1234`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListFirebaseLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/firebaseLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists FirebaseLinks on a property. Properties can have at most one FirebaseLink.
         *
         * Create a request for the method "firebaseLinks.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Format: properties/{property_id} Example: `properties/1234`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListFirebaseLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: properties/{property_id} Example: `properties/1234` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Format: properties/{property_id} Example: `properties/1234`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Format: properties/{property_id} Example: `properties/1234` */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. The service may return fewer than this value,
         * even if there are additional pages. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. The service may return fewer than this value, even if
       there are additional pages. If unspecified, at most 50 resources will be returned. The maximum
       value is 200; (higher values will be coerced to the maximum)
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. The service may return fewer than this value,
         * even if there are additional pages. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListFirebaseLinks` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListFirebaseLinks` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListFirebaseLinks` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListFirebaseLinks` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListFirebaseLinks` call. Provide this to retrieve
         * the subsequent page. When paginating, all other parameters provided to
         * `ListFirebaseLinks` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the GoogleAdsLinks collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.GoogleAdsLinks.List request = analyticsadmin.googleAdsLinks().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public GoogleAdsLinks googleAdsLinks() {
      return new GoogleAdsLinks();
    }

    /**
     * The "googleAdsLinks" collection of methods.
     */
    public class GoogleAdsLinks {

      /**
       * Creates a GoogleAdsLink.
       *
       * Create a request for the method "googleAdsLinks.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink> {

        private static final String REST_PATH = "v1alpha/{+parent}/googleAdsLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a GoogleAdsLink.
         *
         * Create a request for the method "googleAdsLinks.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a GoogleAdsLink on a property
       *
       * Create a request for the method "googleAdsLinks.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Example format: properties/1234/googleAdsLinks/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/googleAdsLinks/[^/]+$");

        /**
         * Deletes a GoogleAdsLink on a property
         *
         * Create a request for the method "googleAdsLinks.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Example format: properties/1234/googleAdsLinks/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/googleAdsLinks/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234/googleAdsLinks/5678 */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Example format: properties/1234/googleAdsLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Example format: properties/1234/googleAdsLinks/5678 */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/googleAdsLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lists GoogleAdsLinks on a property.
       *
       * Create a request for the method "googleAdsLinks.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListGoogleAdsLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/googleAdsLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists GoogleAdsLinks on a property.
         *
         * Create a request for the method "googleAdsLinks.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListGoogleAdsLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListGoogleAdsLinks` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListGoogleAdsLinks` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListGoogleAdsLinks` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListGoogleAdsLinks` must match
       the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListGoogleAdsLinks` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListGoogleAdsLinks` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a GoogleAdsLink on a property
       *
       * Create a request for the method "googleAdsLinks.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Format: properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note: googleAdsLinkId
       *        is not the Google Ads customer ID.
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/googleAdsLinks/[^/]+$");

        /**
         * Updates a GoogleAdsLink on a property
         *
         * Create a request for the method "googleAdsLinks.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Format: properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note: googleAdsLinkId
       *        is not the Google Ads customer ID.
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaGoogleAdsLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/googleAdsLinks/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Format: properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note:
         * googleAdsLinkId is not the Google Ads customer ID.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Format: properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note: googleAdsLinkId
       is not the Google Ads customer ID.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Format: properties/{propertyId}/googleAdsLinks/{googleAdsLinkId} Note:
         * googleAdsLinkId is not the Google Ads customer ID.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/googleAdsLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
       with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the KeyEvents collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.KeyEvents.List request = analyticsadmin.keyEvents().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public KeyEvents keyEvents() {
      return new KeyEvents();
    }

    /**
     * The "keyEvents" collection of methods.
     */
    public class KeyEvents {

      /**
       * Creates a Key Event.
       *
       * Create a request for the method "keyEvents.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource name of the parent property where this Key Event will be created. Format:
       *        properties/123
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent> {

        private static final String REST_PATH = "v1alpha/{+parent}/keyEvents";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a Key Event.
         *
         * Create a request for the method "keyEvents.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource name of the parent property where this Key Event will be created. Format:
       *        properties/123
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the parent property where this Key Event will be created.
         * Format: properties/123
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource name of the parent property where this Key Event will be created. Format:
       properties/123
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The resource name of the parent property where this Key Event will be created.
         * Format: properties/123
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a Key Event.
       *
       * Create a request for the method "keyEvents.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the Key Event to delete. Format:
       *        properties/{property}/keyEvents/{key_event} Example: "properties/123/keyEvents/456"
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/keyEvents/[^/]+$");

        /**
         * Deletes a Key Event.
         *
         * Create a request for the method "keyEvents.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the Key Event to delete. Format:
       *        properties/{property}/keyEvents/{key_event} Example: "properties/123/keyEvents/456"
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/keyEvents/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the Key Event to delete. Format:
         * properties/{property}/keyEvents/{key_event} Example: "properties/123/keyEvents/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the Key Event to delete. Format:
       properties/{property}/keyEvents/{key_event} Example: "properties/123/keyEvents/456"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the Key Event to delete. Format:
         * properties/{property}/keyEvents/{key_event} Example: "properties/123/keyEvents/456"
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/keyEvents/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieve a single Key Event.
       *
       * Create a request for the method "keyEvents.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The resource name of the Key Event to retrieve. Format:
       *        properties/{property}/keyEvents/{key_event} Example: "properties/123/keyEvents/456"
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/keyEvents/[^/]+$");

        /**
         * Retrieve a single Key Event.
         *
         * Create a request for the method "keyEvents.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The resource name of the Key Event to retrieve. Format:
       *        properties/{property}/keyEvents/{key_event} Example: "properties/123/keyEvents/456"
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/keyEvents/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The resource name of the Key Event to retrieve. Format:
         * properties/{property}/keyEvents/{key_event} Example: "properties/123/keyEvents/456"
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The resource name of the Key Event to retrieve. Format:
       properties/{property}/keyEvents/{key_event} Example: "properties/123/keyEvents/456"
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The resource name of the Key Event to retrieve. Format:
         * properties/{property}/keyEvents/{key_event} Example: "properties/123/keyEvents/456"
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/keyEvents/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Returns a list of Key Events in the specified parent property. Returns an empty list if no Key
       * Events are found.
       *
       * Create a request for the method "keyEvents.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The resource name of the parent property. Example: 'properties/123'
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListKeyEventsResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/keyEvents";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Returns a list of Key Events in the specified parent property. Returns an empty list if no Key
         * Events are found.
         *
         * Create a request for the method "keyEvents.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The resource name of the parent property. Example: 'properties/123'
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListKeyEventsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The resource name of the parent property. Example: 'properties/123' */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The resource name of the parent property. Example: 'properties/123'
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The resource name of the parent property. Example: 'properties/123' */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListKeyEvents` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListKeyEvents` must
         * match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListKeyEvents` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListKeyEvents` must match the
       call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListKeyEvents` call. Provide this to retrieve the
         * subsequent page. When paginating, all other parameters provided to `ListKeyEvents` must
         * match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a Key Event.
       *
       * Create a request for the method "keyEvents.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Resource name of this key event. Format: properties/{property}/keyEvents/{key_event}
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/keyEvents/[^/]+$");

        /**
         * Updates a Key Event.
         *
         * Create a request for the method "keyEvents.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Resource name of this key event. Format: properties/{property}/keyEvents/{key_event}
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaKeyEvent.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/keyEvents/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Resource name of this key event. Format:
         * properties/{property}/keyEvents/{key_event}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Resource name of this key event. Format: properties/{property}/keyEvents/{key_event}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Resource name of this key event. Format:
         * properties/{property}/keyEvents/{key_event}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/keyEvents/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Field names must be in snake case (e.g.,
       "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
       with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Field names must be in snake case (e.g.,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the RollupPropertySourceLinks collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.RollupPropertySourceLinks.List request = analyticsadmin.rollupPropertySourceLinks().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public RollupPropertySourceLinks rollupPropertySourceLinks() {
      return new RollupPropertySourceLinks();
    }

    /**
     * The "rollupPropertySourceLinks" collection of methods.
     */
    public class RollupPropertySourceLinks {

      /**
       * Creates a roll-up property source link. Only roll-up properties can have source links, so this
       * method will throw an error if used on other types of properties.
       *
       * Create a request for the method "rollupPropertySourceLinks.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Format: properties/{property_id} Example: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRollupPropertySourceLink}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRollupPropertySourceLink content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRollupPropertySourceLink> {

        private static final String REST_PATH = "v1alpha/{+parent}/rollupPropertySourceLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a roll-up property source link. Only roll-up properties can have source links, so this
         * method will throw an error if used on other types of properties.
         *
         * Create a request for the method "rollupPropertySourceLinks.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Format: properties/{property_id} Example: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRollupPropertySourceLink}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRollupPropertySourceLink content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRollupPropertySourceLink.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Format: properties/{property_id} Example: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Format: properties/{property_id} Example: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Format: properties/{property_id} Example: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a roll-up property source link. Only roll-up properties can have source links, so this
       * method will throw an error if used on other types of properties.
       *
       * Create a request for the method "rollupPropertySourceLinks.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Format:
       *        properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id}
       *        Example: properties/1234/rollupPropertySourceLinks/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/rollupPropertySourceLinks/[^/]+$");

        /**
         * Deletes a roll-up property source link. Only roll-up properties can have source links, so this
         * method will throw an error if used on other types of properties.
         *
         * Create a request for the method "rollupPropertySourceLinks.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Format:
       *        properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id}
       *        Example: properties/1234/rollupPropertySourceLinks/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/rollupPropertySourceLinks/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Format:
         * properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id}
         * Example: properties/1234/rollupPropertySourceLinks/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Format:
       properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id} Example:
       properties/1234/rollupPropertySourceLinks/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Format:
         * properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id}
         * Example: properties/1234/rollupPropertySourceLinks/5678
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/rollupPropertySourceLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single roll-up property source Link. Only roll-up properties can have source links,
       * so this method will throw an error if used on other types of properties.
       *
       * Create a request for the method "rollupPropertySourceLinks.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the roll-up property source link to lookup. Format:
       *        properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id}
       *        Example: properties/123/rollupPropertySourceLinks/456
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRollupPropertySourceLink> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/rollupPropertySourceLinks/[^/]+$");

        /**
         * Lookup for a single roll-up property source Link. Only roll-up properties can have source
         * links, so this method will throw an error if used on other types of properties.
         *
         * Create a request for the method "rollupPropertySourceLinks.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the roll-up property source link to lookup. Format:
       *        properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id}
       *        Example: properties/123/rollupPropertySourceLinks/456
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaRollupPropertySourceLink.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/rollupPropertySourceLinks/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the roll-up property source link to lookup. Format:
         * properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id}
         * Example: properties/123/rollupPropertySourceLinks/456
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the roll-up property source link to lookup. Format:
       properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id} Example:
       properties/123/rollupPropertySourceLinks/456
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the roll-up property source link to lookup. Format:
         * properties/{property_id}/rollupPropertySourceLinks/{rollup_property_source_link_id}
         * Example: properties/123/rollupPropertySourceLinks/456
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/rollupPropertySourceLinks/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists roll-up property source Links on a property. Only roll-up properties can have source links,
       * so this method will throw an error if used on other types of properties.
       *
       * Create a request for the method "rollupPropertySourceLinks.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the roll-up property to list roll-up property source links under. Format:
       *        properties/{property_id} Example: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListRollupPropertySourceLinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/rollupPropertySourceLinks";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists roll-up property source Links on a property. Only roll-up properties can have source
         * links, so this method will throw an error if used on other types of properties.
         *
         * Create a request for the method "rollupPropertySourceLinks.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the roll-up property to list roll-up property source links under. Format:
       *        properties/{property_id} Example: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListRollupPropertySourceLinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the roll-up property to list roll-up property source links under.
         * Format: properties/{property_id} Example: properties/1234
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the roll-up property to list roll-up property source links under. Format:
       properties/{property_id} Example: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the roll-up property to list roll-up property source links under.
         * Format: properties/{property_id} Example: properties/1234
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of resources to return. The service may return fewer than
         * this value, even if there are additional pages. If unspecified, at most 50 resources will
         * be returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of resources to return. The service may return fewer than this value,
       even if there are additional pages. If unspecified, at most 50 resources will be returned. The
       maximum value is 200; (higher values will be coerced to the maximum)
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of resources to return. The service may return fewer than
         * this value, even if there are additional pages. If unspecified, at most 50 resources will
         * be returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListRollupPropertySourceLinks` call.
         * Provide this to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListRollupPropertySourceLinks` must match the call that provided the page
         * token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListRollupPropertySourceLinks` call. Provide this
       to retrieve the subsequent page. When paginating, all other parameters provided to
       `ListRollupPropertySourceLinks` must match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListRollupPropertySourceLinks` call.
         * Provide this to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListRollupPropertySourceLinks` must match the call that provided the page
         * token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the SearchAds360Links collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.SearchAds360Links.List request = analyticsadmin.searchAds360Links().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public SearchAds360Links searchAds360Links() {
      return new SearchAds360Links();
    }

    /**
     * The "searchAds360Links" collection of methods.
     */
    public class SearchAds360Links {

      /**
       * Creates a SearchAds360Link.
       *
       * Create a request for the method "searchAds360Links.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link> {

        private static final String REST_PATH = "v1alpha/{+parent}/searchAds360Links";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a SearchAds360Link.
         *
         * Create a request for the method "searchAds360Links.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a SearchAds360Link on a property.
       *
       * Create a request for the method "searchAds360Links.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the SearchAds360Link to delete. Example format:
       *        properties/1234/SearchAds360Links/5678
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/searchAds360Links/[^/]+$");

        /**
         * Deletes a SearchAds360Link on a property.
         *
         * Create a request for the method "searchAds360Links.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the SearchAds360Link to delete. Example format:
       *        properties/1234/SearchAds360Links/5678
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/searchAds360Links/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the SearchAds360Link to delete. Example format:
         * properties/1234/SearchAds360Links/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the SearchAds360Link to delete. Example format:
       properties/1234/SearchAds360Links/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the SearchAds360Link to delete. Example format:
         * properties/1234/SearchAds360Links/5678
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/searchAds360Links/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Look up a single SearchAds360Link
       *
       * Create a request for the method "searchAds360Links.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the SearchAds360Link to get. Example format:
       *        properties/1234/SearchAds360Link/5678
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/searchAds360Links/[^/]+$");

        /**
         * Look up a single SearchAds360Link
         *
         * Create a request for the method "searchAds360Links.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the SearchAds360Link to get. Example format:
       *        properties/1234/SearchAds360Link/5678
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/searchAds360Links/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the SearchAds360Link to get. Example format:
         * properties/1234/SearchAds360Link/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the SearchAds360Link to get. Example format:
       properties/1234/SearchAds360Link/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the SearchAds360Link to get. Example format:
         * properties/1234/SearchAds360Link/5678
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/searchAds360Links/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all SearchAds360Links on a property.
       *
       * Create a request for the method "searchAds360Links.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Example format: properties/1234
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListSearchAds360LinksResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/searchAds360Links";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Lists all SearchAds360Links on a property.
         *
         * Create a request for the method "searchAds360Links.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Example format: properties/1234
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListSearchAds360LinksResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Example format: properties/1234 */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Example format: properties/1234
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Example format: properties/1234 */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of resources to return. If unspecified, at most 50 resources will be returned.
       The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of resources to return. If unspecified, at most 50 resources will be
         * returned. The maximum value is 200 (higher values will be coerced to the maximum).
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListSearchAds360Links` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListSearchAds360Links` must match the call that provided the page token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListSearchAds360Links` call. Provide this to retrieve the
       subsequent page. When paginating, all other parameters provided to `ListSearchAds360Links` must
       match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListSearchAds360Links` call. Provide this to
         * retrieve the subsequent page. When paginating, all other parameters provided to
         * `ListSearchAds360Links` must match the call that provided the page token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a SearchAds360Link on a property.
       *
       * Create a request for the method "searchAds360Links.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. The resource name for this SearchAds360Link resource. Format:
       *        properties/{propertyId}/searchAds360Links/{linkId} Note: linkId is not the Search Ads 360
       *        advertiser ID
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/searchAds360Links/[^/]+$");

        /**
         * Updates a SearchAds360Link on a property.
         *
         * Create a request for the method "searchAds360Links.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. The resource name for this SearchAds360Link resource. Format:
       *        properties/{propertyId}/searchAds360Links/{linkId} Note: linkId is not the Search Ads 360
       *        advertiser ID
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSearchAds360Link.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/searchAds360Links/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. The resource name for this SearchAds360Link resource. Format:
         * properties/{propertyId}/searchAds360Links/{linkId} Note: linkId is not the Search Ads 360
         * advertiser ID
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. The resource name for this SearchAds360Link resource. Format:
       properties/{propertyId}/searchAds360Links/{linkId} Note: linkId is not the Search Ads 360
       advertiser ID
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. The resource name for this SearchAds360Link resource. Format:
         * properties/{propertyId}/searchAds360Links/{linkId} Note: linkId is not the Search Ads 360
         * advertiser ID
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/searchAds360Links/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to be updated. Omitted fields will not be updated. To replace the
       entire entity, use one path with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to be updated. Omitted fields will not be updated. To
         * replace the entire entity, use one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the SubpropertyEventFilters collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code GoogleAnalyticsAdmin analyticsadmin = new GoogleAnalyticsAdmin(...);}
     *   {@code GoogleAnalyticsAdmin.SubpropertyEventFilters.List request = analyticsadmin.subpropertyEventFilters().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public SubpropertyEventFilters subpropertyEventFilters() {
      return new SubpropertyEventFilters();
    }

    /**
     * The "subpropertyEventFilters" collection of methods.
     */
    public class SubpropertyEventFilters {

      /**
       * Creates a subproperty Event Filter.
       *
       * Create a request for the method "subpropertyEventFilters.create".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The ordinary property for which to create a subproperty event filter. Format:
       *        properties/property_id Example: properties/123
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter> {

        private static final String REST_PATH = "v1alpha/{+parent}/subpropertyEventFilters";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * Creates a subproperty Event Filter.
         *
         * Create a request for the method "subpropertyEventFilters.create".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         * <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The ordinary property for which to create a subproperty event filter. Format:
       *        properties/property_id Example: properties/123
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter content) {
          super(GoogleAnalyticsAdmin.this, "POST", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The ordinary property for which to create a subproperty event filter. Format:
         * properties/property_id Example: properties/123
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The ordinary property for which to create a subproperty event filter. Format:
       properties/property_id Example: properties/123
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The ordinary property for which to create a subproperty event filter. Format:
         * properties/property_id Example: properties/123
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a subproperty event filter.
       *
       * Create a request for the method "subpropertyEventFilters.delete".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name of the subproperty event filter to delete. Format:
       *        properties/property_id/subpropertyEventFilters/subproperty_event_filter Example:
       *        properties/123/subpropertyEventFilters/456
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/subpropertyEventFilters/[^/]+$");

        /**
         * Deletes a subproperty event filter.
         *
         * Create a request for the method "subpropertyEventFilters.delete".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         * <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name of the subproperty event filter to delete. Format:
       *        properties/property_id/subpropertyEventFilters/subproperty_event_filter Example:
       *        properties/123/subpropertyEventFilters/456
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "DELETE", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/subpropertyEventFilters/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name of the subproperty event filter to delete. Format:
         * properties/property_id/subpropertyEventFilters/subproperty_event_filter Example:
         * properties/123/subpropertyEventFilters/456
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of the subproperty event filter to delete. Format:
       properties/property_id/subpropertyEventFilters/subproperty_event_filter Example:
       properties/123/subpropertyEventFilters/456
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name of the subproperty event filter to delete. Format:
         * properties/property_id/subpropertyEventFilters/subproperty_event_filter Example:
         * properties/123/subpropertyEventFilters/456
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/subpropertyEventFilters/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Lookup for a single subproperty Event Filter.
       *
       * Create a request for the method "subpropertyEventFilters.get".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name of the subproperty event filter to lookup. Format:
       *        properties/property_id/subpropertyEventFilters/subproperty_event_filter Example:
       *        properties/123/subpropertyEventFilters/456
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/subpropertyEventFilters/[^/]+$");

        /**
         * Lookup for a single subproperty Event Filter.
         *
         * Create a request for the method "subpropertyEventFilters.get".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name of the subproperty event filter to lookup. Format:
       *        properties/property_id/subpropertyEventFilters/subproperty_event_filter Example:
       *        properties/123/subpropertyEventFilters/456
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/subpropertyEventFilters/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name of the subproperty event filter to lookup. Format:
         * properties/property_id/subpropertyEventFilters/subproperty_event_filter Example:
         * properties/123/subpropertyEventFilters/456
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name of the subproperty event filter to lookup. Format:
       properties/property_id/subpropertyEventFilters/subproperty_event_filter Example:
       properties/123/subpropertyEventFilters/456
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name of the subproperty event filter to lookup. Format:
         * properties/property_id/subpropertyEventFilters/subproperty_event_filter Example:
         * properties/123/subpropertyEventFilters/456
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/subpropertyEventFilters/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List all subproperty Event Filters on a property.
       *
       * Create a request for the method "subpropertyEventFilters.list".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource name of the ordinary property. Format: properties/property_id Example:
       *        properties/123
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListSubpropertyEventFiltersResponse> {

        private static final String REST_PATH = "v1alpha/{+parent}/subpropertyEventFilters";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+$");

        /**
         * List all subproperty Event Filters on a property.
         *
         * Create a request for the method "subpropertyEventFilters.list".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource name of the ordinary property. Format: properties/property_id Example:
       *        properties/123
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(GoogleAnalyticsAdmin.this, "GET", REST_PATH, null, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaListSubpropertyEventFiltersResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name of the ordinary property. Format: properties/property_id Example:
         * properties/123
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource name of the ordinary property. Format: properties/property_id Example:
       properties/123
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Resource name of the ordinary property. Format: properties/property_id Example:
         * properties/123
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^properties/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. The maximum number of resources to return. The service may return fewer than
         * this value, even if there are additional pages. If unspecified, at most 50 resources will
         * be returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of resources to return. The service may return fewer than this value,
       even if there are additional pages. If unspecified, at most 50 resources will be returned. The
       maximum value is 200; (higher values will be coerced to the maximum)
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. The maximum number of resources to return. The service may return fewer than
         * this value, even if there are additional pages. If unspecified, at most 50 resources will
         * be returned. The maximum value is 200; (higher values will be coerced to the maximum)
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListSubpropertyEventFilters` call.
         * Provide this to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListSubpropertyEventFilters` must match the call that provided the page
         * token.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListSubpropertyEventFilters` call. Provide this
       to retrieve the subsequent page. When paginating, all other parameters provided to
       `ListSubpropertyEventFilters` must match the call that provided the page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListSubpropertyEventFilters` call.
         * Provide this to retrieve the subsequent page. When paginating, all other parameters
         * provided to `ListSubpropertyEventFilters` must match the call that provided the page
         * token.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a subproperty Event Filter.
       *
       * Create a request for the method "subpropertyEventFilters.patch".
       *
       * This request holds the parameters needed by the analyticsadmin server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Output only. Format:
       *        properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
       *        Example: properties/1234/subpropertyEventFilters/5678
       * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends GoogleAnalyticsAdminRequest<com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter> {

        private static final String REST_PATH = "v1alpha/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^properties/[^/]+/subpropertyEventFilters/[^/]+$");

        /**
         * Updates a subproperty Event Filter.
         *
         * Create a request for the method "subpropertyEventFilters.patch".
         *
         * This request holds the parameters needed by the the analyticsadmin server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         * <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Output only. Format:
       *        properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
       *        Example: properties/1234/subpropertyEventFilters/5678
         * @param content the {@link com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter content) {
          super(GoogleAnalyticsAdmin.this, "PATCH", REST_PATH, content, com.google.api.services.analyticsadmin.v1alpha.model.GoogleAnalyticsAdminV1alphaSubpropertyEventFilter.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/subpropertyEventFilters/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Output only. Format:
         * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
         * Example: properties/1234/subpropertyEventFilters/5678
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Output only. Format:
       properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter} Example:
       properties/1234/subpropertyEventFilters/5678
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Output only. Format:
         * properties/{ordinary_property_id}/subpropertyEventFilters/{sub_property_event_filter}
         * Example: properties/1234/subpropertyEventFilters/5678
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^properties/[^/]+/subpropertyEventFilters/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Required. The list of fields to update. Field names must be in snake case (for example,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to update. Field names must be in snake case (for example,
       "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use one path
       with the string "*" to match all fields.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Required. The list of fields to update. Field names must be in snake case (for example,
         * "field_to_update"). Omitted fields will not be updated. To replace the entire entity, use
         * one path with the string "*" to match all fields.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * Builder for {@link GoogleAnalyticsAdmin}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link GoogleAnalyticsAdmin}. */
    @Override
    public GoogleAnalyticsAdmin build() {
      return new GoogleAnalyticsAdmin(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link GoogleAnalyticsAdminRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setGoogleAnalyticsAdminRequestInitializer(
        GoogleAnalyticsAdminRequestInitializer googleanalyticsadminRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleanalyticsadminRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
