/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.run.v1alpha1.model;

/**
 * ServiceSpecReleaseType contains the options for slowly releasing revisions. See ServiceSpec for
 * more details.
 *
 * Not currently supported by Cloud Run.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Run API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ServiceSpecReleaseType extends com.google.api.client.json.GenericJson {

  /**
   * The configuration for this service. All revisions from this service must come from a single
   * configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ConfigurationSpec configuration;

  /**
   * Revisions is an ordered list of 1 or 2 revisions. The first is the current revision, and the
   * second is the candidate revision. If a single revision is provided, traffic will be pinned at
   * that revision.
   *
   * "@latest" is a shortcut for usage that refers to the latest created revision by the
   * configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> revisions;

  /**
   * RolloutPercent is the percent of traffic that should be sent to the candidate revision, i.e.
   * the 2nd revision in the revisions list. Valid values are between 0 and 99 inclusive.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer rolloutPercent;

  /**
   * The configuration for this service. All revisions from this service must come from a single
   * configuration.
   * @return value or {@code null} for none
   */
  public ConfigurationSpec getConfiguration() {
    return configuration;
  }

  /**
   * The configuration for this service. All revisions from this service must come from a single
   * configuration.
   * @param configuration configuration or {@code null} for none
   */
  public ServiceSpecReleaseType setConfiguration(ConfigurationSpec configuration) {
    this.configuration = configuration;
    return this;
  }

  /**
   * Revisions is an ordered list of 1 or 2 revisions. The first is the current revision, and the
   * second is the candidate revision. If a single revision is provided, traffic will be pinned at
   * that revision.
   *
   * "@latest" is a shortcut for usage that refers to the latest created revision by the
   * configuration.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRevisions() {
    return revisions;
  }

  /**
   * Revisions is an ordered list of 1 or 2 revisions. The first is the current revision, and the
   * second is the candidate revision. If a single revision is provided, traffic will be pinned at
   * that revision.
   *
   * "@latest" is a shortcut for usage that refers to the latest created revision by the
   * configuration.
   * @param revisions revisions or {@code null} for none
   */
  public ServiceSpecReleaseType setRevisions(java.util.List<java.lang.String> revisions) {
    this.revisions = revisions;
    return this;
  }

  /**
   * RolloutPercent is the percent of traffic that should be sent to the candidate revision, i.e.
   * the 2nd revision in the revisions list. Valid values are between 0 and 99 inclusive.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRolloutPercent() {
    return rolloutPercent;
  }

  /**
   * RolloutPercent is the percent of traffic that should be sent to the candidate revision, i.e.
   * the 2nd revision in the revisions list. Valid values are between 0 and 99 inclusive.
   * @param rolloutPercent rolloutPercent or {@code null} for none
   */
  public ServiceSpecReleaseType setRolloutPercent(java.lang.Integer rolloutPercent) {
    this.rolloutPercent = rolloutPercent;
    return this;
  }

  @Override
  public ServiceSpecReleaseType set(String fieldName, Object value) {
    return (ServiceSpecReleaseType) super.set(fieldName, value);
  }

  @Override
  public ServiceSpecReleaseType clone() {
    return (ServiceSpecReleaseType) super.clone();
  }

}
