/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.discoveryengine.v1beta.model;

/**
 * Specifies how a facet is computed.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Discovery Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey extends com.google.api.client.json.GenericJson {

  /**
   * True to make facet keys case insensitive when getting faceting values with prefixes or
   * contains; false otherwise.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean caseInsensitive;

  /**
   * Only get facet values that contains the given strings. For example, suppose "category" has
   * three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "contains" to "2022",
   * the "category" facet only contains "Action > 2022" and "Sci-Fi > 2022". Only supported on
   * textual fields. Maximum is 10.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> contains;

  /**
   * Set only if values should be bucketed into intervals. Must be set for facets with numerical
   * values. Must not be set for facet with text values. Maximum number of intervals is 30.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudDiscoveryengineV1betaInterval> intervals;

  static {
    // hack to force ProGuard to consider GoogleCloudDiscoveryengineV1betaInterval used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudDiscoveryengineV1betaInterval.class);
  }

  /**
   * Required. Supported textual and numerical facet keys in Document object, over which the facet
   * values are computed. Facet key is case-sensitive.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String key;

  /**
   * The order in which documents are returned. Allowed values are: * "count desc", which means
   * order by SearchResponse.Facet.values.count descending. * "value desc", which means order by
   * SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set,
   * textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order);
   * numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String orderBy;

  /**
   * Only get facet values that start with the given string prefix. For example, suppose "category"
   * has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to
   * "Action", the "category" facet only contains "Action > 2022" and "Action > 2021". Only
   * supported on textual fields. Maximum is 10.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> prefixes;

  /**
   * Only get facet for the given restricted values. Only supported on textual fields. For example,
   * suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If
   * set "restricted_values" to "Action > 2022", the "category" facet only contains "Action > 2022".
   * Only supported on textual fields. Maximum is 10.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> restrictedValues;

  /**
   * True to make facet keys case insensitive when getting faceting values with prefixes or
   * contains; false otherwise.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getCaseInsensitive() {
    return caseInsensitive;
  }

  /**
   * True to make facet keys case insensitive when getting faceting values with prefixes or
   * contains; false otherwise.
   * @param caseInsensitive caseInsensitive or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey setCaseInsensitive(java.lang.Boolean caseInsensitive) {
    this.caseInsensitive = caseInsensitive;
    return this;
  }

  /**
   * Only get facet values that contains the given strings. For example, suppose "category" has
   * three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "contains" to "2022",
   * the "category" facet only contains "Action > 2022" and "Sci-Fi > 2022". Only supported on
   * textual fields. Maximum is 10.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getContains() {
    return contains;
  }

  /**
   * Only get facet values that contains the given strings. For example, suppose "category" has
   * three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "contains" to "2022",
   * the "category" facet only contains "Action > 2022" and "Sci-Fi > 2022". Only supported on
   * textual fields. Maximum is 10.
   * @param contains contains or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey setContains(java.util.List<java.lang.String> contains) {
    this.contains = contains;
    return this;
  }

  /**
   * Set only if values should be bucketed into intervals. Must be set for facets with numerical
   * values. Must not be set for facet with text values. Maximum number of intervals is 30.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudDiscoveryengineV1betaInterval> getIntervals() {
    return intervals;
  }

  /**
   * Set only if values should be bucketed into intervals. Must be set for facets with numerical
   * values. Must not be set for facet with text values. Maximum number of intervals is 30.
   * @param intervals intervals or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey setIntervals(java.util.List<GoogleCloudDiscoveryengineV1betaInterval> intervals) {
    this.intervals = intervals;
    return this;
  }

  /**
   * Required. Supported textual and numerical facet keys in Document object, over which the facet
   * values are computed. Facet key is case-sensitive.
   * @return value or {@code null} for none
   */
  public java.lang.String getKey() {
    return key;
  }

  /**
   * Required. Supported textual and numerical facet keys in Document object, over which the facet
   * values are computed. Facet key is case-sensitive.
   * @param key key or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey setKey(java.lang.String key) {
    this.key = key;
    return this;
  }

  /**
   * The order in which documents are returned. Allowed values are: * "count desc", which means
   * order by SearchResponse.Facet.values.count descending. * "value desc", which means order by
   * SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set,
   * textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order);
   * numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals.
   * @return value or {@code null} for none
   */
  public java.lang.String getOrderBy() {
    return orderBy;
  }

  /**
   * The order in which documents are returned. Allowed values are: * "count desc", which means
   * order by SearchResponse.Facet.values.count descending. * "value desc", which means order by
   * SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set,
   * textual values are sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order);
   * numerical intervals are sorted in the order given by FacetSpec.FacetKey.intervals.
   * @param orderBy orderBy or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey setOrderBy(java.lang.String orderBy) {
    this.orderBy = orderBy;
    return this;
  }

  /**
   * Only get facet values that start with the given string prefix. For example, suppose "category"
   * has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to
   * "Action", the "category" facet only contains "Action > 2022" and "Action > 2021". Only
   * supported on textual fields. Maximum is 10.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPrefixes() {
    return prefixes;
  }

  /**
   * Only get facet values that start with the given string prefix. For example, suppose "category"
   * has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If set "prefixes" to
   * "Action", the "category" facet only contains "Action > 2022" and "Action > 2021". Only
   * supported on textual fields. Maximum is 10.
   * @param prefixes prefixes or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey setPrefixes(java.util.List<java.lang.String> prefixes) {
    this.prefixes = prefixes;
    return this;
  }

  /**
   * Only get facet for the given restricted values. Only supported on textual fields. For example,
   * suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If
   * set "restricted_values" to "Action > 2022", the "category" facet only contains "Action > 2022".
   * Only supported on textual fields. Maximum is 10.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getRestrictedValues() {
    return restrictedValues;
  }

  /**
   * Only get facet for the given restricted values. Only supported on textual fields. For example,
   * suppose "category" has three values "Action > 2022", "Action > 2021" and "Sci-Fi > 2022". If
   * set "restricted_values" to "Action > 2022", the "category" facet only contains "Action > 2022".
   * Only supported on textual fields. Maximum is 10.
   * @param restrictedValues restrictedValues or {@code null} for none
   */
  public GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey setRestrictedValues(java.util.List<java.lang.String> restrictedValues) {
    this.restrictedValues = restrictedValues;
    return this;
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey set(String fieldName, Object value) {
    return (GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey clone() {
    return (GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey) super.clone();
  }

}
