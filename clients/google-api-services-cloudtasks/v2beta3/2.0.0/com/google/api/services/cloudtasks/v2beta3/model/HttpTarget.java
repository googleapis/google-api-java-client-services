/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudtasks.v2beta3.model;

/**
 * HTTP target. When specified as a Queue, all the tasks with [HttpRequest] will be overridden
 * according to the target.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Tasks API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class HttpTarget extends com.google.api.client.json.GenericJson {

  /**
   * HTTP target headers. This map contains the header field names and values. Headers will be set
   * when running the CreateTask and/or BufferTask. These headers represent a subset of the headers
   * that will be configured for the task's HTTP request. Some HTTP request headers will be ignored
   * or replaced. A partial list of headers that will be ignored or replaced is: * Several
   * predefined headers, prefixed with "X-CloudTasks-", can be used to define properties of the
   * task. * Host: This will be computed by Cloud Tasks and derived from HttpRequest.url. * Content-
   * Length: This will be computed by Cloud Tasks. `Content-Type` won't be set by Cloud Tasks. You
   * can explicitly set `Content-Type` to a media type when the task is created. For
   * example,`Content-Type` can be set to `"application/octet-stream"` or `"application/json"`. The
   * default value is set to `"application/json"`. * User-Agent: This will be set to `"Google-Cloud-
   * Tasks"`. Headers which can have multiple values (according to RFC2616) can be specified using
   * comma-separated values. The size of the headers must be less than 80KB. Queue-level headers to
   * override headers of all the tasks in the queue. Do not put business sensitive or personally
   * identifying data in the HTTP Header Override Configuration or other similar fields in
   * accordance with Section 12 (Resource Fields) of the [Service Specific
   * Terms](https://cloud.google.com/terms/service-terms).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<HeaderOverride> headerOverrides;

  static {
    // hack to force ProGuard to consider HeaderOverride used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(HeaderOverride.class);
  }

  /**
   * The HTTP method to use for the request. When specified, it overrides HttpRequest.http_method
   * for the task. Note that if the value is set to HttpMethod.GET the HttpRequest.body of the task
   * will be ignored at execution time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String httpMethod;

  /**
   * If specified, an [OAuth token](https://developers.google.com/identity/protocols/OAuth2) is
   * generated and attached as the `Authorization` header in the HTTP request. This type of
   * authorization should generally be used only when calling Google APIs hosted on
   * *.googleapis.com. Note that both the service account email and the scope MUST be specified when
   * using the queue-level authorization override.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private OAuthToken oauthToken;

  /**
   * If specified, an [OIDC](https://developers.google.com/identity/protocols/OpenIDConnect) token
   * is generated and attached as an `Authorization` header in the HTTP request. This type of
   * authorization can be used for many scenarios, including calling Cloud Run, or endpoints where
   * you intend to validate the token yourself. Note that both the service account email and the
   * audience MUST be specified when using the queue-level authorization override.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private OidcToken oidcToken;

  /**
   * URI override. When specified, overrides the execution URI for all the tasks in the queue.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UriOverride uriOverride;

  /**
   * HTTP target headers. This map contains the header field names and values. Headers will be set
   * when running the CreateTask and/or BufferTask. These headers represent a subset of the headers
   * that will be configured for the task's HTTP request. Some HTTP request headers will be ignored
   * or replaced. A partial list of headers that will be ignored or replaced is: * Several
   * predefined headers, prefixed with "X-CloudTasks-", can be used to define properties of the
   * task. * Host: This will be computed by Cloud Tasks and derived from HttpRequest.url. * Content-
   * Length: This will be computed by Cloud Tasks. `Content-Type` won't be set by Cloud Tasks. You
   * can explicitly set `Content-Type` to a media type when the task is created. For
   * example,`Content-Type` can be set to `"application/octet-stream"` or `"application/json"`. The
   * default value is set to `"application/json"`. * User-Agent: This will be set to `"Google-Cloud-
   * Tasks"`. Headers which can have multiple values (according to RFC2616) can be specified using
   * comma-separated values. The size of the headers must be less than 80KB. Queue-level headers to
   * override headers of all the tasks in the queue. Do not put business sensitive or personally
   * identifying data in the HTTP Header Override Configuration or other similar fields in
   * accordance with Section 12 (Resource Fields) of the [Service Specific
   * Terms](https://cloud.google.com/terms/service-terms).
   * @return value or {@code null} for none
   */
  public java.util.List<HeaderOverride> getHeaderOverrides() {
    return headerOverrides;
  }

  /**
   * HTTP target headers. This map contains the header field names and values. Headers will be set
   * when running the CreateTask and/or BufferTask. These headers represent a subset of the headers
   * that will be configured for the task's HTTP request. Some HTTP request headers will be ignored
   * or replaced. A partial list of headers that will be ignored or replaced is: * Several
   * predefined headers, prefixed with "X-CloudTasks-", can be used to define properties of the
   * task. * Host: This will be computed by Cloud Tasks and derived from HttpRequest.url. * Content-
   * Length: This will be computed by Cloud Tasks. `Content-Type` won't be set by Cloud Tasks. You
   * can explicitly set `Content-Type` to a media type when the task is created. For
   * example,`Content-Type` can be set to `"application/octet-stream"` or `"application/json"`. The
   * default value is set to `"application/json"`. * User-Agent: This will be set to `"Google-Cloud-
   * Tasks"`. Headers which can have multiple values (according to RFC2616) can be specified using
   * comma-separated values. The size of the headers must be less than 80KB. Queue-level headers to
   * override headers of all the tasks in the queue. Do not put business sensitive or personally
   * identifying data in the HTTP Header Override Configuration or other similar fields in
   * accordance with Section 12 (Resource Fields) of the [Service Specific
   * Terms](https://cloud.google.com/terms/service-terms).
   * @param headerOverrides headerOverrides or {@code null} for none
   */
  public HttpTarget setHeaderOverrides(java.util.List<HeaderOverride> headerOverrides) {
    this.headerOverrides = headerOverrides;
    return this;
  }

  /**
   * The HTTP method to use for the request. When specified, it overrides HttpRequest.http_method
   * for the task. Note that if the value is set to HttpMethod.GET the HttpRequest.body of the task
   * will be ignored at execution time.
   * @return value or {@code null} for none
   */
  public java.lang.String getHttpMethod() {
    return httpMethod;
  }

  /**
   * The HTTP method to use for the request. When specified, it overrides HttpRequest.http_method
   * for the task. Note that if the value is set to HttpMethod.GET the HttpRequest.body of the task
   * will be ignored at execution time.
   * @param httpMethod httpMethod or {@code null} for none
   */
  public HttpTarget setHttpMethod(java.lang.String httpMethod) {
    this.httpMethod = httpMethod;
    return this;
  }

  /**
   * If specified, an [OAuth token](https://developers.google.com/identity/protocols/OAuth2) is
   * generated and attached as the `Authorization` header in the HTTP request. This type of
   * authorization should generally be used only when calling Google APIs hosted on
   * *.googleapis.com. Note that both the service account email and the scope MUST be specified when
   * using the queue-level authorization override.
   * @return value or {@code null} for none
   */
  public OAuthToken getOauthToken() {
    return oauthToken;
  }

  /**
   * If specified, an [OAuth token](https://developers.google.com/identity/protocols/OAuth2) is
   * generated and attached as the `Authorization` header in the HTTP request. This type of
   * authorization should generally be used only when calling Google APIs hosted on
   * *.googleapis.com. Note that both the service account email and the scope MUST be specified when
   * using the queue-level authorization override.
   * @param oauthToken oauthToken or {@code null} for none
   */
  public HttpTarget setOauthToken(OAuthToken oauthToken) {
    this.oauthToken = oauthToken;
    return this;
  }

  /**
   * If specified, an [OIDC](https://developers.google.com/identity/protocols/OpenIDConnect) token
   * is generated and attached as an `Authorization` header in the HTTP request. This type of
   * authorization can be used for many scenarios, including calling Cloud Run, or endpoints where
   * you intend to validate the token yourself. Note that both the service account email and the
   * audience MUST be specified when using the queue-level authorization override.
   * @return value or {@code null} for none
   */
  public OidcToken getOidcToken() {
    return oidcToken;
  }

  /**
   * If specified, an [OIDC](https://developers.google.com/identity/protocols/OpenIDConnect) token
   * is generated and attached as an `Authorization` header in the HTTP request. This type of
   * authorization can be used for many scenarios, including calling Cloud Run, or endpoints where
   * you intend to validate the token yourself. Note that both the service account email and the
   * audience MUST be specified when using the queue-level authorization override.
   * @param oidcToken oidcToken or {@code null} for none
   */
  public HttpTarget setOidcToken(OidcToken oidcToken) {
    this.oidcToken = oidcToken;
    return this;
  }

  /**
   * URI override. When specified, overrides the execution URI for all the tasks in the queue.
   * @return value or {@code null} for none
   */
  public UriOverride getUriOverride() {
    return uriOverride;
  }

  /**
   * URI override. When specified, overrides the execution URI for all the tasks in the queue.
   * @param uriOverride uriOverride or {@code null} for none
   */
  public HttpTarget setUriOverride(UriOverride uriOverride) {
    this.uriOverride = uriOverride;
    return this;
  }

  @Override
  public HttpTarget set(String fieldName, Object value) {
    return (HttpTarget) super.set(fieldName, value);
  }

  @Override
  public HttpTarget clone() {
    return (HttpTarget) super.clone();
  }

}
