/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.realtimebidding.v1.model;

/**
 * Top level status and detected attributes of a creative.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Real-time Bidding API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CreativeServingDecision extends com.google.api.client.json.GenericJson {

  /**
   * The detected ad technology providers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AdTechnologyProviders adTechnologyProviders;

  /**
   * The serving status of this creative in China. When approved or disapproved, this status applies
   * to both deals and open auction in China. When pending review, this creative is allowed to serve
   * for deals but not for open auction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServingStatus chinaServingStatus;

  /**
   * Status of this creative when bidding on PG and PD deals (outside of Russia and China).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServingStatus dealsServingStatus;

  /**
   * Detected advertisers and brands.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AdvertiserAndBrand> detectedAdvertisers;

  static {
    // hack to force ProGuard to consider AdvertiserAndBrand used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(AdvertiserAndBrand.class);
  }

  /**
   * Publisher-excludable attributes that were detected for this creative. Can be used to filter the
   * response of the creatives.list method. If the `excluded_attribute` field of a [bid
   * request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto)
   * contains one of the attributes that were declared or detected for a given creative, and a bid
   * is submitted with that creative, the bid will be filtered before the auction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> detectedAttributes;

  /**
   * The set of detected destination URLs for the creative. Can be used to filter the response of
   * the creatives.list method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> detectedClickThroughUrls;

  /**
   * The detected domains for this creative.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> detectedDomains;

  /**
   * The detected languages for this creative. The order is arbitrary. The codes are 2 or 5
   * characters and are documented at
   * https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter
   * the response of the creatives.list method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> detectedLanguages;

  /**
   * Detected product categories, if any. See the ad-product-categories.txt file in the technical
   * documentation for a list of IDs. Can be used to filter the response of the creatives.list
   * method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> detectedProductCategories;

  /**
   * Detected sensitive categories, if any. Can be used to filter the response of the creatives.list
   * method. See the ad-sensitive-categories.txt file in the technical documentation for a list of
   * IDs. You should use these IDs along with the excluded-sensitive-category field in the bid
   * request to filter your bids.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> detectedSensitiveCategories;

  /**
   * IDs of the ad technology vendors that were detected to be used by this creative. See
   * https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be
   * used to filter the response of the creatives.list method. If the `allowed_vendor_type` field of
   * a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-
   * proto) does not contain one of the vendor type IDs that were declared or detected for a given
   * creative, and a bid is submitted with that creative, the bid will be filtered before the
   * auction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.Integer> detectedVendorIds;

  /**
   * The last time the creative status was updated. Can be used to filter the response of the
   * creatives.list method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastStatusUpdate;

  /**
   * Status of this creative when bidding in open auction, private auction, or auction packages
   * (outside of Russia and China).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServingStatus openAuctionServingStatus;

  /**
   * The serving status of this creative in Russia. When approved or disapproved, this status
   * applies to both deals and open auction in Russia. When pending review, this creative is allowed
   * to serve for deals but not for open auction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ServingStatus russiaServingStatus;

  /**
   * The detected ad technology providers.
   * @return value or {@code null} for none
   */
  public AdTechnologyProviders getAdTechnologyProviders() {
    return adTechnologyProviders;
  }

  /**
   * The detected ad technology providers.
   * @param adTechnologyProviders adTechnologyProviders or {@code null} for none
   */
  public CreativeServingDecision setAdTechnologyProviders(AdTechnologyProviders adTechnologyProviders) {
    this.adTechnologyProviders = adTechnologyProviders;
    return this;
  }

  /**
   * The serving status of this creative in China. When approved or disapproved, this status applies
   * to both deals and open auction in China. When pending review, this creative is allowed to serve
   * for deals but not for open auction.
   * @return value or {@code null} for none
   */
  public ServingStatus getChinaServingStatus() {
    return chinaServingStatus;
  }

  /**
   * The serving status of this creative in China. When approved or disapproved, this status applies
   * to both deals and open auction in China. When pending review, this creative is allowed to serve
   * for deals but not for open auction.
   * @param chinaServingStatus chinaServingStatus or {@code null} for none
   */
  public CreativeServingDecision setChinaServingStatus(ServingStatus chinaServingStatus) {
    this.chinaServingStatus = chinaServingStatus;
    return this;
  }

  /**
   * Status of this creative when bidding on PG and PD deals (outside of Russia and China).
   * @return value or {@code null} for none
   */
  public ServingStatus getDealsServingStatus() {
    return dealsServingStatus;
  }

  /**
   * Status of this creative when bidding on PG and PD deals (outside of Russia and China).
   * @param dealsServingStatus dealsServingStatus or {@code null} for none
   */
  public CreativeServingDecision setDealsServingStatus(ServingStatus dealsServingStatus) {
    this.dealsServingStatus = dealsServingStatus;
    return this;
  }

  /**
   * Detected advertisers and brands.
   * @return value or {@code null} for none
   */
  public java.util.List<AdvertiserAndBrand> getDetectedAdvertisers() {
    return detectedAdvertisers;
  }

  /**
   * Detected advertisers and brands.
   * @param detectedAdvertisers detectedAdvertisers or {@code null} for none
   */
  public CreativeServingDecision setDetectedAdvertisers(java.util.List<AdvertiserAndBrand> detectedAdvertisers) {
    this.detectedAdvertisers = detectedAdvertisers;
    return this;
  }

  /**
   * Publisher-excludable attributes that were detected for this creative. Can be used to filter the
   * response of the creatives.list method. If the `excluded_attribute` field of a [bid
   * request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto)
   * contains one of the attributes that were declared or detected for a given creative, and a bid
   * is submitted with that creative, the bid will be filtered before the auction.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDetectedAttributes() {
    return detectedAttributes;
  }

  /**
   * Publisher-excludable attributes that were detected for this creative. Can be used to filter the
   * response of the creatives.list method. If the `excluded_attribute` field of a [bid
   * request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto)
   * contains one of the attributes that were declared or detected for a given creative, and a bid
   * is submitted with that creative, the bid will be filtered before the auction.
   * @param detectedAttributes detectedAttributes or {@code null} for none
   */
  public CreativeServingDecision setDetectedAttributes(java.util.List<java.lang.String> detectedAttributes) {
    this.detectedAttributes = detectedAttributes;
    return this;
  }

  /**
   * The set of detected destination URLs for the creative. Can be used to filter the response of
   * the creatives.list method.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDetectedClickThroughUrls() {
    return detectedClickThroughUrls;
  }

  /**
   * The set of detected destination URLs for the creative. Can be used to filter the response of
   * the creatives.list method.
   * @param detectedClickThroughUrls detectedClickThroughUrls or {@code null} for none
   */
  public CreativeServingDecision setDetectedClickThroughUrls(java.util.List<java.lang.String> detectedClickThroughUrls) {
    this.detectedClickThroughUrls = detectedClickThroughUrls;
    return this;
  }

  /**
   * The detected domains for this creative.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDetectedDomains() {
    return detectedDomains;
  }

  /**
   * The detected domains for this creative.
   * @param detectedDomains detectedDomains or {@code null} for none
   */
  public CreativeServingDecision setDetectedDomains(java.util.List<java.lang.String> detectedDomains) {
    this.detectedDomains = detectedDomains;
    return this;
  }

  /**
   * The detected languages for this creative. The order is arbitrary. The codes are 2 or 5
   * characters and are documented at
   * https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter
   * the response of the creatives.list method.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getDetectedLanguages() {
    return detectedLanguages;
  }

  /**
   * The detected languages for this creative. The order is arbitrary. The codes are 2 or 5
   * characters and are documented at
   * https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter
   * the response of the creatives.list method.
   * @param detectedLanguages detectedLanguages or {@code null} for none
   */
  public CreativeServingDecision setDetectedLanguages(java.util.List<java.lang.String> detectedLanguages) {
    this.detectedLanguages = detectedLanguages;
    return this;
  }

  /**
   * Detected product categories, if any. See the ad-product-categories.txt file in the technical
   * documentation for a list of IDs. Can be used to filter the response of the creatives.list
   * method.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getDetectedProductCategories() {
    return detectedProductCategories;
  }

  /**
   * Detected product categories, if any. See the ad-product-categories.txt file in the technical
   * documentation for a list of IDs. Can be used to filter the response of the creatives.list
   * method.
   * @param detectedProductCategories detectedProductCategories or {@code null} for none
   */
  public CreativeServingDecision setDetectedProductCategories(java.util.List<java.lang.Integer> detectedProductCategories) {
    this.detectedProductCategories = detectedProductCategories;
    return this;
  }

  /**
   * Detected sensitive categories, if any. Can be used to filter the response of the creatives.list
   * method. See the ad-sensitive-categories.txt file in the technical documentation for a list of
   * IDs. You should use these IDs along with the excluded-sensitive-category field in the bid
   * request to filter your bids.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getDetectedSensitiveCategories() {
    return detectedSensitiveCategories;
  }

  /**
   * Detected sensitive categories, if any. Can be used to filter the response of the creatives.list
   * method. See the ad-sensitive-categories.txt file in the technical documentation for a list of
   * IDs. You should use these IDs along with the excluded-sensitive-category field in the bid
   * request to filter your bids.
   * @param detectedSensitiveCategories detectedSensitiveCategories or {@code null} for none
   */
  public CreativeServingDecision setDetectedSensitiveCategories(java.util.List<java.lang.Integer> detectedSensitiveCategories) {
    this.detectedSensitiveCategories = detectedSensitiveCategories;
    return this;
  }

  /**
   * IDs of the ad technology vendors that were detected to be used by this creative. See
   * https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be
   * used to filter the response of the creatives.list method. If the `allowed_vendor_type` field of
   * a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-
   * proto) does not contain one of the vendor type IDs that were declared or detected for a given
   * creative, and a bid is submitted with that creative, the bid will be filtered before the
   * auction.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.Integer> getDetectedVendorIds() {
    return detectedVendorIds;
  }

  /**
   * IDs of the ad technology vendors that were detected to be used by this creative. See
   * https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be
   * used to filter the response of the creatives.list method. If the `allowed_vendor_type` field of
   * a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-
   * proto) does not contain one of the vendor type IDs that were declared or detected for a given
   * creative, and a bid is submitted with that creative, the bid will be filtered before the
   * auction.
   * @param detectedVendorIds detectedVendorIds or {@code null} for none
   */
  public CreativeServingDecision setDetectedVendorIds(java.util.List<java.lang.Integer> detectedVendorIds) {
    this.detectedVendorIds = detectedVendorIds;
    return this;
  }

  /**
   * The last time the creative status was updated. Can be used to filter the response of the
   * creatives.list method.
   * @return value or {@code null} for none
   */
  public String getLastStatusUpdate() {
    return lastStatusUpdate;
  }

  /**
   * The last time the creative status was updated. Can be used to filter the response of the
   * creatives.list method.
   * @param lastStatusUpdate lastStatusUpdate or {@code null} for none
   */
  public CreativeServingDecision setLastStatusUpdate(String lastStatusUpdate) {
    this.lastStatusUpdate = lastStatusUpdate;
    return this;
  }

  /**
   * Status of this creative when bidding in open auction, private auction, or auction packages
   * (outside of Russia and China).
   * @return value or {@code null} for none
   */
  public ServingStatus getOpenAuctionServingStatus() {
    return openAuctionServingStatus;
  }

  /**
   * Status of this creative when bidding in open auction, private auction, or auction packages
   * (outside of Russia and China).
   * @param openAuctionServingStatus openAuctionServingStatus or {@code null} for none
   */
  public CreativeServingDecision setOpenAuctionServingStatus(ServingStatus openAuctionServingStatus) {
    this.openAuctionServingStatus = openAuctionServingStatus;
    return this;
  }

  /**
   * The serving status of this creative in Russia. When approved or disapproved, this status
   * applies to both deals and open auction in Russia. When pending review, this creative is allowed
   * to serve for deals but not for open auction.
   * @return value or {@code null} for none
   */
  public ServingStatus getRussiaServingStatus() {
    return russiaServingStatus;
  }

  /**
   * The serving status of this creative in Russia. When approved or disapproved, this status
   * applies to both deals and open auction in Russia. When pending review, this creative is allowed
   * to serve for deals but not for open auction.
   * @param russiaServingStatus russiaServingStatus or {@code null} for none
   */
  public CreativeServingDecision setRussiaServingStatus(ServingStatus russiaServingStatus) {
    this.russiaServingStatus = russiaServingStatus;
    return this;
  }

  @Override
  public CreativeServingDecision set(String fieldName, Object value) {
    return (CreativeServingDecision) super.set(fieldName, value);
  }

  @Override
  public CreativeServingDecision clone() {
    return (CreativeServingDecision) super.clone();
  }

}
