/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.vmmigration.v1alpha1.model;

/**
 * DatacenterConnector message describes a connector between the Source and Google Cloud, which is
 * installed on a vmware datacenter (an OVA vm installed by the user) to connect the Datacenter to
 * Google Cloud and support vm migration data transfer.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migrate to Virtual Machines API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DatacenterConnector extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Appliance OVA version. This is the OVA which is manually installed by the user and
   * contains the infrastructure for the automatically updatable components on the appliance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String applianceInfrastructureVersion;

  /**
   * Output only. Appliance last installed update bundle version. This is the version of the
   * automatically updatable components on the appliance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String applianceSoftwareVersion;

  /**
   * Output only. The available versions for updating this appliance.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AvailableUpdates availableVersions;

  /**
   * Output only. The communication channel between the datacenter connector and Google Cloud.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bucket;

  /**
   * Output only. The time the connector was created (as an API call, not when it was actually
   * installed).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Provides details on the state of the Datacenter Connector in case of an error.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Status error;

  /**
   * Output only. The connector's name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Immutable. A unique key for this connector. This key is internal to the OVA connector and is
   * supplied with its creation during the registration process and can not be modified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String registrationId;

  /**
   * The service account to use in the connector when communicating with the cloud.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAccount;

  /**
   * Output only. State of the DatacenterConnector, as determined by the health checks.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. The time the state was last set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String stateTime;

  /**
   * Output only. The last time the connector was updated with an API call.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. The status of the current / last upgradeAppliance operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UpgradeStatus upgradeStatus;

  /**
   * The version running in the DatacenterConnector. This is supplied by the OVA connector during
   * the registration process and can not be modified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String version;

  /**
   * Output only. Appliance OVA version. This is the OVA which is manually installed by the user and
   * contains the infrastructure for the automatically updatable components on the appliance.
   * @return value or {@code null} for none
   */
  public java.lang.String getApplianceInfrastructureVersion() {
    return applianceInfrastructureVersion;
  }

  /**
   * Output only. Appliance OVA version. This is the OVA which is manually installed by the user and
   * contains the infrastructure for the automatically updatable components on the appliance.
   * @param applianceInfrastructureVersion applianceInfrastructureVersion or {@code null} for none
   */
  public DatacenterConnector setApplianceInfrastructureVersion(java.lang.String applianceInfrastructureVersion) {
    this.applianceInfrastructureVersion = applianceInfrastructureVersion;
    return this;
  }

  /**
   * Output only. Appliance last installed update bundle version. This is the version of the
   * automatically updatable components on the appliance.
   * @return value or {@code null} for none
   */
  public java.lang.String getApplianceSoftwareVersion() {
    return applianceSoftwareVersion;
  }

  /**
   * Output only. Appliance last installed update bundle version. This is the version of the
   * automatically updatable components on the appliance.
   * @param applianceSoftwareVersion applianceSoftwareVersion or {@code null} for none
   */
  public DatacenterConnector setApplianceSoftwareVersion(java.lang.String applianceSoftwareVersion) {
    this.applianceSoftwareVersion = applianceSoftwareVersion;
    return this;
  }

  /**
   * Output only. The available versions for updating this appliance.
   * @return value or {@code null} for none
   */
  public AvailableUpdates getAvailableVersions() {
    return availableVersions;
  }

  /**
   * Output only. The available versions for updating this appliance.
   * @param availableVersions availableVersions or {@code null} for none
   */
  public DatacenterConnector setAvailableVersions(AvailableUpdates availableVersions) {
    this.availableVersions = availableVersions;
    return this;
  }

  /**
   * Output only. The communication channel between the datacenter connector and Google Cloud.
   * @return value or {@code null} for none
   */
  public java.lang.String getBucket() {
    return bucket;
  }

  /**
   * Output only. The communication channel between the datacenter connector and Google Cloud.
   * @param bucket bucket or {@code null} for none
   */
  public DatacenterConnector setBucket(java.lang.String bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Output only. The time the connector was created (as an API call, not when it was actually
   * installed).
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The time the connector was created (as an API call, not when it was actually
   * installed).
   * @param createTime createTime or {@code null} for none
   */
  public DatacenterConnector setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Provides details on the state of the Datacenter Connector in case of an error.
   * @return value or {@code null} for none
   */
  public Status getError() {
    return error;
  }

  /**
   * Output only. Provides details on the state of the Datacenter Connector in case of an error.
   * @param error error or {@code null} for none
   */
  public DatacenterConnector setError(Status error) {
    this.error = error;
    return this;
  }

  /**
   * Output only. The connector's name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The connector's name.
   * @param name name or {@code null} for none
   */
  public DatacenterConnector setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Immutable. A unique key for this connector. This key is internal to the OVA connector and is
   * supplied with its creation during the registration process and can not be modified.
   * @return value or {@code null} for none
   */
  public java.lang.String getRegistrationId() {
    return registrationId;
  }

  /**
   * Immutable. A unique key for this connector. This key is internal to the OVA connector and is
   * supplied with its creation during the registration process and can not be modified.
   * @param registrationId registrationId or {@code null} for none
   */
  public DatacenterConnector setRegistrationId(java.lang.String registrationId) {
    this.registrationId = registrationId;
    return this;
  }

  /**
   * The service account to use in the connector when communicating with the cloud.
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAccount() {
    return serviceAccount;
  }

  /**
   * The service account to use in the connector when communicating with the cloud.
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public DatacenterConnector setServiceAccount(java.lang.String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * Output only. State of the DatacenterConnector, as determined by the health checks.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. State of the DatacenterConnector, as determined by the health checks.
   * @param state state or {@code null} for none
   */
  public DatacenterConnector setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. The time the state was last set.
   * @return value or {@code null} for none
   */
  public String getStateTime() {
    return stateTime;
  }

  /**
   * Output only. The time the state was last set.
   * @param stateTime stateTime or {@code null} for none
   */
  public DatacenterConnector setStateTime(String stateTime) {
    this.stateTime = stateTime;
    return this;
  }

  /**
   * Output only. The last time the connector was updated with an API call.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The last time the connector was updated with an API call.
   * @param updateTime updateTime or {@code null} for none
   */
  public DatacenterConnector setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. The status of the current / last upgradeAppliance operation.
   * @return value or {@code null} for none
   */
  public UpgradeStatus getUpgradeStatus() {
    return upgradeStatus;
  }

  /**
   * Output only. The status of the current / last upgradeAppliance operation.
   * @param upgradeStatus upgradeStatus or {@code null} for none
   */
  public DatacenterConnector setUpgradeStatus(UpgradeStatus upgradeStatus) {
    this.upgradeStatus = upgradeStatus;
    return this;
  }

  /**
   * The version running in the DatacenterConnector. This is supplied by the OVA connector during
   * the registration process and can not be modified.
   * @return value or {@code null} for none
   */
  public java.lang.String getVersion() {
    return version;
  }

  /**
   * The version running in the DatacenterConnector. This is supplied by the OVA connector during
   * the registration process and can not be modified.
   * @param version version or {@code null} for none
   */
  public DatacenterConnector setVersion(java.lang.String version) {
    this.version = version;
    return this;
  }

  @Override
  public DatacenterConnector set(String fieldName, Object value) {
    return (DatacenterConnector) super.set(fieldName, value);
  }

  @Override
  public DatacenterConnector clone() {
    return (DatacenterConnector) super.clone();
  }

}
