/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudscheduler.v1beta1;

/**
 * Service definition for CloudScheduler (v1beta1).
 *
 * <p>
 * Creates and manages jobs run on a regular recurring schedule.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/scheduler/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudSchedulerRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudScheduler extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.28.0 of the Cloud Scheduler API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://cloudscheduler.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudScheduler(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudScheduler(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudScheduler cloudscheduler = new CloudScheduler(...);}
   *   {@code CloudScheduler.Projects.List request = cloudscheduler.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * An accessor for creating requests from the Locations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code CloudScheduler cloudscheduler = new CloudScheduler(...);}
     *   {@code CloudScheduler.Locations.List request = cloudscheduler.locations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Locations locations() {
      return new Locations();
    }

    /**
     * The "locations" collection of methods.
     */
    public class Locations {

      /**
       * Gets information about a location.
       *
       * Create a request for the method "locations.get".
       *
       * This request holds the parameters needed by the cloudscheduler server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Resource name for the location.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends CloudSchedulerRequest<com.google.api.services.cloudscheduler.v1beta1.model.Location> {

        private static final String REST_PATH = "v1beta1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

        /**
         * Gets information about a location.
         *
         * Create a request for the method "locations.get".
         *
         * This request holds the parameters needed by the the cloudscheduler server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
         * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Resource name for the location.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(CloudScheduler.this, "GET", REST_PATH, null, com.google.api.services.cloudscheduler.v1beta1.model.Location.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Resource name for the location. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Resource name for the location.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Resource name for the location. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+/locations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists information about the supported locations for this service.
       *
       * Create a request for the method "locations.list".
       *
       * This request holds the parameters needed by the cloudscheduler server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The resource that owns the locations collection, if applicable.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends CloudSchedulerRequest<com.google.api.services.cloudscheduler.v1beta1.model.ListLocationsResponse> {

        private static final String REST_PATH = "v1beta1/{+name}/locations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^projects/[^/]+$");

        /**
         * Lists information about the supported locations for this service.
         *
         * Create a request for the method "locations.list".
         *
         * This request holds the parameters needed by the the cloudscheduler server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
         * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The resource that owns the locations collection, if applicable.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(CloudScheduler.this, "GET", REST_PATH, null, com.google.api.services.cloudscheduler.v1beta1.model.ListLocationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The resource that owns the locations collection, if applicable. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The resource that owns the locations collection, if applicable.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The resource that owns the locations collection, if applicable. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^projects/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Jobs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code CloudScheduler cloudscheduler = new CloudScheduler(...);}
       *   {@code CloudScheduler.Jobs.List request = cloudscheduler.jobs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Jobs jobs() {
        return new Jobs();
      }

      /**
       * The "jobs" collection of methods.
       */
      public class Jobs {

        /**
         * Creates a job.
         *
         * Create a request for the method "jobs.create".
         *
         * This request holds the parameters needed by the cloudscheduler server.  After setting any
         * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required.
        The location name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID`.
         * @param content the {@link com.google.api.services.cloudscheduler.v1beta1.model.Job}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.cloudscheduler.v1beta1.model.Job content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends CloudSchedulerRequest<com.google.api.services.cloudscheduler.v1beta1.model.Job> {

          private static final String REST_PATH = "v1beta1/{+parent}/jobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Creates a job.
           *
           * Create a request for the method "jobs.create".
           *
           * This request holds the parameters needed by the the cloudscheduler server.  After setting any
           * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
           * <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required.
        The location name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID`.
           * @param content the {@link com.google.api.services.cloudscheduler.v1beta1.model.Job}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.cloudscheduler.v1beta1.model.Job content) {
            super(CloudScheduler.this, "POST", REST_PATH, content, com.google.api.services.cloudscheduler.v1beta1.model.Job.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required.
           *
           * The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required.

         The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required.
           *
           * The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a job.
         *
         * Create a request for the method "jobs.delete".
         *
         * This request holds the parameters needed by the cloudscheduler server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required.
        The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends CloudSchedulerRequest<com.google.api.services.cloudscheduler.v1beta1.model.Empty> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");

          /**
           * Deletes a job.
           *
           * Create a request for the method "jobs.delete".
           *
           * This request holds the parameters needed by the the cloudscheduler server.  After setting any
           * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           * <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required.
        The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(CloudScheduler.this, "DELETE", REST_PATH, null, com.google.api.services.cloudscheduler.v1beta1.model.Empty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required.
           *
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required.

         The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required.
           *
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a job.
         *
         * Create a request for the method "jobs.get".
         *
         * This request holds the parameters needed by the cloudscheduler server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required.
        The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends CloudSchedulerRequest<com.google.api.services.cloudscheduler.v1beta1.model.Job> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");

          /**
           * Gets a job.
           *
           * Create a request for the method "jobs.get".
           *
           * This request holds the parameters needed by the the cloudscheduler server.  After setting any
           * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
           * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required.
        The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(CloudScheduler.this, "GET", REST_PATH, null, com.google.api.services.cloudscheduler.v1beta1.model.Job.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required.
           *
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required.

         The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required.
           *
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists jobs.
         *
         * Create a request for the method "jobs.list".
         *
         * This request holds the parameters needed by the cloudscheduler server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required.
        The location name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends CloudSchedulerRequest<com.google.api.services.cloudscheduler.v1beta1.model.ListJobsResponse> {

          private static final String REST_PATH = "v1beta1/{+parent}/jobs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+$");

          /**
           * Lists jobs.
           *
           * Create a request for the method "jobs.list".
           *
           * This request holds the parameters needed by the the cloudscheduler server.  After setting any
           * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
           * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required.
        The location name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(CloudScheduler.this, "GET", REST_PATH, null, com.google.api.services.cloudscheduler.v1beta1.model.ListJobsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required.
           *
           * The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required.

         The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required.
           *
           * The location name. For example: `projects/PROJECT_ID/locations/LOCATION_ID`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Requested page size.
           *
           * The maximum page size is 500. If unspecified, the page size will be the maximum. Fewer
           * jobs than requested might be returned, even if more jobs exist; use next_page_token to
           * determine if more jobs exist.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Requested page size.

         The maximum page size is 500. If unspecified, the page size will be the maximum. Fewer jobs than
         requested might be returned, even if more jobs exist; use next_page_token to determine if more jobs
         exist.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Requested page size.
           *
           * The maximum page size is 500. If unspecified, the page size will be the maximum. Fewer
           * jobs than requested might be returned, even if more jobs exist; use next_page_token to
           * determine if more jobs exist.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A token identifying a page of results the server will return. To request the first page
           * results, page_token must be empty. To request the next page of results, page_token must
           * be the value of next_page_token returned from the previous call to ListJobs. It is an
           * error to switch the value of filter or order_by while iterating through pages.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A token identifying a page of results the server will return. To request the first page results,
         page_token must be empty. To request the next page of results, page_token must be the value of
         next_page_token returned from the previous call to ListJobs. It is an error to switch the value of
         filter or order_by while iterating through pages.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A token identifying a page of results the server will return. To request the first page
           * results, page_token must be empty. To request the next page of results, page_token must
           * be the value of next_page_token returned from the previous call to ListJobs. It is an
           * error to switch the value of filter or order_by while iterating through pages.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a job.
         *
         * If successful, the updated Job is returned. If the job does not exist, `NOT_FOUND` is returned.
         *
         * If UpdateJob does not successfully return, it is possible for the job to be in an
         * Job.State.UPDATE_FAILED state. A job in this state may not be executed. If this happens, retry
         * the UpdateJob request until a successful response is received.
         *
         * Create a request for the method "jobs.patch".
         *
         * This request holds the parameters needed by the cloudscheduler server.  After setting any
         * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
        * `PROJECT_ID`
         *        can contain letters ([A-Za-z]), numbers ([0-9]),
           hyphens (-), colons (:), or periods
         *        (.).
           For more information, see
           [Identifying projects](https://cloud.google.com
         *        /resource-manager/docs/creating-managing-projects#identifying_projects)
        * `LOCATION_ID` is
         *        the canonical ID for the job's location.
           The list of available locations can be
         *        obtained by calling
           ListLocations.
           For more information, see
         *        https://cloud.google.com/about/locations/.
        * `JOB_ID` can contain only letters ([A-Za-z]),
         *        numbers ([0-9]),
           hyphens (-), or underscores (_). The maximum length is 500 characters.
         * @param content the {@link com.google.api.services.cloudscheduler.v1beta1.model.Job}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.cloudscheduler.v1beta1.model.Job content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends CloudSchedulerRequest<com.google.api.services.cloudscheduler.v1beta1.model.Job> {

          private static final String REST_PATH = "v1beta1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");

          /**
           * Updates a job.
           *
           * If successful, the updated Job is returned. If the job does not exist, `NOT_FOUND` is returned.
           *
           * If UpdateJob does not successfully return, it is possible for the job to be in an
           * Job.State.UPDATE_FAILED state. A job in this state may not be executed. If this happens, retry
           * the UpdateJob request until a successful response is received.
           *
           * Create a request for the method "jobs.patch".
           *
           * This request holds the parameters needed by the the cloudscheduler server.  After setting any
           * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           * <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
        * `PROJECT_ID`
         *        can contain letters ([A-Za-z]), numbers ([0-9]),
           hyphens (-), colons (:), or periods
         *        (.).
           For more information, see
           [Identifying projects](https://cloud.google.com
         *        /resource-manager/docs/creating-managing-projects#identifying_projects)
        * `LOCATION_ID` is
         *        the canonical ID for the job's location.
           The list of available locations can be
         *        obtained by calling
           ListLocations.
           For more information, see
         *        https://cloud.google.com/about/locations/.
        * `JOB_ID` can contain only letters ([A-Za-z]),
         *        numbers ([0-9]),
           hyphens (-), or underscores (_). The maximum length is 500 characters.
           * @param content the {@link com.google.api.services.cloudscheduler.v1beta1.model.Job}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.cloudscheduler.v1beta1.model.Job content) {
            super(CloudScheduler.this, "PATCH", REST_PATH, content, com.google.api.services.cloudscheduler.v1beta1.model.Job.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           *
           * * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons
           * (:), or periods (.). For more information, see [Identifying
           * projects](https://cloud.google.com/resource-manager/docs/creating-managing-
           * projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the job's
           * location. The list of available locations can be obtained by calling ListLocations. For
           * more information, see https://cloud.google.com/about/locations/. * `JOB_ID` can contain
           * only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum
           * length is 500 characters.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.

         * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods
         (.). For more information, see [Identifying projects](https://cloud.google.com/resource-
         manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID
         for the job's location. The list of available locations can be obtained by calling ListLocations.
         For more information, see https://cloud.google.com/about/locations/. * `JOB_ID` can contain only
         letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500
         characters.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           *
           * * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons
           * (:), or periods (.). For more information, see [Identifying
           * projects](https://cloud.google.com/resource-manager/docs/creating-managing-
           * projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the job's
           * location. The list of available locations can be obtained by calling ListLocations. For
           * more information, see https://cloud.google.com/about/locations/. * `JOB_ID` can contain
           * only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum
           * length is 500 characters.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** A  mask used to specify which fields of the job are being updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** A  mask used to specify which fields of the job are being updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** A  mask used to specify which fields of the job are being updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Pauses a job.
         *
         * If a job is paused then the system will stop executing the job until it is re-enabled via
         * ResumeJob. The state of the job is stored in state; if paused it will be set to Job.State.PAUSED.
         * A job must be in Job.State.ENABLED to be paused.
         *
         * Create a request for the method "jobs.pause".
         *
         * This request holds the parameters needed by the cloudscheduler server.  After setting any
         * optional parameters, call the {@link Pause#execute()} method to invoke the remote operation.
         *
         * @param name Required.
        The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
         * @param content the {@link com.google.api.services.cloudscheduler.v1beta1.model.PauseJobRequest}
         * @return the request
         */
        public Pause pause(java.lang.String name, com.google.api.services.cloudscheduler.v1beta1.model.PauseJobRequest content) throws java.io.IOException {
          Pause result = new Pause(name, content);
          initialize(result);
          return result;
        }

        public class Pause extends CloudSchedulerRequest<com.google.api.services.cloudscheduler.v1beta1.model.Job> {

          private static final String REST_PATH = "v1beta1/{+name}:pause";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");

          /**
           * Pauses a job.
           *
           * If a job is paused then the system will stop executing the job until it is re-enabled via
           * ResumeJob. The state of the job is stored in state; if paused it will be set to
           * Job.State.PAUSED. A job must be in Job.State.ENABLED to be paused.
           *
           * Create a request for the method "jobs.pause".
           *
           * This request holds the parameters needed by the the cloudscheduler server.  After setting any
           * optional parameters, call the {@link Pause#execute()} method to invoke the remote operation.
           * <p> {@link
           * Pause#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required.
        The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           * @param content the {@link com.google.api.services.cloudscheduler.v1beta1.model.PauseJobRequest}
           * @since 1.13
           */
          protected Pause(java.lang.String name, com.google.api.services.cloudscheduler.v1beta1.model.PauseJobRequest content) {
            super(CloudScheduler.this, "POST", REST_PATH, content, com.google.api.services.cloudscheduler.v1beta1.model.Job.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
          }

          @Override
          public Pause set$Xgafv(java.lang.String $Xgafv) {
            return (Pause) super.set$Xgafv($Xgafv);
          }

          @Override
          public Pause setAccessToken(java.lang.String accessToken) {
            return (Pause) super.setAccessToken(accessToken);
          }

          @Override
          public Pause setAlt(java.lang.String alt) {
            return (Pause) super.setAlt(alt);
          }

          @Override
          public Pause setCallback(java.lang.String callback) {
            return (Pause) super.setCallback(callback);
          }

          @Override
          public Pause setFields(java.lang.String fields) {
            return (Pause) super.setFields(fields);
          }

          @Override
          public Pause setKey(java.lang.String key) {
            return (Pause) super.setKey(key);
          }

          @Override
          public Pause setOauthToken(java.lang.String oauthToken) {
            return (Pause) super.setOauthToken(oauthToken);
          }

          @Override
          public Pause setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Pause) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Pause setQuotaUser(java.lang.String quotaUser) {
            return (Pause) super.setQuotaUser(quotaUser);
          }

          @Override
          public Pause setUploadType(java.lang.String uploadType) {
            return (Pause) super.setUploadType(uploadType);
          }

          @Override
          public Pause setUploadProtocol(java.lang.String uploadProtocol) {
            return (Pause) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required.
           *
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required.

         The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required.
           *
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          public Pause setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Pause set(String parameterName, Object value) {
            return (Pause) super.set(parameterName, value);
          }
        }
        /**
         * Resume a job.
         *
         * This method reenables a job after it has been Job.State.PAUSED. The state of a job is stored in
         * Job.state; after calling this method it will be set to Job.State.ENABLED. A job must be in
         * Job.State.PAUSED to be resumed.
         *
         * Create a request for the method "jobs.resume".
         *
         * This request holds the parameters needed by the cloudscheduler server.  After setting any
         * optional parameters, call the {@link Resume#execute()} method to invoke the remote operation.
         *
         * @param name Required.
        The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
         * @param content the {@link com.google.api.services.cloudscheduler.v1beta1.model.ResumeJobRequest}
         * @return the request
         */
        public Resume resume(java.lang.String name, com.google.api.services.cloudscheduler.v1beta1.model.ResumeJobRequest content) throws java.io.IOException {
          Resume result = new Resume(name, content);
          initialize(result);
          return result;
        }

        public class Resume extends CloudSchedulerRequest<com.google.api.services.cloudscheduler.v1beta1.model.Job> {

          private static final String REST_PATH = "v1beta1/{+name}:resume";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");

          /**
           * Resume a job.
           *
           * This method reenables a job after it has been Job.State.PAUSED. The state of a job is stored in
           * Job.state; after calling this method it will be set to Job.State.ENABLED. A job must be in
           * Job.State.PAUSED to be resumed.
           *
           * Create a request for the method "jobs.resume".
           *
           * This request holds the parameters needed by the the cloudscheduler server.  After setting any
           * optional parameters, call the {@link Resume#execute()} method to invoke the remote operation.
           * <p> {@link
           * Resume#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required.
        The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           * @param content the {@link com.google.api.services.cloudscheduler.v1beta1.model.ResumeJobRequest}
           * @since 1.13
           */
          protected Resume(java.lang.String name, com.google.api.services.cloudscheduler.v1beta1.model.ResumeJobRequest content) {
            super(CloudScheduler.this, "POST", REST_PATH, content, com.google.api.services.cloudscheduler.v1beta1.model.Job.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
          }

          @Override
          public Resume set$Xgafv(java.lang.String $Xgafv) {
            return (Resume) super.set$Xgafv($Xgafv);
          }

          @Override
          public Resume setAccessToken(java.lang.String accessToken) {
            return (Resume) super.setAccessToken(accessToken);
          }

          @Override
          public Resume setAlt(java.lang.String alt) {
            return (Resume) super.setAlt(alt);
          }

          @Override
          public Resume setCallback(java.lang.String callback) {
            return (Resume) super.setCallback(callback);
          }

          @Override
          public Resume setFields(java.lang.String fields) {
            return (Resume) super.setFields(fields);
          }

          @Override
          public Resume setKey(java.lang.String key) {
            return (Resume) super.setKey(key);
          }

          @Override
          public Resume setOauthToken(java.lang.String oauthToken) {
            return (Resume) super.setOauthToken(oauthToken);
          }

          @Override
          public Resume setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Resume) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Resume setQuotaUser(java.lang.String quotaUser) {
            return (Resume) super.setQuotaUser(quotaUser);
          }

          @Override
          public Resume setUploadType(java.lang.String uploadType) {
            return (Resume) super.setUploadType(uploadType);
          }

          @Override
          public Resume setUploadProtocol(java.lang.String uploadProtocol) {
            return (Resume) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required.
           *
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required.

         The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required.
           *
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          public Resume setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Resume set(String parameterName, Object value) {
            return (Resume) super.set(parameterName, value);
          }
        }
        /**
         * Forces a job to run now.
         *
         * When this method is called, Cloud Scheduler will dispatch the job, even if the job is already
         * running.
         *
         * Create a request for the method "jobs.run".
         *
         * This request holds the parameters needed by the cloudscheduler server.  After setting any
         * optional parameters, call the {@link Run#execute()} method to invoke the remote operation.
         *
         * @param name Required.
        The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
         * @param content the {@link com.google.api.services.cloudscheduler.v1beta1.model.RunJobRequest}
         * @return the request
         */
        public Run run(java.lang.String name, com.google.api.services.cloudscheduler.v1beta1.model.RunJobRequest content) throws java.io.IOException {
          Run result = new Run(name, content);
          initialize(result);
          return result;
        }

        public class Run extends CloudSchedulerRequest<com.google.api.services.cloudscheduler.v1beta1.model.Job> {

          private static final String REST_PATH = "v1beta1/{+name}:run";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");

          /**
           * Forces a job to run now.
           *
           * When this method is called, Cloud Scheduler will dispatch the job, even if the job is already
           * running.
           *
           * Create a request for the method "jobs.run".
           *
           * This request holds the parameters needed by the the cloudscheduler server.  After setting any
           * optional parameters, call the {@link Run#execute()} method to invoke the remote operation. <p>
           * {@link Run#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required.
        The job name. For example:
        `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           * @param content the {@link com.google.api.services.cloudscheduler.v1beta1.model.RunJobRequest}
           * @since 1.13
           */
          protected Run(java.lang.String name, com.google.api.services.cloudscheduler.v1beta1.model.RunJobRequest content) {
            super(CloudScheduler.this, "POST", REST_PATH, content, com.google.api.services.cloudscheduler.v1beta1.model.Job.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
          }

          @Override
          public Run set$Xgafv(java.lang.String $Xgafv) {
            return (Run) super.set$Xgafv($Xgafv);
          }

          @Override
          public Run setAccessToken(java.lang.String accessToken) {
            return (Run) super.setAccessToken(accessToken);
          }

          @Override
          public Run setAlt(java.lang.String alt) {
            return (Run) super.setAlt(alt);
          }

          @Override
          public Run setCallback(java.lang.String callback) {
            return (Run) super.setCallback(callback);
          }

          @Override
          public Run setFields(java.lang.String fields) {
            return (Run) super.setFields(fields);
          }

          @Override
          public Run setKey(java.lang.String key) {
            return (Run) super.setKey(key);
          }

          @Override
          public Run setOauthToken(java.lang.String oauthToken) {
            return (Run) super.setOauthToken(oauthToken);
          }

          @Override
          public Run setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Run) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Run setQuotaUser(java.lang.String quotaUser) {
            return (Run) super.setQuotaUser(quotaUser);
          }

          @Override
          public Run setUploadType(java.lang.String uploadType) {
            return (Run) super.setUploadType(uploadType);
          }

          @Override
          public Run setUploadProtocol(java.lang.String uploadProtocol) {
            return (Run) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required.
           *
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required.

         The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required.
           *
           * The job name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/jobs/JOB_ID`.
           */
          public Run setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^projects/[^/]+/locations/[^/]+/jobs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Run set(String parameterName, Object value) {
            return (Run) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link CloudScheduler}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudScheduler}. */
    @Override
    public CloudScheduler build() {
      return new CloudScheduler(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudSchedulerRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudSchedulerRequestInitializer(
        CloudSchedulerRequestInitializer cloudschedulerRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudschedulerRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
