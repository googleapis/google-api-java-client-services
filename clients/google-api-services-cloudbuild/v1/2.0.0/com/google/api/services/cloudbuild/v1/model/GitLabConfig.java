/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbuild.v1.model;

/**
 * GitLabConfig represents the configuration for a GitLab integration.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Build API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GitLabConfig extends com.google.api.client.json.GenericJson {

  /**
   * Connected GitLab.com or GitLabEnterprise repositories for this config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GitLabRepositoryId> connectedRepositories;

  /**
   * Output only. Time when the config was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. GitLabEnterprise config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GitLabEnterpriseConfig enterpriseConfig;

  /**
   * The resource name for the config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Required. Secret Manager secrets needed by the config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GitLabSecrets secrets;

  /**
   * Username of the GitLab.com or GitLab Enterprise account Cloud Build will use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String username;

  /**
   * Output only. UUID included in webhook requests. The UUID is used to look up the corresponding
   * config.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String webhookKey;

  /**
   * Connected GitLab.com or GitLabEnterprise repositories for this config.
   * @return value or {@code null} for none
   */
  public java.util.List<GitLabRepositoryId> getConnectedRepositories() {
    return connectedRepositories;
  }

  /**
   * Connected GitLab.com or GitLabEnterprise repositories for this config.
   * @param connectedRepositories connectedRepositories or {@code null} for none
   */
  public GitLabConfig setConnectedRepositories(java.util.List<GitLabRepositoryId> connectedRepositories) {
    this.connectedRepositories = connectedRepositories;
    return this;
  }

  /**
   * Output only. Time when the config was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time when the config was created.
   * @param createTime createTime or {@code null} for none
   */
  public GitLabConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. GitLabEnterprise config.
   * @return value or {@code null} for none
   */
  public GitLabEnterpriseConfig getEnterpriseConfig() {
    return enterpriseConfig;
  }

  /**
   * Optional. GitLabEnterprise config.
   * @param enterpriseConfig enterpriseConfig or {@code null} for none
   */
  public GitLabConfig setEnterpriseConfig(GitLabEnterpriseConfig enterpriseConfig) {
    this.enterpriseConfig = enterpriseConfig;
    return this;
  }

  /**
   * The resource name for the config.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The resource name for the config.
   * @param name name or {@code null} for none
   */
  public GitLabConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Required. Secret Manager secrets needed by the config.
   * @return value or {@code null} for none
   */
  public GitLabSecrets getSecrets() {
    return secrets;
  }

  /**
   * Required. Secret Manager secrets needed by the config.
   * @param secrets secrets or {@code null} for none
   */
  public GitLabConfig setSecrets(GitLabSecrets secrets) {
    this.secrets = secrets;
    return this;
  }

  /**
   * Username of the GitLab.com or GitLab Enterprise account Cloud Build will use.
   * @return value or {@code null} for none
   */
  public java.lang.String getUsername() {
    return username;
  }

  /**
   * Username of the GitLab.com or GitLab Enterprise account Cloud Build will use.
   * @param username username or {@code null} for none
   */
  public GitLabConfig setUsername(java.lang.String username) {
    this.username = username;
    return this;
  }

  /**
   * Output only. UUID included in webhook requests. The UUID is used to look up the corresponding
   * config.
   * @return value or {@code null} for none
   */
  public java.lang.String getWebhookKey() {
    return webhookKey;
  }

  /**
   * Output only. UUID included in webhook requests. The UUID is used to look up the corresponding
   * config.
   * @param webhookKey webhookKey or {@code null} for none
   */
  public GitLabConfig setWebhookKey(java.lang.String webhookKey) {
    this.webhookKey = webhookKey;
    return this;
  }

  @Override
  public GitLabConfig set(String fieldName, Object value) {
    return (GitLabConfig) super.set(fieldName, value);
  }

  @Override
  public GitLabConfig clone() {
    return (GitLabConfig) super.clone();
  }

}
