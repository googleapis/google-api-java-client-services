/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * SignalData stores signal-specific salient-term-set-level information. Stores mostly internal data
 * as it is one of the primary data structures used in the populators.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QualitySalientTermsSignalData extends com.google.api.client.json.GenericJson {

  /**
   * A fixed bias for this signal, the higher the stronger. This can be used to balance the weight
   * of signals independently of the confidence we give it. This field is only available in debug
   * mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float bias;

  /**
   * The measurement of how much we trust this signal. Range: [0.0, 1.0] This field is available is
   * both debug and non-debug mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float confidence;

  /**
   * Raw saliences equal to half_salience will be equal to 0.5 normalized. Range: [0, volume]. This
   * field is only available in debug mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float halfSalience;

  /**
   * The minimum TF for a term not to be considered noise. While the possible range of values for
   * this field is [0, observed_volume], it is expected to be a somewhat small percentage of
   * observed_volume (e.g. 5%). This field is only available in debug mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float noiseCorrection;

  /**
   * The measurement of how much we trust this signal, calculated using the observed volume. Range:
   * [0.0, 1.0] This field is only available in debug mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float observedConfidence;

  /**
   * The amount of signal we observed for a document. Range: [0.0, +infinity) This field is only
   * available in debug mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float observedVolume;

  /**
   * The amount of raw signal we observed for a document. Range: [0.0, +infinity) This field is only
   * available in debug mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float rawVolume;

  /**
   * source is the type of the signal of this SignalData.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String source;

  /**
   * The amount of signal left after applying all corrections. Range: [0.0, +infinity) This field is
   * only available in debug mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float volume;

  /**
   * A fixed bias for this signal, the higher the stronger. This can be used to balance the weight
   * of signals independently of the confidence we give it. This field is only available in debug
   * mode.
   * @return value or {@code null} for none
   */
  public java.lang.Float getBias() {
    return bias;
  }

  /**
   * A fixed bias for this signal, the higher the stronger. This can be used to balance the weight
   * of signals independently of the confidence we give it. This field is only available in debug
   * mode.
   * @param bias bias or {@code null} for none
   */
  public QualitySalientTermsSignalData setBias(java.lang.Float bias) {
    this.bias = bias;
    return this;
  }

  /**
   * The measurement of how much we trust this signal. Range: [0.0, 1.0] This field is available is
   * both debug and non-debug mode.
   * @return value or {@code null} for none
   */
  public java.lang.Float getConfidence() {
    return confidence;
  }

  /**
   * The measurement of how much we trust this signal. Range: [0.0, 1.0] This field is available is
   * both debug and non-debug mode.
   * @param confidence confidence or {@code null} for none
   */
  public QualitySalientTermsSignalData setConfidence(java.lang.Float confidence) {
    this.confidence = confidence;
    return this;
  }

  /**
   * Raw saliences equal to half_salience will be equal to 0.5 normalized. Range: [0, volume]. This
   * field is only available in debug mode.
   * @return value or {@code null} for none
   */
  public java.lang.Float getHalfSalience() {
    return halfSalience;
  }

  /**
   * Raw saliences equal to half_salience will be equal to 0.5 normalized. Range: [0, volume]. This
   * field is only available in debug mode.
   * @param halfSalience halfSalience or {@code null} for none
   */
  public QualitySalientTermsSignalData setHalfSalience(java.lang.Float halfSalience) {
    this.halfSalience = halfSalience;
    return this;
  }

  /**
   * The minimum TF for a term not to be considered noise. While the possible range of values for
   * this field is [0, observed_volume], it is expected to be a somewhat small percentage of
   * observed_volume (e.g. 5%). This field is only available in debug mode.
   * @return value or {@code null} for none
   */
  public java.lang.Float getNoiseCorrection() {
    return noiseCorrection;
  }

  /**
   * The minimum TF for a term not to be considered noise. While the possible range of values for
   * this field is [0, observed_volume], it is expected to be a somewhat small percentage of
   * observed_volume (e.g. 5%). This field is only available in debug mode.
   * @param noiseCorrection noiseCorrection or {@code null} for none
   */
  public QualitySalientTermsSignalData setNoiseCorrection(java.lang.Float noiseCorrection) {
    this.noiseCorrection = noiseCorrection;
    return this;
  }

  /**
   * The measurement of how much we trust this signal, calculated using the observed volume. Range:
   * [0.0, 1.0] This field is only available in debug mode.
   * @return value or {@code null} for none
   */
  public java.lang.Float getObservedConfidence() {
    return observedConfidence;
  }

  /**
   * The measurement of how much we trust this signal, calculated using the observed volume. Range:
   * [0.0, 1.0] This field is only available in debug mode.
   * @param observedConfidence observedConfidence or {@code null} for none
   */
  public QualitySalientTermsSignalData setObservedConfidence(java.lang.Float observedConfidence) {
    this.observedConfidence = observedConfidence;
    return this;
  }

  /**
   * The amount of signal we observed for a document. Range: [0.0, +infinity) This field is only
   * available in debug mode.
   * @return value or {@code null} for none
   */
  public java.lang.Float getObservedVolume() {
    return observedVolume;
  }

  /**
   * The amount of signal we observed for a document. Range: [0.0, +infinity) This field is only
   * available in debug mode.
   * @param observedVolume observedVolume or {@code null} for none
   */
  public QualitySalientTermsSignalData setObservedVolume(java.lang.Float observedVolume) {
    this.observedVolume = observedVolume;
    return this;
  }

  /**
   * The amount of raw signal we observed for a document. Range: [0.0, +infinity) This field is only
   * available in debug mode.
   * @return value or {@code null} for none
   */
  public java.lang.Float getRawVolume() {
    return rawVolume;
  }

  /**
   * The amount of raw signal we observed for a document. Range: [0.0, +infinity) This field is only
   * available in debug mode.
   * @param rawVolume rawVolume or {@code null} for none
   */
  public QualitySalientTermsSignalData setRawVolume(java.lang.Float rawVolume) {
    this.rawVolume = rawVolume;
    return this;
  }

  /**
   * source is the type of the signal of this SignalData.
   * @return value or {@code null} for none
   */
  public java.lang.String getSource() {
    return source;
  }

  /**
   * source is the type of the signal of this SignalData.
   * @param source source or {@code null} for none
   */
  public QualitySalientTermsSignalData setSource(java.lang.String source) {
    this.source = source;
    return this;
  }

  /**
   * The amount of signal left after applying all corrections. Range: [0.0, +infinity) This field is
   * only available in debug mode.
   * @return value or {@code null} for none
   */
  public java.lang.Float getVolume() {
    return volume;
  }

  /**
   * The amount of signal left after applying all corrections. Range: [0.0, +infinity) This field is
   * only available in debug mode.
   * @param volume volume or {@code null} for none
   */
  public QualitySalientTermsSignalData setVolume(java.lang.Float volume) {
    this.volume = volume;
    return this;
  }

  @Override
  public QualitySalientTermsSignalData set(String fieldName, Object value) {
    return (QualitySalientTermsSignalData) super.set(fieldName, value);
  }

  @Override
  public QualitySalientTermsSignalData clone() {
    return (QualitySalientTermsSignalData) super.clone();
  }

}
