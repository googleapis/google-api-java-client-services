/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.games.model;

/**
 * Identifies a snapshot data resource. The data is provided by the game.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Play Game Services. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class SnapshotDataResource extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Hash-like weak identifier of the uploaded blob bytes, consistent per player per
   * application. The content hash for a given resource will not change if the binary data hasn't
   * changed. Except in very rare circumstances, the content_hash for matching binary data will be
   * the same within a given player and application.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String contentHash;

  /**
   * Output only. A URL that the client can use to download the blob. May vary across requests, and
   * only guaranteed to be valid for a short time after it is returned.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String downloadUrl;

  /**
   * The ID of the blob resource. It's guaranteed that if two IDs are equal then the contents are
   * equal as well. It's not guaranteed that two identical blobs coming from separate uploads have
   * the same resource ID. The resource ID can only be used within the application, user and
   * resource type it was originally returned for. For example, it's not possible to use
   * SnapshotDataResource's resource ID as the resource_id of a SnapshotCoverImageResource, even if
   * the blob is a valid image file.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceId;

  /**
   * Output only. Size of the saved game blob in bytes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long size;

  /**
   * Output only. Hash-like weak identifier of the uploaded blob bytes, consistent per player per
   * application. The content hash for a given resource will not change if the binary data hasn't
   * changed. Except in very rare circumstances, the content_hash for matching binary data will be
   * the same within a given player and application.
   * @return value or {@code null} for none
   */
  public java.lang.String getContentHash() {
    return contentHash;
  }

  /**
   * Output only. Hash-like weak identifier of the uploaded blob bytes, consistent per player per
   * application. The content hash for a given resource will not change if the binary data hasn't
   * changed. Except in very rare circumstances, the content_hash for matching binary data will be
   * the same within a given player and application.
   * @param contentHash contentHash or {@code null} for none
   */
  public SnapshotDataResource setContentHash(java.lang.String contentHash) {
    this.contentHash = contentHash;
    return this;
  }

  /**
   * Output only. A URL that the client can use to download the blob. May vary across requests, and
   * only guaranteed to be valid for a short time after it is returned.
   * @return value or {@code null} for none
   */
  public java.lang.String getDownloadUrl() {
    return downloadUrl;
  }

  /**
   * Output only. A URL that the client can use to download the blob. May vary across requests, and
   * only guaranteed to be valid for a short time after it is returned.
   * @param downloadUrl downloadUrl or {@code null} for none
   */
  public SnapshotDataResource setDownloadUrl(java.lang.String downloadUrl) {
    this.downloadUrl = downloadUrl;
    return this;
  }

  /**
   * The ID of the blob resource. It's guaranteed that if two IDs are equal then the contents are
   * equal as well. It's not guaranteed that two identical blobs coming from separate uploads have
   * the same resource ID. The resource ID can only be used within the application, user and
   * resource type it was originally returned for. For example, it's not possible to use
   * SnapshotDataResource's resource ID as the resource_id of a SnapshotCoverImageResource, even if
   * the blob is a valid image file.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceId() {
    return resourceId;
  }

  /**
   * The ID of the blob resource. It's guaranteed that if two IDs are equal then the contents are
   * equal as well. It's not guaranteed that two identical blobs coming from separate uploads have
   * the same resource ID. The resource ID can only be used within the application, user and
   * resource type it was originally returned for. For example, it's not possible to use
   * SnapshotDataResource's resource ID as the resource_id of a SnapshotCoverImageResource, even if
   * the blob is a valid image file.
   * @param resourceId resourceId or {@code null} for none
   */
  public SnapshotDataResource setResourceId(java.lang.String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Output only. Size of the saved game blob in bytes.
   * @return value or {@code null} for none
   */
  public java.lang.Long getSize() {
    return size;
  }

  /**
   * Output only. Size of the saved game blob in bytes.
   * @param size size or {@code null} for none
   */
  public SnapshotDataResource setSize(java.lang.Long size) {
    this.size = size;
    return this;
  }

  @Override
  public SnapshotDataResource set(String fieldName, Object value) {
    return (SnapshotDataResource) super.set(fieldName, value);
  }

  @Override
  public SnapshotDataResource clone() {
    return (SnapshotDataResource) super.clone();
  }

}
