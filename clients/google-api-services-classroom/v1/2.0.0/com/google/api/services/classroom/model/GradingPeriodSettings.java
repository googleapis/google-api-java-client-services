/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.classroom.model;

/**
 * Grading period settings that include all the individual grading periods in a course.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Classroom API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GradingPeriodSettings extends com.google.api.client.json.GenericJson {

  /**
   * Supports toggling the application of grading periods on existing stream items. Once set, this
   * value is persisted meaning that it does not need to be set in every request to update
   * `GradingPeriodSettings`. If not previously set, the default is False.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean applyToExistingCoursework;

  /**
   * The list of grading periods in a specific course. Grading periods must not have overlapping
   * date ranges and must be listed in chronological order. Each grading period must have a unique
   * title within a course.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GradingPeriod> gradingPeriods;

  static {
    // hack to force ProGuard to consider GradingPeriod used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GradingPeriod.class);
  }

  /**
   * Supports toggling the application of grading periods on existing stream items. Once set, this
   * value is persisted meaning that it does not need to be set in every request to update
   * `GradingPeriodSettings`. If not previously set, the default is False.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getApplyToExistingCoursework() {
    return applyToExistingCoursework;
  }

  /**
   * Supports toggling the application of grading periods on existing stream items. Once set, this
   * value is persisted meaning that it does not need to be set in every request to update
   * `GradingPeriodSettings`. If not previously set, the default is False.
   * @param applyToExistingCoursework applyToExistingCoursework or {@code null} for none
   */
  public GradingPeriodSettings setApplyToExistingCoursework(java.lang.Boolean applyToExistingCoursework) {
    this.applyToExistingCoursework = applyToExistingCoursework;
    return this;
  }

  /**
   * The list of grading periods in a specific course. Grading periods must not have overlapping
   * date ranges and must be listed in chronological order. Each grading period must have a unique
   * title within a course.
   * @return value or {@code null} for none
   */
  public java.util.List<GradingPeriod> getGradingPeriods() {
    return gradingPeriods;
  }

  /**
   * The list of grading periods in a specific course. Grading periods must not have overlapping
   * date ranges and must be listed in chronological order. Each grading period must have a unique
   * title within a course.
   * @param gradingPeriods gradingPeriods or {@code null} for none
   */
  public GradingPeriodSettings setGradingPeriods(java.util.List<GradingPeriod> gradingPeriods) {
    this.gradingPeriods = gradingPeriods;
    return this;
  }

  @Override
  public GradingPeriodSettings set(String fieldName, Object value) {
    return (GradingPeriodSettings) super.set(fieldName, value);
  }

  @Override
  public GradingPeriodSettings clone() {
    return (GradingPeriodSettings) super.clone();
  }

}
