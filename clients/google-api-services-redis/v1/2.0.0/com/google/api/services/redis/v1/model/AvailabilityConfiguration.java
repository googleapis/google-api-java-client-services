/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.redis.v1.model;

/**
 * Configuration for availability of database instance
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Cloud Memorystore for Redis API. For a
 * detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AvailabilityConfiguration extends com.google.api.client.json.GenericJson {

  /**
   * Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone.
   * Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from
   * more than one zone in a region (it is highly available).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String availabilityType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean externalReplicaConfigured;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean promotableReplicaConfigured;

  /**
   * Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone.
   * Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from
   * more than one zone in a region (it is highly available).
   * @return value or {@code null} for none
   */
  public java.lang.String getAvailabilityType() {
    return availabilityType;
  }

  /**
   * Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone.
   * Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from
   * more than one zone in a region (it is highly available).
   * @param availabilityType availabilityType or {@code null} for none
   */
  public AvailabilityConfiguration setAvailabilityType(java.lang.String availabilityType) {
    this.availabilityType = availabilityType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getExternalReplicaConfigured() {
    return externalReplicaConfigured;
  }

  /**
   * @param externalReplicaConfigured externalReplicaConfigured or {@code null} for none
   */
  public AvailabilityConfiguration setExternalReplicaConfigured(java.lang.Boolean externalReplicaConfigured) {
    this.externalReplicaConfigured = externalReplicaConfigured;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPromotableReplicaConfigured() {
    return promotableReplicaConfigured;
  }

  /**
   * @param promotableReplicaConfigured promotableReplicaConfigured or {@code null} for none
   */
  public AvailabilityConfiguration setPromotableReplicaConfigured(java.lang.Boolean promotableReplicaConfigured) {
    this.promotableReplicaConfigured = promotableReplicaConfigured;
    return this;
  }

  @Override
  public AvailabilityConfiguration set(String fieldName, Object value) {
    return (AvailabilityConfiguration) super.set(fieldName, value);
  }

  @Override
  public AvailabilityConfiguration clone() {
    return (AvailabilityConfiguration) super.clone();
  }

}
