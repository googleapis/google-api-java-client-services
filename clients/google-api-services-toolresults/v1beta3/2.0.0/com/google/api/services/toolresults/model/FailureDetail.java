/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.toolresults.model;

/**
 * Details for an outcome with a FAILURE outcome summary.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Tool Results API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class FailureDetail extends com.google.api.client.json.GenericJson {

  /**
   * If the failure was severe because the system (app) under test crashed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean crashed;

  /**
   * If the device ran out of memory during a test, causing the test to crash.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean deviceOutOfMemory;

  /**
   * If the Roboscript failed to complete successfully, e.g., because a Roboscript action or
   * assertion failed or a Roboscript action could not be matched during the entire crawl.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean failedRoboscript;

  /**
   * If an app is not installed and thus no test can be run with the app. This might be caused by
   * trying to run a test on an unsupported platform.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean notInstalled;

  /**
   * If a native process (including any other than the app) crashed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean otherNativeCrash;

  /**
   * If the test overran some time limit, and that is why it failed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean timedOut;

  /**
   * If the robo was unable to crawl the app; perhaps because the app did not start.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean unableToCrawl;

  /**
   * If the failure was severe because the system (app) under test crashed.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getCrashed() {
    return crashed;
  }

  /**
   * If the failure was severe because the system (app) under test crashed.
   * @param crashed crashed or {@code null} for none
   */
  public FailureDetail setCrashed(java.lang.Boolean crashed) {
    this.crashed = crashed;
    return this;
  }

  /**
   * If the device ran out of memory during a test, causing the test to crash.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDeviceOutOfMemory() {
    return deviceOutOfMemory;
  }

  /**
   * If the device ran out of memory during a test, causing the test to crash.
   * @param deviceOutOfMemory deviceOutOfMemory or {@code null} for none
   */
  public FailureDetail setDeviceOutOfMemory(java.lang.Boolean deviceOutOfMemory) {
    this.deviceOutOfMemory = deviceOutOfMemory;
    return this;
  }

  /**
   * If the Roboscript failed to complete successfully, e.g., because a Roboscript action or
   * assertion failed or a Roboscript action could not be matched during the entire crawl.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFailedRoboscript() {
    return failedRoboscript;
  }

  /**
   * If the Roboscript failed to complete successfully, e.g., because a Roboscript action or
   * assertion failed or a Roboscript action could not be matched during the entire crawl.
   * @param failedRoboscript failedRoboscript or {@code null} for none
   */
  public FailureDetail setFailedRoboscript(java.lang.Boolean failedRoboscript) {
    this.failedRoboscript = failedRoboscript;
    return this;
  }

  /**
   * If an app is not installed and thus no test can be run with the app. This might be caused by
   * trying to run a test on an unsupported platform.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getNotInstalled() {
    return notInstalled;
  }

  /**
   * If an app is not installed and thus no test can be run with the app. This might be caused by
   * trying to run a test on an unsupported platform.
   * @param notInstalled notInstalled or {@code null} for none
   */
  public FailureDetail setNotInstalled(java.lang.Boolean notInstalled) {
    this.notInstalled = notInstalled;
    return this;
  }

  /**
   * If a native process (including any other than the app) crashed.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOtherNativeCrash() {
    return otherNativeCrash;
  }

  /**
   * If a native process (including any other than the app) crashed.
   * @param otherNativeCrash otherNativeCrash or {@code null} for none
   */
  public FailureDetail setOtherNativeCrash(java.lang.Boolean otherNativeCrash) {
    this.otherNativeCrash = otherNativeCrash;
    return this;
  }

  /**
   * If the test overran some time limit, and that is why it failed.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTimedOut() {
    return timedOut;
  }

  /**
   * If the test overran some time limit, and that is why it failed.
   * @param timedOut timedOut or {@code null} for none
   */
  public FailureDetail setTimedOut(java.lang.Boolean timedOut) {
    this.timedOut = timedOut;
    return this;
  }

  /**
   * If the robo was unable to crawl the app; perhaps because the app did not start.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUnableToCrawl() {
    return unableToCrawl;
  }

  /**
   * If the robo was unable to crawl the app; perhaps because the app did not start.
   * @param unableToCrawl unableToCrawl or {@code null} for none
   */
  public FailureDetail setUnableToCrawl(java.lang.Boolean unableToCrawl) {
    this.unableToCrawl = unableToCrawl;
    return this;
  }

  @Override
  public FailureDetail set(String fieldName, Object value) {
    return (FailureDetail) super.set(fieldName, value);
  }

  @Override
  public FailureDetail clone() {
    return (FailureDetail) super.clone();
  }

}
