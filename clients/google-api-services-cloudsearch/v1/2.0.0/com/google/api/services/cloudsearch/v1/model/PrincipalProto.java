/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * A Principal represents something to which permissions are assigned, often but not always a user
 * or group of some kind. It is most appropriate for use in ACLs and authorization checks. Callers
 * should prefer to use the wrapper classes in google3/security/credentials/public/principal.h
 * google3/java/com/google/security/credentials/Principal.java
 * google3/security/credentials/go/principal.go unless direct proto access is essential. If you
 * update this protocol buffer, please update the wrapper classes as well.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PrincipalProto extends com.google.api.client.json.GenericJson {

  /**
   * scope = ALL_AUTHENTICATED_USERS
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AllAuthenticatedUsersProto allAuthenticatedUsers;

  /**
   * scope = CAP_TOKEN_HOLDER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CapTokenHolderProto capTokenHolder;

  /**
   * scope = CHAT
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ChatProto chat;

  /**
   * scope = CIRCLE
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CircleProto circle;

  /**
   * scope = CLOUD_PRINCIPAL
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private CloudPrincipalProto cloudPrincipal;

  /**
   * scope = CONTACT_GROUP
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ContactGroupProto contactGroup;

  /**
   * scope = EMAIL_OWNER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EmailOwnerProto emailOwner;

  /**
   * scope = EVENT
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EventProto event;

  /**
   * scope = GAIA_GROUP
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GaiaGroupProto gaiaGroup;

  /**
   * scope = GAIA_USER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GaiaUserProto gaiaUser;

  /**
   * scope = HOST
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HostProto host;

  /**
   * scope = LDAP_GROUP
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LdapGroupProto ldapGroup;

  /**
   * scope = LDAP_USER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private LdapUserProto ldapUser;

  /**
   * scope = MDB_GROUP
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MdbGroupProto mdbGroup;

  /**
   * scope = MDB_USER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MdbUserProto mdbUser;

  /**
   * scope = OAUTH_CONSUMER;
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private OAuthConsumerProto oauthConsumer;

  /**
   * scope = POSTINI_USER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PostiniUserProto postiniUser;

  /**
   * scope = RBAC_ROLE
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RbacRoleProto rbacRole;

  /**
   * scope = RBAC_SUBJECT
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RbacSubjectProto rbacSubject;

  /**
   * scope = RESOURCE_ROLE
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceRoleProto resourceRole;

  /**
   * This is only optional because required enums cannot be extended. Currently required.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String scope;

  /**
   * scope = SIGNING_KEY_POSSESSOR
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SigningKeyPossessorProto signingKeyPossessor;

  /**
   * scope = SIMPLE_SECRET_HOLDER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SimpleSecretHolderProto simpleSecretHolder;

  /**
   * scope = SOCIAL_GRAPH_NODE
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SocialGraphNodeProto socialGraphNode;

  /**
   * scope = SQUARE
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private SquareProto square;

  /**
   * scope = YOUTUBE_USER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private YoutubeUserProto youtubeUser;

  /**
   * scope = ZWIEBACK_SESSION
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ZwiebackSessionProto zwiebackSession;

  /**
   * scope = ALL_AUTHENTICATED_USERS
   * @return value or {@code null} for none
   */
  public AllAuthenticatedUsersProto getAllAuthenticatedUsers() {
    return allAuthenticatedUsers;
  }

  /**
   * scope = ALL_AUTHENTICATED_USERS
   * @param allAuthenticatedUsers allAuthenticatedUsers or {@code null} for none
   */
  public PrincipalProto setAllAuthenticatedUsers(AllAuthenticatedUsersProto allAuthenticatedUsers) {
    this.allAuthenticatedUsers = allAuthenticatedUsers;
    return this;
  }

  /**
   * scope = CAP_TOKEN_HOLDER
   * @return value or {@code null} for none
   */
  public CapTokenHolderProto getCapTokenHolder() {
    return capTokenHolder;
  }

  /**
   * scope = CAP_TOKEN_HOLDER
   * @param capTokenHolder capTokenHolder or {@code null} for none
   */
  public PrincipalProto setCapTokenHolder(CapTokenHolderProto capTokenHolder) {
    this.capTokenHolder = capTokenHolder;
    return this;
  }

  /**
   * scope = CHAT
   * @return value or {@code null} for none
   */
  public ChatProto getChat() {
    return chat;
  }

  /**
   * scope = CHAT
   * @param chat chat or {@code null} for none
   */
  public PrincipalProto setChat(ChatProto chat) {
    this.chat = chat;
    return this;
  }

  /**
   * scope = CIRCLE
   * @return value or {@code null} for none
   */
  public CircleProto getCircle() {
    return circle;
  }

  /**
   * scope = CIRCLE
   * @param circle circle or {@code null} for none
   */
  public PrincipalProto setCircle(CircleProto circle) {
    this.circle = circle;
    return this;
  }

  /**
   * scope = CLOUD_PRINCIPAL
   * @return value or {@code null} for none
   */
  public CloudPrincipalProto getCloudPrincipal() {
    return cloudPrincipal;
  }

  /**
   * scope = CLOUD_PRINCIPAL
   * @param cloudPrincipal cloudPrincipal or {@code null} for none
   */
  public PrincipalProto setCloudPrincipal(CloudPrincipalProto cloudPrincipal) {
    this.cloudPrincipal = cloudPrincipal;
    return this;
  }

  /**
   * scope = CONTACT_GROUP
   * @return value or {@code null} for none
   */
  public ContactGroupProto getContactGroup() {
    return contactGroup;
  }

  /**
   * scope = CONTACT_GROUP
   * @param contactGroup contactGroup or {@code null} for none
   */
  public PrincipalProto setContactGroup(ContactGroupProto contactGroup) {
    this.contactGroup = contactGroup;
    return this;
  }

  /**
   * scope = EMAIL_OWNER
   * @return value or {@code null} for none
   */
  public EmailOwnerProto getEmailOwner() {
    return emailOwner;
  }

  /**
   * scope = EMAIL_OWNER
   * @param emailOwner emailOwner or {@code null} for none
   */
  public PrincipalProto setEmailOwner(EmailOwnerProto emailOwner) {
    this.emailOwner = emailOwner;
    return this;
  }

  /**
   * scope = EVENT
   * @return value or {@code null} for none
   */
  public EventProto getEvent() {
    return event;
  }

  /**
   * scope = EVENT
   * @param event event or {@code null} for none
   */
  public PrincipalProto setEvent(EventProto event) {
    this.event = event;
    return this;
  }

  /**
   * scope = GAIA_GROUP
   * @return value or {@code null} for none
   */
  public GaiaGroupProto getGaiaGroup() {
    return gaiaGroup;
  }

  /**
   * scope = GAIA_GROUP
   * @param gaiaGroup gaiaGroup or {@code null} for none
   */
  public PrincipalProto setGaiaGroup(GaiaGroupProto gaiaGroup) {
    this.gaiaGroup = gaiaGroup;
    return this;
  }

  /**
   * scope = GAIA_USER
   * @return value or {@code null} for none
   */
  public GaiaUserProto getGaiaUser() {
    return gaiaUser;
  }

  /**
   * scope = GAIA_USER
   * @param gaiaUser gaiaUser or {@code null} for none
   */
  public PrincipalProto setGaiaUser(GaiaUserProto gaiaUser) {
    this.gaiaUser = gaiaUser;
    return this;
  }

  /**
   * scope = HOST
   * @return value or {@code null} for none
   */
  public HostProto getHost() {
    return host;
  }

  /**
   * scope = HOST
   * @param host host or {@code null} for none
   */
  public PrincipalProto setHost(HostProto host) {
    this.host = host;
    return this;
  }

  /**
   * scope = LDAP_GROUP
   * @return value or {@code null} for none
   */
  public LdapGroupProto getLdapGroup() {
    return ldapGroup;
  }

  /**
   * scope = LDAP_GROUP
   * @param ldapGroup ldapGroup or {@code null} for none
   */
  public PrincipalProto setLdapGroup(LdapGroupProto ldapGroup) {
    this.ldapGroup = ldapGroup;
    return this;
  }

  /**
   * scope = LDAP_USER
   * @return value or {@code null} for none
   */
  public LdapUserProto getLdapUser() {
    return ldapUser;
  }

  /**
   * scope = LDAP_USER
   * @param ldapUser ldapUser or {@code null} for none
   */
  public PrincipalProto setLdapUser(LdapUserProto ldapUser) {
    this.ldapUser = ldapUser;
    return this;
  }

  /**
   * scope = MDB_GROUP
   * @return value or {@code null} for none
   */
  public MdbGroupProto getMdbGroup() {
    return mdbGroup;
  }

  /**
   * scope = MDB_GROUP
   * @param mdbGroup mdbGroup or {@code null} for none
   */
  public PrincipalProto setMdbGroup(MdbGroupProto mdbGroup) {
    this.mdbGroup = mdbGroup;
    return this;
  }

  /**
   * scope = MDB_USER
   * @return value or {@code null} for none
   */
  public MdbUserProto getMdbUser() {
    return mdbUser;
  }

  /**
   * scope = MDB_USER
   * @param mdbUser mdbUser or {@code null} for none
   */
  public PrincipalProto setMdbUser(MdbUserProto mdbUser) {
    this.mdbUser = mdbUser;
    return this;
  }

  /**
   * scope = OAUTH_CONSUMER;
   * @return value or {@code null} for none
   */
  public OAuthConsumerProto getOauthConsumer() {
    return oauthConsumer;
  }

  /**
   * scope = OAUTH_CONSUMER;
   * @param oauthConsumer oauthConsumer or {@code null} for none
   */
  public PrincipalProto setOauthConsumer(OAuthConsumerProto oauthConsumer) {
    this.oauthConsumer = oauthConsumer;
    return this;
  }

  /**
   * scope = POSTINI_USER
   * @return value or {@code null} for none
   */
  public PostiniUserProto getPostiniUser() {
    return postiniUser;
  }

  /**
   * scope = POSTINI_USER
   * @param postiniUser postiniUser or {@code null} for none
   */
  public PrincipalProto setPostiniUser(PostiniUserProto postiniUser) {
    this.postiniUser = postiniUser;
    return this;
  }

  /**
   * scope = RBAC_ROLE
   * @return value or {@code null} for none
   */
  public RbacRoleProto getRbacRole() {
    return rbacRole;
  }

  /**
   * scope = RBAC_ROLE
   * @param rbacRole rbacRole or {@code null} for none
   */
  public PrincipalProto setRbacRole(RbacRoleProto rbacRole) {
    this.rbacRole = rbacRole;
    return this;
  }

  /**
   * scope = RBAC_SUBJECT
   * @return value or {@code null} for none
   */
  public RbacSubjectProto getRbacSubject() {
    return rbacSubject;
  }

  /**
   * scope = RBAC_SUBJECT
   * @param rbacSubject rbacSubject or {@code null} for none
   */
  public PrincipalProto setRbacSubject(RbacSubjectProto rbacSubject) {
    this.rbacSubject = rbacSubject;
    return this;
  }

  /**
   * scope = RESOURCE_ROLE
   * @return value or {@code null} for none
   */
  public ResourceRoleProto getResourceRole() {
    return resourceRole;
  }

  /**
   * scope = RESOURCE_ROLE
   * @param resourceRole resourceRole or {@code null} for none
   */
  public PrincipalProto setResourceRole(ResourceRoleProto resourceRole) {
    this.resourceRole = resourceRole;
    return this;
  }

  /**
   * This is only optional because required enums cannot be extended. Currently required.
   * @return value or {@code null} for none
   */
  public java.lang.String getScope() {
    return scope;
  }

  /**
   * This is only optional because required enums cannot be extended. Currently required.
   * @param scope scope or {@code null} for none
   */
  public PrincipalProto setScope(java.lang.String scope) {
    this.scope = scope;
    return this;
  }

  /**
   * scope = SIGNING_KEY_POSSESSOR
   * @return value or {@code null} for none
   */
  public SigningKeyPossessorProto getSigningKeyPossessor() {
    return signingKeyPossessor;
  }

  /**
   * scope = SIGNING_KEY_POSSESSOR
   * @param signingKeyPossessor signingKeyPossessor or {@code null} for none
   */
  public PrincipalProto setSigningKeyPossessor(SigningKeyPossessorProto signingKeyPossessor) {
    this.signingKeyPossessor = signingKeyPossessor;
    return this;
  }

  /**
   * scope = SIMPLE_SECRET_HOLDER
   * @return value or {@code null} for none
   */
  public SimpleSecretHolderProto getSimpleSecretHolder() {
    return simpleSecretHolder;
  }

  /**
   * scope = SIMPLE_SECRET_HOLDER
   * @param simpleSecretHolder simpleSecretHolder or {@code null} for none
   */
  public PrincipalProto setSimpleSecretHolder(SimpleSecretHolderProto simpleSecretHolder) {
    this.simpleSecretHolder = simpleSecretHolder;
    return this;
  }

  /**
   * scope = SOCIAL_GRAPH_NODE
   * @return value or {@code null} for none
   */
  public SocialGraphNodeProto getSocialGraphNode() {
    return socialGraphNode;
  }

  /**
   * scope = SOCIAL_GRAPH_NODE
   * @param socialGraphNode socialGraphNode or {@code null} for none
   */
  public PrincipalProto setSocialGraphNode(SocialGraphNodeProto socialGraphNode) {
    this.socialGraphNode = socialGraphNode;
    return this;
  }

  /**
   * scope = SQUARE
   * @return value or {@code null} for none
   */
  public SquareProto getSquare() {
    return square;
  }

  /**
   * scope = SQUARE
   * @param square square or {@code null} for none
   */
  public PrincipalProto setSquare(SquareProto square) {
    this.square = square;
    return this;
  }

  /**
   * scope = YOUTUBE_USER
   * @return value or {@code null} for none
   */
  public YoutubeUserProto getYoutubeUser() {
    return youtubeUser;
  }

  /**
   * scope = YOUTUBE_USER
   * @param youtubeUser youtubeUser or {@code null} for none
   */
  public PrincipalProto setYoutubeUser(YoutubeUserProto youtubeUser) {
    this.youtubeUser = youtubeUser;
    return this;
  }

  /**
   * scope = ZWIEBACK_SESSION
   * @return value or {@code null} for none
   */
  public ZwiebackSessionProto getZwiebackSession() {
    return zwiebackSession;
  }

  /**
   * scope = ZWIEBACK_SESSION
   * @param zwiebackSession zwiebackSession or {@code null} for none
   */
  public PrincipalProto setZwiebackSession(ZwiebackSessionProto zwiebackSession) {
    this.zwiebackSession = zwiebackSession;
    return this;
  }

  @Override
  public PrincipalProto set(String fieldName, Object value) {
    return (PrincipalProto) super.set(fieldName, value);
  }

  @Override
  public PrincipalProto clone() {
    return (PrincipalProto) super.clone();
  }

}
