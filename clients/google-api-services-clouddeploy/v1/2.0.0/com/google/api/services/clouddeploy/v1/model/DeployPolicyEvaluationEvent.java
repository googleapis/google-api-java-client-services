/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.clouddeploy.v1.model;

/**
 * Payload proto for "clouddeploy.googleapis.com/deploypolicy_evaluation" Platform Log event that
 * describes the deploy policy evaluation event.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Deploy API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DeployPolicyEvaluationEvent extends com.google.api.client.json.GenericJson {

  /**
   * Whether the request is allowed. Allowed is set as true if: (1) the request complies with the
   * policy; or (2) the request doesn't comply with the policy but the policy was overridden; or (3)
   * the request doesn't comply with the policy but the policy was suspended
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean allowed;

  /**
   * The name of the `Delivery Pipeline`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deliveryPipeline;

  /**
   * The name of the `DeployPolicy`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deployPolicy;

  /**
   * Unique identifier of the `DeployPolicy`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deployPolicyUid;

  /**
   * What invoked the action (e.g. a user or automation).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String invoker;

  /**
   * Debug message for when a deploy policy event occurs.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String message;

  /**
   * Things that could have overridden the policy verdict. Overrides together with verdict decide
   * whether the request is allowed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> overrides;

  /**
   * Unique identifier of the `Delivery Pipeline`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String pipelineUid;

  /**
   * Rule id.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String rule;

  /**
   * Rule type (e.g. Restrict Rollouts).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String ruleType;

  /**
   * The name of the `Target`. This is an optional field, as a `Target` may not always be applicable
   * to a policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String target;

  /**
   * Unique identifier of the `Target`. This is an optional field, as a `Target` may not always be
   * applicable to a policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String targetUid;

  /**
   * The policy verdict of the request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String verdict;

  /**
   * Whether the request is allowed. Allowed is set as true if: (1) the request complies with the
   * policy; or (2) the request doesn't comply with the policy but the policy was overridden; or (3)
   * the request doesn't comply with the policy but the policy was suspended
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAllowed() {
    return allowed;
  }

  /**
   * Whether the request is allowed. Allowed is set as true if: (1) the request complies with the
   * policy; or (2) the request doesn't comply with the policy but the policy was overridden; or (3)
   * the request doesn't comply with the policy but the policy was suspended
   * @param allowed allowed or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setAllowed(java.lang.Boolean allowed) {
    this.allowed = allowed;
    return this;
  }

  /**
   * The name of the `Delivery Pipeline`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeliveryPipeline() {
    return deliveryPipeline;
  }

  /**
   * The name of the `Delivery Pipeline`.
   * @param deliveryPipeline deliveryPipeline or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setDeliveryPipeline(java.lang.String deliveryPipeline) {
    this.deliveryPipeline = deliveryPipeline;
    return this;
  }

  /**
   * The name of the `DeployPolicy`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeployPolicy() {
    return deployPolicy;
  }

  /**
   * The name of the `DeployPolicy`.
   * @param deployPolicy deployPolicy or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setDeployPolicy(java.lang.String deployPolicy) {
    this.deployPolicy = deployPolicy;
    return this;
  }

  /**
   * Unique identifier of the `DeployPolicy`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeployPolicyUid() {
    return deployPolicyUid;
  }

  /**
   * Unique identifier of the `DeployPolicy`.
   * @param deployPolicyUid deployPolicyUid or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setDeployPolicyUid(java.lang.String deployPolicyUid) {
    this.deployPolicyUid = deployPolicyUid;
    return this;
  }

  /**
   * What invoked the action (e.g. a user or automation).
   * @return value or {@code null} for none
   */
  public java.lang.String getInvoker() {
    return invoker;
  }

  /**
   * What invoked the action (e.g. a user or automation).
   * @param invoker invoker or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setInvoker(java.lang.String invoker) {
    this.invoker = invoker;
    return this;
  }

  /**
   * Debug message for when a deploy policy event occurs.
   * @return value or {@code null} for none
   */
  public java.lang.String getMessage() {
    return message;
  }

  /**
   * Debug message for when a deploy policy event occurs.
   * @param message message or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setMessage(java.lang.String message) {
    this.message = message;
    return this;
  }

  /**
   * Things that could have overridden the policy verdict. Overrides together with verdict decide
   * whether the request is allowed.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getOverrides() {
    return overrides;
  }

  /**
   * Things that could have overridden the policy verdict. Overrides together with verdict decide
   * whether the request is allowed.
   * @param overrides overrides or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setOverrides(java.util.List<java.lang.String> overrides) {
    this.overrides = overrides;
    return this;
  }

  /**
   * Unique identifier of the `Delivery Pipeline`.
   * @return value or {@code null} for none
   */
  public java.lang.String getPipelineUid() {
    return pipelineUid;
  }

  /**
   * Unique identifier of the `Delivery Pipeline`.
   * @param pipelineUid pipelineUid or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setPipelineUid(java.lang.String pipelineUid) {
    this.pipelineUid = pipelineUid;
    return this;
  }

  /**
   * Rule id.
   * @return value or {@code null} for none
   */
  public java.lang.String getRule() {
    return rule;
  }

  /**
   * Rule id.
   * @param rule rule or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setRule(java.lang.String rule) {
    this.rule = rule;
    return this;
  }

  /**
   * Rule type (e.g. Restrict Rollouts).
   * @return value or {@code null} for none
   */
  public java.lang.String getRuleType() {
    return ruleType;
  }

  /**
   * Rule type (e.g. Restrict Rollouts).
   * @param ruleType ruleType or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setRuleType(java.lang.String ruleType) {
    this.ruleType = ruleType;
    return this;
  }

  /**
   * The name of the `Target`. This is an optional field, as a `Target` may not always be applicable
   * to a policy.
   * @return value or {@code null} for none
   */
  public java.lang.String getTarget() {
    return target;
  }

  /**
   * The name of the `Target`. This is an optional field, as a `Target` may not always be applicable
   * to a policy.
   * @param target target or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setTarget(java.lang.String target) {
    this.target = target;
    return this;
  }

  /**
   * Unique identifier of the `Target`. This is an optional field, as a `Target` may not always be
   * applicable to a policy.
   * @return value or {@code null} for none
   */
  public java.lang.String getTargetUid() {
    return targetUid;
  }

  /**
   * Unique identifier of the `Target`. This is an optional field, as a `Target` may not always be
   * applicable to a policy.
   * @param targetUid targetUid or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setTargetUid(java.lang.String targetUid) {
    this.targetUid = targetUid;
    return this;
  }

  /**
   * The policy verdict of the request.
   * @return value or {@code null} for none
   */
  public java.lang.String getVerdict() {
    return verdict;
  }

  /**
   * The policy verdict of the request.
   * @param verdict verdict or {@code null} for none
   */
  public DeployPolicyEvaluationEvent setVerdict(java.lang.String verdict) {
    this.verdict = verdict;
    return this;
  }

  @Override
  public DeployPolicyEvaluationEvent set(String fieldName, Object value) {
    return (DeployPolicyEvaluationEvent) super.set(fieldName, value);
  }

  @Override
  public DeployPolicyEvaluationEvent clone() {
    return (DeployPolicyEvaluationEvent) super.clone();
  }

}
