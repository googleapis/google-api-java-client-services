/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1.model;

/**
 * VMware specific details.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VmwarePlatformDetails extends com.google.api.client.json.GenericJson {

  /**
   * Whether the ESX is hyperthreaded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String esxHyperthreading;

  /**
   * ESX version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String esxVersion;

  /**
   * VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b
   * -6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifi
   * er.html.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String osid;

  /**
   * Folder name in vCenter where asset resides.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vcenterFolder;

  /**
   * vCenter URI used in collection.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vcenterUri;

  /**
   * vCenter version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vcenterVersion;

  /**
   * vCenter VM ID.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String vcenterVmId;

  /**
   * Whether the ESX is hyperthreaded.
   * @return value or {@code null} for none
   */
  public java.lang.String getEsxHyperthreading() {
    return esxHyperthreading;
  }

  /**
   * Whether the ESX is hyperthreaded.
   * @param esxHyperthreading esxHyperthreading or {@code null} for none
   */
  public VmwarePlatformDetails setEsxHyperthreading(java.lang.String esxHyperthreading) {
    this.esxHyperthreading = esxHyperthreading;
    return this;
  }

  /**
   * ESX version.
   * @return value or {@code null} for none
   */
  public java.lang.String getEsxVersion() {
    return esxVersion;
  }

  /**
   * ESX version.
   * @param esxVersion esxVersion or {@code null} for none
   */
  public VmwarePlatformDetails setEsxVersion(java.lang.String esxVersion) {
    this.esxVersion = esxVersion;
    return this;
  }

  /**
   * VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b
   * -6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifi
   * er.html.
   * @return value or {@code null} for none
   */
  public java.lang.String getOsid() {
    return osid;
  }

  /**
   * VMware os enum - https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b
   * -6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifi
   * er.html.
   * @param osid osid or {@code null} for none
   */
  public VmwarePlatformDetails setOsid(java.lang.String osid) {
    this.osid = osid;
    return this;
  }

  /**
   * Folder name in vCenter where asset resides.
   * @return value or {@code null} for none
   */
  public java.lang.String getVcenterFolder() {
    return vcenterFolder;
  }

  /**
   * Folder name in vCenter where asset resides.
   * @param vcenterFolder vcenterFolder or {@code null} for none
   */
  public VmwarePlatformDetails setVcenterFolder(java.lang.String vcenterFolder) {
    this.vcenterFolder = vcenterFolder;
    return this;
  }

  /**
   * vCenter URI used in collection.
   * @return value or {@code null} for none
   */
  public java.lang.String getVcenterUri() {
    return vcenterUri;
  }

  /**
   * vCenter URI used in collection.
   * @param vcenterUri vcenterUri or {@code null} for none
   */
  public VmwarePlatformDetails setVcenterUri(java.lang.String vcenterUri) {
    this.vcenterUri = vcenterUri;
    return this;
  }

  /**
   * vCenter version.
   * @return value or {@code null} for none
   */
  public java.lang.String getVcenterVersion() {
    return vcenterVersion;
  }

  /**
   * vCenter version.
   * @param vcenterVersion vcenterVersion or {@code null} for none
   */
  public VmwarePlatformDetails setVcenterVersion(java.lang.String vcenterVersion) {
    this.vcenterVersion = vcenterVersion;
    return this;
  }

  /**
   * vCenter VM ID.
   * @return value or {@code null} for none
   */
  public java.lang.String getVcenterVmId() {
    return vcenterVmId;
  }

  /**
   * vCenter VM ID.
   * @param vcenterVmId vcenterVmId or {@code null} for none
   */
  public VmwarePlatformDetails setVcenterVmId(java.lang.String vcenterVmId) {
    this.vcenterVmId = vcenterVmId;
    return this;
  }

  @Override
  public VmwarePlatformDetails set(String fieldName, Object value) {
    return (VmwarePlatformDetails) super.set(fieldName, value);
  }

  @Override
  public VmwarePlatformDetails clone() {
    return (VmwarePlatformDetails) super.clone();
  }

}
