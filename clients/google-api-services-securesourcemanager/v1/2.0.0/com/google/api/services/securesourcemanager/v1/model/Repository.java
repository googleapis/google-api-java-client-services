/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.securesourcemanager.v1.model;

/**
 * Metadata of a Secure Source Manager repository.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Secure Source Manager API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Repository extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Create timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Optional. Description of the repository, which cannot exceed 500 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * Optional. This checksum is computed by the server based on the value of other fields, and may
   * be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Input only. Initial configurations for the repository.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private InitialConfig initialConfig;

  /**
   * Optional. The name of the instance in which the repository is hosted, formatted as
   * `projects/{project_number}/locations/{location_id}/instances/{instance_id}` When creating
   * repository via securesourcemanager.googleapis.com, this field is used as input. When creating
   * repository via *.sourcemanager.dev, this field is output only.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String instance;

  /**
   * Optional. A unique identifier for a repository. The name should be of the format:
   * `projects/{project}/locations/{location_id}/repositories/{repository_id}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Unique identifier of the repository.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uid;

  /**
   * Output only. Update timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Output only. URIs for the repository.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private URIs uris;

  /**
   * Output only. Create timestamp.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Create timestamp.
   * @param createTime createTime or {@code null} for none
   */
  public Repository setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Optional. Description of the repository, which cannot exceed 500 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * Optional. Description of the repository, which cannot exceed 500 characters.
   * @param description description or {@code null} for none
   */
  public Repository setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * Optional. This checksum is computed by the server based on the value of other fields, and may
   * be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * Optional. This checksum is computed by the server based on the value of other fields, and may
   * be sent on update and delete requests to ensure the client has an up-to-date value before
   * proceeding.
   * @param etag etag or {@code null} for none
   */
  public Repository setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Input only. Initial configurations for the repository.
   * @return value or {@code null} for none
   */
  public InitialConfig getInitialConfig() {
    return initialConfig;
  }

  /**
   * Input only. Initial configurations for the repository.
   * @param initialConfig initialConfig or {@code null} for none
   */
  public Repository setInitialConfig(InitialConfig initialConfig) {
    this.initialConfig = initialConfig;
    return this;
  }

  /**
   * Optional. The name of the instance in which the repository is hosted, formatted as
   * `projects/{project_number}/locations/{location_id}/instances/{instance_id}` When creating
   * repository via securesourcemanager.googleapis.com, this field is used as input. When creating
   * repository via *.sourcemanager.dev, this field is output only.
   * @return value or {@code null} for none
   */
  public java.lang.String getInstance() {
    return instance;
  }

  /**
   * Optional. The name of the instance in which the repository is hosted, formatted as
   * `projects/{project_number}/locations/{location_id}/instances/{instance_id}` When creating
   * repository via securesourcemanager.googleapis.com, this field is used as input. When creating
   * repository via *.sourcemanager.dev, this field is output only.
   * @param instance instance or {@code null} for none
   */
  public Repository setInstance(java.lang.String instance) {
    this.instance = instance;
    return this;
  }

  /**
   * Optional. A unique identifier for a repository. The name should be of the format:
   * `projects/{project}/locations/{location_id}/repositories/{repository_id}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Optional. A unique identifier for a repository. The name should be of the format:
   * `projects/{project}/locations/{location_id}/repositories/{repository_id}`
   * @param name name or {@code null} for none
   */
  public Repository setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Unique identifier of the repository.
   * @return value or {@code null} for none
   */
  public java.lang.String getUid() {
    return uid;
  }

  /**
   * Output only. Unique identifier of the repository.
   * @param uid uid or {@code null} for none
   */
  public Repository setUid(java.lang.String uid) {
    this.uid = uid;
    return this;
  }

  /**
   * Output only. Update timestamp.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Update timestamp.
   * @param updateTime updateTime or {@code null} for none
   */
  public Repository setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Output only. URIs for the repository.
   * @return value or {@code null} for none
   */
  public URIs getUris() {
    return uris;
  }

  /**
   * Output only. URIs for the repository.
   * @param uris uris or {@code null} for none
   */
  public Repository setUris(URIs uris) {
    this.uris = uris;
    return this;
  }

  @Override
  public Repository set(String fieldName, Object value) {
    return (Repository) super.set(fieldName, value);
  }

  @Override
  public Repository clone() {
    return (Repository) super.clone();
  }

}
