/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for NlpSemanticParsingNumberFractionNumber.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSemanticParsingNumberFractionNumber extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingNumberSimpleNumber denominator;

  /**
   * Fields for fraction numbers
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingNumberSimpleNumber numerator;

  /**
   * This field is used to indicate the number of digits after the decimal point in the
   * normalized_value field in number.proto, which contains the floating point representation of the
   * fraction
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer precision;

  /**
   * This field is set only for mixed fraction
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private NlpSemanticParsingNumberSimpleNumber wholeNumber;

  /**
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingNumberSimpleNumber getDenominator() {
    return denominator;
  }

  /**
   * @param denominator denominator or {@code null} for none
   */
  public NlpSemanticParsingNumberFractionNumber setDenominator(NlpSemanticParsingNumberSimpleNumber denominator) {
    this.denominator = denominator;
    return this;
  }

  /**
   * Fields for fraction numbers
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingNumberSimpleNumber getNumerator() {
    return numerator;
  }

  /**
   * Fields for fraction numbers
   * @param numerator numerator or {@code null} for none
   */
  public NlpSemanticParsingNumberFractionNumber setNumerator(NlpSemanticParsingNumberSimpleNumber numerator) {
    this.numerator = numerator;
    return this;
  }

  /**
   * This field is used to indicate the number of digits after the decimal point in the
   * normalized_value field in number.proto, which contains the floating point representation of the
   * fraction
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPrecision() {
    return precision;
  }

  /**
   * This field is used to indicate the number of digits after the decimal point in the
   * normalized_value field in number.proto, which contains the floating point representation of the
   * fraction
   * @param precision precision or {@code null} for none
   */
  public NlpSemanticParsingNumberFractionNumber setPrecision(java.lang.Integer precision) {
    this.precision = precision;
    return this;
  }

  /**
   * This field is set only for mixed fraction
   * @return value or {@code null} for none
   */
  public NlpSemanticParsingNumberSimpleNumber getWholeNumber() {
    return wholeNumber;
  }

  /**
   * This field is set only for mixed fraction
   * @param wholeNumber wholeNumber or {@code null} for none
   */
  public NlpSemanticParsingNumberFractionNumber setWholeNumber(NlpSemanticParsingNumberSimpleNumber wholeNumber) {
    this.wholeNumber = wholeNumber;
    return this;
  }

  @Override
  public NlpSemanticParsingNumberFractionNumber set(String fieldName, Object value) {
    return (NlpSemanticParsingNumberFractionNumber) super.set(fieldName, value);
  }

  @Override
  public NlpSemanticParsingNumberFractionNumber clone() {
    return (NlpSemanticParsingNumberFractionNumber) super.clone();
  }

}
