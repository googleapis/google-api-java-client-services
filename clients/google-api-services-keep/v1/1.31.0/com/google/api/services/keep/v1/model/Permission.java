/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.keep.v1.model;

/**
 * A single permission on the note. Associates a `member` with a `role`.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Keep API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Permission extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Whether this member has been deleted. If the member is recovered, this value is
   * set to false and the recovered member retains the role on the note.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean deleted;

  /**
   * The email associated with the member. If set on create, the `email` field in the `User` or
   * `Group` message must either be empty or match this field. On read, may be unset if the member
   * does not have an associated email.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String email;

  /**
   * Output only. The Google Family to which this role applies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Family family;

  /**
   * Output only. The group to which this role applies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Group group;

  /**
   * Output only. The resource name.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The role granted by this permission. The role determines the entity’s ability to read, write,
   * and share notes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String role;

  /**
   * Output only. The user to whom this role applies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private User user;

  /**
   * Output only. Whether this member has been deleted. If the member is recovered, this value is
   * set to false and the recovered member retains the role on the note.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDeleted() {
    return deleted;
  }

  /**
   * Output only. Whether this member has been deleted. If the member is recovered, this value is
   * set to false and the recovered member retains the role on the note.
   * @param deleted deleted or {@code null} for none
   */
  public Permission setDeleted(java.lang.Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

  /**
   * The email associated with the member. If set on create, the `email` field in the `User` or
   * `Group` message must either be empty or match this field. On read, may be unset if the member
   * does not have an associated email.
   * @return value or {@code null} for none
   */
  public java.lang.String getEmail() {
    return email;
  }

  /**
   * The email associated with the member. If set on create, the `email` field in the `User` or
   * `Group` message must either be empty or match this field. On read, may be unset if the member
   * does not have an associated email.
   * @param email email or {@code null} for none
   */
  public Permission setEmail(java.lang.String email) {
    this.email = email;
    return this;
  }

  /**
   * Output only. The Google Family to which this role applies.
   * @return value or {@code null} for none
   */
  public Family getFamily() {
    return family;
  }

  /**
   * Output only. The Google Family to which this role applies.
   * @param family family or {@code null} for none
   */
  public Permission setFamily(Family family) {
    this.family = family;
    return this;
  }

  /**
   * Output only. The group to which this role applies.
   * @return value or {@code null} for none
   */
  public Group getGroup() {
    return group;
  }

  /**
   * Output only. The group to which this role applies.
   * @param group group or {@code null} for none
   */
  public Permission setGroup(Group group) {
    this.group = group;
    return this;
  }

  /**
   * Output only. The resource name.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name.
   * @param name name or {@code null} for none
   */
  public Permission setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * The role granted by this permission. The role determines the entity’s ability to read, write,
   * and share notes.
   * @return value or {@code null} for none
   */
  public java.lang.String getRole() {
    return role;
  }

  /**
   * The role granted by this permission. The role determines the entity’s ability to read, write,
   * and share notes.
   * @param role role or {@code null} for none
   */
  public Permission setRole(java.lang.String role) {
    this.role = role;
    return this;
  }

  /**
   * Output only. The user to whom this role applies.
   * @return value or {@code null} for none
   */
  public User getUser() {
    return user;
  }

  /**
   * Output only. The user to whom this role applies.
   * @param user user or {@code null} for none
   */
  public Permission setUser(User user) {
    this.user = user;
    return this;
  }

  @Override
  public Permission set(String fieldName, Object value) {
    return (Permission) super.set(fieldName, value);
  }

  @Override
  public Permission clone() {
    return (Permission) super.clone();
  }

}
