/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Configuration for discovery to scan resources for profile generation. Only one discovery
 * configuration may exist per organization, folder, or project. The generated data profiles are
 * retained according to the [data retention policy] (https://cloud.google.com/dlp/docs/data-
 * profiles#retention).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Sensitive Data Protection (DLP). For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2DiscoveryConfig extends com.google.api.client.json.GenericJson {

  /**
   * Actions to execute at the completion of scanning.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GooglePrivacyDlpV2DataProfileAction> actions;

  static {
    // hack to force ProGuard to consider GooglePrivacyDlpV2DataProfileAction used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GooglePrivacyDlpV2DataProfileAction.class);
  }

  /**
   * Output only. The creation timestamp of a DiscoveryConfig.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Display name (max 100 chars)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String displayName;

  /**
   * Output only. A stream of errors encountered when the config was activated. Repeated errors may
   * result in the config automatically being paused. Output only field. Will return the last 100
   * errors. Whenever the config is modified this list will be cleared.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GooglePrivacyDlpV2Error> errors;

  /**
   * Detection logic for profile generation. Not all template features are used by Discovery.
   * FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple
   * templates may be provided if there is data in multiple regions. At most one template must be
   * specified per-region (including "global"). Each region is scanned using the applicable
   * template. If no region-specific template is specified, but a "global" template is specified, it
   * will be copied to that region and used instead. If no global or region-specific template is
   * provided for a region with data, that region's data will not be scanned. For more information,
   * see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> inspectTemplates;

  /**
   * Output only. The timestamp of the last time this config was executed.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String lastRunTime;

  /**
   * Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig
   * is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Only set when the parent is an org.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2OrgConfig orgConfig;

  /**
   * Required. A status for this configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * Target to match against for determining what to scan and how frequently.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GooglePrivacyDlpV2DiscoveryTarget> targets;

  /**
   * Output only. The last update timestamp of a DiscoveryConfig.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Actions to execute at the completion of scanning.
   * @return value or {@code null} for none
   */
  public java.util.List<GooglePrivacyDlpV2DataProfileAction> getActions() {
    return actions;
  }

  /**
   * Actions to execute at the completion of scanning.
   * @param actions actions or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryConfig setActions(java.util.List<GooglePrivacyDlpV2DataProfileAction> actions) {
    this.actions = actions;
    return this;
  }

  /**
   * Output only. The creation timestamp of a DiscoveryConfig.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. The creation timestamp of a DiscoveryConfig.
   * @param createTime createTime or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryConfig setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Display name (max 100 chars)
   * @return value or {@code null} for none
   */
  public java.lang.String getDisplayName() {
    return displayName;
  }

  /**
   * Display name (max 100 chars)
   * @param displayName displayName or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryConfig setDisplayName(java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Output only. A stream of errors encountered when the config was activated. Repeated errors may
   * result in the config automatically being paused. Output only field. Will return the last 100
   * errors. Whenever the config is modified this list will be cleared.
   * @return value or {@code null} for none
   */
  public java.util.List<GooglePrivacyDlpV2Error> getErrors() {
    return errors;
  }

  /**
   * Output only. A stream of errors encountered when the config was activated. Repeated errors may
   * result in the config automatically being paused. Output only field. Will return the last 100
   * errors. Whenever the config is modified this list will be cleared.
   * @param errors errors or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryConfig setErrors(java.util.List<GooglePrivacyDlpV2Error> errors) {
    this.errors = errors;
    return this;
  }

  /**
   * Detection logic for profile generation. Not all template features are used by Discovery.
   * FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple
   * templates may be provided if there is data in multiple regions. At most one template must be
   * specified per-region (including "global"). Each region is scanned using the applicable
   * template. If no region-specific template is specified, but a "global" template is specified, it
   * will be copied to that region and used instead. If no global or region-specific template is
   * provided for a region with data, that region's data will not be scanned. For more information,
   * see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getInspectTemplates() {
    return inspectTemplates;
  }

  /**
   * Detection logic for profile generation. Not all template features are used by Discovery.
   * FindingLimits, include_quote and exclude_info_types have no impact on Discovery. Multiple
   * templates may be provided if there is data in multiple regions. At most one template must be
   * specified per-region (including "global"). Each region is scanned using the applicable
   * template. If no region-specific template is specified, but a "global" template is specified, it
   * will be copied to that region and used instead. If no global or region-specific template is
   * provided for a region with data, that region's data will not be scanned. For more information,
   * see https://cloud.google.com/dlp/docs/data-profiles#data-residency.
   * @param inspectTemplates inspectTemplates or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryConfig setInspectTemplates(java.util.List<java.lang.String> inspectTemplates) {
    this.inspectTemplates = inspectTemplates;
    return this;
  }

  /**
   * Output only. The timestamp of the last time this config was executed.
   * @return value or {@code null} for none
   */
  public String getLastRunTime() {
    return lastRunTime;
  }

  /**
   * Output only. The timestamp of the last time this config was executed.
   * @param lastRunTime lastRunTime or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryConfig setLastRunTime(String lastRunTime) {
    this.lastRunTime = lastRunTime;
    return this;
  }

  /**
   * Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig
   * is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Unique resource name for the DiscoveryConfig, assigned by the service when the DiscoveryConfig
   * is created, for example `projects/dlp-test-project/locations/global/discoveryConfigs/53234423`.
   * @param name name or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryConfig setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Only set when the parent is an org.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2OrgConfig getOrgConfig() {
    return orgConfig;
  }

  /**
   * Only set when the parent is an org.
   * @param orgConfig orgConfig or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryConfig setOrgConfig(GooglePrivacyDlpV2OrgConfig orgConfig) {
    this.orgConfig = orgConfig;
    return this;
  }

  /**
   * Required. A status for this configuration.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * Required. A status for this configuration.
   * @param status status or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryConfig setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  /**
   * Target to match against for determining what to scan and how frequently.
   * @return value or {@code null} for none
   */
  public java.util.List<GooglePrivacyDlpV2DiscoveryTarget> getTargets() {
    return targets;
  }

  /**
   * Target to match against for determining what to scan and how frequently.
   * @param targets targets or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryConfig setTargets(java.util.List<GooglePrivacyDlpV2DiscoveryTarget> targets) {
    this.targets = targets;
    return this;
  }

  /**
   * Output only. The last update timestamp of a DiscoveryConfig.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. The last update timestamp of a DiscoveryConfig.
   * @param updateTime updateTime or {@code null} for none
   */
  public GooglePrivacyDlpV2DiscoveryConfig setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2DiscoveryConfig set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2DiscoveryConfig) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2DiscoveryConfig clone() {
    return (GooglePrivacyDlpV2DiscoveryConfig) super.clone();
  }

}
