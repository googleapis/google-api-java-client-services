/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for IndexingDupsLocalizedLocalizedCluster.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class IndexingDupsLocalizedLocalizedCluster extends com.google.api.client.json.GenericJson {

  /**
   * Defined as a source-blocker, a result which can be a boost target but should itself not be
   * boosted (e.g. roboted documents). For more details on source and target blocking, please read
   * through the code for quality/twiddler/impls/PROTECTED/local_result_twiddler_v2.cc
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean boostSourceBlocker;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<IndexingDupsLocalizedLocalizedClusterCluster> cluster;

  /**
   * Since July 2014 those two fiels are no longer populated, the data is stored in the
   * TargetLinkSets instead. The deprecated fields contain values only for docs which have not been
   * processed since July 2014.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo deprecatedHreflangInfo;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo deprecatedOutlinksInfo;

  /**
   * The language of this document (as detected by on-page language detection, not influenced by
   * external anchor signals or other indirect conclusions).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String documentLanguage;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IndexingDupsLocalizedLocalizedClusterTargetLinkSets hreflangTargetLink;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IndexingDupsLocalizedLocalizedClusterTargetLinkSets inbodyTargetLink;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IndexingDupsLocalizedLocalizedClusterTargetLinkSets outlinksTargetLink;

  /**
   * The list of Sitedup rule IDs for this specific URL. The value is only populated if the URL has
   * at least one localized cluster fulfilling the following conditions: - spans more than one host
   * - does not have filtering enabled due to other input (e.g. due to being a hreflang cluster).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.util.List<java.math.BigInteger> sitedupRuleId;

  /**
   * A warning indicator that a problem has occurred, e.g. cross-domain links being filtered early.
   * The warning is just presented for debugging purposes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> warningMessage;

  /**
   * Defined as a source-blocker, a result which can be a boost target but should itself not be
   * boosted (e.g. roboted documents). For more details on source and target blocking, please read
   * through the code for quality/twiddler/impls/PROTECTED/local_result_twiddler_v2.cc
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBoostSourceBlocker() {
    return boostSourceBlocker;
  }

  /**
   * Defined as a source-blocker, a result which can be a boost target but should itself not be
   * boosted (e.g. roboted documents). For more details on source and target blocking, please read
   * through the code for quality/twiddler/impls/PROTECTED/local_result_twiddler_v2.cc
   * @param boostSourceBlocker boostSourceBlocker or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedCluster setBoostSourceBlocker(java.lang.Boolean boostSourceBlocker) {
    this.boostSourceBlocker = boostSourceBlocker;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<IndexingDupsLocalizedLocalizedClusterCluster> getCluster() {
    return cluster;
  }

  /**
   * @param cluster cluster or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedCluster setCluster(java.util.List<IndexingDupsLocalizedLocalizedClusterCluster> cluster) {
    this.cluster = cluster;
    return this;
  }

  /**
   * Since July 2014 those two fiels are no longer populated, the data is stored in the
   * TargetLinkSets instead. The deprecated fields contain values only for docs which have not been
   * processed since July 2014.
   * @return value or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo getDeprecatedHreflangInfo() {
    return deprecatedHreflangInfo;
  }

  /**
   * Since July 2014 those two fiels are no longer populated, the data is stored in the
   * TargetLinkSets instead. The deprecated fields contain values only for docs which have not been
   * processed since July 2014.
   * @param deprecatedHreflangInfo deprecatedHreflangInfo or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedCluster setDeprecatedHreflangInfo(IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo deprecatedHreflangInfo) {
    this.deprecatedHreflangInfo = deprecatedHreflangInfo;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo getDeprecatedOutlinksInfo() {
    return deprecatedOutlinksInfo;
  }

  /**
   * @param deprecatedOutlinksInfo deprecatedOutlinksInfo or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedCluster setDeprecatedOutlinksInfo(IndexingDupsLocalizedLocalizedClusterLinkBasedClusterInfo deprecatedOutlinksInfo) {
    this.deprecatedOutlinksInfo = deprecatedOutlinksInfo;
    return this;
  }

  /**
   * The language of this document (as detected by on-page language detection, not influenced by
   * external anchor signals or other indirect conclusions).
   * @return value or {@code null} for none
   */
  public java.lang.String getDocumentLanguage() {
    return documentLanguage;
  }

  /**
   * The language of this document (as detected by on-page language detection, not influenced by
   * external anchor signals or other indirect conclusions).
   * @param documentLanguage documentLanguage or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedCluster setDocumentLanguage(java.lang.String documentLanguage) {
    this.documentLanguage = documentLanguage;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedClusterTargetLinkSets getHreflangTargetLink() {
    return hreflangTargetLink;
  }

  /**
   * @param hreflangTargetLink hreflangTargetLink or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedCluster setHreflangTargetLink(IndexingDupsLocalizedLocalizedClusterTargetLinkSets hreflangTargetLink) {
    this.hreflangTargetLink = hreflangTargetLink;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedClusterTargetLinkSets getInbodyTargetLink() {
    return inbodyTargetLink;
  }

  /**
   * @param inbodyTargetLink inbodyTargetLink or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedCluster setInbodyTargetLink(IndexingDupsLocalizedLocalizedClusterTargetLinkSets inbodyTargetLink) {
    this.inbodyTargetLink = inbodyTargetLink;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedClusterTargetLinkSets getOutlinksTargetLink() {
    return outlinksTargetLink;
  }

  /**
   * @param outlinksTargetLink outlinksTargetLink or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedCluster setOutlinksTargetLink(IndexingDupsLocalizedLocalizedClusterTargetLinkSets outlinksTargetLink) {
    this.outlinksTargetLink = outlinksTargetLink;
    return this;
  }

  /**
   * The list of Sitedup rule IDs for this specific URL. The value is only populated if the URL has
   * at least one localized cluster fulfilling the following conditions: - spans more than one host
   * - does not have filtering enabled due to other input (e.g. due to being a hreflang cluster).
   * @return value or {@code null} for none
   */
  public java.util.List<java.math.BigInteger> getSitedupRuleId() {
    return sitedupRuleId;
  }

  /**
   * The list of Sitedup rule IDs for this specific URL. The value is only populated if the URL has
   * at least one localized cluster fulfilling the following conditions: - spans more than one host
   * - does not have filtering enabled due to other input (e.g. due to being a hreflang cluster).
   * @param sitedupRuleId sitedupRuleId or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedCluster setSitedupRuleId(java.util.List<java.math.BigInteger> sitedupRuleId) {
    this.sitedupRuleId = sitedupRuleId;
    return this;
  }

  /**
   * A warning indicator that a problem has occurred, e.g. cross-domain links being filtered early.
   * The warning is just presented for debugging purposes.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getWarningMessage() {
    return warningMessage;
  }

  /**
   * A warning indicator that a problem has occurred, e.g. cross-domain links being filtered early.
   * The warning is just presented for debugging purposes.
   * @param warningMessage warningMessage or {@code null} for none
   */
  public IndexingDupsLocalizedLocalizedCluster setWarningMessage(java.util.List<java.lang.String> warningMessage) {
    this.warningMessage = warningMessage;
    return this;
  }

  @Override
  public IndexingDupsLocalizedLocalizedCluster set(String fieldName, Object value) {
    return (IndexingDupsLocalizedLocalizedCluster) super.set(fieldName, value);
  }

  @Override
  public IndexingDupsLocalizedLocalizedCluster clone() {
    return (IndexingDupsLocalizedLocalizedCluster) super.clone();
  }

}
