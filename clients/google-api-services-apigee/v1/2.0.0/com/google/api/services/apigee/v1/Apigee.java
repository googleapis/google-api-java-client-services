/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apigee.v1;

/**
 * Service definition for Apigee (v1).
 *
 * <p>
 * Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/apigee-api-management/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ApigeeRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Apigee extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        (com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 32 ||
        (com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION == 31 &&
        com.google.api.client.googleapis.GoogleUtils.BUGFIX_VERSION >= 1))) ||
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION >= 2,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.31.1 of google-api-client to run version " +
        "2.0.0 of the Apigee API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://apigee.googleapis.com/";

  /**
   * The default encoded mTLS root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.31
   */
  public static final String DEFAULT_MTLS_ROOT_URL = "https://apigee.mtls.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Apigee(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Apigee(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Hybrid collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Apigee apigee = new Apigee(...);}
   *   {@code Apigee.Hybrid.List request = apigee.hybrid().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Hybrid hybrid() {
    return new Hybrid();
  }

  /**
   * The "hybrid" collection of methods.
   */
  public class Hybrid {

    /**
     * An accessor for creating requests from the Issuers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Issuers.List request = apigee.issuers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Issuers issuers() {
      return new Issuers();
    }

    /**
     * The "issuers" collection of methods.
     */
    public class Issuers {

      /**
       * Lists hybrid services and its trusted issuers service account ids. This api is authenticated and
       * unauthorized(allow all the users) and used by runtime authn-authz service to query control
       * plane's issuer service account ids.
       *
       * Create a request for the method "issuers.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name Required. Must be of the form `hybrid/issuers`.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListHybridIssuersResponse> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^hybrid/issuers$");

        /**
         * Lists hybrid services and its trusted issuers service account ids. This api is authenticated
         * and unauthorized(allow all the users) and used by runtime authn-authz service to query control
         * plane's issuer service account ids.
         *
         * Create a request for the method "issuers.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Must be of the form `hybrid/issuers`.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListHybridIssuersResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^hybrid/issuers$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Must be of the form `hybrid/issuers`. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Must be of the form `hybrid/issuers`.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Must be of the form `hybrid/issuers`. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^hybrid/issuers$");
          }
          this.name = name;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Apigee apigee = new Apigee(...);}
   *   {@code Apigee.Organizations.List request = apigee.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * Creates an Apigee organization. See [Create an Apigee
     * organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
     *
     * Create a request for the method "organizations.create".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
     * @return the request
     */
    public Create create(com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

      private static final String REST_PATH = "v1/organizations";

      /**
       * Creates an Apigee organization. See [Create an Apigee
       * organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
       *
       * Create a request for the method "organizations.create".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
       * @since 1.13
       */
      protected Create(com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the Google Cloud project in which to associate the Apigee organization.
       * Pass the information as a query parameter using the following structure in your request:
       * `projects/`
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Name of the Google Cloud project in which to associate the Apigee organization. Pass the
     information as a query parameter using the following structure in your request: `projects/`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. Name of the Google Cloud project in which to associate the Apigee organization.
       * Pass the information as a query parameter using the following structure in your request:
       * `projects/`
       */
      public Create setParent(java.lang.String parent) {
        this.parent = parent;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Delete an Apigee organization. For organizations with BillingType EVALUATION, an immediate
     * deletion is performed. For paid organizations (Subscription or Pay-as-you-go), a soft-deletion is
     * performed. The organization can be restored within the soft-deletion period, which is specified
     * using the `retention` field in the request or by filing a support ticket with Apigee. During the
     * data retention period specified in the request, the Apigee organization cannot be recreated in
     * the same Google Cloud project. **IMPORTANT: The default data retention setting for this operation
     * is 7 days. To permanently delete the organization in 24 hours, set the retention parameter to
     * `MINIMUM`.**
     *
     * Create a request for the method "organizations.delete".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name Required. Name of the organization. Use the following structure in your request:
     *        `organizations/{org}`
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Delete an Apigee organization. For organizations with BillingType EVALUATION, an immediate
       * deletion is performed. For paid organizations (Subscription or Pay-as-you-go), a soft-deletion
       * is performed. The organization can be restored within the soft-deletion period, which is
       * specified using the `retention` field in the request or by filing a support ticket with Apigee.
       * During the data retention period specified in the request, the Apigee organization cannot be
       * recreated in the same Google Cloud project. **IMPORTANT: The default data retention setting for
       * this operation is 7 days. To permanently delete the organization in 24 hours, set the retention
       * parameter to `MINIMUM`.**
       *
       * Create a request for the method "organizations.delete".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Name of the organization. Use the following structure in your request:
     *        `organizations/{org}`
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Name of the organization. Use the following structure in your request:
     `organizations/{org}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Name of the organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Optional. This setting is applicable only for organizations that are soft-deleted (i.e.,
       * BillingType is not EVALUATION). It controls how long Organization data will be retained
       * after the initial delete operation completes. During this period, the Organization may be
       * restored to its last known state. After this period, the Organization will no longer be
       * able to be restored. **Note: During the data retention period specified using this field,
       * the Apigee organization cannot be recreated in the same Google Cloud project.**
       */
      @com.google.api.client.util.Key
      private java.lang.String retention;

      /** Optional. This setting is applicable only for organizations that are soft-deleted (i.e.,
     BillingType is not EVALUATION). It controls how long Organization data will be retained after the
     initial delete operation completes. During this period, the Organization may be restored to its
     last known state. After this period, the Organization will no longer be able to be restored.
     **Note: During the data retention period specified using this field, the Apigee organization cannot
     be recreated in the same Google Cloud project.**
       */
      public java.lang.String getRetention() {
        return retention;
      }

      /**
       * Optional. This setting is applicable only for organizations that are soft-deleted (i.e.,
       * BillingType is not EVALUATION). It controls how long Organization data will be retained
       * after the initial delete operation completes. During this period, the Organization may be
       * restored to its last known state. After this period, the Organization will no longer be
       * able to be restored. **Note: During the data retention period specified using this field,
       * the Apigee organization cannot be recreated in the same Google Cloud project.**
       */
      public Delete setRetention(java.lang.String retention) {
        this.retention = retention;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets the profile for an Apigee organization. See [Understanding
     * organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-
     * structure).
     *
     * Create a request for the method "organizations.get".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. Apigee organization name in the following format: `organizations/{org}`
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Gets the profile for an Apigee organization. See [Understanding
       * organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-
       * structure).
       *
       * Create a request for the method "organizations.get".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Apigee organization name in the following format: `organizations/{org}`
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Apigee organization name in the following format: `organizations/{org}` */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Apigee organization name in the following format: `organizations/{org}`
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. Apigee organization name in the following format: `organizations/{org}` */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists the service accounts allowed to access Apigee control plane directly for limited
     * functionality. **Note**: Available to Apigee hybrid only.
     *
     * Create a request for the method "organizations.getControlPlaneAccess".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link GetControlPlaneAccess#execute()} method to invoke the remote
     * operation.
     *
     * @param name Required. Resource name of the Control Plane Access. Use the following structure in your request:
     *        `organizations/{org}/controlPlaneAccess`
     * @return the request
     */
    public GetControlPlaneAccess getControlPlaneAccess(java.lang.String name) throws java.io.IOException {
      GetControlPlaneAccess result = new GetControlPlaneAccess(name);
      initialize(result);
      return result;
    }

    public class GetControlPlaneAccess extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ControlPlaneAccess> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+/controlPlaneAccess$");

      /**
       * Lists the service accounts allowed to access Apigee control plane directly for limited
       * functionality. **Note**: Available to Apigee hybrid only.
       *
       * Create a request for the method "organizations.getControlPlaneAccess".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link GetControlPlaneAccess#execute()} method to invoke the remote
       * operation. <p> {@link GetControlPlaneAccess#initialize(com.google.api.client.googleapis.service
       * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. Resource name of the Control Plane Access. Use the following structure in your request:
     *        `organizations/{org}/controlPlaneAccess`
       * @since 1.13
       */
      protected GetControlPlaneAccess(java.lang.String name) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ControlPlaneAccess.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/controlPlaneAccess$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetControlPlaneAccess set$Xgafv(java.lang.String $Xgafv) {
        return (GetControlPlaneAccess) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetControlPlaneAccess setAccessToken(java.lang.String accessToken) {
        return (GetControlPlaneAccess) super.setAccessToken(accessToken);
      }

      @Override
      public GetControlPlaneAccess setAlt(java.lang.String alt) {
        return (GetControlPlaneAccess) super.setAlt(alt);
      }

      @Override
      public GetControlPlaneAccess setCallback(java.lang.String callback) {
        return (GetControlPlaneAccess) super.setCallback(callback);
      }

      @Override
      public GetControlPlaneAccess setFields(java.lang.String fields) {
        return (GetControlPlaneAccess) super.setFields(fields);
      }

      @Override
      public GetControlPlaneAccess setKey(java.lang.String key) {
        return (GetControlPlaneAccess) super.setKey(key);
      }

      @Override
      public GetControlPlaneAccess setOauthToken(java.lang.String oauthToken) {
        return (GetControlPlaneAccess) super.setOauthToken(oauthToken);
      }

      @Override
      public GetControlPlaneAccess setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetControlPlaneAccess) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetControlPlaneAccess setQuotaUser(java.lang.String quotaUser) {
        return (GetControlPlaneAccess) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetControlPlaneAccess setUploadType(java.lang.String uploadType) {
        return (GetControlPlaneAccess) super.setUploadType(uploadType);
      }

      @Override
      public GetControlPlaneAccess setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetControlPlaneAccess) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Resource name of the Control Plane Access. Use the following structure in your
       * request: `organizations/{org}/controlPlaneAccess`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Resource name of the Control Plane Access. Use the following structure in your request:
     `organizations/{org}/controlPlaneAccess`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Resource name of the Control Plane Access. Use the following structure in your
       * request: `organizations/{org}/controlPlaneAccess`
       */
      public GetControlPlaneAccess setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/controlPlaneAccess$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetControlPlaneAccess set(String parameterName, Object value) {
        return (GetControlPlaneAccess) super.set(parameterName, value);
      }
    }
    /**
     * Gets the deployed ingress configuration for an organization.
     *
     * Create a request for the method "organizations.getDeployedIngressConfig".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link GetDeployedIngressConfig#execute()} method to invoke the remote
     * operation.
     *
     * @param name Required. Name of the deployed configuration for the organization in the following format:
     *        'organizations/{org}/deployedIngressConfig'.
     * @return the request
     */
    public GetDeployedIngressConfig getDeployedIngressConfig(java.lang.String name) throws java.io.IOException {
      GetDeployedIngressConfig result = new GetDeployedIngressConfig(name);
      initialize(result);
      return result;
    }

    public class GetDeployedIngressConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IngressConfig> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+/deployedIngressConfig$");

      /**
       * Gets the deployed ingress configuration for an organization.
       *
       * Create a request for the method "organizations.getDeployedIngressConfig".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link GetDeployedIngressConfig#execute()} method to invoke the remote
       * operation. <p> {@link GetDeployedIngressConfig#initialize(com.google.api.client.googleapis.serv
       * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. Name of the deployed configuration for the organization in the following format:
     *        'organizations/{org}/deployedIngressConfig'.
       * @since 1.13
       */
      protected GetDeployedIngressConfig(java.lang.String name) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IngressConfig.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/deployedIngressConfig$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetDeployedIngressConfig set$Xgafv(java.lang.String $Xgafv) {
        return (GetDeployedIngressConfig) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetDeployedIngressConfig setAccessToken(java.lang.String accessToken) {
        return (GetDeployedIngressConfig) super.setAccessToken(accessToken);
      }

      @Override
      public GetDeployedIngressConfig setAlt(java.lang.String alt) {
        return (GetDeployedIngressConfig) super.setAlt(alt);
      }

      @Override
      public GetDeployedIngressConfig setCallback(java.lang.String callback) {
        return (GetDeployedIngressConfig) super.setCallback(callback);
      }

      @Override
      public GetDeployedIngressConfig setFields(java.lang.String fields) {
        return (GetDeployedIngressConfig) super.setFields(fields);
      }

      @Override
      public GetDeployedIngressConfig setKey(java.lang.String key) {
        return (GetDeployedIngressConfig) super.setKey(key);
      }

      @Override
      public GetDeployedIngressConfig setOauthToken(java.lang.String oauthToken) {
        return (GetDeployedIngressConfig) super.setOauthToken(oauthToken);
      }

      @Override
      public GetDeployedIngressConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetDeployedIngressConfig) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetDeployedIngressConfig setQuotaUser(java.lang.String quotaUser) {
        return (GetDeployedIngressConfig) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetDeployedIngressConfig setUploadType(java.lang.String uploadType) {
        return (GetDeployedIngressConfig) super.setUploadType(uploadType);
      }

      @Override
      public GetDeployedIngressConfig setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetDeployedIngressConfig) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the deployed configuration for the organization in the following format:
       * 'organizations/{org}/deployedIngressConfig'.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Name of the deployed configuration for the organization in the following format:
     'organizations/{org}/deployedIngressConfig'.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Name of the deployed configuration for the organization in the following format:
       * 'organizations/{org}/deployedIngressConfig'.
       */
      public GetDeployedIngressConfig setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/deployedIngressConfig$");
        }
        this.name = name;
        return this;
      }

      /**
       * When set to FULL, additional details about the specific deployments receiving traffic will
       * be included in the IngressConfig response's RoutingRules.
       */
      @com.google.api.client.util.Key
      private java.lang.String view;

      /** When set to FULL, additional details about the specific deployments receiving traffic will be
     included in the IngressConfig response's RoutingRules.
       */
      public java.lang.String getView() {
        return view;
      }

      /**
       * When set to FULL, additional details about the specific deployments receiving traffic will
       * be included in the IngressConfig response's RoutingRules.
       */
      public GetDeployedIngressConfig setView(java.lang.String view) {
        this.view = view;
        return this;
      }

      @Override
      public GetDeployedIngressConfig set(String parameterName, Object value) {
        return (GetDeployedIngressConfig) super.set(parameterName, value);
      }
    }
    /**
     * Gets the project ID and region for an Apigee organization.
     *
     * Create a request for the method "organizations.getProjectMapping".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link GetProjectMapping#execute()} method to invoke the remote operation.
     *
     * @param name Required. Apigee organization name in the following format: `organizations/{org}`
     * @return the request
     */
    public GetProjectMapping getProjectMapping(java.lang.String name) throws java.io.IOException {
      GetProjectMapping result = new GetProjectMapping(name);
      initialize(result);
      return result;
    }

    public class GetProjectMapping extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1OrganizationProjectMapping> {

      private static final String REST_PATH = "v1/{+name}:getProjectMapping";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Gets the project ID and region for an Apigee organization.
       *
       * Create a request for the method "organizations.getProjectMapping".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link GetProjectMapping#execute()} method to invoke the remote operation.
       * <p> {@link GetProjectMapping#initialize(com.google.api.client.googleapis.services.AbstractGoogl
       * eClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param name Required. Apigee organization name in the following format: `organizations/{org}`
       * @since 1.13
       */
      protected GetProjectMapping(java.lang.String name) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1OrganizationProjectMapping.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetProjectMapping set$Xgafv(java.lang.String $Xgafv) {
        return (GetProjectMapping) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetProjectMapping setAccessToken(java.lang.String accessToken) {
        return (GetProjectMapping) super.setAccessToken(accessToken);
      }

      @Override
      public GetProjectMapping setAlt(java.lang.String alt) {
        return (GetProjectMapping) super.setAlt(alt);
      }

      @Override
      public GetProjectMapping setCallback(java.lang.String callback) {
        return (GetProjectMapping) super.setCallback(callback);
      }

      @Override
      public GetProjectMapping setFields(java.lang.String fields) {
        return (GetProjectMapping) super.setFields(fields);
      }

      @Override
      public GetProjectMapping setKey(java.lang.String key) {
        return (GetProjectMapping) super.setKey(key);
      }

      @Override
      public GetProjectMapping setOauthToken(java.lang.String oauthToken) {
        return (GetProjectMapping) super.setOauthToken(oauthToken);
      }

      @Override
      public GetProjectMapping setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetProjectMapping) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetProjectMapping setQuotaUser(java.lang.String quotaUser) {
        return (GetProjectMapping) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetProjectMapping setUploadType(java.lang.String uploadType) {
        return (GetProjectMapping) super.setUploadType(uploadType);
      }

      @Override
      public GetProjectMapping setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetProjectMapping) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Apigee organization name in the following format: `organizations/{org}` */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Apigee organization name in the following format: `organizations/{org}`
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. Apigee organization name in the following format: `organizations/{org}` */
      public GetProjectMapping setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetProjectMapping set(String parameterName, Object value) {
        return (GetProjectMapping) super.set(parameterName, value);
      }
    }
    /**
     * Get runtime config for an organization.
     *
     * Create a request for the method "organizations.getRuntimeConfig".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link GetRuntimeConfig#execute()} method to invoke the remote operation.
     *
     * @param name Required. Name of the runtime config for the organization in the following format:
     *        'organizations/{org}/runtimeConfig'.
     * @return the request
     */
    public GetRuntimeConfig getRuntimeConfig(java.lang.String name) throws java.io.IOException {
      GetRuntimeConfig result = new GetRuntimeConfig(name);
      initialize(result);
      return result;
    }

    public class GetRuntimeConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RuntimeConfig> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+/runtimeConfig$");

      /**
       * Get runtime config for an organization.
       *
       * Create a request for the method "organizations.getRuntimeConfig".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link GetRuntimeConfig#execute()} method to invoke the remote operation.
       * <p> {@link GetRuntimeConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogle
       * ClientRequest)} must be called to initialize this instance immediately after invoking the
       * constructor. </p>
       *
       * @param name Required. Name of the runtime config for the organization in the following format:
     *        'organizations/{org}/runtimeConfig'.
       * @since 1.13
       */
      protected GetRuntimeConfig(java.lang.String name) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RuntimeConfig.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/runtimeConfig$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetRuntimeConfig set$Xgafv(java.lang.String $Xgafv) {
        return (GetRuntimeConfig) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetRuntimeConfig setAccessToken(java.lang.String accessToken) {
        return (GetRuntimeConfig) super.setAccessToken(accessToken);
      }

      @Override
      public GetRuntimeConfig setAlt(java.lang.String alt) {
        return (GetRuntimeConfig) super.setAlt(alt);
      }

      @Override
      public GetRuntimeConfig setCallback(java.lang.String callback) {
        return (GetRuntimeConfig) super.setCallback(callback);
      }

      @Override
      public GetRuntimeConfig setFields(java.lang.String fields) {
        return (GetRuntimeConfig) super.setFields(fields);
      }

      @Override
      public GetRuntimeConfig setKey(java.lang.String key) {
        return (GetRuntimeConfig) super.setKey(key);
      }

      @Override
      public GetRuntimeConfig setOauthToken(java.lang.String oauthToken) {
        return (GetRuntimeConfig) super.setOauthToken(oauthToken);
      }

      @Override
      public GetRuntimeConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetRuntimeConfig) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetRuntimeConfig setQuotaUser(java.lang.String quotaUser) {
        return (GetRuntimeConfig) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetRuntimeConfig setUploadType(java.lang.String uploadType) {
        return (GetRuntimeConfig) super.setUploadType(uploadType);
      }

      @Override
      public GetRuntimeConfig setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetRuntimeConfig) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the runtime config for the organization in the following format:
       * 'organizations/{org}/runtimeConfig'.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Name of the runtime config for the organization in the following format:
     'organizations/{org}/runtimeConfig'.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Name of the runtime config for the organization in the following format:
       * 'organizations/{org}/runtimeConfig'.
       */
      public GetRuntimeConfig setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/runtimeConfig$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetRuntimeConfig set(String parameterName, Object value) {
        return (GetRuntimeConfig) super.set(parameterName, value);
      }
    }
    /**
     * GetSecuritySettings gets the security settings for API Security.
     *
     * Create a request for the method "organizations.getSecuritySettings".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link GetSecuritySettings#execute()} method to invoke the remote operation.
     *
     * @param name Required. The name of the SecuritySettings to retrieve. This will always be:
     *        'organizations/{org}/securitySettings'.
     * @return the request
     */
    public GetSecuritySettings getSecuritySettings(java.lang.String name) throws java.io.IOException {
      GetSecuritySettings result = new GetSecuritySettings(name);
      initialize(result);
      return result;
    }

    public class GetSecuritySettings extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecuritySettings> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+/securitySettings$");

      /**
       * GetSecuritySettings gets the security settings for API Security.
       *
       * Create a request for the method "organizations.getSecuritySettings".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link GetSecuritySettings#execute()} method to invoke the remote
       * operation. <p> {@link GetSecuritySettings#initialize(com.google.api.client.googleapis.services.
       * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. The name of the SecuritySettings to retrieve. This will always be:
     *        'organizations/{org}/securitySettings'.
       * @since 1.13
       */
      protected GetSecuritySettings(java.lang.String name) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecuritySettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/securitySettings$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetSecuritySettings set$Xgafv(java.lang.String $Xgafv) {
        return (GetSecuritySettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetSecuritySettings setAccessToken(java.lang.String accessToken) {
        return (GetSecuritySettings) super.setAccessToken(accessToken);
      }

      @Override
      public GetSecuritySettings setAlt(java.lang.String alt) {
        return (GetSecuritySettings) super.setAlt(alt);
      }

      @Override
      public GetSecuritySettings setCallback(java.lang.String callback) {
        return (GetSecuritySettings) super.setCallback(callback);
      }

      @Override
      public GetSecuritySettings setFields(java.lang.String fields) {
        return (GetSecuritySettings) super.setFields(fields);
      }

      @Override
      public GetSecuritySettings setKey(java.lang.String key) {
        return (GetSecuritySettings) super.setKey(key);
      }

      @Override
      public GetSecuritySettings setOauthToken(java.lang.String oauthToken) {
        return (GetSecuritySettings) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSecuritySettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSecuritySettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSecuritySettings setQuotaUser(java.lang.String quotaUser) {
        return (GetSecuritySettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSecuritySettings setUploadType(java.lang.String uploadType) {
        return (GetSecuritySettings) super.setUploadType(uploadType);
      }

      @Override
      public GetSecuritySettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetSecuritySettings) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. The name of the SecuritySettings to retrieve. This will always be:
       * 'organizations/{org}/securitySettings'.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. The name of the SecuritySettings to retrieve. This will always be:
     'organizations/{org}/securitySettings'.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. The name of the SecuritySettings to retrieve. This will always be:
       * 'organizations/{org}/securitySettings'.
       */
      public GetSecuritySettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/securitySettings$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetSecuritySettings set(String parameterName, Object value) {
        return (GetSecuritySettings) super.set(parameterName, value);
      }
    }
    /**
     * Lists the service accounts with the permissions required to allow the Synchronizer to download
     * environment data from the control plane. An ETag is returned in the response to
     * `getSyncAuthorization`. Pass that ETag when calling [setSyncAuthorization](setSyncAuthorization)
     * to ensure that you are updating the correct version. If you don't pass the ETag in the call to
     * `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more
     * information, see [Configure the
     * Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**:
     * Available to Apigee hybrid only.
     *
     * Create a request for the method "organizations.getSyncAuthorization".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link GetSyncAuthorization#execute()} method to invoke the remote
     * operation.
     *
     * @param name Required. Name of the Apigee organization. Use the following structure in your request:
     *        `organizations/{org}`
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest}
     * @return the request
     */
    public GetSyncAuthorization getSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest content) throws java.io.IOException {
      GetSyncAuthorization result = new GetSyncAuthorization(name, content);
      initialize(result);
      return result;
    }

    public class GetSyncAuthorization extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization> {

      private static final String REST_PATH = "v1/{+name}:getSyncAuthorization";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Lists the service accounts with the permissions required to allow the Synchronizer to download
       * environment data from the control plane. An ETag is returned in the response to
       * `getSyncAuthorization`. Pass that ETag when calling
       * [setSyncAuthorization](setSyncAuthorization) to ensure that you are updating the correct
       * version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing
       * authorization is overwritten indiscriminately. For more information, see [Configure the
       * Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access).
       * **Note**: Available to Apigee hybrid only.
       *
       * Create a request for the method "organizations.getSyncAuthorization".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link GetSyncAuthorization#execute()} method to invoke the remote
       * operation. <p> {@link GetSyncAuthorization#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. Name of the Apigee organization. Use the following structure in your request:
     *        `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest}
       * @since 1.13
       */
      protected GetSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public GetSyncAuthorization set$Xgafv(java.lang.String $Xgafv) {
        return (GetSyncAuthorization) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetSyncAuthorization setAccessToken(java.lang.String accessToken) {
        return (GetSyncAuthorization) super.setAccessToken(accessToken);
      }

      @Override
      public GetSyncAuthorization setAlt(java.lang.String alt) {
        return (GetSyncAuthorization) super.setAlt(alt);
      }

      @Override
      public GetSyncAuthorization setCallback(java.lang.String callback) {
        return (GetSyncAuthorization) super.setCallback(callback);
      }

      @Override
      public GetSyncAuthorization setFields(java.lang.String fields) {
        return (GetSyncAuthorization) super.setFields(fields);
      }

      @Override
      public GetSyncAuthorization setKey(java.lang.String key) {
        return (GetSyncAuthorization) super.setKey(key);
      }

      @Override
      public GetSyncAuthorization setOauthToken(java.lang.String oauthToken) {
        return (GetSyncAuthorization) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSyncAuthorization setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSyncAuthorization) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSyncAuthorization setQuotaUser(java.lang.String quotaUser) {
        return (GetSyncAuthorization) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSyncAuthorization setUploadType(java.lang.String uploadType) {
        return (GetSyncAuthorization) super.setUploadType(uploadType);
      }

      @Override
      public GetSyncAuthorization setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetSyncAuthorization) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Name of the Apigee organization. Use the following structure in your request:
     `organizations/{org}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      public GetSyncAuthorization setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetSyncAuthorization set(String parameterName, Object value) {
        return (GetSyncAuthorization) super.set(parameterName, value);
      }
    }
    /**
     * Lists the Apigee organizations and associated Google Cloud projects that you have permission to
     * access. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-
     * platform/fundamentals/organization-structure).
     *
     * Create a request for the method "organizations.list".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param parent Required. Use the following structure in your request: `organizations`
     * @return the request
     */
    public List list(java.lang.String parent) throws java.io.IOException {
      List result = new List(parent);
      initialize(result);
      return result;
    }

    public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOrganizationsResponse> {

      private static final String REST_PATH = "v1/{+parent}";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^organizations$");

      /**
       * Lists the Apigee organizations and associated Google Cloud projects that you have permission to
       * access. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-
       * platform/fundamentals/organization-structure).
       *
       * Create a request for the method "organizations.list".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. Use the following structure in your request: `organizations`
       * @since 1.13
       */
      protected List(java.lang.String parent) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOrganizationsResponse.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Use the following structure in your request: `organizations` */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Use the following structure in your request: `organizations`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /** Required. Use the following structure in your request: `organizations` */
      public List setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Configures the add-ons for the Apigee organization. The existing add-on configuration will be
     * fully replaced.
     *
     * Create a request for the method "organizations.setAddons".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link SetAddons#execute()} method to invoke the remote operation.
     *
     * @param org Required. Name of the organization. Use the following structure in your request:
     *        `organizations/{org}`
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SetAddonsRequest}
     * @return the request
     */
    public SetAddons setAddons(java.lang.String org, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SetAddonsRequest content) throws java.io.IOException {
      SetAddons result = new SetAddons(org, content);
      initialize(result);
      return result;
    }

    public class SetAddons extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

      private static final String REST_PATH = "v1/{+org}:setAddons";

      private final java.util.regex.Pattern ORG_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Configures the add-ons for the Apigee organization. The existing add-on configuration will be
       * fully replaced.
       *
       * Create a request for the method "organizations.setAddons".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link SetAddons#execute()} method to invoke the remote operation. <p>
       * {@link
       * SetAddons#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param org Required. Name of the organization. Use the following structure in your request:
     *        `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SetAddonsRequest}
       * @since 1.13
       */
      protected SetAddons(java.lang.String org, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SetAddonsRequest content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
        this.org = com.google.api.client.util.Preconditions.checkNotNull(org, "Required parameter org must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ORG_PATTERN.matcher(org).matches(),
              "Parameter org must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public SetAddons set$Xgafv(java.lang.String $Xgafv) {
        return (SetAddons) super.set$Xgafv($Xgafv);
      }

      @Override
      public SetAddons setAccessToken(java.lang.String accessToken) {
        return (SetAddons) super.setAccessToken(accessToken);
      }

      @Override
      public SetAddons setAlt(java.lang.String alt) {
        return (SetAddons) super.setAlt(alt);
      }

      @Override
      public SetAddons setCallback(java.lang.String callback) {
        return (SetAddons) super.setCallback(callback);
      }

      @Override
      public SetAddons setFields(java.lang.String fields) {
        return (SetAddons) super.setFields(fields);
      }

      @Override
      public SetAddons setKey(java.lang.String key) {
        return (SetAddons) super.setKey(key);
      }

      @Override
      public SetAddons setOauthToken(java.lang.String oauthToken) {
        return (SetAddons) super.setOauthToken(oauthToken);
      }

      @Override
      public SetAddons setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetAddons) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetAddons setQuotaUser(java.lang.String quotaUser) {
        return (SetAddons) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetAddons setUploadType(java.lang.String uploadType) {
        return (SetAddons) super.setUploadType(uploadType);
      }

      @Override
      public SetAddons setUploadProtocol(java.lang.String uploadProtocol) {
        return (SetAddons) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String org;

      /** Required. Name of the organization. Use the following structure in your request:
     `organizations/{org}`
       */
      public java.lang.String getOrg() {
        return org;
      }

      /**
       * Required. Name of the organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      public SetAddons setOrg(java.lang.String org) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(ORG_PATTERN.matcher(org).matches(),
              "Parameter org must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.org = org;
        return this;
      }

      @Override
      public SetAddons set(String parameterName, Object value) {
        return (SetAddons) super.set(parameterName, value);
      }
    }
    /**
     * Sets the permissions required to allow the Synchronizer to download environment data from the
     * control plane. You must call this API to enable proper functioning of hybrid. Pass the ETag when
     * calling `setSyncAuthorization` to ensure that you are updating the correct version. To get an
     * ETag, call [getSyncAuthorization](getSyncAuthorization). If you don't pass the ETag in the call
     * to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For
     * more information, see [Configure the
     * Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**:
     * Available to Apigee hybrid only.
     *
     * Create a request for the method "organizations.setSyncAuthorization".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link SetSyncAuthorization#execute()} method to invoke the remote
     * operation.
     *
     * @param name Required. Name of the Apigee organization. Use the following structure in your request:
     *        `organizations/{org}`
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization}
     * @return the request
     */
    public SetSyncAuthorization setSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization content) throws java.io.IOException {
      SetSyncAuthorization result = new SetSyncAuthorization(name, content);
      initialize(result);
      return result;
    }

    public class SetSyncAuthorization extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization> {

      private static final String REST_PATH = "v1/{+name}:setSyncAuthorization";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Sets the permissions required to allow the Synchronizer to download environment data from the
       * control plane. You must call this API to enable proper functioning of hybrid. Pass the ETag
       * when calling `setSyncAuthorization` to ensure that you are updating the correct version. To get
       * an ETag, call [getSyncAuthorization](getSyncAuthorization). If you don't pass the ETag in the
       * call to `setSyncAuthorization`, then the existing authorization is overwritten
       * indiscriminately. For more information, see [Configure the
       * Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access).
       * **Note**: Available to Apigee hybrid only.
       *
       * Create a request for the method "organizations.setSyncAuthorization".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link SetSyncAuthorization#execute()} method to invoke the remote
       * operation. <p> {@link SetSyncAuthorization#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. Name of the Apigee organization. Use the following structure in your request:
     *        `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization}
       * @since 1.13
       */
      protected SetSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public SetSyncAuthorization set$Xgafv(java.lang.String $Xgafv) {
        return (SetSyncAuthorization) super.set$Xgafv($Xgafv);
      }

      @Override
      public SetSyncAuthorization setAccessToken(java.lang.String accessToken) {
        return (SetSyncAuthorization) super.setAccessToken(accessToken);
      }

      @Override
      public SetSyncAuthorization setAlt(java.lang.String alt) {
        return (SetSyncAuthorization) super.setAlt(alt);
      }

      @Override
      public SetSyncAuthorization setCallback(java.lang.String callback) {
        return (SetSyncAuthorization) super.setCallback(callback);
      }

      @Override
      public SetSyncAuthorization setFields(java.lang.String fields) {
        return (SetSyncAuthorization) super.setFields(fields);
      }

      @Override
      public SetSyncAuthorization setKey(java.lang.String key) {
        return (SetSyncAuthorization) super.setKey(key);
      }

      @Override
      public SetSyncAuthorization setOauthToken(java.lang.String oauthToken) {
        return (SetSyncAuthorization) super.setOauthToken(oauthToken);
      }

      @Override
      public SetSyncAuthorization setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetSyncAuthorization) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetSyncAuthorization setQuotaUser(java.lang.String quotaUser) {
        return (SetSyncAuthorization) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetSyncAuthorization setUploadType(java.lang.String uploadType) {
        return (SetSyncAuthorization) super.setUploadType(uploadType);
      }

      @Override
      public SetSyncAuthorization setUploadProtocol(java.lang.String uploadProtocol) {
        return (SetSyncAuthorization) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Name of the Apigee organization. Use the following structure in your request:
     `organizations/{org}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      public SetSyncAuthorization setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public SetSyncAuthorization set(String parameterName, Object value) {
        return (SetSyncAuthorization) super.set(parameterName, value);
      }
    }
    /**
     * Updates the properties for an Apigee organization. No other fields in the organization profile
     * will be updated.
     *
     * Create a request for the method "organizations.update".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param name Required. Apigee organization name in the following format: `organizations/{org}`
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
     * @return the request
     */
    public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) throws java.io.IOException {
      Update result = new Update(name, content);
      initialize(result);
      return result;
    }

    public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Updates the properties for an Apigee organization. No other fields in the organization profile
       * will be updated.
       *
       * Create a request for the method "organizations.update".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Apigee organization name in the following format: `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
       * @since 1.13
       */
      protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) {
        super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Apigee organization name in the following format: `organizations/{org}` */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Apigee organization name in the following format: `organizations/{org}`
       */
      public java.lang.String getName() {
        return name;
      }

      /** Required. Apigee organization name in the following format: `organizations/{org}` */
      public Update setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }
    /**
     * Updates the permissions required to allow Apigee runtime-plane components access to the control
     * plane. Currently, the permissions required are to: 1. Allow runtime components to publish
     * analytics data to the control plane. **Note**: Available to Apigee hybrid only.
     *
     * Create a request for the method "organizations.updateControlPlaneAccess".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link UpdateControlPlaneAccess#execute()} method to invoke the remote
     * operation.
     *
     * @param name Identifier. The resource name of the ControlPlaneAccess. Format:
     *        "organizations/{org}/controlPlaneAccess"
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ControlPlaneAccess}
     * @return the request
     */
    public UpdateControlPlaneAccess updateControlPlaneAccess(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ControlPlaneAccess content) throws java.io.IOException {
      UpdateControlPlaneAccess result = new UpdateControlPlaneAccess(name, content);
      initialize(result);
      return result;
    }

    public class UpdateControlPlaneAccess extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+/controlPlaneAccess$");

      /**
       * Updates the permissions required to allow Apigee runtime-plane components access to the control
       * plane. Currently, the permissions required are to: 1. Allow runtime components to publish
       * analytics data to the control plane. **Note**: Available to Apigee hybrid only.
       *
       * Create a request for the method "organizations.updateControlPlaneAccess".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link UpdateControlPlaneAccess#execute()} method to invoke the remote
       * operation. <p> {@link UpdateControlPlaneAccess#initialize(com.google.api.client.googleapis.serv
       * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Identifier. The resource name of the ControlPlaneAccess. Format:
     *        "organizations/{org}/controlPlaneAccess"
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ControlPlaneAccess}
       * @since 1.13
       */
      protected UpdateControlPlaneAccess(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ControlPlaneAccess content) {
        super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/controlPlaneAccess$");
        }
      }

      @Override
      public UpdateControlPlaneAccess set$Xgafv(java.lang.String $Xgafv) {
        return (UpdateControlPlaneAccess) super.set$Xgafv($Xgafv);
      }

      @Override
      public UpdateControlPlaneAccess setAccessToken(java.lang.String accessToken) {
        return (UpdateControlPlaneAccess) super.setAccessToken(accessToken);
      }

      @Override
      public UpdateControlPlaneAccess setAlt(java.lang.String alt) {
        return (UpdateControlPlaneAccess) super.setAlt(alt);
      }

      @Override
      public UpdateControlPlaneAccess setCallback(java.lang.String callback) {
        return (UpdateControlPlaneAccess) super.setCallback(callback);
      }

      @Override
      public UpdateControlPlaneAccess setFields(java.lang.String fields) {
        return (UpdateControlPlaneAccess) super.setFields(fields);
      }

      @Override
      public UpdateControlPlaneAccess setKey(java.lang.String key) {
        return (UpdateControlPlaneAccess) super.setKey(key);
      }

      @Override
      public UpdateControlPlaneAccess setOauthToken(java.lang.String oauthToken) {
        return (UpdateControlPlaneAccess) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateControlPlaneAccess setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateControlPlaneAccess) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateControlPlaneAccess setQuotaUser(java.lang.String quotaUser) {
        return (UpdateControlPlaneAccess) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateControlPlaneAccess setUploadType(java.lang.String uploadType) {
        return (UpdateControlPlaneAccess) super.setUploadType(uploadType);
      }

      @Override
      public UpdateControlPlaneAccess setUploadProtocol(java.lang.String uploadProtocol) {
        return (UpdateControlPlaneAccess) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Identifier. The resource name of the ControlPlaneAccess. Format:
       * "organizations/{org}/controlPlaneAccess"
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Identifier. The resource name of the ControlPlaneAccess. Format:
     "organizations/{org}/controlPlaneAccess"
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Identifier. The resource name of the ControlPlaneAccess. Format:
       * "organizations/{org}/controlPlaneAccess"
       */
      public UpdateControlPlaneAccess setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/controlPlaneAccess$");
        }
        this.name = name;
        return this;
      }

      /**
       * List of fields to be updated. Fields that can be updated: synchronizer_identities,
       * publisher_identities.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** List of fields to be updated. Fields that can be updated: synchronizer_identities,
     publisher_identities.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * List of fields to be updated. Fields that can be updated: synchronizer_identities,
       * publisher_identities.
       */
      public UpdateControlPlaneAccess setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public UpdateControlPlaneAccess set(String parameterName, Object value) {
        return (UpdateControlPlaneAccess) super.set(parameterName, value);
      }
    }
    /**
     * UpdateSecuritySettings updates the current security settings for API Security.
     *
     * Create a request for the method "organizations.updateSecuritySettings".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link UpdateSecuritySettings#execute()} method to invoke the remote
     * operation.
     *
     * @param name Identifier. Full resource name is always `organizations/{org}/securitySettings`.
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecuritySettings}
     * @return the request
     */
    public UpdateSecuritySettings updateSecuritySettings(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecuritySettings content) throws java.io.IOException {
      UpdateSecuritySettings result = new UpdateSecuritySettings(name, content);
      initialize(result);
      return result;
    }

    public class UpdateSecuritySettings extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecuritySettings> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+/securitySettings$");

      /**
       * UpdateSecuritySettings updates the current security settings for API Security.
       *
       * Create a request for the method "organizations.updateSecuritySettings".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link UpdateSecuritySettings#execute()} method to invoke the remote
       * operation. <p> {@link UpdateSecuritySettings#initialize(com.google.api.client.googleapis.servic
       * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Identifier. Full resource name is always `organizations/{org}/securitySettings`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecuritySettings}
       * @since 1.13
       */
      protected UpdateSecuritySettings(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecuritySettings content) {
        super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecuritySettings.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/securitySettings$");
        }
      }

      @Override
      public UpdateSecuritySettings set$Xgafv(java.lang.String $Xgafv) {
        return (UpdateSecuritySettings) super.set$Xgafv($Xgafv);
      }

      @Override
      public UpdateSecuritySettings setAccessToken(java.lang.String accessToken) {
        return (UpdateSecuritySettings) super.setAccessToken(accessToken);
      }

      @Override
      public UpdateSecuritySettings setAlt(java.lang.String alt) {
        return (UpdateSecuritySettings) super.setAlt(alt);
      }

      @Override
      public UpdateSecuritySettings setCallback(java.lang.String callback) {
        return (UpdateSecuritySettings) super.setCallback(callback);
      }

      @Override
      public UpdateSecuritySettings setFields(java.lang.String fields) {
        return (UpdateSecuritySettings) super.setFields(fields);
      }

      @Override
      public UpdateSecuritySettings setKey(java.lang.String key) {
        return (UpdateSecuritySettings) super.setKey(key);
      }

      @Override
      public UpdateSecuritySettings setOauthToken(java.lang.String oauthToken) {
        return (UpdateSecuritySettings) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateSecuritySettings setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateSecuritySettings) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateSecuritySettings setQuotaUser(java.lang.String quotaUser) {
        return (UpdateSecuritySettings) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateSecuritySettings setUploadType(java.lang.String uploadType) {
        return (UpdateSecuritySettings) super.setUploadType(uploadType);
      }

      @Override
      public UpdateSecuritySettings setUploadProtocol(java.lang.String uploadProtocol) {
        return (UpdateSecuritySettings) super.setUploadProtocol(uploadProtocol);
      }

      /** Identifier. Full resource name is always `organizations/{org}/securitySettings`. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Identifier. Full resource name is always `organizations/{org}/securitySettings`.
       */
      public java.lang.String getName() {
        return name;
      }

      /** Identifier. Full resource name is always `organizations/{org}/securitySettings`. */
      public UpdateSecuritySettings setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+/securitySettings$");
        }
        this.name = name;
        return this;
      }

      /**
       * Optional. The list of fields to update. Allowed fields are: -
       * ml_retraining_feedback_enabled
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Optional. The list of fields to update. Allowed fields are: - ml_retraining_feedback_enabled
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Optional. The list of fields to update. Allowed fields are: -
       * ml_retraining_feedback_enabled
       */
      public UpdateSecuritySettings setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public UpdateSecuritySettings set(String parameterName, Object value) {
        return (UpdateSecuritySettings) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Analytics collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Analytics.List request = apigee.analytics().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Analytics analytics() {
      return new Analytics();
    }

    /**
     * The "analytics" collection of methods.
     */
    public class Analytics {

      /**
       * An accessor for creating requests from the Datastores collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Datastores.List request = apigee.datastores().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Datastores datastores() {
        return new Datastores();
      }

      /**
       * The "datastores" collection of methods.
       */
      public class Datastores {

        /**
         * Create a Datastore for an org
         *
         * Create a request for the method "datastores.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent organization name. Must be of the form `organizations/{org}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore> {

          private static final String REST_PATH = "v1/{+parent}/analytics/datastores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+$");

          /**
           * Create a Datastore for an org
           *
           * Create a request for the method "datastores.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent organization name. Must be of the form `organizations/{org}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent organization name. Must be of the form `organizations/{org}`. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent organization name. Must be of the form `organizations/{org}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent organization name. Must be of the form `organizations/{org}`. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a Datastore from an org.
         *
         * Create a request for the method "datastores.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the Datastore to be deleted. Must be of the form
         *        `organizations/{org}/analytics/datastores/{datastoreId}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/analytics/datastores/[^/]+$");

          /**
           * Delete a Datastore from an org.
           *
           * Create a request for the method "datastores.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the Datastore to be deleted. Must be of the form
         *        `organizations/{org}/analytics/datastores/{datastoreId}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/analytics/datastores/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource name of the Datastore to be deleted. Must be of the form
           * `organizations/{org}/analytics/datastores/{datastoreId}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the Datastore to be deleted. Must be of the form
         `organizations/{org}/analytics/datastores/{datastoreId}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource name of the Datastore to be deleted. Must be of the form
           * `organizations/{org}/analytics/datastores/{datastoreId}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/analytics/datastores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Get a Datastore
         *
         * Create a request for the method "datastores.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the Datastore to be get. Must be of the form
         *        `organizations/{org}/analytics/datastores/{datastoreId}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/analytics/datastores/[^/]+$");

          /**
           * Get a Datastore
           *
           * Create a request for the method "datastores.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name of the Datastore to be get. Must be of the form
         *        `organizations/{org}/analytics/datastores/{datastoreId}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/analytics/datastores/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource name of the Datastore to be get. Must be of the form
           * `organizations/{org}/analytics/datastores/{datastoreId}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the Datastore to be get. Must be of the form
         `organizations/{org}/analytics/datastores/{datastoreId}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource name of the Datastore to be get. Must be of the form
           * `organizations/{org}/analytics/datastores/{datastoreId}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/analytics/datastores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List Datastores
         *
         * Create a request for the method "datastores.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent organization name. Must be of the form `organizations/{org}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDatastoresResponse> {

          private static final String REST_PATH = "v1/{+parent}/analytics/datastores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+$");

          /**
           * List Datastores
           *
           * Create a request for the method "datastores.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent organization name. Must be of the form `organizations/{org}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDatastoresResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent organization name. Must be of the form `organizations/{org}`. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent organization name. Must be of the form `organizations/{org}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent organization name. Must be of the form `organizations/{org}`. */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. TargetType is used to fetch all Datastores that match the type */
          @com.google.api.client.util.Key
          private java.lang.String targetType;

          /** Optional. TargetType is used to fetch all Datastores that match the type
           */
          public java.lang.String getTargetType() {
            return targetType;
          }

          /** Optional. TargetType is used to fetch all Datastores that match the type */
          public List setTargetType(java.lang.String targetType) {
            this.targetType = targetType;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Test if Datastore configuration is correct. This includes checking if credentials provided by
         * customer have required permissions in target destination storage
         *
         * Create a request for the method "datastores.test".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Test#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent organization name Must be of the form `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore}
         * @return the request
         */
        public Test test(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore content) throws java.io.IOException {
          Test result = new Test(parent, content);
          initialize(result);
          return result;
        }

        public class Test extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TestDatastoreResponse> {

          private static final String REST_PATH = "v1/{+parent}/analytics/datastores:test";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+$");

          /**
           * Test if Datastore configuration is correct. This includes checking if credentials provided by
           * customer have required permissions in target destination storage
           *
           * Create a request for the method "datastores.test".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Test#execute()} method to invoke the remote operation. <p> {@link
           * Test#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent organization name Must be of the form `organizations/{org}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore}
           * @since 1.13
           */
          protected Test(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TestDatastoreResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
          }

          @Override
          public Test set$Xgafv(java.lang.String $Xgafv) {
            return (Test) super.set$Xgafv($Xgafv);
          }

          @Override
          public Test setAccessToken(java.lang.String accessToken) {
            return (Test) super.setAccessToken(accessToken);
          }

          @Override
          public Test setAlt(java.lang.String alt) {
            return (Test) super.setAlt(alt);
          }

          @Override
          public Test setCallback(java.lang.String callback) {
            return (Test) super.setCallback(callback);
          }

          @Override
          public Test setFields(java.lang.String fields) {
            return (Test) super.setFields(fields);
          }

          @Override
          public Test setKey(java.lang.String key) {
            return (Test) super.setKey(key);
          }

          @Override
          public Test setOauthToken(java.lang.String oauthToken) {
            return (Test) super.setOauthToken(oauthToken);
          }

          @Override
          public Test setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Test) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Test setQuotaUser(java.lang.String quotaUser) {
            return (Test) super.setQuotaUser(quotaUser);
          }

          @Override
          public Test setUploadType(java.lang.String uploadType) {
            return (Test) super.setUploadType(uploadType);
          }

          @Override
          public Test setUploadProtocol(java.lang.String uploadProtocol) {
            return (Test) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The parent organization name Must be of the form `organizations/{org}` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent organization name Must be of the form `organizations/{org}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The parent organization name Must be of the form `organizations/{org}` */
          public Test setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Test set(String parameterName, Object value) {
            return (Test) super.set(parameterName, value);
          }
        }
        /**
         * Update a Datastore
         *
         * Create a request for the method "datastores.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. The resource name of datastore to be updated. Must be of the form
         *        `organizations/{org}/analytics/datastores/{datastoreId}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/analytics/datastores/[^/]+$");

          /**
           * Update a Datastore
           *
           * Create a request for the method "datastores.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The resource name of datastore to be updated. Must be of the form
         *        `organizations/{org}/analytics/datastores/{datastoreId}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Datastore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/analytics/datastores/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The resource name of datastore to be updated. Must be of the form
           * `organizations/{org}/analytics/datastores/{datastoreId}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The resource name of datastore to be updated. Must be of the form
         `organizations/{org}/analytics/datastores/{datastoreId}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The resource name of datastore to be updated. Must be of the form
           * `organizations/{org}/analytics/datastores/{datastoreId}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/analytics/datastores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Apiproducts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Apiproducts.List request = apigee.apiproducts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Apiproducts apiproducts() {
      return new Apiproducts();
    }

    /**
     * The "apiproducts" collection of methods.
     */
    public class Apiproducts {

      /**
       * Updates or creates API product attributes. This API **replaces** the current list of attributes
       * with the attributes specified in the request body. In this way, you can update existing
       * attributes, add new attributes, or delete existing attributes by omitting them from the request
       * body. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers,
       * and API products) are cached for 180 seconds (current default). Any custom attributes associated
       * with entities also get cached for at least 180 seconds after entity is accessed during runtime.
       * In this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access
       * token in less than 180 seconds.
       *
       * Create a request for the method "apiproducts.attributes".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link AttributesRequest#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the API product. Use the following structure in your request:
       *        `organizations/{org}/apiproducts/{apiproduct}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
       * @return the request
       */
      public AttributesRequest attributes(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) throws java.io.IOException {
        AttributesRequest result = new AttributesRequest(name, content);
        initialize(result);
        return result;
      }

      public class AttributesRequest extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

        private static final String REST_PATH = "v1/{+name}/attributes";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Updates or creates API product attributes. This API **replaces** the current list of attributes
         * with the attributes specified in the request body. In this way, you can update existing
         * attributes, add new attributes, or delete existing attributes by omitting them from the request
         * body. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps,
         * developers, and API products) are cached for 180 seconds (current default). Any custom
         * attributes associated with entities also get cached for at least 180 seconds after entity is
         * accessed during runtime. In this case, the `ExpiresIn` element on the OAuthV2 policy won't be
         * able to expire an access token in less than 180 seconds.
         *
         * Create a request for the method "apiproducts.attributes".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link AttributesRequest#execute()} method to invoke the remote operation.
         * <p> {@link AttributesRequest#initialize(com.google.api.client.googleapis.services.AbstractGoogl
         * eClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. Name of the API product. Use the following structure in your request:
       *        `organizations/{org}/apiproducts/{apiproduct}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
         * @since 1.13
         */
        protected AttributesRequest(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public AttributesRequest set$Xgafv(java.lang.String $Xgafv) {
          return (AttributesRequest) super.set$Xgafv($Xgafv);
        }

        @Override
        public AttributesRequest setAccessToken(java.lang.String accessToken) {
          return (AttributesRequest) super.setAccessToken(accessToken);
        }

        @Override
        public AttributesRequest setAlt(java.lang.String alt) {
          return (AttributesRequest) super.setAlt(alt);
        }

        @Override
        public AttributesRequest setCallback(java.lang.String callback) {
          return (AttributesRequest) super.setCallback(callback);
        }

        @Override
        public AttributesRequest setFields(java.lang.String fields) {
          return (AttributesRequest) super.setFields(fields);
        }

        @Override
        public AttributesRequest setKey(java.lang.String key) {
          return (AttributesRequest) super.setKey(key);
        }

        @Override
        public AttributesRequest setOauthToken(java.lang.String oauthToken) {
          return (AttributesRequest) super.setOauthToken(oauthToken);
        }

        @Override
        public AttributesRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (AttributesRequest) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public AttributesRequest setQuotaUser(java.lang.String quotaUser) {
          return (AttributesRequest) super.setQuotaUser(quotaUser);
        }

        @Override
        public AttributesRequest setUploadType(java.lang.String uploadType) {
          return (AttributesRequest) super.setUploadType(uploadType);
        }

        @Override
        public AttributesRequest setUploadProtocol(java.lang.String uploadProtocol) {
          return (AttributesRequest) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the API product. Use the following structure in your request:
         * `organizations/{org}/apiproducts/{apiproduct}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the API product. Use the following structure in your request:
       `organizations/{org}/apiproducts/{apiproduct}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the API product. Use the following structure in your request:
         * `organizations/{org}/apiproducts/{apiproduct}`
         */
        public AttributesRequest setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public AttributesRequest set(String parameterName, Object value) {
          return (AttributesRequest) super.set(parameterName, value);
        }
      }
      /**
       * Creates an API product in an organization. You create API products after you have proxied backend
       * services using API proxies. An API product is a collection of API resources combined with quota
       * settings and metadata that you can use to deliver customized and productized API bundles to your
       * developer community. This metadata can include: - Scope - Environments - API proxies - Extensible
       * profile API products enable you repackage APIs on the fly, without having to do any additional
       * coding or configuration. Apigee recommends that you start with a simple API product including
       * only required elements. You then provision credentials to apps to enable them to start testing
       * your APIs. After you have authentication and authorization working against a simple API product,
       * you can iterate to create finer-grained API products, defining different sets of API resources
       * for each API product. **WARNING:** - If you don't specify an API proxy in the request body, *any*
       * app associated with the product can make calls to *any* API in your entire organization. - If you
       * don't specify an environment in the request body, the product allows access to all environments.
       * For more information, see What is an API product?
       *
       * Create a request for the method "apiproducts.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in which the API product will be created. Use the following
       *        structure in your request: `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+parent}/apiproducts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an API product in an organization. You create API products after you have proxied
         * backend services using API proxies. An API product is a collection of API resources combined
         * with quota settings and metadata that you can use to deliver customized and productized API
         * bundles to your developer community. This metadata can include: - Scope - Environments - API
         * proxies - Extensible profile API products enable you repackage APIs on the fly, without having
         * to do any additional coding or configuration. Apigee recommends that you start with a simple
         * API product including only required elements. You then provision credentials to apps to enable
         * them to start testing your APIs. After you have authentication and authorization working
         * against a simple API product, you can iterate to create finer-grained API products, defining
         * different sets of API resources for each API product. **WARNING:** - If you don't specify an
         * API proxy in the request body, *any* app associated with the product can make calls to *any*
         * API in your entire organization. - If you don't specify an environment in the request body, the
         * product allows access to all environments. For more information, see What is an API product?
         *
         * Create a request for the method "apiproducts.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in which the API product will be created. Use the following
       *        structure in your request: `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization in which the API product will be created. Use the
         * following structure in your request: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in which the API product will be created. Use the following
       structure in your request: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization in which the API product will be created. Use the
         * following structure in your request: `organizations/{org}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an API product from an organization. Deleting an API product causes app requests to the
       * resource URIs defined in the API product to fail. Ensure that you create a new API product to
       * serve existing apps, unless your intention is to disable access to the resources defined in the
       * API product. The API product name required in the request URL is the internal name of the
       * product, not the display name. While they may be the same, it depends on whether the API product
       * was created via the UI or the API. View the list of API products to verify the internal name.
       *
       * Create a request for the method "apiproducts.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the API product. Use the following structure in your request:
       *        `organizations/{org}/apiproducts/{apiproduct}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Deletes an API product from an organization. Deleting an API product causes app requests to the
         * resource URIs defined in the API product to fail. Ensure that you create a new API product to
         * serve existing apps, unless your intention is to disable access to the resources defined in the
         * API product. The API product name required in the request URL is the internal name of the
         * product, not the display name. While they may be the same, it depends on whether the API
         * product was created via the UI or the API. View the list of API products to verify the internal
         * name.
         *
         * Create a request for the method "apiproducts.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the API product. Use the following structure in your request:
       *        `organizations/{org}/apiproducts/{apiproduct}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the API product. Use the following structure in your request:
         * `organizations/{org}/apiproducts/{apiproduct}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the API product. Use the following structure in your request:
       `organizations/{org}/apiproducts/{apiproduct}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the API product. Use the following structure in your request:
         * `organizations/{org}/apiproducts/{apiproduct}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets configuration details for an API product. The API product name required in the request URL
       * is the internal name of the product, not the display name. While they may be the same, it depends
       * on whether the API product was created via the UI or the API. View the list of API products to
       * verify the internal name.
       *
       * Create a request for the method "apiproducts.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the API product. Use the following structure in your request:
       *        `organizations/{org}/apiproducts/{apiproduct}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Gets configuration details for an API product. The API product name required in the request URL
         * is the internal name of the product, not the display name. While they may be the same, it
         * depends on whether the API product was created via the UI or the API. View the list of API
         * products to verify the internal name.
         *
         * Create a request for the method "apiproducts.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the API product. Use the following structure in your request:
       *        `organizations/{org}/apiproducts/{apiproduct}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the API product. Use the following structure in your request:
         * `organizations/{org}/apiproducts/{apiproduct}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the API product. Use the following structure in your request:
       `organizations/{org}/apiproducts/{apiproduct}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the API product. Use the following structure in your request:
         * `organizations/{org}/apiproducts/{apiproduct}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all API product names for an organization. Filter the list by passing an `attributename`
       * and `attibutevalue`. The maximum number of API products returned is 1000. You can paginate the
       * list of API products returned using the `startKey` and `count` query parameters.
       *
       * Create a request for the method "apiproducts.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization. Use the following structure in your request:
       *        `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProductsResponse> {

        private static final String REST_PATH = "v1/{+parent}/apiproducts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all API product names for an organization. Filter the list by passing an `attributename`
         * and `attibutevalue`. The maximum number of API products returned is 1000. You can paginate the
         * list of API products returned using the `startKey` and `count` query parameters.
         *
         * Create a request for the method "apiproducts.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization. Use the following structure in your request:
       *        `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProductsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization. Use the following structure in your request:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Name of the attribute used to filter the search. */
        @com.google.api.client.util.Key
        private java.lang.String attributename;

        /** Name of the attribute used to filter the search.
         */
        public java.lang.String getAttributename() {
          return attributename;
        }

        /** Name of the attribute used to filter the search. */
        public List setAttributename(java.lang.String attributename) {
          this.attributename = attributename;
          return this;
        }

        /** Value of the attribute used to filter the search. */
        @com.google.api.client.util.Key
        private java.lang.String attributevalue;

        /** Value of the attribute used to filter the search.
         */
        public java.lang.String getAttributevalue() {
          return attributevalue;
        }

        /** Value of the attribute used to filter the search. */
        public List setAttributevalue(java.lang.String attributevalue) {
          this.attributevalue = attributevalue;
          return this;
        }

        /**
         * Enter the number of API products you want returned in the API call. The limit is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Long count;

        /** Enter the number of API products you want returned in the API call. The limit is 1000.
         */
        public java.lang.Long getCount() {
          return count;
        }

        /**
         * Enter the number of API products you want returned in the API call. The limit is 1000.
         */
        public List setCount(java.lang.Long count) {
          this.count = count;
          return this;
        }

        /**
         * Flag that specifies whether to expand the results. Set to `true` to get expanded details
         * about each API.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Flag that specifies whether to expand the results. Set to `true` to get expanded details about each
       API.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /**
         * Flag that specifies whether to expand the results. Set to `true` to get expanded details
         * about each API.
         */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        /**
         * Gets a list of API products starting with a specific API product in the list. For
         * example, if you're returning 50 API products at a time (using the `count` query
         * parameter), you can view products 50-99 by entering the name of the 50th API product in
         * the first API (without using `startKey`). Product name is case sensitive.
         */
        @com.google.api.client.util.Key
        private java.lang.String startKey;

        /** Gets a list of API products starting with a specific API product in the list. For example, if
       you're returning 50 API products at a time (using the `count` query parameter), you can view
       products 50-99 by entering the name of the 50th API product in the first API (without using
       `startKey`). Product name is case sensitive.
         */
        public java.lang.String getStartKey() {
          return startKey;
        }

        /**
         * Gets a list of API products starting with a specific API product in the list. For
         * example, if you're returning 50 API products at a time (using the `count` query
         * parameter), you can view products 50-99 by entering the name of the 50th API product in
         * the first API (without using `startKey`). Product name is case sensitive.
         */
        public List setStartKey(java.lang.String startKey) {
          this.startKey = startKey;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing API product. You must include all required values, whether or not you are
       * updating them, as well as any optional values that you are updating. The API product name
       * required in the request URL is the internal name of the product, not the display name. While they
       * may be the same, it depends on whether the API product was created via UI or API. View the list
       * of API products to identify their internal names.
       *
       * Create a request for the method "apiproducts.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the API product. Use the following structure in your request:
       *        `organizations/{org}/apiproducts/{apiproduct}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Updates an existing API product. You must include all required values, whether or not you are
         * updating them, as well as any optional values that you are updating. The API product name
         * required in the request URL is the internal name of the product, not the display name. While
         * they may be the same, it depends on whether the API product was created via UI or API. View the
         * list of API products to identify their internal names.
         *
         * Create a request for the method "apiproducts.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the API product. Use the following structure in your request:
       *        `organizations/{org}/apiproducts/{apiproduct}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the API product. Use the following structure in your request:
         * `organizations/{org}/apiproducts/{apiproduct}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the API product. Use the following structure in your request:
       `organizations/{org}/apiproducts/{apiproduct}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the API product. Use the following structure in your request:
         * `organizations/{org}/apiproducts/{apiproduct}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Attributes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Attributes.List request = apigee.attributes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Attributes attributes() {
        return new Attributes();
      }

      /**
       * The "attributes" collection of methods.
       */
      public class Attributes {

        /**
         * Deletes an API product attribute.
         *
         * Create a request for the method "attributes.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the API product attribute. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");

          /**
           * Deletes an API product attribute.
           *
           * Create a request for the method "attributes.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the API product attribute. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API product attribute. Use the following structure in your
           * request: `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the API product attribute. Use the following structure in your request:
         `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the API product attribute. Use the following structure in your
           * request: `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the value of an API product attribute.
         *
         * Create a request for the method "attributes.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the API product attribute. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");

          /**
           * Gets the value of an API product attribute.
           *
           * Create a request for the method "attributes.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the API product attribute. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API product attribute. Use the following structure in your
           * request: `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the API product attribute. Use the following structure in your request:
         `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the API product attribute. Use the following structure in your
           * request: `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all API product attributes.
         *
         * Create a request for the method "attributes.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the API product. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

          private static final String REST_PATH = "v1/{+parent}/attributes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

          /**
           * Lists all API product attributes.
           *
           * Create a request for the method "attributes.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the API product. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API product. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the API product. Use the following structure in your request:
         `organizations/{org}/apiproducts/{apiproduct}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the API product. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the value of an API product attribute. **Note**: OAuth access tokens and Key Management
         * Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current
         * default). Any custom attributes associated with entities also get cached for at least 180 seconds
         * after entity is accessed during runtime. In this case, the `ExpiresIn` element on the OAuthV2
         * policy won't be able to expire an access token in less than 180 seconds.
         *
         * Create a request for the method "attributes.updateApiProductAttribute".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateApiProductAttribute#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Name of the API product. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
         * @return the request
         */
        public UpdateApiProductAttribute updateApiProductAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) throws java.io.IOException {
          UpdateApiProductAttribute result = new UpdateApiProductAttribute(name, content);
          initialize(result);
          return result;
        }

        public class UpdateApiProductAttribute extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");

          /**
           * Updates the value of an API product attribute. **Note**: OAuth access tokens and Key Management
           * Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current
           * default). Any custom attributes associated with entities also get cached for at least 180
           * seconds after entity is accessed during runtime. In this case, the `ExpiresIn` element on the
           * OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
           *
           * Create a request for the method "attributes.updateApiProductAttribute".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateApiProductAttribute#execute()} method to invoke the remote
           * operation. <p> {@link UpdateApiProductAttribute#initialize(com.google.api.client.googleapis.ser
           * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param name Required. Name of the API product. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
           * @since 1.13
           */
          protected UpdateApiProductAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public UpdateApiProductAttribute set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateApiProductAttribute) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateApiProductAttribute setAccessToken(java.lang.String accessToken) {
            return (UpdateApiProductAttribute) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateApiProductAttribute setAlt(java.lang.String alt) {
            return (UpdateApiProductAttribute) super.setAlt(alt);
          }

          @Override
          public UpdateApiProductAttribute setCallback(java.lang.String callback) {
            return (UpdateApiProductAttribute) super.setCallback(callback);
          }

          @Override
          public UpdateApiProductAttribute setFields(java.lang.String fields) {
            return (UpdateApiProductAttribute) super.setFields(fields);
          }

          @Override
          public UpdateApiProductAttribute setKey(java.lang.String key) {
            return (UpdateApiProductAttribute) super.setKey(key);
          }

          @Override
          public UpdateApiProductAttribute setOauthToken(java.lang.String oauthToken) {
            return (UpdateApiProductAttribute) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateApiProductAttribute setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateApiProductAttribute) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateApiProductAttribute setQuotaUser(java.lang.String quotaUser) {
            return (UpdateApiProductAttribute) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateApiProductAttribute setUploadType(java.lang.String uploadType) {
            return (UpdateApiProductAttribute) super.setUploadType(uploadType);
          }

          @Override
          public UpdateApiProductAttribute setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateApiProductAttribute) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API product. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the API product. Use the following structure in your request:
         `organizations/{org}/apiproducts/{apiproduct}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the API product. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}`
           */
          public UpdateApiProductAttribute setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public UpdateApiProductAttribute set(String parameterName, Object value) {
            return (UpdateApiProductAttribute) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Rateplans collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Rateplans.List request = apigee.rateplans().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Rateplans rateplans() {
        return new Rateplans();
      }

      /**
       * The "rateplans" collection of methods.
       */
      public class Rateplans {

        /**
         * Create a rate plan that is associated with an API product in an organization. Using rate plans,
         * API product owners can monetize their API products by configuring one or more of the following: -
         * Billing frequency - Initial setup fees for using an API product - Payment funding model (postpaid
         * only) - Fixed recurring or consumption-based charges for using an API product - Revenue sharing
         * with developer partners An API product can have multiple rate plans associated with it but *only
         * one* rate plan can be active at any point of time. **Note: From the developer's perspective, they
         * purchase API products not rate plans.
         *
         * Create a request for the method "rateplans.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the API product that is associated with the rate plan. Use the following structure
         *        in your request: `organizations/{org}/apiproducts/{apiproduct}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan> {

          private static final String REST_PATH = "v1/{+parent}/rateplans";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

          /**
           * Create a rate plan that is associated with an API product in an organization. Using rate plans,
           * API product owners can monetize their API products by configuring one or more of the following:
           * - Billing frequency - Initial setup fees for using an API product - Payment funding model
           * (postpaid only) - Fixed recurring or consumption-based charges for using an API product -
           * Revenue sharing with developer partners An API product can have multiple rate plans associated
           * with it but *only one* rate plan can be active at any point of time. **Note: From the
           * developer's perspective, they purchase API products not rate plans.
           *
           * Create a request for the method "rateplans.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the API product that is associated with the rate plan. Use the following structure
         *        in your request: `organizations/{org}/apiproducts/{apiproduct}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API product that is associated with the rate plan. Use the
           * following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the API product that is associated with the rate plan. Use the following
         structure in your request: `organizations/{org}/apiproducts/{apiproduct}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the API product that is associated with the rate plan. Use the
           * following structure in your request: `organizations/{org}/apiproducts/{apiproduct}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a rate plan.
         *
         * Create a request for the method "rateplans.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. ID of the rate plan. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$");

          /**
           * Deletes a rate plan.
           *
           * Create a request for the method "rateplans.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. ID of the rate plan. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. ID of the rate plan. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the rate plan. Use the following structure in your request:
         `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the rate plan. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the details of a rate plan.
         *
         * Create a request for the method "rateplans.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the rate plan. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$");

          /**
           * Gets the details of a rate plan.
           *
           * Create a request for the method "rateplans.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the rate plan. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the rate plan. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the rate plan. Use the following structure in your request:
         `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the rate plan. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all the rate plans for an API product.
         *
         * Create a request for the method "rateplans.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the API product. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}` Use `organizations/{org}/apiproducts/-` to
         *        return rate plans for all API products within the organization.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListRatePlansResponse> {

          private static final String REST_PATH = "v1/{+parent}/rateplans";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

          /**
           * Lists all the rate plans for an API product.
           *
           * Create a request for the method "rateplans.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the API product. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}` Use `organizations/{org}/apiproducts/-` to
         *        return rate plans for all API products within the organization.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListRatePlansResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API product. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}` Use `organizations/{org}/apiproducts/-`
           * to return rate plans for all API products within the organization.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the API product. Use the following structure in your request:
         `organizations/{org}/apiproducts/{apiproduct}` Use `organizations/{org}/apiproducts/-` to return
         rate plans for all API products within the organization.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the API product. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}` Use `organizations/{org}/apiproducts/-`
           * to return rate plans for all API products within the organization.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Number of rate plans to return in the API call. Use with the `startKey` parameter to
           * provide more targeted filtering. The maximum limit is 1000. Defaults to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer count;

          /** Number of rate plans to return in the API call. Use with the `startKey` parameter to provide more
         targeted filtering. The maximum limit is 1000. Defaults to 100.
           */
          public java.lang.Integer getCount() {
            return count;
          }

          /**
           * Number of rate plans to return in the API call. Use with the `startKey` parameter to
           * provide more targeted filtering. The maximum limit is 1000. Defaults to 100.
           */
          public List setCount(java.lang.Integer count) {
            this.count = count;
            return this;
          }

          /**
           * Flag that specifies whether to expand the results. Set to `true` to get expanded
           * details about each API. Defaults to `false`.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean expand;

          /** Flag that specifies whether to expand the results. Set to `true` to get expanded details about each
         API. Defaults to `false`.
           */
          public java.lang.Boolean getExpand() {
            return expand;
          }

          /**
           * Flag that specifies whether to expand the results. Set to `true` to get expanded
           * details about each API. Defaults to `false`.
           */
          public List setExpand(java.lang.Boolean expand) {
            this.expand = expand;
            return this;
          }

          /**
           * Name of the attribute used for sorting. Valid values include: * `name`: Name of the
           * rate plan. * `state`: State of the rate plan (`DRAFT`, `PUBLISHED`). * `startTime`:
           * Time when the rate plan becomes active. * `endTime`: Time when the rate plan expires.
           * **Note**: Not supported by Apigee at this time.
           */
          @com.google.api.client.util.Key
          private java.lang.String orderBy;

          /** Name of the attribute used for sorting. Valid values include: * `name`: Name of the rate plan. *
         `state`: State of the rate plan (`DRAFT`, `PUBLISHED`). * `startTime`: Time when the rate plan
         becomes active. * `endTime`: Time when the rate plan expires. **Note**: Not supported by Apigee at
         this time.
           */
          public java.lang.String getOrderBy() {
            return orderBy;
          }

          /**
           * Name of the attribute used for sorting. Valid values include: * `name`: Name of the
           * rate plan. * `state`: State of the rate plan (`DRAFT`, `PUBLISHED`). * `startTime`:
           * Time when the rate plan becomes active. * `endTime`: Time when the rate plan expires.
           * **Note**: Not supported by Apigee at this time.
           */
          public List setOrderBy(java.lang.String orderBy) {
            this.orderBy = orderBy;
            return this;
          }

          /**
           * Name of the rate plan from which to start displaying the list of rate plans. If
           * omitted, the list starts from the first item. For example, to view the rate plans from
           * 51-150, set the value of `startKey` to the name of the 51st rate plan and set the value
           * of `count` to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.String startKey;

          /** Name of the rate plan from which to start displaying the list of rate plans. If omitted, the list
         starts from the first item. For example, to view the rate plans from 51-150, set the value of
         `startKey` to the name of the 51st rate plan and set the value of `count` to 100.
           */
          public java.lang.String getStartKey() {
            return startKey;
          }

          /**
           * Name of the rate plan from which to start displaying the list of rate plans. If
           * omitted, the list starts from the first item. For example, to view the rate plans from
           * 51-150, set the value of `startKey` to the name of the 51st rate plan and set the value
           * of `count` to 100.
           */
          public List setStartKey(java.lang.String startKey) {
            this.startKey = startKey;
            return this;
          }

          /** State of the rate plans (`DRAFT`, `PUBLISHED`) that you want to display. */
          @com.google.api.client.util.Key
          private java.lang.String state;

          /** State of the rate plans (`DRAFT`, `PUBLISHED`) that you want to display.
           */
          public java.lang.String getState() {
            return state;
          }

          /** State of the rate plans (`DRAFT`, `PUBLISHED`) that you want to display. */
          public List setState(java.lang.String state) {
            this.state = state;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing rate plan.
         *
         * Create a request for the method "rateplans.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the rate plan. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$");

          /**
           * Updates an existing rate plan.
           *
           * Create a request for the method "rateplans.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the rate plan. Use the following structure in your request:
         *        `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1RatePlan.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the rate plan. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the rate plan. Use the following structure in your request:
         `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the rate plan. Use the following structure in your request:
           * `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/rateplans/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Apis collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Apis.List request = apigee.apis().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Apis apis() {
      return new Apis();
    }

    /**
     * The "apis" collection of methods.
     */
    public class Apis {

      /**
       * Creates an API proxy. The API proxy created will not be accessible at runtime until it is
       * deployed to an environment. Create a new API proxy by setting the `name` query parameter to the
       * name of the API proxy. Import an API proxy configuration bundle stored in zip format on your
       * local machine to your organization by doing the following: * Set the `name` query parameter to
       * the name of the API proxy. * Set the `action` query parameter to `import`. * Set the `Content-
       * Type` header to `multipart/form-data`. * Pass as a file the name of API proxy configuration
       * bundle stored in zip format on your local machine using the `file` form field. **Note**: To
       * validate the API proxy configuration bundle only without importing it, set the `action` query
       * parameter to `validate`. When importing an API proxy configuration bundle, if the API proxy does
       * not exist, it will be created. If the API proxy exists, then a new revision is created. Invalid
       * API proxy configurations are rejected, and a list of validation errors is returned to the client.
       *
       * Create a request for the method "apis.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in the following format: `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision> {

        private static final String REST_PATH = "v1/{+parent}/apis";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an API proxy. The API proxy created will not be accessible at runtime until it is
         * deployed to an environment. Create a new API proxy by setting the `name` query parameter to the
         * name of the API proxy. Import an API proxy configuration bundle stored in zip format on your
         * local machine to your organization by doing the following: * Set the `name` query parameter to
         * the name of the API proxy. * Set the `action` query parameter to `import`. * Set the `Content-
         * Type` header to `multipart/form-data`. * Pass as a file the name of API proxy configuration
         * bundle stored in zip format on your local machine using the `file` form field. **Note**: To
         * validate the API proxy configuration bundle only without importing it, set the `action` query
         * parameter to `validate`. When importing an API proxy configuration bundle, if the API proxy
         * does not exist, it will be created. If the API proxy exists, then a new revision is created.
         * Invalid API proxy configurations are rejected, and a list of validation errors is returned to
         * the client.
         *
         * Create a request for the method "apis.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in the following format: `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Name of the organization in the following format: `organizations/{org}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in the following format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Name of the organization in the following format: `organizations/{org}` */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Action to perform when importing an API proxy configuration bundle. Set this parameter to
         * one of the following values: * `import` to import the API proxy configuration bundle. *
         * `validate` to validate the API proxy configuration bundle without importing it.
         */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Action to perform when importing an API proxy configuration bundle. Set this parameter to one of
       the following values: * `import` to import the API proxy configuration bundle. * `validate` to
       validate the API proxy configuration bundle without importing it.
         */
        public java.lang.String getAction() {
          return action;
        }

        /**
         * Action to perform when importing an API proxy configuration bundle. Set this parameter to
         * one of the following values: * `import` to import the API proxy configuration bundle. *
         * `validate` to validate the API proxy configuration bundle without importing it.
         */
        public Create setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        /** Name of the API proxy. Restrict the characters used to: A-Za-z0-9._- */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-
         */
        public java.lang.String getName() {
          return name;
        }

        /** Name of the API proxy. Restrict the characters used to: A-Za-z0-9._- */
        public Create setName(java.lang.String name) {
          this.name = name;
          return this;
        }

        /**
         * Ignored. All uploads are validated regardless of the value of this field. Maintained for
         * compatibility with Apigee Edge API.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean validate;

        /** Ignored. All uploads are validated regardless of the value of this field. Maintained for
       compatibility with Apigee Edge API.
         */
        public java.lang.Boolean getValidate() {
          return validate;
        }

        /**
         * Ignored. All uploads are validated regardless of the value of this field. Maintained for
         * compatibility with Apigee Edge API.
         */
        public Create setValidate(java.lang.Boolean validate) {
          this.validate = validate;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an API proxy and all associated endpoints, policies, resources, and revisions. The API
       * proxy must be undeployed before you can delete it.
       *
       * Create a request for the method "apis.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

        /**
         * Deletes an API proxy and all associated endpoints, policies, resources, and revisions. The API
         * proxy must be undeployed before you can delete it.
         *
         * Create a request for the method "apis.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets an API proxy including a list of existing revisions.
       *
       * Create a request for the method "apis.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

        /**
         * Gets an API proxy including a list of existing revisions.
         *
         * Create a request for the method "apis.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the names of all API proxies in an organization. The names returned correspond to the names
       * defined in the configuration files for each API proxy.
       *
       * Create a request for the method "apis.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in the following format: `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProxiesResponse> {

        private static final String REST_PATH = "v1/{+parent}/apis";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists the names of all API proxies in an organization. The names returned correspond to the
         * names defined in the configuration files for each API proxy.
         *
         * Create a request for the method "apis.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in the following format: `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProxiesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Name of the organization in the following format: `organizations/{org}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in the following format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Name of the organization in the following format: `organizations/{org}` */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Flag that specifies whether to include API proxy metadata in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeMetaData;

        /** Flag that specifies whether to include API proxy metadata in the response.
         */
        public java.lang.Boolean getIncludeMetaData() {
          return includeMetaData;
        }

        /** Flag that specifies whether to include API proxy metadata in the response. */
        public List setIncludeMetaData(java.lang.Boolean includeMetaData) {
          this.includeMetaData = includeMetaData;
          return this;
        }

        /** Flag that specifies whether to include a list of revisions in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeRevisions;

        /** Flag that specifies whether to include a list of revisions in the response.
         */
        public java.lang.Boolean getIncludeRevisions() {
          return includeRevisions;
        }

        /** Flag that specifies whether to include a list of revisions in the response. */
        public List setIncludeRevisions(java.lang.Boolean includeRevisions) {
          this.includeRevisions = includeRevisions;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing API proxy.
       *
       * Create a request for the method "apis.patch".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Required. API proxy to update in the following format: `organizations/{org}/apis/{api}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

        /**
         * Updates an existing API proxy.
         *
         * Create a request for the method "apis.patch".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. API proxy to update in the following format: `organizations/{org}/apis/{api}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. API proxy to update in the following format: `organizations/{org}/apis/{api}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. API proxy to update in the following format: `organizations/{org}/apis/{api}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. API proxy to update in the following format: `organizations/{org}/apis/{api}`
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Required. The list of fields to update. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to update.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Required. The list of fields to update. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Debugsessions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Debugsessions.List request = apigee.debugsessions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Debugsessions debugsessions() {
        return new Debugsessions();
      }

      /**
       * The "debugsessions" collection of methods.
       */
      public class Debugsessions {

        /**
         * Lists debug sessions that are currently active in the given API Proxy.
         *
         * Create a request for the method "debugsessions.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the API Proxy for which to list debug sessions. Must be of the form:
         *        `organizations/{organization}/apis/{api}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiDebugSessionsResponse> {

          private static final String REST_PATH = "v1/{+parent}/debugsessions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

          /**
           * Lists debug sessions that are currently active in the given API Proxy.
           *
           * Create a request for the method "debugsessions.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the API Proxy for which to list debug sessions. Must be of the form:
         *        `organizations/{organization}/apis/{api}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiDebugSessionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the API Proxy for which to list debug sessions. Must be of the
           * form: `organizations/{organization}/apis/{api}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the API Proxy for which to list debug sessions. Must be of the form:
         `organizations/{organization}/apis/{api}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the API Proxy for which to list debug sessions. Must be of the
           * form: `organizations/{organization}/apis/{api}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Maximum number of debug sessions to return. The page size defaults to 25.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. Maximum number of debug sessions to return. The page size defaults to 25.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. Maximum number of debug sessions to return. The page size defaults to 25.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. Page token, returned from a previous ListApiDebugSessions call, that you can
           * use to retrieve the next page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. Page token, returned from a previous ListApiDebugSessions call, that you can use to
         retrieve the next page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. Page token, returned from a previous ListApiDebugSessions call, that you can
           * use to retrieve the next page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Deployments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Deployments deployments() {
        return new Deployments();
      }

      /**
       * The "deployments" collection of methods.
       */
      public class Deployments {

        /**
         * Lists all deployments of an API proxy.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the API proxy for which to return deployment information in the following format:
         *        `organizations/{org}/apis/{api}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

          /**
           * Lists all deployments of an API proxy.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the API proxy for which to return deployment information in the following format:
         *        `organizations/{org}/apis/{api}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API proxy for which to return deployment information in the
           * following format: `organizations/{org}/apis/{api}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the API proxy for which to return deployment information in the following format:
         `organizations/{org}/apis/{api}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the API proxy for which to return deployment information in the
           * following format: `organizations/{org}/apis/{api}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Keyvaluemaps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Keyvaluemaps.List request = apigee.keyvaluemaps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Keyvaluemaps keyvaluemaps() {
        return new Keyvaluemaps();
      }

      /**
       * The "keyvaluemaps" collection of methods.
       */
      public class Keyvaluemaps {

        /**
         * Creates a key value map in an API proxy.
         *
         * Create a request for the method "keyvaluemaps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in which to create the key value map. Use the following structure
         *        in your request: `organizations/{org}/apis/{api}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

          /**
           * Creates a key value map in an API proxy.
           *
           * Create a request for the method "keyvaluemaps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in which to create the key value map. Use the following structure
         *        in your request: `organizations/{org}/apis/{api}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in which to create the key value map. Use the
           * following structure in your request: `organizations/{org}/apis/{api}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in which to create the key value map. Use the following structure
         in your request: `organizations/{org}/apis/{api}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in which to create the key value map. Use the
           * following structure in your request: `organizations/{org}/apis/{api}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a key value map from an API proxy.
         *
         * Create a request for the method "keyvaluemaps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the key value map. Use the following structure in your request:
         *        `organizations/{org}/apis/{api}/keyvaluemaps/{keyvaluemap}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");

          /**
           * Deletes a key value map from an API proxy.
           *
           * Create a request for the method "keyvaluemaps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the key value map. Use the following structure in your request:
         *        `organizations/{org}/apis/{api}/keyvaluemaps/{keyvaluemap}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the key value map. Use the following structure in your request:
           * `organizations/{org}/apis/{api}/keyvaluemaps/{keyvaluemap}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the key value map. Use the following structure in your request:
         `organizations/{org}/apis/{api}/keyvaluemaps/{keyvaluemap}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the key value map. Use the following structure in your request:
           * `organizations/{org}/apis/{api}/keyvaluemaps/{keyvaluemap}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Entries collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Entries.List request = apigee.entries().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Entries entries() {
          return new Entries();
        }

        /**
         * The "entries" collection of methods.
         */
        public class Entries {

          /**
           * Creates key value entries in a key value map scoped to an organization, environment, or API
           * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

            private static final String REST_PATH = "v1/{+parent}/entries";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");

            /**
             * Creates key value entries in a key value map scoped to an organization, environment, or API
             * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
             *
             * Create a request for the method "entries.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Scope as indicated by the URI in which to create the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           the following structures in your request: *
           `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Scope as indicated by the URI in which to create the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a key value entry from a key value map scoped to an organization, environment, or API
           * proxy. **Notes:** * After you delete the key value entry, the policy consuming the entry will
           * continue to function with its cached values for a few minutes. This is expected behavior. *
           * Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
           *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
           *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");

            /**
             * Deletes a key value entry from a key value map scoped to an organization, environment, or API
             * proxy. **Notes:** * After you delete the key value entry, the policy consuming the entry will
             * continue to function with its cached values for a few minutes. This is expected behavior. *
             * Supported for Apigee hybrid 1.8.x and higher.
             *
             * Create a request for the method "entries.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
           *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
           *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Scope as indicated by the URI in which to delete the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}
             * /entries/{entry}` *
             * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of
           the following structures in your request: *
           `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizati
           ons/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` *
           `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Scope as indicated by the URI in which to delete the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}
             * /entries/{entry}` *
             * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Get the key value entry value for a key value map scoped to an organization, environment, or API
           * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one**
           *        of the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
           *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
           *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");

            /**
             * Get the key value entry value for a key value map scoped to an organization, environment, or
             * API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
             *
             * Create a request for the method "entries.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one**
           *        of the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
           *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
           *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Scope as indicated by the URI in which to fetch the key value map
             * entry/value. Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}
             * /entries/{entry}` *
             * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use
           **one** of the following structures in your request: *
           `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizati
           ons/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` *
           `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Scope as indicated by the URI in which to fetch the key value map
             * entry/value. Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}
             * /entries/{entry}` *
             * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists key value entries for key values maps scoped to an organization, environment, or API proxy.
           * **Note**: Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the
           *        following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListKeyValueEntriesResponse> {

            private static final String REST_PATH = "v1/{+parent}/entries";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");

            /**
             * Lists key value entries for key values maps scoped to an organization, environment, or API
             * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
             *
             * Create a request for the method "entries.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the
           *        following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListKeyValueEntriesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Scope as indicated by the URI in which to list key value maps. Use **one**
             * of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the
           following structures in your request: *
           `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Scope as indicated by the URI in which to list key value maps. Use **one**
             * of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. Maximum number of key value entries to return. If unspecified, at most 100
             * entries will be returned.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of key value entries to return. If unspecified, at most 100 entries will
           be returned.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of key value entries to return. If unspecified, at most 100
             * entries will be returned.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. Page token. If provides, must be a valid key value entry returned from a
             * previous call that can be used to retrieve the next page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. Page token. If provides, must be a valid key value entry returned from a previous call
           that can be used to retrieve the next page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. Page token. If provides, must be a valid key value entry returned from a
             * previous call that can be used to retrieve the next page.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Update key value entry scoped to an organization, environment, or API proxy for an existing key.
           *
           * Create a request for the method "entries.update".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation.
           *
           * @param name Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
           * @return the request
           */
          public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) throws java.io.IOException {
            Update result = new Update(name, content);
            initialize(result);
            return result;
          }

          public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");

            /**
             * Update key value entry scoped to an organization, environment, or API proxy for an existing
             * key.
             *
             * Create a request for the method "entries.update".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
             * @since 1.13
             */
            protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) {
              super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
            }

            @Override
            public Update set$Xgafv(java.lang.String $Xgafv) {
              return (Update) super.set$Xgafv($Xgafv);
            }

            @Override
            public Update setAccessToken(java.lang.String accessToken) {
              return (Update) super.setAccessToken(accessToken);
            }

            @Override
            public Update setAlt(java.lang.String alt) {
              return (Update) super.setAlt(alt);
            }

            @Override
            public Update setCallback(java.lang.String callback) {
              return (Update) super.setCallback(callback);
            }

            @Override
            public Update setFields(java.lang.String fields) {
              return (Update) super.setFields(fields);
            }

            @Override
            public Update setKey(java.lang.String key) {
              return (Update) super.setKey(key);
            }

            @Override
            public Update setOauthToken(java.lang.String oauthToken) {
              return (Update) super.setOauthToken(oauthToken);
            }

            @Override
            public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Update) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Update setQuotaUser(java.lang.String quotaUser) {
              return (Update) super.setQuotaUser(quotaUser);
            }

            @Override
            public Update setUploadType(java.lang.String uploadType) {
              return (Update) super.setUploadType(uploadType);
            }

            @Override
            public Update setUploadProtocol(java.lang.String uploadProtocol) {
              return (Update) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Scope as indicated by the URI in which to create the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           the following structures in your request: *
           `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Scope as indicated by the URI in which to create the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public Update setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Update set(String parameterName, Object value) {
              return (Update) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Revisions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Revisions revisions() {
        return new Revisions();
      }

      /**
       * The "revisions" collection of methods.
       */
      public class Revisions {

        /**
         * Deletes an API proxy revision and all policies, resources, endpoints, and revisions associated
         * with it. The API proxy revision must be undeployed before you can delete it.
         *
         * Create a request for the method "revisions.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. API proxy revision in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

          /**
           * Deletes an API proxy revision and all policies, resources, endpoints, and revisions associated
           * with it. The API proxy revision must be undeployed before you can delete it.
           *
           * Create a request for the method "revisions.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. API proxy revision in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. API proxy revision in the following format:
         `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets an API proxy revision. To download the API proxy configuration bundle for the specified
         * revision as a zip file, set the `format` query parameter to `bundle`. If you are using curl,
         * specify `-o filename.zip` to save the output to a file; otherwise, it displays to `stdout`. Then,
         * develop the API proxy configuration locally and upload the updated API proxy configuration
         * revision, as described in [updateApiProxyRevision](updateApiProxyRevision).
         *
         * Create a request for the method "revisions.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. API proxy revision in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

          /**
           * Gets an API proxy revision. To download the API proxy configuration bundle for the specified
           * revision as a zip file, set the `format` query parameter to `bundle`. If you are using curl,
           * specify `-o filename.zip` to save the output to a file; otherwise, it displays to `stdout`.
           * Then, develop the API proxy configuration locally and upload the updated API proxy
           * configuration revision, as described in [updateApiProxyRevision](updateApiProxyRevision).
           *
           * Create a request for the method "revisions.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. API proxy revision in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. API proxy revision in the following format:
         `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Format used when downloading the API proxy configuration revision. Set to `bundle` to
           * download the API proxy configuration revision as a zip file.
           */
          @com.google.api.client.util.Key
          private java.lang.String format;

          /** Format used when downloading the API proxy configuration revision. Set to `bundle` to download the
         API proxy configuration revision as a zip file.
           */
          public java.lang.String getFormat() {
            return format;
          }

          /**
           * Format used when downloading the API proxy configuration revision. Set to `bundle` to
           * download the API proxy configuration revision as a zip file.
           */
          public Get setFormat(java.lang.String format) {
            this.format = format;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing API proxy revision by uploading the API proxy configuration bundle as a zip
         * file from your local machine. You can update only API proxy revisions that have never been
         * deployed. After deployment, an API proxy revision becomes immutable, even if it is undeployed.
         * Set the `Content-Type` header to either `multipart/form-data` or `application/octet-stream`.
         *
         * Create a request for the method "revisions.updateApiProxyRevision".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateApiProxyRevision#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. API proxy revision to update in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public UpdateApiProxyRevision updateApiProxyRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          UpdateApiProxyRevision result = new UpdateApiProxyRevision(name, content);
          initialize(result);
          return result;
        }

        public class UpdateApiProxyRevision extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

          /**
           * Updates an existing API proxy revision by uploading the API proxy configuration bundle as a zip
           * file from your local machine. You can update only API proxy revisions that have never been
           * deployed. After deployment, an API proxy revision becomes immutable, even if it is undeployed.
           * Set the `Content-Type` header to either `multipart/form-data` or `application/octet-stream`.
           *
           * Create a request for the method "revisions.updateApiProxyRevision".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateApiProxyRevision#execute()} method to invoke the remote
           * operation. <p> {@link UpdateApiProxyRevision#initialize(com.google.api.client.googleapis.servic
           * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. API proxy revision to update in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected UpdateApiProxyRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public UpdateApiProxyRevision set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateApiProxyRevision) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateApiProxyRevision setAccessToken(java.lang.String accessToken) {
            return (UpdateApiProxyRevision) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateApiProxyRevision setAlt(java.lang.String alt) {
            return (UpdateApiProxyRevision) super.setAlt(alt);
          }

          @Override
          public UpdateApiProxyRevision setCallback(java.lang.String callback) {
            return (UpdateApiProxyRevision) super.setCallback(callback);
          }

          @Override
          public UpdateApiProxyRevision setFields(java.lang.String fields) {
            return (UpdateApiProxyRevision) super.setFields(fields);
          }

          @Override
          public UpdateApiProxyRevision setKey(java.lang.String key) {
            return (UpdateApiProxyRevision) super.setKey(key);
          }

          @Override
          public UpdateApiProxyRevision setOauthToken(java.lang.String oauthToken) {
            return (UpdateApiProxyRevision) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateApiProxyRevision setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateApiProxyRevision) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateApiProxyRevision setQuotaUser(java.lang.String quotaUser) {
            return (UpdateApiProxyRevision) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateApiProxyRevision setUploadType(java.lang.String uploadType) {
            return (UpdateApiProxyRevision) super.setUploadType(uploadType);
          }

          @Override
          public UpdateApiProxyRevision setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateApiProxyRevision) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. API proxy revision to update in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. API proxy revision to update in the following format:
         `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. API proxy revision to update in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public UpdateApiProxyRevision setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. Maintained
           * for compatibility with Apigee Edge API.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validate;

          /** Ignored. All uploads are validated regardless of the value of this field. Maintained for
         compatibility with Apigee Edge API.
           */
          public java.lang.Boolean getValidate() {
            return validate;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. Maintained
           * for compatibility with Apigee Edge API.
           */
          public UpdateApiProxyRevision setValidate(java.lang.Boolean validate) {
            this.validate = validate;
            return this;
          }

          @Override
          public UpdateApiProxyRevision set(String parameterName, Object value) {
            return (UpdateApiProxyRevision) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of an API proxy revision.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the API proxy revision for which to return deployment information in the following
           *        format: `organizations/{org}/apis/{api}/revisions/{rev}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

            /**
             * Lists all deployments of an API proxy revision.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the API proxy revision for which to return deployment information in the following
           *        format: `organizations/{org}/apis/{api}/revisions/{rev}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the API proxy revision for which to return deployment information in the
           following format: `organizations/{org}/apis/{api}/revisions/{rev}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the Appgroups collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Appgroups.List request = apigee.appgroups().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Appgroups appgroups() {
      return new Appgroups();
    }

    /**
     * The "appgroups" collection of methods.
     */
    public class Appgroups {

      /**
       * Creates an AppGroup. Once created, user can register apps under the AppGroup to obtain secret key
       * and password. At creation time, the AppGroup's state is set as `active`.
       *
       * Create a request for the method "appgroups.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization in which the AppGroup is created. Use the following
       *        structure in your request: `organizations/{org}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup> {

        private static final String REST_PATH = "v1/{+parent}/appgroups";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an AppGroup. Once created, user can register apps under the AppGroup to obtain secret
         * key and password. At creation time, the AppGroup's state is set as `active`.
         *
         * Create a request for the method "appgroups.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization in which the AppGroup is created. Use the following
       *        structure in your request: `organizations/{org}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization in which the AppGroup is created. Use the
         * following structure in your request: `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization in which the AppGroup is created. Use the following
       structure in your request: `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization in which the AppGroup is created. Use the
         * following structure in your request: `organizations/{org}`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an AppGroup. All app and API keys associations with the AppGroup are also removed.
       * **Warning**: This API will permanently delete the AppGroup and related artifacts. **Note**: The
       * delete operation is asynchronous. The AppGroup app is deleted immediately, but its associated
       * resources, such as apps and API keys, may take anywhere from a few seconds to a few minutes to be
       * deleted.
       *
       * Create a request for the method "appgroups.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the AppGroup. Use the following structure in your request:
       *        `organizations/{org}/appgroups/{app_group_name}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+$");

        /**
         * Deletes an AppGroup. All app and API keys associations with the AppGroup are also removed.
         * **Warning**: This API will permanently delete the AppGroup and related artifacts. **Note**: The
         * delete operation is asynchronous. The AppGroup app is deleted immediately, but its associated
         * resources, such as apps and API keys, may take anywhere from a few seconds to a few minutes to
         * be deleted.
         *
         * Create a request for the method "appgroups.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the AppGroup. Use the following structure in your request:
       *        `organizations/{org}/appgroups/{app_group_name}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/appgroups/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the AppGroup. Use the following structure in your request:
         * `organizations/{org}/appgroups/{app_group_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the AppGroup. Use the following structure in your request:
       `organizations/{org}/appgroups/{app_group_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the AppGroup. Use the following structure in your request:
         * `organizations/{org}/appgroups/{app_group_name}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/appgroups/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Returns the AppGroup details for the provided AppGroup name in the request URI.
       *
       * Create a request for the method "appgroups.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the AppGroup. Use the following structure in your request:
       *        `organizations/{org}/appgroups/{app_group_name}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+$");

        /**
         * Returns the AppGroup details for the provided AppGroup name in the request URI.
         *
         * Create a request for the method "appgroups.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the AppGroup. Use the following structure in your request:
       *        `organizations/{org}/appgroups/{app_group_name}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/appgroups/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the AppGroup. Use the following structure in your request:
         * `organizations/{org}/appgroups/{app_group_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the AppGroup. Use the following structure in your request:
       `organizations/{org}/appgroups/{app_group_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the AppGroup. Use the following structure in your request:
         * `organizations/{org}/appgroups/{app_group_name}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/appgroups/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all AppGroups in an organization. A maximum of 1000 AppGroups are returned in the response
       * if PageSize is not specified, or if the PageSize is greater than 1000.
       *
       * Create a request for the method "appgroups.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in your request:
       *        `organizations/{org}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAppGroupsResponse> {

        private static final String REST_PATH = "v1/{+parent}/appgroups";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all AppGroups in an organization. A maximum of 1000 AppGroups are returned in the
         * response if PageSize is not specified, or if the PageSize is greater than 1000.
         *
         * Create a request for the method "appgroups.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in your request:
       *        `organizations/{org}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAppGroupsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization. Use the following structure in your request:
       `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The filter expression to be used to get the list of AppGroups, where filtering can be
         * done on status, channelId or channelUri of the app group. Examples:
         * filter=status=active", filter=channelId=, filter=channelUri=
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The filter expression to be used to get the list of AppGroups, where filtering can be done on
       status, channelId or channelUri of the app group. Examples: filter=status=active",
       filter=channelId=, filter=channelUri=
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * The filter expression to be used to get the list of AppGroups, where filtering can be
         * done on status, channelId or channelUri of the app group. Examples:
         * filter=status=active", filter=channelId=, filter=channelUri=
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Count of AppGroups a single page can have in the response. If unspecified, at most 1000
         * AppGroups will be returned. The maximum value is 1000; values above 1000 will be coerced
         * to 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Count of AppGroups a single page can have in the response. If unspecified, at most 1000 AppGroups
       will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Count of AppGroups a single page can have in the response. If unspecified, at most 1000
         * AppGroups will be returned. The maximum value is 1000; values above 1000 will be coerced
         * to 1000.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The starting index record for listing the AppGroups. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The starting index record for listing the AppGroups.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The starting index record for listing the AppGroups. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an AppGroup. This API replaces the existing AppGroup details with those specified in the
       * request. Include or exclude any existing details that you want to retain or delete, respectively.
       * Note that the state of the AppGroup should be updated using `action`, and not via AppGroup.
       *
       * Create a request for the method "appgroups.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the AppGroup. Use the following structure in your request:
       *        `organizations/{org}/appgroups/{app_group_name}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+$");

        /**
         * Updates an AppGroup. This API replaces the existing AppGroup details with those specified in
         * the request. Include or exclude any existing details that you want to retain or delete,
         * respectively. Note that the state of the AppGroup should be updated using `action`, and not via
         * AppGroup.
         *
         * Create a request for the method "appgroups.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the AppGroup. Use the following structure in your request:
       *        `organizations/{org}/appgroups/{app_group_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroup.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/appgroups/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the AppGroup. Use the following structure in your request:
         * `organizations/{org}/appgroups/{app_group_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the AppGroup. Use the following structure in your request:
       `organizations/{org}/appgroups/{app_group_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the AppGroup. Use the following structure in your request:
         * `organizations/{org}/appgroups/{app_group_name}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/appgroups/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Activate or de-activate the AppGroup by setting the action as `active` or `inactive`. The
         * `Content-Type` header must be set to `application/octet-stream`, with empty body.
         */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Activate or de-activate the AppGroup by setting the action as `active` or `inactive`. The `Content-
       Type` header must be set to `application/octet-stream`, with empty body.
         */
        public java.lang.String getAction() {
          return action;
        }

        /**
         * Activate or de-activate the AppGroup by setting the action as `active` or `inactive`. The
         * `Content-Type` header must be set to `application/octet-stream`, with empty body.
         */
        public Update setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Apps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apps.List request = apigee.apps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apps apps() {
        return new Apps();
      }

      /**
       * The "apps" collection of methods.
       */
      public class Apps {

        /**
         * Creates an app and associates it with an AppGroup. This API associates the AppGroup app with the
         * specified API product and auto-generates an API key for the app to use in calls to API proxies
         * inside that API product. The `name` is the unique ID of the app that you can use in API calls.
         *
         * Create a request for the method "apps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the AppGroup. Use the following structure in your request:
         *        `organizations/{org}/appgroups/{app_group_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+$");

          /**
           * Creates an app and associates it with an AppGroup. This API associates the AppGroup app with
           * the specified API product and auto-generates an API key for the app to use in calls to API
           * proxies inside that API product. The `name` is the unique ID of the app that you can use in API
           * calls.
           *
           * Create a request for the method "apps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the AppGroup. Use the following structure in your request:
         *        `organizations/{org}/appgroups/{app_group_name}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/appgroups/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the AppGroup. Use the following structure in your request:
           * `organizations/{org}/appgroups/{app_group_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the AppGroup. Use the following structure in your request:
         `organizations/{org}/appgroups/{app_group_name}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the AppGroup. Use the following structure in your request:
           * `organizations/{org}/appgroups/{app_group_name}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/appgroups/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an AppGroup app. **Note**: The delete operation is asynchronous. The AppGroup app is
         * deleted immediately, but its associated resources, such as app keys or access tokens, may take
         * anywhere from a few seconds to a few minutes to be deleted.
         *
         * Create a request for the method "apps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the AppGroup app. Use the following structure in your request:
         *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");

          /**
           * Deletes an AppGroup app. **Note**: The delete operation is asynchronous. The AppGroup app is
           * deleted immediately, but its associated resources, such as app keys or access tokens, may take
           * anywhere from a few seconds to a few minutes to be deleted.
           *
           * Create a request for the method "apps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the AppGroup app. Use the following structure in your request:
         *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the AppGroup app. Use the following structure in your request:
           * `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the AppGroup app. Use the following structure in your request:
         `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the AppGroup app. Use the following structure in your request:
           * `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns the details for an AppGroup app.
         *
         * Create a request for the method "apps.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the AppGroup app. Use the following structure in your request:
         *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");

          /**
           * Returns the details for an AppGroup app.
           *
           * Create a request for the method "apps.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the AppGroup app. Use the following structure in your request:
         *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the AppGroup app. Use the following structure in your request:
           * `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the AppGroup app. Use the following structure in your request:
         `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the AppGroup app. Use the following structure in your request:
           * `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all apps created by an AppGroup in an Apigee organization. Optionally, you can request an
         * expanded view of the AppGroup apps. Lists all AppGroupApps in an AppGroup. A maximum of 1000
         * AppGroup apps are returned in the response if PageSize is not specified, or if the PageSize is
         * greater than 1000.
         *
         * Create a request for the method "apps.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the AppGroup. Use the following structure in your request:
         *        `organizations/{org}/appgroups/{app_group_name}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAppGroupAppsResponse> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+$");

          /**
           * Lists all apps created by an AppGroup in an Apigee organization. Optionally, you can request an
           * expanded view of the AppGroup apps. Lists all AppGroupApps in an AppGroup. A maximum of 1000
           * AppGroup apps are returned in the response if PageSize is not specified, or if the PageSize is
           * greater than 1000.
           *
           * Create a request for the method "apps.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the AppGroup. Use the following structure in your request:
         *        `organizations/{org}/appgroups/{app_group_name}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAppGroupAppsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/appgroups/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the AppGroup. Use the following structure in your request:
           * `organizations/{org}/appgroups/{app_group_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the AppGroup. Use the following structure in your request:
         `organizations/{org}/appgroups/{app_group_name}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the AppGroup. Use the following structure in your request:
           * `organizations/{org}/appgroups/{app_group_name}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/appgroups/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Maximum number entries to return. If unspecified, at most 1000 entries will
           * be returned.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. Maximum number entries to return. If unspecified, at most 1000 entries will be returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. Maximum number entries to return. If unspecified, at most 1000 entries will
           * be returned.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. Page token. If provides, must be a valid AppGroup app returned from a
           * previous call that can be used to retrieve the next page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. Page token. If provides, must be a valid AppGroup app returned from a previous call that
         can be used to retrieve the next page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. Page token. If provides, must be a valid AppGroup app returned from a
           * previous call that can be used to retrieve the next page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the details for an AppGroup app. In addition, you can add an API product to an AppGroup
         * app and automatically generate an API key for the app to use when calling APIs in the API
         * product. If you want to use an existing API key for the API product, add the API product to the
         * API key using the UpdateAppGroupAppKey API. Using this API, you cannot update the app name, as it
         * is the primary key used to identify the app and cannot be changed. This API replaces the existing
         * attributes with those specified in the request. Include or exclude any existing attributes that
         * you want to retain or delete, respectively.
         *
         * Create a request for the method "apps.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the AppGroup app. Use the following structure in your request:
         *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");

          /**
           * Updates the details for an AppGroup app. In addition, you can add an API product to an AppGroup
           * app and automatically generate an API key for the app to use when calling APIs in the API
           * product. If you want to use an existing API key for the API product, add the API product to the
           * API key using the UpdateAppGroupAppKey API. Using this API, you cannot update the app name, as
           * it is the primary key used to identify the app and cannot be changed. This API replaces the
           * existing attributes with those specified in the request. Include or exclude any existing
           * attributes that you want to retain or delete, respectively.
           *
           * Create a request for the method "apps.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the AppGroup app. Use the following structure in your request:
         *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the AppGroup app. Use the following structure in your request:
           * `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the AppGroup app. Use the following structure in your request:
         `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the AppGroup app. Use the following structure in your request:
           * `organizations/{org}/appgroups/{app_group_name}/apps/{app}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Approve or revoke the consumer key by setting this value to `approve` or `revoke`. The
           * `Content-Type` header must be set to `application/octet-stream`, with empty body.
           */
          @com.google.api.client.util.Key
          private java.lang.String action;

          /** Approve or revoke the consumer key by setting this value to `approve` or `revoke`. The `Content-
         Type` header must be set to `application/octet-stream`, with empty body.
           */
          public java.lang.String getAction() {
            return action;
          }

          /**
           * Approve or revoke the consumer key by setting this value to `approve` or `revoke`. The
           * `Content-Type` header must be set to `application/octet-stream`, with empty body.
           */
          public Update setAction(java.lang.String action) {
            this.action = action;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Keys collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Keys.List request = apigee.keys().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Keys keys() {
          return new Keys();
        }

        /**
         * The "keys" collection of methods.
         */
        public class Keys {

          /**
           * Creates a custom consumer key and secret for a AppGroup app. This is particularly useful if you
           * want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys
           * and secrets can contain letters, numbers, underscores, and hyphens. No other special characters
           * are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs
           * each. **Note**: When creating the consumer key and secret, an association to API products will
           * not be made. Therefore, you should not specify the associated API products in your request.
           * Instead, use the ProductizeAppGroupAppKey API to make the association after the consumer key and
           * secret are created. If a consumer key and secret already exist, you can keep them or delete them
           * using the DeleteAppGroupAppKey API.
           *
           * Create a request for the method "keys.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent of the AppGroup app key. Use the following structure in your request:
           *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey> {

            private static final String REST_PATH = "v1/{+parent}/keys";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");

            /**
             * Creates a custom consumer key and secret for a AppGroup app. This is particularly useful if you
             * want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys
             * and secrets can contain letters, numbers, underscores, and hyphens. No other special characters
             * are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs
             * each. **Note**: When creating the consumer key and secret, an association to API products will
             * not be made. Therefore, you should not specify the associated API products in your request.
             * Instead, use the ProductizeAppGroupAppKey API to make the association after the consumer key
             * and secret are created. If a consumer key and secret already exist, you can keep them or delete
             * them using the DeleteAppGroupAppKey API.
             *
             * Create a request for the method "keys.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent of the AppGroup app key. Use the following structure in your request:
           *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent of the AppGroup app key. Use the following structure in your
             * request: `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent of the AppGroup app key. Use the following structure in your request:
           `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent of the AppGroup app key. Use the following structure in your
             * request: `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an app's consumer key and removes all API products associated with the app. After the
           * consumer key is deleted, it cannot be used to access any APIs.
           *
           * Create a request for the method "keys.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the AppGroup app key. Use the following structure in your request:
           *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Deletes an app's consumer key and removes all API products associated with the app. After the
             * consumer key is deleted, it cannot be used to access any APIs.
             *
             * Create a request for the method "keys.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the AppGroup app key. Use the following structure in your request:
           *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the AppGroup app key. Use the following structure in your request:
             * `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the AppGroup app key. Use the following structure in your request:
           `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the AppGroup app key. Use the following structure in your request:
             * `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets details for a consumer key for a AppGroup app, including the key and secret value,
           * associated API products, and other information.
           *
           * Create a request for the method "keys.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the AppGroup app key. Use the following structure in your request:
           *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Gets details for a consumer key for a AppGroup app, including the key and secret value,
             * associated API products, and other information.
             *
             * Create a request for the method "keys.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the AppGroup app key. Use the following structure in your request:
           *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the AppGroup app key. Use the following structure in your request:
             * `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the AppGroup app key. Use the following structure in your request:
           `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the AppGroup app key. Use the following structure in your request:
             * `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Adds an API product to an AppGroupAppKey, enabling the app that holds the key to access the API
           * resources bundled in the API product. In addition, you can add attributes to the AppGroupAppKey.
           * This API replaces the existing attributes with those specified in the request. Include or exclude
           * any existing attributes that you want to retain or delete, respectively. You can use the same key
           * to access all API products associated with the app.
           *
           * Create a request for the method "keys.updateAppGroupAppKey".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link UpdateAppGroupAppKey#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. Name of the AppGroup app key. Use the following structure in your request:
           *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest}
           * @return the request
           */
          public UpdateAppGroupAppKey updateAppGroupAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest content) throws java.io.IOException {
            UpdateAppGroupAppKey result = new UpdateAppGroupAppKey(name, content);
            initialize(result);
            return result;
          }

          public class UpdateAppGroupAppKey extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Adds an API product to an AppGroupAppKey, enabling the app that holds the key to access the API
             * resources bundled in the API product. In addition, you can add attributes to the
             * AppGroupAppKey. This API replaces the existing attributes with those specified in the request.
             * Include or exclude any existing attributes that you want to retain or delete, respectively. You
             * can use the same key to access all API products associated with the app.
             *
             * Create a request for the method "keys.updateAppGroupAppKey".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link UpdateAppGroupAppKey#execute()} method to invoke the remote
             * operation. <p> {@link UpdateAppGroupAppKey#initialize(com.google.api.client.googleapis.services
             * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Required. Name of the AppGroup app key. Use the following structure in your request:
           *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest}
             * @since 1.13
             */
            protected UpdateAppGroupAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateAppGroupAppKeyRequest content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public UpdateAppGroupAppKey set$Xgafv(java.lang.String $Xgafv) {
              return (UpdateAppGroupAppKey) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpdateAppGroupAppKey setAccessToken(java.lang.String accessToken) {
              return (UpdateAppGroupAppKey) super.setAccessToken(accessToken);
            }

            @Override
            public UpdateAppGroupAppKey setAlt(java.lang.String alt) {
              return (UpdateAppGroupAppKey) super.setAlt(alt);
            }

            @Override
            public UpdateAppGroupAppKey setCallback(java.lang.String callback) {
              return (UpdateAppGroupAppKey) super.setCallback(callback);
            }

            @Override
            public UpdateAppGroupAppKey setFields(java.lang.String fields) {
              return (UpdateAppGroupAppKey) super.setFields(fields);
            }

            @Override
            public UpdateAppGroupAppKey setKey(java.lang.String key) {
              return (UpdateAppGroupAppKey) super.setKey(key);
            }

            @Override
            public UpdateAppGroupAppKey setOauthToken(java.lang.String oauthToken) {
              return (UpdateAppGroupAppKey) super.setOauthToken(oauthToken);
            }

            @Override
            public UpdateAppGroupAppKey setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpdateAppGroupAppKey) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpdateAppGroupAppKey setQuotaUser(java.lang.String quotaUser) {
              return (UpdateAppGroupAppKey) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpdateAppGroupAppKey setUploadType(java.lang.String uploadType) {
              return (UpdateAppGroupAppKey) super.setUploadType(uploadType);
            }

            @Override
            public UpdateAppGroupAppKey setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpdateAppGroupAppKey) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the AppGroup app key. Use the following structure in your request:
             * `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the AppGroup app key. Use the following structure in your request:
           `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the AppGroup app key. Use the following structure in your request:
             * `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}`
             */
            public UpdateAppGroupAppKey setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public UpdateAppGroupAppKey set(String parameterName, Object value) {
              return (UpdateAppGroupAppKey) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Apiproducts collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Apigee apigee = new Apigee(...);}
           *   {@code Apigee.Apiproducts.List request = apigee.apiproducts().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Apiproducts apiproducts() {
            return new Apiproducts();
          }

          /**
           * The "apiproducts" collection of methods.
           */
          public class Apiproducts {

            /**
             * Removes an API product from an app's consumer key. After the API product is removed, the app
             * cannot access the API resources defined in that API product. **Note**: The consumer key is not
             * removed, only its association with the API product.
             *
             * Create a request for the method "apiproducts.delete".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Required. Parent of the AppGroup app key. Use the following structure in your request:
             *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}/apiproducts/{apiprod
             *        uct}`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");

              /**
               * Removes an API product from an app's consumer key. After the API product is removed, the app
               * cannot access the API resources defined in that API product. **Note**: The consumer key is not
               * removed, only its association with the API product.
               *
               * Create a request for the method "apiproducts.delete".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. Parent of the AppGroup app key. Use the following structure in your request:
             *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}/apiproducts/{apiprod
             *        uct}`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AppGroupAppKey.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Parent of the AppGroup app key. Use the following structure in your
               * request: `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}/apip
               * roducts/{apiproduct}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Parent of the AppGroup app key. Use the following structure in your request:
             `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Parent of the AppGroup app key. Use the following structure in your
               * request: `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}/apip
               * roducts/{apiproduct}`
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Approves or revokes the consumer key for an API product. After a consumer key is approved, the
             * app can use it to access APIs. A consumer key that is revoked or pending cannot be used to access
             * an API. Any access tokens associated with a revoked consumer key will remain active. However,
             * Apigee checks the status of the consumer key and if set to `revoked` will not allow access to the
             * API.
             *
             * Create a request for the method "apiproducts.updateAppGroupAppKeyApiProduct".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link UpdateAppGroupAppKeyApiProduct#execute()} method to invoke the remote
             * operation.
             *
             * @param name Required. Name of the API product in the developer app key in the following format:
             *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}/apiproducts/{apiprod
             *        uct}`
             * @return the request
             */
            public UpdateAppGroupAppKeyApiProduct updateAppGroupAppKeyApiProduct(java.lang.String name) throws java.io.IOException {
              UpdateAppGroupAppKeyApiProduct result = new UpdateAppGroupAppKeyApiProduct(name);
              initialize(result);
              return result;
            }

            public class UpdateAppGroupAppKeyApiProduct extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");

              /**
               * Approves or revokes the consumer key for an API product. After a consumer key is approved, the
               * app can use it to access APIs. A consumer key that is revoked or pending cannot be used to
               * access an API. Any access tokens associated with a revoked consumer key will remain active.
               * However, Apigee checks the status of the consumer key and if set to `revoked` will not allow
               * access to the API.
               *
               * Create a request for the method "apiproducts.updateAppGroupAppKeyApiProduct".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link UpdateAppGroupAppKeyApiProduct#execute()} method to invoke the
               * remote operation. <p> {@link UpdateAppGroupAppKeyApiProduct#initialize(com.google.api.client.go
               * ogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
               * immediately after invoking the constructor. </p>
               *
               * @param name Required. Name of the API product in the developer app key in the following format:
             *        `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}/apiproducts/{apiprod
             *        uct}`
               * @since 1.13
               */
              protected UpdateAppGroupAppKeyApiProduct(java.lang.String name) {
                super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct set$Xgafv(java.lang.String $Xgafv) {
                return (UpdateAppGroupAppKeyApiProduct) super.set$Xgafv($Xgafv);
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct setAccessToken(java.lang.String accessToken) {
                return (UpdateAppGroupAppKeyApiProduct) super.setAccessToken(accessToken);
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct setAlt(java.lang.String alt) {
                return (UpdateAppGroupAppKeyApiProduct) super.setAlt(alt);
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct setCallback(java.lang.String callback) {
                return (UpdateAppGroupAppKeyApiProduct) super.setCallback(callback);
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct setFields(java.lang.String fields) {
                return (UpdateAppGroupAppKeyApiProduct) super.setFields(fields);
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct setKey(java.lang.String key) {
                return (UpdateAppGroupAppKeyApiProduct) super.setKey(key);
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct setOauthToken(java.lang.String oauthToken) {
                return (UpdateAppGroupAppKeyApiProduct) super.setOauthToken(oauthToken);
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (UpdateAppGroupAppKeyApiProduct) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct setQuotaUser(java.lang.String quotaUser) {
                return (UpdateAppGroupAppKeyApiProduct) super.setQuotaUser(quotaUser);
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct setUploadType(java.lang.String uploadType) {
                return (UpdateAppGroupAppKeyApiProduct) super.setUploadType(uploadType);
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct setUploadProtocol(java.lang.String uploadProtocol) {
                return (UpdateAppGroupAppKeyApiProduct) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. Name of the API product in the developer app key in the following format:
               * `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}/apiproducts/{
               * apiproduct}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. Name of the API product in the developer app key in the following format:
             `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. Name of the API product in the developer app key in the following format:
               * `organizations/{org}/appgroups/{app_group_name}/apps/{app}/keys/{key}/apiproducts/{
               * apiproduct}`
               */
              public UpdateAppGroupAppKeyApiProduct setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/appgroups/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Approve or revoke the consumer key by setting this value to `approve` or `revoke`
               * respectively. The `Content-Type` header, if set, must be set to `application/octet-
               * stream`, with empty body.
               */
              @com.google.api.client.util.Key
              private java.lang.String action;

              /** Approve or revoke the consumer key by setting this value to `approve` or `revoke` respectively. The
             `Content-Type` header, if set, must be set to `application/octet-stream`, with empty body.
               */
              public java.lang.String getAction() {
                return action;
              }

              /**
               * Approve or revoke the consumer key by setting this value to `approve` or `revoke`
               * respectively. The `Content-Type` header, if set, must be set to `application/octet-
               * stream`, with empty body.
               */
              public UpdateAppGroupAppKeyApiProduct setAction(java.lang.String action) {
                this.action = action;
                return this;
              }

              @Override
              public UpdateAppGroupAppKeyApiProduct set(String parameterName, Object value) {
                return (UpdateAppGroupAppKeyApiProduct) super.set(parameterName, value);
              }
            }

          }
        }
      }
    }
    /**
     * An accessor for creating requests from the Apps collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Apps.List request = apigee.apps().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Apps apps() {
      return new Apps();
    }

    /**
     * The "apps" collection of methods.
     */
    public class Apps {

      /**
       * Gets the app profile for the specified app ID.
       *
       * Create a request for the method "apps.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. App ID in the following format: `organizations/{org}/apps/{app}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1App> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apps/[^/]+$");

        /**
         * Gets the app profile for the specified app ID.
         *
         * Create a request for the method "apps.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. App ID in the following format: `organizations/{org}/apps/{app}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1App.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apps/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. App ID in the following format: `organizations/{org}/apps/{app}` */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. App ID in the following format: `organizations/{org}/apps/{app}`
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. App ID in the following format: `organizations/{org}/apps/{app}` */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apps/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists IDs of apps within an organization that have the specified app status (approved or revoked)
       * or are of the specified app type (developer or company).
       *
       * Create a request for the method "apps.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource path of the parent in the following format: `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAppsResponse> {

        private static final String REST_PATH = "v1/{+parent}/apps";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists IDs of apps within an organization that have the specified app status (approved or
         * revoked) or are of the specified app type (developer or company).
         *
         * Create a request for the method "apps.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource path of the parent in the following format: `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAppsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Resource path of the parent in the following format: `organizations/{org}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource path of the parent in the following format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Resource path of the parent in the following format: `organizations/{org}` */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** API product. */
        @com.google.api.client.util.Key
        private java.lang.String apiProduct;

        /** API product.
         */
        public java.lang.String getApiProduct() {
          return apiProduct;
        }

        /** API product. */
        public List setApiProduct(java.lang.String apiProduct) {
          this.apiProduct = apiProduct;
          return this;
        }

        /** Optional. 'apptype' is no longer available. Use a 'filter' instead. */
        @com.google.api.client.util.Key
        private java.lang.String apptype;

        /** Optional. 'apptype' is no longer available. Use a 'filter' instead.
         */
        public java.lang.String getApptype() {
          return apptype;
        }

        /** Optional. 'apptype' is no longer available. Use a 'filter' instead. */
        public List setApptype(java.lang.String apptype) {
          this.apptype = apptype;
          return this;
        }

        /**
         * Optional. Flag that specifies whether to return an expanded list of apps for the
         * organization. Defaults to `false`.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Optional. Flag that specifies whether to return an expanded list of apps for the organization.
       Defaults to `false`.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /**
         * Optional. Flag that specifies whether to return an expanded list of apps for the
         * organization. Defaults to `false`.
         */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        /**
         * Optional. The filter expression to be used to get the list of apps, where filtering can
         * be done on developerEmail, apiProduct, consumerKey, status, appId, appName, appType and
         * appGroup. Examples: "developerEmail=foo@bar.com", "appType=AppGroup", or
         * "appType=Developer" "filter" is supported from ver 1.10.0 and above.
         */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Optional. The filter expression to be used to get the list of apps, where filtering can be done on
       developerEmail, apiProduct, consumerKey, status, appId, appName, appType and appGroup. Examples:
       "developerEmail=foo@bar.com", "appType=AppGroup", or "appType=Developer" "filter" is supported from
       ver 1.10.0 and above.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /**
         * Optional. The filter expression to be used to get the list of apps, where filtering can
         * be done on developerEmail, apiProduct, consumerKey, status, appId, appName, appType and
         * appGroup. Examples: "developerEmail=foo@bar.com", "appType=AppGroup", or
         * "appType=Developer" "filter" is supported from ver 1.10.0 and above.
         */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** Optional. Comma-separated list of app IDs on which to filter. */
        @com.google.api.client.util.Key
        private java.lang.String ids;

        /** Optional. Comma-separated list of app IDs on which to filter.
         */
        public java.lang.String getIds() {
          return ids;
        }

        /** Optional. Comma-separated list of app IDs on which to filter. */
        public List setIds(java.lang.String ids) {
          this.ids = ids;
          return this;
        }

        /** Optional. Flag that specifies whether to include credentials in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeCred;

        /** Optional. Flag that specifies whether to include credentials in the response.
         */
        public java.lang.Boolean getIncludeCred() {
          return includeCred;
        }

        /** Optional. Flag that specifies whether to include credentials in the response. */
        public List setIncludeCred(java.lang.Boolean includeCred) {
          this.includeCred = includeCred;
          return this;
        }

        /**
         * Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults
         * to `approved`.
         */
        @com.google.api.client.util.Key
        private java.lang.String keyStatus;

        /** Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults to
       `approved`.
         */
        public java.lang.String getKeyStatus() {
          return keyStatus;
        }

        /**
         * Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults
         * to `approved`.
         */
        public List setKeyStatus(java.lang.String keyStatus) {
          this.keyStatus = keyStatus;
          return this;
        }

        /**
         * Optional. Count of apps a single page can have in the response. If unspecified, at most
         * 100 apps will be returned. The maximum value is 100; values above 100 will be coerced to
         * 100. "page_size" is supported from ver 1.10.0 and above.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. Count of apps a single page can have in the response. If unspecified, at most 100 apps
       will be returned. The maximum value is 100; values above 100 will be coerced to 100. "page_size" is
       supported from ver 1.10.0 and above.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. Count of apps a single page can have in the response. If unspecified, at most
         * 100 apps will be returned. The maximum value is 100; values above 100 will be coerced to
         * 100. "page_size" is supported from ver 1.10.0 and above.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. The starting index record for listing the developers. "page_token" is supported
         * from ver 1.10.0 and above.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. The starting index record for listing the developers. "page_token" is supported from ver
       1.10.0 and above.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. The starting index record for listing the developers. "page_token" is supported
         * from ver 1.10.0 and above.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /** Optional. Maximum number of app IDs to return. Defaults to 10000. */
        @com.google.api.client.util.Key
        private java.lang.Long rows;

        /** Optional. Maximum number of app IDs to return. Defaults to 10000.
         */
        public java.lang.Long getRows() {
          return rows;
        }

        /** Optional. Maximum number of app IDs to return. Defaults to 10000. */
        public List setRows(java.lang.Long rows) {
          this.rows = rows;
          return this;
        }

        /** Returns the list of apps starting from the specified app ID. */
        @com.google.api.client.util.Key
        private java.lang.String startKey;

        /** Returns the list of apps starting from the specified app ID.
         */
        public java.lang.String getStartKey() {
          return startKey;
        }

        /** Returns the list of apps starting from the specified app ID. */
        public List setStartKey(java.lang.String startKey) {
          this.startKey = startKey;
          return this;
        }

        /**
         * Optional. Filter by the status of the app. Valid values are `approved` or `revoked`.
         * Defaults to `approved`.
         */
        @com.google.api.client.util.Key
        private java.lang.String status;

        /** Optional. Filter by the status of the app. Valid values are `approved` or `revoked`. Defaults to
       `approved`.
         */
        public java.lang.String getStatus() {
          return status;
        }

        /**
         * Optional. Filter by the status of the app. Valid values are `approved` or `revoked`.
         * Defaults to `approved`.
         */
        public List setStatus(java.lang.String status) {
          this.status = status;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Datacollectors collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Datacollectors.List request = apigee.datacollectors().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Datacollectors datacollectors() {
      return new Datacollectors();
    }

    /**
     * The "datacollectors" collection of methods.
     */
    public class Datacollectors {

      /**
       * Creates a new data collector.
       *
       * Create a request for the method "datacollectors.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in which to create the data collector in the following format:
       *        `organizations/{org}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector> {

        private static final String REST_PATH = "v1/{+parent}/datacollectors";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a new data collector.
         *
         * Create a request for the method "datacollectors.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in which to create the data collector in the following format:
       *        `organizations/{org}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization in which to create the data collector in the following
         * format: `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in which to create the data collector in the following format:
       `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization in which to create the data collector in the following
         * format: `organizations/{org}`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * ID of the data collector. Overrides any ID in the data collector resource. Must be a
         * string beginning with `dc_` that contains only letters, numbers, and underscores.
         */
        @com.google.api.client.util.Key
        private java.lang.String dataCollectorId;

        /** ID of the data collector. Overrides any ID in the data collector resource. Must be a string
       beginning with `dc_` that contains only letters, numbers, and underscores.
         */
        public java.lang.String getDataCollectorId() {
          return dataCollectorId;
        }

        /**
         * ID of the data collector. Overrides any ID in the data collector resource. Must be a
         * string beginning with `dc_` that contains only letters, numbers, and underscores.
         */
        public Create setDataCollectorId(java.lang.String dataCollectorId) {
          this.dataCollectorId = dataCollectorId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a data collector.
       *
       * Create a request for the method "datacollectors.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the data collector in the following format:
       *        `organizations/{org}/datacollectors/{data_collector_id}`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/datacollectors/[^/]+$");

        /**
         * Deletes a data collector.
         *
         * Create a request for the method "datacollectors.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the data collector in the following format:
       *        `organizations/{org}/datacollectors/{data_collector_id}`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/datacollectors/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the data collector in the following format:
         * `organizations/{org}/datacollectors/{data_collector_id}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the data collector in the following format:
       `organizations/{org}/datacollectors/{data_collector_id}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the data collector in the following format:
         * `organizations/{org}/datacollectors/{data_collector_id}`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/datacollectors/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a data collector.
       *
       * Create a request for the method "datacollectors.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the data collector in the following format:
       *        `organizations/{org}/datacollectors/{data_collector_id}`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/datacollectors/[^/]+$");

        /**
         * Gets a data collector.
         *
         * Create a request for the method "datacollectors.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the data collector in the following format:
       *        `organizations/{org}/datacollectors/{data_collector_id}`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/datacollectors/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the data collector in the following format:
         * `organizations/{org}/datacollectors/{data_collector_id}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the data collector in the following format:
       `organizations/{org}/datacollectors/{data_collector_id}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the data collector in the following format:
         * `organizations/{org}/datacollectors/{data_collector_id}`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/datacollectors/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all data collectors.
       *
       * Create a request for the method "datacollectors.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization for which to list data collectors in the following format:
       *        `organizations/{org}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDataCollectorsResponse> {

        private static final String REST_PATH = "v1/{+parent}/datacollectors";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all data collectors.
         *
         * Create a request for the method "datacollectors.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization for which to list data collectors in the following format:
       *        `organizations/{org}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDataCollectorsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization for which to list data collectors in the following
         * format: `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization for which to list data collectors in the following format:
       `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization for which to list data collectors in the following
         * format: `organizations/{org}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Maximum number of data collectors to return. The page size defaults to 25. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of data collectors to return. The page size defaults to 25.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum number of data collectors to return. The page size defaults to 25. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Page token, returned from a previous ListDataCollectors call, that you can use to
         * retrieve the next page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token, returned from a previous ListDataCollectors call, that you can use to retrieve the next
       page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Page token, returned from a previous ListDataCollectors call, that you can use to
         * retrieve the next page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates a data collector.
       *
       * Create a request for the method "datacollectors.patch".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the data collector in the following format:
       *        `organizations/{org}/datacollectors/{data_collector_id}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/datacollectors/[^/]+$");

        /**
         * Updates a data collector.
         *
         * Create a request for the method "datacollectors.patch".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the data collector in the following format:
       *        `organizations/{org}/datacollectors/{data_collector_id}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataCollector.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/datacollectors/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the data collector in the following format:
         * `organizations/{org}/datacollectors/{data_collector_id}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the data collector in the following format:
       `organizations/{org}/datacollectors/{data_collector_id}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the data collector in the following format:
         * `organizations/{org}/datacollectors/{data_collector_id}`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/datacollectors/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** List of fields to be updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** List of fields to be updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** List of fields to be updated. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Deployments collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Deployments deployments() {
      return new Deployments();
    }

    /**
     * The "deployments" collection of methods.
     */
    public class Deployments {

      /**
       * Lists all deployments of API proxies or shared flows.
       *
       * Create a request for the method "deployments.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization for which to return deployment information in the following
       *        format: `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

        private static final String REST_PATH = "v1/{+parent}/deployments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all deployments of API proxies or shared flows.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization for which to return deployment information in the following
       *        format: `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization for which to return deployment information in the
         * following format: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization for which to return deployment information in the following
       format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization for which to return deployment information in the
         * following format: `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set
         * to `true` to return shared flow deployments; set to `false` to return API proxy
         * deployments. Defaults to `false`.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean sharedFlows;

        /** Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true`
       to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to
       `false`.
         */
        public java.lang.Boolean getSharedFlows() {
          return sharedFlows;
        }

        /**
         * Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set
         * to `true` to return shared flow deployments; set to `false` to return API proxy
         * deployments. Defaults to `false`.
         */
        public List setSharedFlows(java.lang.Boolean sharedFlows) {
          this.sharedFlows = sharedFlows;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Developers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Developers.List request = apigee.developers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Developers developers() {
      return new Developers();
    }

    /**
     * The "developers" collection of methods.
     */
    public class Developers {

      /**
       * Updates developer attributes. This API replaces the existing attributes with those specified in
       * the request. Add new attributes, and include or exclude any existing attributes that you want to
       * retain or remove, respectively. The custom attribute limit is 18. **Note**: OAuth access tokens
       * and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180
       * seconds (default). Any custom attributes associated with these entities are cached for at least
       * 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the
       * OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
       *
       * Create a request for the method "developers.attributes".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link AttributesRequest#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Email address of the developer for which attributes are being updated. Use the following
       *        structure in your request: `organizations/{org}/developers/{developer_email}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
       * @return the request
       */
      public AttributesRequest attributes(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) throws java.io.IOException {
        AttributesRequest result = new AttributesRequest(parent, content);
        initialize(result);
        return result;
      }

      public class AttributesRequest extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

        private static final String REST_PATH = "v1/{+parent}/attributes";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Updates developer attributes. This API replaces the existing attributes with those specified in
         * the request. Add new attributes, and include or exclude any existing attributes that you want
         * to retain or remove, respectively. The custom attribute limit is 18. **Note**: OAuth access
         * tokens and Key Management Service (KMS) entities (apps, developers, and API products) are
         * cached for 180 seconds (default). Any custom attributes associated with these entities are
         * cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an
         * `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than
         * 180 seconds.
         *
         * Create a request for the method "developers.attributes".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link AttributesRequest#execute()} method to invoke the remote operation.
         * <p> {@link AttributesRequest#initialize(com.google.api.client.googleapis.services.AbstractGoogl
         * eClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param parent Required. Email address of the developer for which attributes are being updated. Use the following
       *        structure in your request: `organizations/{org}/developers/{developer_email}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
         * @since 1.13
         */
        protected AttributesRequest(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public AttributesRequest set$Xgafv(java.lang.String $Xgafv) {
          return (AttributesRequest) super.set$Xgafv($Xgafv);
        }

        @Override
        public AttributesRequest setAccessToken(java.lang.String accessToken) {
          return (AttributesRequest) super.setAccessToken(accessToken);
        }

        @Override
        public AttributesRequest setAlt(java.lang.String alt) {
          return (AttributesRequest) super.setAlt(alt);
        }

        @Override
        public AttributesRequest setCallback(java.lang.String callback) {
          return (AttributesRequest) super.setCallback(callback);
        }

        @Override
        public AttributesRequest setFields(java.lang.String fields) {
          return (AttributesRequest) super.setFields(fields);
        }

        @Override
        public AttributesRequest setKey(java.lang.String key) {
          return (AttributesRequest) super.setKey(key);
        }

        @Override
        public AttributesRequest setOauthToken(java.lang.String oauthToken) {
          return (AttributesRequest) super.setOauthToken(oauthToken);
        }

        @Override
        public AttributesRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (AttributesRequest) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public AttributesRequest setQuotaUser(java.lang.String quotaUser) {
          return (AttributesRequest) super.setQuotaUser(quotaUser);
        }

        @Override
        public AttributesRequest setUploadType(java.lang.String uploadType) {
          return (AttributesRequest) super.setUploadType(uploadType);
        }

        @Override
        public AttributesRequest setUploadProtocol(java.lang.String uploadProtocol) {
          return (AttributesRequest) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Email address of the developer for which attributes are being updated. Use the
         * following structure in your request: `organizations/{org}/developers/{developer_email}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Email address of the developer for which attributes are being updated. Use the following
       structure in your request: `organizations/{org}/developers/{developer_email}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Email address of the developer for which attributes are being updated. Use the
         * following structure in your request: `organizations/{org}/developers/{developer_email}`
         */
        public AttributesRequest setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public AttributesRequest set(String parameterName, Object value) {
          return (AttributesRequest) super.set(parameterName, value);
        }
      }
      /**
       * Creates a developer. Once created, the developer can register an app and obtain an API key. At
       * creation time, a developer is set as `active`. To change the developer status, use the
       * SetDeveloperStatus API.
       *
       * Create a request for the method "developers.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization in which the developer is created. Use the following
       *        structure in your request: `organizations/{org}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+parent}/developers";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a developer. Once created, the developer can register an app and obtain an API key. At
         * creation time, a developer is set as `active`. To change the developer status, use the
         * SetDeveloperStatus API.
         *
         * Create a request for the method "developers.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization in which the developer is created. Use the following
       *        structure in your request: `organizations/{org}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization in which the developer is created. Use the
         * following structure in your request: `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization in which the developer is created. Use the following
       structure in your request: `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization in which the developer is created. Use the
         * following structure in your request: `organizations/{org}`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a developer. All apps and API keys associated with the developer are also removed.
       * **Warning**: This API will permanently delete the developer and related artifacts. To avoid
       * permanently deleting developers and their artifacts, set the developer status to `inactive` using
       * the SetDeveloperStatus API. **Note**: The delete operation is asynchronous. The developer app is
       * deleted immediately, but its associated resources, such as apps and API keys, may take anywhere
       * from a few seconds to a few minutes to be deleted.
       *
       * Create a request for the method "developers.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Email address of the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer_email}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Deletes a developer. All apps and API keys associated with the developer are also removed.
         * **Warning**: This API will permanently delete the developer and related artifacts. To avoid
         * permanently deleting developers and their artifacts, set the developer status to `inactive`
         * using the SetDeveloperStatus API. **Note**: The delete operation is asynchronous. The developer
         * app is deleted immediately, but its associated resources, such as apps and API keys, may take
         * anywhere from a few seconds to a few minutes to be deleted.
         *
         * Create a request for the method "developers.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Email address of the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer_email}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Email address of the developer. Use the following structure in your request:
       `organizations/{org}/developers/{developer_email}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Returns the developer details, including the developer's name, email address, apps, and other
       * information. **Note**: The response includes only the first 100 developer apps.
       *
       * Create a request for the method "developers.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Email address of the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer_email}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Returns the developer details, including the developer's name, email address, apps, and other
         * information. **Note**: The response includes only the first 100 developer apps.
         *
         * Create a request for the method "developers.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Email address of the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer_email}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Email address of the developer. Use the following structure in your request:
       `organizations/{org}/developers/{developer_email}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Status of the developer. Valid values are `active` or `inactive`. */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Status of the developer. Valid values are `active` or `inactive`.
         */
        public java.lang.String getAction() {
          return action;
        }

        /** Status of the developer. Valid values are `active` or `inactive`. */
        public Get setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the account balance for the developer.
       *
       * Create a request for the method "developers.getBalance".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetBalance#execute()} method to invoke the remote operation.
       *
       * @param name Required. Account balance for the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer}/balance`
       * @return the request
       */
      public GetBalance getBalance(java.lang.String name) throws java.io.IOException {
        GetBalance result = new GetBalance(name);
        initialize(result);
        return result;
      }

      public class GetBalance extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperBalance> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/balance$");

        /**
         * Gets the account balance for the developer.
         *
         * Create a request for the method "developers.getBalance".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetBalance#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetBalance#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Account balance for the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer}/balance`
         * @since 1.13
         */
        protected GetBalance(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperBalance.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+/balance$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetBalance set$Xgafv(java.lang.String $Xgafv) {
          return (GetBalance) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetBalance setAccessToken(java.lang.String accessToken) {
          return (GetBalance) super.setAccessToken(accessToken);
        }

        @Override
        public GetBalance setAlt(java.lang.String alt) {
          return (GetBalance) super.setAlt(alt);
        }

        @Override
        public GetBalance setCallback(java.lang.String callback) {
          return (GetBalance) super.setCallback(callback);
        }

        @Override
        public GetBalance setFields(java.lang.String fields) {
          return (GetBalance) super.setFields(fields);
        }

        @Override
        public GetBalance setKey(java.lang.String key) {
          return (GetBalance) super.setKey(key);
        }

        @Override
        public GetBalance setOauthToken(java.lang.String oauthToken) {
          return (GetBalance) super.setOauthToken(oauthToken);
        }

        @Override
        public GetBalance setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetBalance) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetBalance setQuotaUser(java.lang.String quotaUser) {
          return (GetBalance) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetBalance setUploadType(java.lang.String uploadType) {
          return (GetBalance) super.setUploadType(uploadType);
        }

        @Override
        public GetBalance setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetBalance) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Account balance for the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer}/balance`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Account balance for the developer. Use the following structure in your request:
       `organizations/{org}/developers/{developer}/balance`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Account balance for the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer}/balance`
         */
        public GetBalance setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+/balance$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetBalance set(String parameterName, Object value) {
          return (GetBalance) super.set(parameterName, value);
        }
      }
      /**
       * Gets the monetization configuration for the developer.
       *
       * Create a request for the method "developers.getMonetizationConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetMonetizationConfig#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Monetization configuration for the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer}/monetizationConfig`
       * @return the request
       */
      public GetMonetizationConfig getMonetizationConfig(java.lang.String name) throws java.io.IOException {
        GetMonetizationConfig result = new GetMonetizationConfig(name);
        initialize(result);
        return result;
      }

      public class GetMonetizationConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperMonetizationConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/monetizationConfig$");

        /**
         * Gets the monetization configuration for the developer.
         *
         * Create a request for the method "developers.getMonetizationConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetMonetizationConfig#execute()} method to invoke the remote
         * operation. <p> {@link GetMonetizationConfig#initialize(com.google.api.client.googleapis.service
         * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. Monetization configuration for the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer}/monetizationConfig`
         * @since 1.13
         */
        protected GetMonetizationConfig(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperMonetizationConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+/monetizationConfig$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetMonetizationConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetMonetizationConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetMonetizationConfig setAccessToken(java.lang.String accessToken) {
          return (GetMonetizationConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetMonetizationConfig setAlt(java.lang.String alt) {
          return (GetMonetizationConfig) super.setAlt(alt);
        }

        @Override
        public GetMonetizationConfig setCallback(java.lang.String callback) {
          return (GetMonetizationConfig) super.setCallback(callback);
        }

        @Override
        public GetMonetizationConfig setFields(java.lang.String fields) {
          return (GetMonetizationConfig) super.setFields(fields);
        }

        @Override
        public GetMonetizationConfig setKey(java.lang.String key) {
          return (GetMonetizationConfig) super.setKey(key);
        }

        @Override
        public GetMonetizationConfig setOauthToken(java.lang.String oauthToken) {
          return (GetMonetizationConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetMonetizationConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetMonetizationConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetMonetizationConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetMonetizationConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetMonetizationConfig setUploadType(java.lang.String uploadType) {
          return (GetMonetizationConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetMonetizationConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetMonetizationConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Monetization configuration for the developer. Use the following structure in
         * your request: `organizations/{org}/developers/{developer}/monetizationConfig`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Monetization configuration for the developer. Use the following structure in your
       request: `organizations/{org}/developers/{developer}/monetizationConfig`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Monetization configuration for the developer. Use the following structure in
         * your request: `organizations/{org}/developers/{developer}/monetizationConfig`
         */
        public GetMonetizationConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+/monetizationConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetMonetizationConfig set(String parameterName, Object value) {
          return (GetMonetizationConfig) super.set(parameterName, value);
        }
      }
      /**
       * Lists all developers in an organization by email address. By default, the response does not
       * include company developers. Set the `includeCompany` query parameter to `true` to include company
       * developers. **Note**: A maximum of 1000 developers are returned in the response. You paginate the
       * list of developers returned using the `startKey` and `count` query parameters.
       *
       * Create a request for the method "developers.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in your request:
       *        `organizations/{org}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOfDevelopersResponse> {

        private static final String REST_PATH = "v1/{+parent}/developers";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all developers in an organization by email address. By default, the response does not
         * include company developers. Set the `includeCompany` query parameter to `true` to include
         * company developers. **Note**: A maximum of 1000 developers are returned in the response. You
         * paginate the list of developers returned using the `startKey` and `count` query parameters.
         *
         * Create a request for the method "developers.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in your request:
       *        `organizations/{org}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOfDevelopersResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization. Use the following structure in your request:
       `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. List only Developers that are associated with the app. Note that start_key,
         * count are not applicable for this filter criteria.
         */
        @com.google.api.client.util.Key
        private java.lang.String app;

        /** Optional. List only Developers that are associated with the app. Note that start_key, count are not
       applicable for this filter criteria.
         */
        public java.lang.String getApp() {
          return app;
        }

        /**
         * Optional. List only Developers that are associated with the app. Note that start_key,
         * count are not applicable for this filter criteria.
         */
        public List setApp(java.lang.String app) {
          this.app = app;
          return this;
        }

        /**
         * Optional. Number of developers to return in the API call. Use with the `startKey`
         * parameter to provide more targeted filtering. The limit is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Long count;

        /** Optional. Number of developers to return in the API call. Use with the `startKey` parameter to
       provide more targeted filtering. The limit is 1000.
         */
        public java.lang.Long getCount() {
          return count;
        }

        /**
         * Optional. Number of developers to return in the API call. Use with the `startKey`
         * parameter to provide more targeted filtering. The limit is 1000.
         */
        public List setCount(java.lang.Long count) {
          this.count = count;
          return this;
        }

        /**
         * Specifies whether to expand the results. Set to `true` to expand the results. This query
         * parameter is not valid if you use the `count` or `startKey` query parameters.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Specifies whether to expand the results. Set to `true` to expand the results. This query parameter
       is not valid if you use the `count` or `startKey` query parameters.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /**
         * Specifies whether to expand the results. Set to `true` to expand the results. This query
         * parameter is not valid if you use the `count` or `startKey` query parameters.
         */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        /** Optional. List of IDs to include, separated by commas. */
        @com.google.api.client.util.Key
        private java.lang.String ids;

        /** Optional. List of IDs to include, separated by commas.
         */
        public java.lang.String getIds() {
          return ids;
        }

        /** Optional. List of IDs to include, separated by commas. */
        public List setIds(java.lang.String ids) {
          this.ids = ids;
          return this;
        }

        /** Flag that specifies whether to include company details in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeCompany;

        /** Flag that specifies whether to include company details in the response.
         */
        public java.lang.Boolean getIncludeCompany() {
          return includeCompany;
        }

        /** Flag that specifies whether to include company details in the response. */
        public List setIncludeCompany(java.lang.Boolean includeCompany) {
          this.includeCompany = includeCompany;
          return this;
        }

        /**
         * **Note**: Must be used in conjunction with the `count` parameter. Email address of the
         * developer from which to start displaying the list of developers. For example, if the an
         * unfiltered list returns: ``` westley@example.com fezzik@example.com buttercup@example.com
         * ``` and your `startKey` is `fezzik@example.com`, the list returned will be ```
         * fezzik@example.com buttercup@example.com ```
         */
        @com.google.api.client.util.Key
        private java.lang.String startKey;

        /**** Note**: Must be used in conjunction with the `count` parameter. Email address of the developer
      ** from which to start displaying the list of developers. For example, if the an unfiltered list
      ** returns: ``` westley@example.com fezzik@example.com buttercup@example.com ``` and your `startKey`
      ** is `fezzik@example.com`, the list returned will be ``` fezzik@example.com buttercup@example.com
      ** ```
      **

         */
        public java.lang.String getStartKey() {
          return startKey;
        }

        /**
         * **Note**: Must be used in conjunction with the `count` parameter. Email address of the
         * developer from which to start displaying the list of developers. For example, if the an
         * unfiltered list returns: ``` westley@example.com fezzik@example.com buttercup@example.com
         * ``` and your `startKey` is `fezzik@example.com`, the list returned will be ```
         * fezzik@example.com buttercup@example.com ```
         */
        public List setStartKey(java.lang.String startKey) {
          this.startKey = startKey;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Sets the status of a developer. A developer is `active` by default. If you set a developer's
       * status to `inactive`, the API keys assigned to the developer apps are no longer valid even though
       * the API keys are set to `approved`. Inactive developers can still sign in to the developer portal
       * and create apps; however, any new API keys generated during app creation won't work. To set the
       * status of a developer, set the `action` query parameter to `active` or `inactive`, and the
       * `Content-Type` header to `application/octet-stream`. If successful, the API call returns the
       * following HTTP status code: `204 No Content`
       *
       * Create a request for the method "developers.setDeveloperStatus".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link SetDeveloperStatus#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer_id}`
       * @return the request
       */
      public SetDeveloperStatus setDeveloperStatus(java.lang.String name) throws java.io.IOException {
        SetDeveloperStatus result = new SetDeveloperStatus(name);
        initialize(result);
        return result;
      }

      public class SetDeveloperStatus extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Sets the status of a developer. A developer is `active` by default. If you set a developer's
         * status to `inactive`, the API keys assigned to the developer apps are no longer valid even
         * though the API keys are set to `approved`. Inactive developers can still sign in to the
         * developer portal and create apps; however, any new API keys generated during app creation won't
         * work. To set the status of a developer, set the `action` query parameter to `active` or
         * `inactive`, and the `Content-Type` header to `application/octet-stream`. If successful, the API
         * call returns the following HTTP status code: `204 No Content`
         *
         * Create a request for the method "developers.setDeveloperStatus".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link SetDeveloperStatus#execute()} method to invoke the remote
         * operation. <p> {@link SetDeveloperStatus#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. Name of the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer_id}`
         * @since 1.13
         */
        protected SetDeveloperStatus(java.lang.String name) {
          super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public SetDeveloperStatus set$Xgafv(java.lang.String $Xgafv) {
          return (SetDeveloperStatus) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetDeveloperStatus setAccessToken(java.lang.String accessToken) {
          return (SetDeveloperStatus) super.setAccessToken(accessToken);
        }

        @Override
        public SetDeveloperStatus setAlt(java.lang.String alt) {
          return (SetDeveloperStatus) super.setAlt(alt);
        }

        @Override
        public SetDeveloperStatus setCallback(java.lang.String callback) {
          return (SetDeveloperStatus) super.setCallback(callback);
        }

        @Override
        public SetDeveloperStatus setFields(java.lang.String fields) {
          return (SetDeveloperStatus) super.setFields(fields);
        }

        @Override
        public SetDeveloperStatus setKey(java.lang.String key) {
          return (SetDeveloperStatus) super.setKey(key);
        }

        @Override
        public SetDeveloperStatus setOauthToken(java.lang.String oauthToken) {
          return (SetDeveloperStatus) super.setOauthToken(oauthToken);
        }

        @Override
        public SetDeveloperStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetDeveloperStatus) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetDeveloperStatus setQuotaUser(java.lang.String quotaUser) {
          return (SetDeveloperStatus) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetDeveloperStatus setUploadType(java.lang.String uploadType) {
          return (SetDeveloperStatus) super.setUploadType(uploadType);
        }

        @Override
        public SetDeveloperStatus setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetDeveloperStatus) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the developer. Use the following structure in your request:
       `organizations/{org}/developers/{developer_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_id}`
         */
        public SetDeveloperStatus setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Status of the developer. Valid values are `active` and `inactive`. */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Status of the developer. Valid values are `active` and `inactive`.
         */
        public java.lang.String getAction() {
          return action;
        }

        /** Status of the developer. Valid values are `active` and `inactive`. */
        public SetDeveloperStatus setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        @Override
        public SetDeveloperStatus set(String parameterName, Object value) {
          return (SetDeveloperStatus) super.set(parameterName, value);
        }
      }
      /**
       * Updates a developer. This API replaces the existing developer details with those specified in the
       * request. Include or exclude any existing details that you want to retain or delete, respectively.
       * The custom attribute limit is 18. **Note**: OAuth access tokens and Key Management Service (KMS)
       * entities (apps, developers, and API products) are cached for 180 seconds (current default). Any
       * custom attributes associated with these entities are cached for at least 180 seconds after the
       * entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be
       * able to expire an access token in less than 180 seconds.
       *
       * Create a request for the method "developers.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. Email address of the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer_email}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Updates a developer. This API replaces the existing developer details with those specified in
         * the request. Include or exclude any existing details that you want to retain or delete,
         * respectively. The custom attribute limit is 18. **Note**: OAuth access tokens and Key
         * Management Service (KMS) entities (apps, developers, and API products) are cached for 180
         * seconds (current default). Any custom attributes associated with these entities are cached for
         * at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element
         * on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
         *
         * Create a request for the method "developers.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Email address of the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer_email}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Email address of the developer. Use the following structure in your request:
       `organizations/{org}/developers/{developer_email}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }
      /**
       * Updates the monetization configuration for the developer.
       *
       * Create a request for the method "developers.updateMonetizationConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdateMonetizationConfig#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Monetization configuration for the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer}/monetizationConfig`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperMonetizationConfig}
       * @return the request
       */
      public UpdateMonetizationConfig updateMonetizationConfig(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperMonetizationConfig content) throws java.io.IOException {
        UpdateMonetizationConfig result = new UpdateMonetizationConfig(name, content);
        initialize(result);
        return result;
      }

      public class UpdateMonetizationConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperMonetizationConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/monetizationConfig$");

        /**
         * Updates the monetization configuration for the developer.
         *
         * Create a request for the method "developers.updateMonetizationConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdateMonetizationConfig#execute()} method to invoke the remote
         * operation. <p> {@link UpdateMonetizationConfig#initialize(com.google.api.client.googleapis.serv
         * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. Monetization configuration for the developer. Use the following structure in your request:
       *        `organizations/{org}/developers/{developer}/monetizationConfig`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperMonetizationConfig}
         * @since 1.13
         */
        protected UpdateMonetizationConfig(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperMonetizationConfig content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperMonetizationConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+/monetizationConfig$");
          }
        }

        @Override
        public UpdateMonetizationConfig set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateMonetizationConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateMonetizationConfig setAccessToken(java.lang.String accessToken) {
          return (UpdateMonetizationConfig) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateMonetizationConfig setAlt(java.lang.String alt) {
          return (UpdateMonetizationConfig) super.setAlt(alt);
        }

        @Override
        public UpdateMonetizationConfig setCallback(java.lang.String callback) {
          return (UpdateMonetizationConfig) super.setCallback(callback);
        }

        @Override
        public UpdateMonetizationConfig setFields(java.lang.String fields) {
          return (UpdateMonetizationConfig) super.setFields(fields);
        }

        @Override
        public UpdateMonetizationConfig setKey(java.lang.String key) {
          return (UpdateMonetizationConfig) super.setKey(key);
        }

        @Override
        public UpdateMonetizationConfig setOauthToken(java.lang.String oauthToken) {
          return (UpdateMonetizationConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateMonetizationConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateMonetizationConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateMonetizationConfig setQuotaUser(java.lang.String quotaUser) {
          return (UpdateMonetizationConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateMonetizationConfig setUploadType(java.lang.String uploadType) {
          return (UpdateMonetizationConfig) super.setUploadType(uploadType);
        }

        @Override
        public UpdateMonetizationConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateMonetizationConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Monetization configuration for the developer. Use the following structure in
         * your request: `organizations/{org}/developers/{developer}/monetizationConfig`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Monetization configuration for the developer. Use the following structure in your
       request: `organizations/{org}/developers/{developer}/monetizationConfig`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Monetization configuration for the developer. Use the following structure in
         * your request: `organizations/{org}/developers/{developer}/monetizationConfig`
         */
        public UpdateMonetizationConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+/monetizationConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public UpdateMonetizationConfig set(String parameterName, Object value) {
          return (UpdateMonetizationConfig) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Apps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apps.List request = apigee.apps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apps apps() {
        return new Apps();
      }

      /**
       * The "apps" collection of methods.
       */
      public class Apps {

        /**
         * Updates attributes for a developer app. This API replaces the current attributes with those
         * specified in the request.
         *
         * Create a request for the method "apps.attributes".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link AttributesRequest#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
         * @return the request
         */
        public AttributesRequest attributes(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) throws java.io.IOException {
          AttributesRequest result = new AttributesRequest(name, content);
          initialize(result);
          return result;
        }

        public class AttributesRequest extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

          private static final String REST_PATH = "v1/{+name}/attributes";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Updates attributes for a developer app. This API replaces the current attributes with those
           * specified in the request.
           *
           * Create a request for the method "apps.attributes".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link AttributesRequest#execute()} method to invoke the remote operation.
           * <p> {@link AttributesRequest#initialize(com.google.api.client.googleapis.services.AbstractGoogl
           * eClientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
           * @since 1.13
           */
          protected AttributesRequest(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public AttributesRequest set$Xgafv(java.lang.String $Xgafv) {
            return (AttributesRequest) super.set$Xgafv($Xgafv);
          }

          @Override
          public AttributesRequest setAccessToken(java.lang.String accessToken) {
            return (AttributesRequest) super.setAccessToken(accessToken);
          }

          @Override
          public AttributesRequest setAlt(java.lang.String alt) {
            return (AttributesRequest) super.setAlt(alt);
          }

          @Override
          public AttributesRequest setCallback(java.lang.String callback) {
            return (AttributesRequest) super.setCallback(callback);
          }

          @Override
          public AttributesRequest setFields(java.lang.String fields) {
            return (AttributesRequest) super.setFields(fields);
          }

          @Override
          public AttributesRequest setKey(java.lang.String key) {
            return (AttributesRequest) super.setKey(key);
          }

          @Override
          public AttributesRequest setOauthToken(java.lang.String oauthToken) {
            return (AttributesRequest) super.setOauthToken(oauthToken);
          }

          @Override
          public AttributesRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (AttributesRequest) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public AttributesRequest setQuotaUser(java.lang.String quotaUser) {
            return (AttributesRequest) super.setQuotaUser(quotaUser);
          }

          @Override
          public AttributesRequest setUploadType(java.lang.String uploadType) {
            return (AttributesRequest) super.setUploadType(uploadType);
          }

          @Override
          public AttributesRequest setUploadProtocol(java.lang.String uploadProtocol) {
            return (AttributesRequest) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer app. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public AttributesRequest setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public AttributesRequest set(String parameterName, Object value) {
            return (AttributesRequest) super.set(parameterName, value);
          }
        }
        /**
         * Creates an app associated with a developer. This API associates the developer app with the
         * specified API product and auto-generates an API key for the app to use in calls to API proxies
         * inside that API product. The `name` is the unique ID of the app that you can use in API calls.
         * The `DisplayName` (set as an attribute) appears in the UI. If you don't set the `DisplayName`
         * attribute, the `name` appears in the UI.
         *
         * Create a request for the method "apps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

          /**
           * Creates an app associated with a developer. This API associates the developer app with the
           * specified API product and auto-generates an API key for the app to use in calls to API proxies
           * inside that API product. The `name` is the unique ID of the app that you can use in API calls.
           * The `DisplayName` (set as an attribute) appears in the UI. If you don't set the `DisplayName`
           * attribute, the `name` appears in the UI.
           *
           * Create a request for the method "apps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the developer. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the developer. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a developer app. **Note**: The delete operation is asynchronous. The developer app is
         * deleted immediately, but its associated resources, such as app keys or access tokens, may take
         * anywhere from a few seconds to a few minutes to be deleted.
         *
         * Create a request for the method "apps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Deletes a developer app. **Note**: The delete operation is asynchronous. The developer app is
           * deleted immediately, but its associated resources, such as app keys or access tokens, may take
           * anywhere from a few seconds to a few minutes to be deleted.
           *
           * Create a request for the method "apps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer app. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Manages access to a developer app by enabling you to: * Approve or revoke a developer app *
         * Generate a new consumer key and secret for a developer app To approve or revoke a developer app,
         * set the `action` query parameter to `approve` or `revoke`, respectively, and the `Content-Type`
         * header to `application/octet-stream`. If a developer app is revoked, none of its API keys are
         * valid for API calls even though the keys are still approved. If successful, the API call returns
         * the following HTTP status code: `204 No Content` To generate a new consumer key and secret for a
         * developer app, pass the new key/secret details. Rather than replace an existing key, this API
         * generates a new key. In this case, multiple key pairs may be associated with a single developer
         * app. Each key pair has an independent status (`approve` or `revoke`) and expiration time. Any
         * approved, non-expired key can be used in an API call. For example, if you're using API key
         * rotation, you can generate new keys with expiration times that overlap keys that are going to
         * expire. You might also generate a new consumer key/secret if the security of the original
         * key/secret is compromised. The `keyExpiresIn` property defines the expiration time for the API
         * key in milliseconds. If you don't set this property or set it to `-1`, the API key never expires.
         * **Notes**: * When generating a new key/secret, this API replaces the existing attributes, notes,
         * and callback URLs with those specified in the request. Include or exclude any existing
         * information that you want to retain or delete, respectively. * To migrate existing consumer keys
         * and secrets to hybrid from another system, see the CreateDeveloperAppKey API.
         *
         * Create a request for the method "apps.generateKeyPairOrUpdateDeveloperAppStatus".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GenerateKeyPairOrUpdateDeveloperAppStatus#execute()} method to invoke
         * the remote operation.
         *
         * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
         * @return the request
         */
        public GenerateKeyPairOrUpdateDeveloperAppStatus generateKeyPairOrUpdateDeveloperAppStatus(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) throws java.io.IOException {
          GenerateKeyPairOrUpdateDeveloperAppStatus result = new GenerateKeyPairOrUpdateDeveloperAppStatus(name, content);
          initialize(result);
          return result;
        }

        public class GenerateKeyPairOrUpdateDeveloperAppStatus extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Manages access to a developer app by enabling you to: * Approve or revoke a developer app *
           * Generate a new consumer key and secret for a developer app To approve or revoke a developer
           * app, set the `action` query parameter to `approve` or `revoke`, respectively, and the `Content-
           * Type` header to `application/octet-stream`. If a developer app is revoked, none of its API keys
           * are valid for API calls even though the keys are still approved. If successful, the API call
           * returns the following HTTP status code: `204 No Content` To generate a new consumer key and
           * secret for a developer app, pass the new key/secret details. Rather than replace an existing
           * key, this API generates a new key. In this case, multiple key pairs may be associated with a
           * single developer app. Each key pair has an independent status (`approve` or `revoke`) and
           * expiration time. Any approved, non-expired key can be used in an API call. For example, if
           * you're using API key rotation, you can generate new keys with expiration times that overlap
           * keys that are going to expire. You might also generate a new consumer key/secret if the
           * security of the original key/secret is compromised. The `keyExpiresIn` property defines the
           * expiration time for the API key in milliseconds. If you don't set this property or set it to
           * `-1`, the API key never expires. **Notes**: * When generating a new key/secret, this API
           * replaces the existing attributes, notes, and callback URLs with those specified in the request.
           * Include or exclude any existing information that you want to retain or delete, respectively. *
           * To migrate existing consumer keys and secrets to hybrid from another system, see the
           * CreateDeveloperAppKey API.
           *
           * Create a request for the method "apps.generateKeyPairOrUpdateDeveloperAppStatus".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GenerateKeyPairOrUpdateDeveloperAppStatus#execute()} method to
           * invoke the remote operation. <p> {@link GenerateKeyPairOrUpdateDeveloperAppStatus#initialize(co
           * m.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to
           * initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
           * @since 1.13
           */
          protected GenerateKeyPairOrUpdateDeveloperAppStatus(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus set$Xgafv(java.lang.String $Xgafv) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.set$Xgafv($Xgafv);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setAccessToken(java.lang.String accessToken) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setAccessToken(accessToken);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setAlt(java.lang.String alt) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setAlt(alt);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setCallback(java.lang.String callback) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setCallback(callback);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setFields(java.lang.String fields) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setFields(fields);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setKey(java.lang.String key) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setKey(key);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setOauthToken(java.lang.String oauthToken) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setOauthToken(oauthToken);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setQuotaUser(java.lang.String quotaUser) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setQuotaUser(quotaUser);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setUploadType(java.lang.String uploadType) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setUploadType(uploadType);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setUploadProtocol(java.lang.String uploadProtocol) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer app. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public GenerateKeyPairOrUpdateDeveloperAppStatus setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Action. Valid values are `approve` or `revoke`. */
          @com.google.api.client.util.Key
          private java.lang.String action;

          /** Action. Valid values are `approve` or `revoke`.
           */
          public java.lang.String getAction() {
            return action;
          }

          /** Action. Valid values are `approve` or `revoke`. */
          public GenerateKeyPairOrUpdateDeveloperAppStatus setAction(java.lang.String action) {
            this.action = action;
            return this;
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus set(String parameterName, Object value) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.set(parameterName, value);
          }
        }
        /**
         * Returns the details for a developer app.
         *
         * Create a request for the method "apps.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Returns the details for a developer app.
           *
           * Create a request for the method "apps.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer app. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * **Note**: Must be used in conjunction with the `query` parameter. Set to `apiresources`
           * to return the number of API resources that have been approved for access by a developer
           * app in the specified Apigee organization.
           */
          @com.google.api.client.util.Key
          private java.lang.String entity;

          /**** Note**: Must be used in conjunction with the `query` parameter. Set to `apiresources` to return
        ** the number of API resources that have been approved for access by a developer app in the
        ** specified Apigee organization.
        **

           */
          public java.lang.String getEntity() {
            return entity;
          }

          /**
           * **Note**: Must be used in conjunction with the `query` parameter. Set to `apiresources`
           * to return the number of API resources that have been approved for access by a developer
           * app in the specified Apigee organization.
           */
          public Get setEntity(java.lang.String entity) {
            this.entity = entity;
            return this;
          }

          /**
           * **Note**: Must be used in conjunction with the `entity` parameter. Set to `count` to
           * return the number of API resources that have been approved for access by a developer
           * app in the specified Apigee organization.
           */
          @com.google.api.client.util.Key
          private java.lang.String query;

          /**** Note**: Must be used in conjunction with the `entity` parameter. Set to `count` to return the
        ** number of API resources that have been approved for access by a developer app in the specified
        ** Apigee organization.
        **

           */
          public java.lang.String getQuery() {
            return query;
          }

          /**
           * **Note**: Must be used in conjunction with the `entity` parameter. Set to `count` to
           * return the number of API resources that have been approved for access by a developer
           * app in the specified Apigee organization.
           */
          public Get setQuery(java.lang.String query) {
            this.query = query;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all apps created by a developer in an Apigee organization. Optionally, you can request an
         * expanded view of the developer apps. A maximum of 100 developer apps are returned per API call.
         * You can paginate the list of deveoper apps returned using the `startKey` and `count` query
         * parameters.
         *
         * Create a request for the method "apps.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeveloperAppsResponse> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

          /**
           * Lists all apps created by a developer in an Apigee organization. Optionally, you can request an
           * expanded view of the developer apps. A maximum of 100 developer apps are returned per API call.
           * You can paginate the list of deveoper apps returned using the `startKey` and `count` query
           * parameters.
           *
           * Create a request for the method "apps.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeveloperAppsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the developer. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the developer. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Number of developer apps to return in the API call. Use with the `startKey` parameter
           * to provide more targeted filtering. The limit is 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Long count;

          /** Number of developer apps to return in the API call. Use with the `startKey` parameter to provide
         more targeted filtering. The limit is 1000.
           */
          public java.lang.Long getCount() {
            return count;
          }

          /**
           * Number of developer apps to return in the API call. Use with the `startKey` parameter
           * to provide more targeted filtering. The limit is 1000.
           */
          public List setCount(java.lang.Long count) {
            this.count = count;
            return this;
          }

          /**
           * Optional. Specifies whether to expand the results. Set to `true` to expand the results.
           * This query parameter is not valid if you use the `count` or `startKey` query
           * parameters.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean expand;

          /** Optional. Specifies whether to expand the results. Set to `true` to expand the results. This query
         parameter is not valid if you use the `count` or `startKey` query parameters.
           */
          public java.lang.Boolean getExpand() {
            return expand;
          }

          /**
           * Optional. Specifies whether to expand the results. Set to `true` to expand the results.
           * This query parameter is not valid if you use the `count` or `startKey` query
           * parameters.
           */
          public List setExpand(java.lang.Boolean expand) {
            this.expand = expand;
            return this;
          }

          /**
           * Optional. Specifies whether to expand the results in shallow mode. Set to `true` to
           * expand the results in shallow mode.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean shallowExpand;

          /** Optional. Specifies whether to expand the results in shallow mode. Set to `true` to expand the
         results in shallow mode.
           */
          public java.lang.Boolean getShallowExpand() {
            return shallowExpand;
          }

          /**
           * Optional. Specifies whether to expand the results in shallow mode. Set to `true` to
           * expand the results in shallow mode.
           */
          public List setShallowExpand(java.lang.Boolean shallowExpand) {
            this.shallowExpand = shallowExpand;
            return this;
          }

          /**
           * **Note**: Must be used in conjunction with the `count` parameter. Name of the developer
           * app from which to start displaying the list of developer apps. For example, if you're
           * returning 50 developer apps at a time (using the `count` query parameter), you can view
           * developer apps 50-99 by entering the name of the 50th developer app. The developer app
           * name is case sensitive.
           */
          @com.google.api.client.util.Key
          private java.lang.String startKey;

          /**** Note**: Must be used in conjunction with the `count` parameter. Name of the developer app from
        ** which to start displaying the list of developer apps. For example, if you're returning 50
        ** developer apps at a time (using the `count` query parameter), you can view developer apps 50-99
        ** by entering the name of the 50th developer app. The developer app name is case sensitive.
        **

           */
          public java.lang.String getStartKey() {
            return startKey;
          }

          /**
           * **Note**: Must be used in conjunction with the `count` parameter. Name of the developer
           * app from which to start displaying the list of developer apps. For example, if you're
           * returning 50 developer apps at a time (using the `count` query parameter), you can view
           * developer apps 50-99 by entering the name of the 50th developer app. The developer app
           * name is case sensitive.
           */
          public List setStartKey(java.lang.String startKey) {
            this.startKey = startKey;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the details for a developer app. In addition, you can add an API product to a developer
         * app and automatically generate an API key for the app to use when calling APIs in the API
         * product. If you want to use an existing API key for the API product, add the API product to the
         * API key using the UpdateDeveloperAppKey API. Using this API, you cannot update the following: *
         * App name as it is the primary key used to identify the app and cannot be changed. * Scopes
         * associated with the app. Instead, use the ReplaceDeveloperAppKey API. This API replaces the
         * existing attributes with those specified in the request. Include or exclude any existing
         * attributes that you want to retain or delete, respectively.
         *
         * Create a request for the method "apps.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Updates the details for a developer app. In addition, you can add an API product to a developer
           * app and automatically generate an API key for the app to use when calling APIs in the API
           * product. If you want to use an existing API key for the API product, add the API product to the
           * API key using the UpdateDeveloperAppKey API. Using this API, you cannot update the following: *
           * App name as it is the primary key used to identify the app and cannot be changed. * Scopes
           * associated with the app. Instead, use the ReplaceDeveloperAppKey API. This API replaces the
           * existing attributes with those specified in the request. Include or exclude any existing
           * attributes that you want to retain or delete, respectively.
           *
           * Create a request for the method "apps.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer app. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Attributes collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Attributes.List request = apigee.attributes().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Attributes attributes() {
          return new Attributes();
        }

        /**
         * The "attributes" collection of methods.
         */
        public class Attributes {

          /**
           * Deletes a developer app attribute.
           *
           * Create a request for the method "attributes.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the developer app attribute. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");

            /**
             * Deletes a developer app attribute.
             *
             * Create a request for the method "attributes.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the developer app attribute. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the developer app attribute. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Returns a developer app attribute.
           *
           * Create a request for the method "attributes.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the developer app attribute. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");

            /**
             * Returns a developer app attribute.
             *
             * Create a request for the method "attributes.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the developer app attribute. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the developer app attribute. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns a list of all developer app attributes.
           *
           * Create a request for the method "attributes.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the developer app. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

            private static final String REST_PATH = "v1/{+parent}/attributes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

            /**
             * Returns a list of all developer app attributes.
             *
             * Create a request for the method "attributes.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the developer app. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the developer app. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the developer app. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the developer app. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a developer app attribute. **Note**: OAuth access tokens and Key Management Service (KMS)
           * entities (apps, developers, and API products) are cached for 180 seconds (current default). Any
           * custom attributes associated with these entities are cached for at least 180 seconds after the
           * entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be
           * able to expire an access token in less than 180 seconds.
           *
           * Create a request for the method "attributes.updateDeveloperAppAttribute".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link UpdateDeveloperAppAttribute#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. Name of the developer app attribute. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
           * @return the request
           */
          public UpdateDeveloperAppAttribute updateDeveloperAppAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) throws java.io.IOException {
            UpdateDeveloperAppAttribute result = new UpdateDeveloperAppAttribute(name, content);
            initialize(result);
            return result;
          }

          public class UpdateDeveloperAppAttribute extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");

            /**
             * Updates a developer app attribute. **Note**: OAuth access tokens and Key Management Service
             * (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current
             * default). Any custom attributes associated with these entities are cached for at least 180
             * seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the
             * OAuthV2 policy won't be able to expire an access token in less than 180 seconds.
             *
             * Create a request for the method "attributes.updateDeveloperAppAttribute".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link UpdateDeveloperAppAttribute#execute()} method to invoke the remote
             * operation. <p> {@link UpdateDeveloperAppAttribute#initialize(com.google.api.client.googleapis.s
             * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. Name of the developer app attribute. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
             * @since 1.13
             */
            protected UpdateDeveloperAppAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
            }

            @Override
            public UpdateDeveloperAppAttribute set$Xgafv(java.lang.String $Xgafv) {
              return (UpdateDeveloperAppAttribute) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpdateDeveloperAppAttribute setAccessToken(java.lang.String accessToken) {
              return (UpdateDeveloperAppAttribute) super.setAccessToken(accessToken);
            }

            @Override
            public UpdateDeveloperAppAttribute setAlt(java.lang.String alt) {
              return (UpdateDeveloperAppAttribute) super.setAlt(alt);
            }

            @Override
            public UpdateDeveloperAppAttribute setCallback(java.lang.String callback) {
              return (UpdateDeveloperAppAttribute) super.setCallback(callback);
            }

            @Override
            public UpdateDeveloperAppAttribute setFields(java.lang.String fields) {
              return (UpdateDeveloperAppAttribute) super.setFields(fields);
            }

            @Override
            public UpdateDeveloperAppAttribute setKey(java.lang.String key) {
              return (UpdateDeveloperAppAttribute) super.setKey(key);
            }

            @Override
            public UpdateDeveloperAppAttribute setOauthToken(java.lang.String oauthToken) {
              return (UpdateDeveloperAppAttribute) super.setOauthToken(oauthToken);
            }

            @Override
            public UpdateDeveloperAppAttribute setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpdateDeveloperAppAttribute) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpdateDeveloperAppAttribute setQuotaUser(java.lang.String quotaUser) {
              return (UpdateDeveloperAppAttribute) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpdateDeveloperAppAttribute setUploadType(java.lang.String uploadType) {
              return (UpdateDeveloperAppAttribute) super.setUploadType(uploadType);
            }

            @Override
            public UpdateDeveloperAppAttribute setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpdateDeveloperAppAttribute) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the developer app attribute. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public UpdateDeveloperAppAttribute setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public UpdateDeveloperAppAttribute set(String parameterName, Object value) {
              return (UpdateDeveloperAppAttribute) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Keys collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Keys.List request = apigee.keys().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Keys keys() {
          return new Keys();
        }

        /**
         * The "keys" collection of methods.
         */
        public class Keys {

          /**
           * Creates a custom consumer key and secret for a developer app. This is particularly useful if you
           * want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys
           * and secrets can contain letters, numbers, underscores, and hyphens. No other special characters
           * are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs
           * each. **Note**: When creating the consumer key and secret, an association to API products will
           * not be made. Therefore, you should not specify the associated API products in your request.
           * Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and
           * secret are created. If a consumer key and secret already exist, you can keep them or delete them
           * using the DeleteDeveloperAppKey API. **Note**: All keys start out with status=approved, even if
           * status=revoked is passed when the key is created. To revoke a key, use the UpdateDeveloperAppKey
           * API.
           *
           * Create a request for the method "keys.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link CreateRequest#execute()} method to invoke the remote operation.
           *
           * @param parent Parent of the developer app key. Use the following structure in your request:
           *        'organizations/{org}/developers/{developerEmail}/apps/{appName}'
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
           * @return the request
           */
          public CreateRequest create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
            CreateRequest result = new CreateRequest(parent, content);
            initialize(result);
            return result;
          }

          public class CreateRequest extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+parent}/keys";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

            /**
             * Creates a custom consumer key and secret for a developer app. This is particularly useful if
             * you want to migrate existing consumer keys and secrets to Apigee from another system. Consumer
             * keys and secrets can contain letters, numbers, underscores, and hyphens. No other special
             * characters are allowed. To avoid service disruptions, a consumer key and secret should not
             * exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API
             * products will not be made. Therefore, you should not specify the associated API products in
             * your request. Instead, use the UpdateDeveloperAppKey API to make the association after the
             * consumer key and secret are created. If a consumer key and secret already exist, you can keep
             * them or delete them using the DeleteDeveloperAppKey API. **Note**: All keys start out with
             * status=approved, even if status=revoked is passed when the key is created. To revoke a key, use
             * the UpdateDeveloperAppKey API.
             *
             * Create a request for the method "keys.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link CreateRequest#execute()} method to invoke the remote operation. <p>
             * {@link CreateRequest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
             * equest)} must be called to initialize this instance immediately after invoking the constructor.
             * </p>
             *
             * @param parent Parent of the developer app key. Use the following structure in your request:
           *        'organizations/{org}/developers/{developerEmail}/apps/{appName}'
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @since 1.13
             */
            protected CreateRequest(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
            }

            @Override
            public CreateRequest set$Xgafv(java.lang.String $Xgafv) {
              return (CreateRequest) super.set$Xgafv($Xgafv);
            }

            @Override
            public CreateRequest setAccessToken(java.lang.String accessToken) {
              return (CreateRequest) super.setAccessToken(accessToken);
            }

            @Override
            public CreateRequest setAlt(java.lang.String alt) {
              return (CreateRequest) super.setAlt(alt);
            }

            @Override
            public CreateRequest setCallback(java.lang.String callback) {
              return (CreateRequest) super.setCallback(callback);
            }

            @Override
            public CreateRequest setFields(java.lang.String fields) {
              return (CreateRequest) super.setFields(fields);
            }

            @Override
            public CreateRequest setKey(java.lang.String key) {
              return (CreateRequest) super.setKey(key);
            }

            @Override
            public CreateRequest setOauthToken(java.lang.String oauthToken) {
              return (CreateRequest) super.setOauthToken(oauthToken);
            }

            @Override
            public CreateRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (CreateRequest) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public CreateRequest setQuotaUser(java.lang.String quotaUser) {
              return (CreateRequest) super.setQuotaUser(quotaUser);
            }

            @Override
            public CreateRequest setUploadType(java.lang.String uploadType) {
              return (CreateRequest) super.setUploadType(uploadType);
            }

            @Override
            public CreateRequest setUploadProtocol(java.lang.String uploadProtocol) {
              return (CreateRequest) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Parent of the developer app key. Use the following structure in your request:
             * 'organizations/{org}/developers/{developerEmail}/apps/{appName}'
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Parent of the developer app key. Use the following structure in your request:
           'organizations/{org}/developers/{developerEmail}/apps/{appName}'
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Parent of the developer app key. Use the following structure in your request:
             * 'organizations/{org}/developers/{developerEmail}/apps/{appName}'
             */
            public CreateRequest setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public CreateRequest set(String parameterName, Object value) {
              return (CreateRequest) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an app's consumer key and removes all API products associated with the app. After the
           * consumer key is deleted, it cannot be used to access any APIs. **Note**: After you delete a
           * consumer key, you may want to: 1. Create a new consumer key and secret for the developer app
           * using the CreateDeveloperAppKey API, and subsequently add an API product to the key using the
           * UpdateDeveloperAppKey API. 2. Delete the developer app, if it is no longer required.
           *
           * Create a request for the method "keys.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Deletes an app's consumer key and removes all API products associated with the app. After the
             * consumer key is deleted, it cannot be used to access any APIs. **Note**: After you delete a
             * consumer key, you may want to: 1. Create a new consumer key and secret for the developer app
             * using the CreateDeveloperAppKey API, and subsequently add an API product to the key using the
             * UpdateDeveloperAppKey API. 2. Delete the developer app, if it is no longer required.
             *
             * Create a request for the method "keys.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Name of the developer app key. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets details for a consumer key for a developer app, including the key and secret value,
           * associated API products, and other information.
           *
           * Create a request for the method "keys.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Gets details for a consumer key for a developer app, including the key and secret value,
             * associated API products, and other information.
             *
             * Create a request for the method "keys.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Name of the developer app key. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Updates the scope of an app. This API replaces the existing scopes with those specified in the
           * request. Include or exclude any existing scopes that you want to retain or delete, respectively.
           * The specified scopes must already be defined for the API products associated with the app. This
           * API sets the `scopes` element under the `apiProducts` element in the attributes of the app.
           *
           * Create a request for the method "keys.replaceDeveloperAppKey".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link ReplaceDeveloperAppKey#execute()} method to invoke the remote
           * operation.
           *
           * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
           * @return the request
           */
          public ReplaceDeveloperAppKey replaceDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
            ReplaceDeveloperAppKey result = new ReplaceDeveloperAppKey(name, content);
            initialize(result);
            return result;
          }

          public class ReplaceDeveloperAppKey extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Updates the scope of an app. This API replaces the existing scopes with those specified in the
             * request. Include or exclude any existing scopes that you want to retain or delete,
             * respectively. The specified scopes must already be defined for the API products associated with
             * the app. This API sets the `scopes` element under the `apiProducts` element in the attributes
             * of the app.
             *
             * Create a request for the method "keys.replaceDeveloperAppKey".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link ReplaceDeveloperAppKey#execute()} method to invoke the remote
             * operation. <p> {@link ReplaceDeveloperAppKey#initialize(com.google.api.client.googleapis.servic
             * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @since 1.13
             */
            protected ReplaceDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
              super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public ReplaceDeveloperAppKey set$Xgafv(java.lang.String $Xgafv) {
              return (ReplaceDeveloperAppKey) super.set$Xgafv($Xgafv);
            }

            @Override
            public ReplaceDeveloperAppKey setAccessToken(java.lang.String accessToken) {
              return (ReplaceDeveloperAppKey) super.setAccessToken(accessToken);
            }

            @Override
            public ReplaceDeveloperAppKey setAlt(java.lang.String alt) {
              return (ReplaceDeveloperAppKey) super.setAlt(alt);
            }

            @Override
            public ReplaceDeveloperAppKey setCallback(java.lang.String callback) {
              return (ReplaceDeveloperAppKey) super.setCallback(callback);
            }

            @Override
            public ReplaceDeveloperAppKey setFields(java.lang.String fields) {
              return (ReplaceDeveloperAppKey) super.setFields(fields);
            }

            @Override
            public ReplaceDeveloperAppKey setKey(java.lang.String key) {
              return (ReplaceDeveloperAppKey) super.setKey(key);
            }

            @Override
            public ReplaceDeveloperAppKey setOauthToken(java.lang.String oauthToken) {
              return (ReplaceDeveloperAppKey) super.setOauthToken(oauthToken);
            }

            @Override
            public ReplaceDeveloperAppKey setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ReplaceDeveloperAppKey) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ReplaceDeveloperAppKey setQuotaUser(java.lang.String quotaUser) {
              return (ReplaceDeveloperAppKey) super.setQuotaUser(quotaUser);
            }

            @Override
            public ReplaceDeveloperAppKey setUploadType(java.lang.String uploadType) {
              return (ReplaceDeveloperAppKey) super.setUploadType(uploadType);
            }

            @Override
            public ReplaceDeveloperAppKey setUploadProtocol(java.lang.String uploadProtocol) {
              return (ReplaceDeveloperAppKey) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Name of the developer app key. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public ReplaceDeveloperAppKey setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public ReplaceDeveloperAppKey set(String parameterName, Object value) {
              return (ReplaceDeveloperAppKey) super.set(parameterName, value);
            }
          }
          /**
           * Adds an API product to a developer app key, enabling the app that holds the key to access the API
           * resources bundled in the API product. In addition, you can add attributes to a developer app key.
           * This API replaces the existing attributes with those specified in the request. Include or exclude
           * any existing attributes that you want to retain or delete, respectively. You can use the same key
           * to access all API products associated with the app.
           *
           * Create a request for the method "keys.updateDeveloperAppKey".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link UpdateDeveloperAppKey#execute()} method to invoke the remote
           * operation.
           *
           * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
           * @return the request
           */
          public UpdateDeveloperAppKey updateDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
            UpdateDeveloperAppKey result = new UpdateDeveloperAppKey(name, content);
            initialize(result);
            return result;
          }

          public class UpdateDeveloperAppKey extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Adds an API product to a developer app key, enabling the app that holds the key to access the
             * API resources bundled in the API product. In addition, you can add attributes to a developer
             * app key. This API replaces the existing attributes with those specified in the request. Include
             * or exclude any existing attributes that you want to retain or delete, respectively. You can use
             * the same key to access all API products associated with the app.
             *
             * Create a request for the method "keys.updateDeveloperAppKey".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link UpdateDeveloperAppKey#execute()} method to invoke the remote
             * operation. <p> {@link UpdateDeveloperAppKey#initialize(com.google.api.client.googleapis.service
             * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @since 1.13
             */
            protected UpdateDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public UpdateDeveloperAppKey set$Xgafv(java.lang.String $Xgafv) {
              return (UpdateDeveloperAppKey) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpdateDeveloperAppKey setAccessToken(java.lang.String accessToken) {
              return (UpdateDeveloperAppKey) super.setAccessToken(accessToken);
            }

            @Override
            public UpdateDeveloperAppKey setAlt(java.lang.String alt) {
              return (UpdateDeveloperAppKey) super.setAlt(alt);
            }

            @Override
            public UpdateDeveloperAppKey setCallback(java.lang.String callback) {
              return (UpdateDeveloperAppKey) super.setCallback(callback);
            }

            @Override
            public UpdateDeveloperAppKey setFields(java.lang.String fields) {
              return (UpdateDeveloperAppKey) super.setFields(fields);
            }

            @Override
            public UpdateDeveloperAppKey setKey(java.lang.String key) {
              return (UpdateDeveloperAppKey) super.setKey(key);
            }

            @Override
            public UpdateDeveloperAppKey setOauthToken(java.lang.String oauthToken) {
              return (UpdateDeveloperAppKey) super.setOauthToken(oauthToken);
            }

            @Override
            public UpdateDeveloperAppKey setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpdateDeveloperAppKey) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpdateDeveloperAppKey setQuotaUser(java.lang.String quotaUser) {
              return (UpdateDeveloperAppKey) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpdateDeveloperAppKey setUploadType(java.lang.String uploadType) {
              return (UpdateDeveloperAppKey) super.setUploadType(uploadType);
            }

            @Override
            public UpdateDeveloperAppKey setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpdateDeveloperAppKey) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Name of the developer app key. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public UpdateDeveloperAppKey setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Approve or revoke the consumer key by setting this value to `approve` or `revoke`,
             * respectively. The `Content-Type` header must be set to `application/octet-stream`.
             */
            @com.google.api.client.util.Key
            private java.lang.String action;

            /** Approve or revoke the consumer key by setting this value to `approve` or `revoke`, respectively.
           The `Content-Type` header must be set to `application/octet-stream`.
             */
            public java.lang.String getAction() {
              return action;
            }

            /**
             * Approve or revoke the consumer key by setting this value to `approve` or `revoke`,
             * respectively. The `Content-Type` header must be set to `application/octet-stream`.
             */
            public UpdateDeveloperAppKey setAction(java.lang.String action) {
              this.action = action;
              return this;
            }

            @Override
            public UpdateDeveloperAppKey set(String parameterName, Object value) {
              return (UpdateDeveloperAppKey) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Apiproducts collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Apigee apigee = new Apigee(...);}
           *   {@code Apigee.Apiproducts.List request = apigee.apiproducts().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Apiproducts apiproducts() {
            return new Apiproducts();
          }

          /**
           * The "apiproducts" collection of methods.
           */
          public class Apiproducts {

            /**
             * Removes an API product from an app's consumer key. After the API product is removed, the app
             * cannot access the API resources defined in that API product. **Note**: The consumer key is not
             * removed, only its association with the API product.
             *
             * Create a request for the method "apiproducts.delete".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Name of the API product in the developer app key in the following format:
             *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apipr
             *        oduct}`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");

              /**
               * Removes an API product from an app's consumer key. After the API product is removed, the app
               * cannot access the API resources defined in that API product. **Note**: The consumer key is not
               * removed, only its association with the API product.
               *
               * Create a request for the method "apiproducts.delete".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Name of the API product in the developer app key in the following format:
             *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apipr
             *        oduct}`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Name of the API product in the developer app key in the following format: `organiza
               * tions/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiprod
               * uct}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Name of the API product in the developer app key in the following format:
             `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Name of the API product in the developer app key in the following format: `organiza
               * tions/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiprod
               * uct}`
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Approves or revokes the consumer key for an API product. After a consumer key is approved, the
             * app can use it to access APIs. A consumer key that is revoked or pending cannot be used to access
             * an API. Any access tokens associated with a revoked consumer key will remain active. However,
             * Apigee checks the status of the consumer key and if set to `revoked` will not allow access to the
             * API.
             *
             * Create a request for the method "apiproducts.updateDeveloperAppKeyApiProduct".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link UpdateDeveloperAppKeyApiProduct#execute()} method to invoke the
             * remote operation.
             *
             * @param name Name of the API product in the developer app key in the following format:
             *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apipr
             *        oduct}`
             * @return the request
             */
            public UpdateDeveloperAppKeyApiProduct updateDeveloperAppKeyApiProduct(java.lang.String name) throws java.io.IOException {
              UpdateDeveloperAppKeyApiProduct result = new UpdateDeveloperAppKeyApiProduct(name);
              initialize(result);
              return result;
            }

            public class UpdateDeveloperAppKeyApiProduct extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");

              /**
               * Approves or revokes the consumer key for an API product. After a consumer key is approved, the
               * app can use it to access APIs. A consumer key that is revoked or pending cannot be used to
               * access an API. Any access tokens associated with a revoked consumer key will remain active.
               * However, Apigee checks the status of the consumer key and if set to `revoked` will not allow
               * access to the API.
               *
               * Create a request for the method "apiproducts.updateDeveloperAppKeyApiProduct".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link UpdateDeveloperAppKeyApiProduct#execute()} method to invoke the
               * remote operation. <p> {@link UpdateDeveloperAppKeyApiProduct#initialize(com.google.api.client.g
               * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
               * immediately after invoking the constructor. </p>
               *
               * @param name Name of the API product in the developer app key in the following format:
             *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apipr
             *        oduct}`
               * @since 1.13
               */
              protected UpdateDeveloperAppKeyApiProduct(java.lang.String name) {
                super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct set$Xgafv(java.lang.String $Xgafv) {
                return (UpdateDeveloperAppKeyApiProduct) super.set$Xgafv($Xgafv);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setAccessToken(java.lang.String accessToken) {
                return (UpdateDeveloperAppKeyApiProduct) super.setAccessToken(accessToken);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setAlt(java.lang.String alt) {
                return (UpdateDeveloperAppKeyApiProduct) super.setAlt(alt);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setCallback(java.lang.String callback) {
                return (UpdateDeveloperAppKeyApiProduct) super.setCallback(callback);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setFields(java.lang.String fields) {
                return (UpdateDeveloperAppKeyApiProduct) super.setFields(fields);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setKey(java.lang.String key) {
                return (UpdateDeveloperAppKeyApiProduct) super.setKey(key);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setOauthToken(java.lang.String oauthToken) {
                return (UpdateDeveloperAppKeyApiProduct) super.setOauthToken(oauthToken);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (UpdateDeveloperAppKeyApiProduct) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setQuotaUser(java.lang.String quotaUser) {
                return (UpdateDeveloperAppKeyApiProduct) super.setQuotaUser(quotaUser);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setUploadType(java.lang.String uploadType) {
                return (UpdateDeveloperAppKeyApiProduct) super.setUploadType(uploadType);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setUploadProtocol(java.lang.String uploadProtocol) {
                return (UpdateDeveloperAppKeyApiProduct) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Name of the API product in the developer app key in the following format: `organiza
               * tions/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiprod
               * uct}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Name of the API product in the developer app key in the following format:
             `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Name of the API product in the developer app key in the following format: `organiza
               * tions/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiprod
               * uct}`
               */
              public UpdateDeveloperAppKeyApiProduct setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Approve or revoke the consumer key by setting this value to `approve` or `revoke`,
               * respectively.
               */
              @com.google.api.client.util.Key
              private java.lang.String action;

              /** Approve or revoke the consumer key by setting this value to `approve` or `revoke`, respectively.
               */
              public java.lang.String getAction() {
                return action;
              }

              /**
               * Approve or revoke the consumer key by setting this value to `approve` or `revoke`,
               * respectively.
               */
              public UpdateDeveloperAppKeyApiProduct setAction(java.lang.String action) {
                this.action = action;
                return this;
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct set(String parameterName, Object value) {
                return (UpdateDeveloperAppKeyApiProduct) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Create collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Apigee apigee = new Apigee(...);}
           *   {@code Apigee.Create.List request = apigee.create().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Create create() {
            return new Create();
          }

          /**
           * The "create" collection of methods.
           */
          public class Create {

            /**
             * Creates a custom consumer key and secret for a developer app. This is particularly useful if you
             * want to migrate existing consumer keys and secrets to Apigee from another system. Consumer keys
             * and secrets can contain letters, numbers, underscores, and hyphens. No other special characters
             * are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs
             * each. **Note**: When creating the consumer key and secret, an association to API products will
             * not be made. Therefore, you should not specify the associated API products in your request.
             * Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and
             * secret are created. If a consumer key and secret already exist, you can keep them or delete them
             * using the DeleteDeveloperAppKey API. **Note**: All keys start out with status=approved, even if
             * status=revoked is passed when the key is created. To revoke a key, use the UpdateDeveloperAppKey
             * API.
             *
             * Create a request for the method "create.create".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link CreateRequest#execute()} method to invoke the remote operation.
             *
             * @param parent Parent of the developer app key. Use the following structure in your request:
             *        'organizations/{org}/developers/{developerEmail}/apps/{appName}'
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @return the request
             */
            public CreateRequest create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
              CreateRequest result = new CreateRequest(parent, content);
              initialize(result);
              return result;
            }

            public class CreateRequest extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

              private static final String REST_PATH = "v1/{+parent}/keys/create";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

              /**
               * Creates a custom consumer key and secret for a developer app. This is particularly useful if
               * you want to migrate existing consumer keys and secrets to Apigee from another system. Consumer
               * keys and secrets can contain letters, numbers, underscores, and hyphens. No other special
               * characters are allowed. To avoid service disruptions, a consumer key and secret should not
               * exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API
               * products will not be made. Therefore, you should not specify the associated API products in
               * your request. Instead, use the UpdateDeveloperAppKey API to make the association after the
               * consumer key and secret are created. If a consumer key and secret already exist, you can keep
               * them or delete them using the DeleteDeveloperAppKey API. **Note**: All keys start out with
               * status=approved, even if status=revoked is passed when the key is created. To revoke a key, use
               * the UpdateDeveloperAppKey API.
               *
               * Create a request for the method "create.create".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link CreateRequest#execute()} method to invoke the remote operation. <p>
               * {@link CreateRequest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
               * equest)} must be called to initialize this instance immediately after invoking the constructor.
               * </p>
               *
               * @param parent Parent of the developer app key. Use the following structure in your request:
             *        'organizations/{org}/developers/{developerEmail}/apps/{appName}'
               * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
               * @since 1.13
               */
              protected CreateRequest(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
                super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
                }
              }

              @Override
              public CreateRequest set$Xgafv(java.lang.String $Xgafv) {
                return (CreateRequest) super.set$Xgafv($Xgafv);
              }

              @Override
              public CreateRequest setAccessToken(java.lang.String accessToken) {
                return (CreateRequest) super.setAccessToken(accessToken);
              }

              @Override
              public CreateRequest setAlt(java.lang.String alt) {
                return (CreateRequest) super.setAlt(alt);
              }

              @Override
              public CreateRequest setCallback(java.lang.String callback) {
                return (CreateRequest) super.setCallback(callback);
              }

              @Override
              public CreateRequest setFields(java.lang.String fields) {
                return (CreateRequest) super.setFields(fields);
              }

              @Override
              public CreateRequest setKey(java.lang.String key) {
                return (CreateRequest) super.setKey(key);
              }

              @Override
              public CreateRequest setOauthToken(java.lang.String oauthToken) {
                return (CreateRequest) super.setOauthToken(oauthToken);
              }

              @Override
              public CreateRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (CreateRequest) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public CreateRequest setQuotaUser(java.lang.String quotaUser) {
                return (CreateRequest) super.setQuotaUser(quotaUser);
              }

              @Override
              public CreateRequest setUploadType(java.lang.String uploadType) {
                return (CreateRequest) super.setUploadType(uploadType);
              }

              @Override
              public CreateRequest setUploadProtocol(java.lang.String uploadProtocol) {
                return (CreateRequest) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Parent of the developer app key. Use the following structure in your request:
               * 'organizations/{org}/developers/{developerEmail}/apps/{appName}'
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Parent of the developer app key. Use the following structure in your request:
             'organizations/{org}/developers/{developerEmail}/apps/{appName}'
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Parent of the developer app key. Use the following structure in your request:
               * 'organizations/{org}/developers/{developerEmail}/apps/{appName}'
               */
              public CreateRequest setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public CreateRequest set(String parameterName, Object value) {
                return (CreateRequest) super.set(parameterName, value);
              }
            }

          }
        }
      }
      /**
       * An accessor for creating requests from the Attributes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Attributes.List request = apigee.attributes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Attributes attributes() {
        return new Attributes();
      }

      /**
       * The "attributes" collection of methods.
       */
      public class Attributes {

        /**
         * Deletes a developer attribute.
         *
         * Create a request for the method "attributes.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer attribute. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");

          /**
           * Deletes a developer attribute.
           *
           * Create a request for the method "attributes.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer attribute. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer attribute. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns the value of the specified developer attribute.
         *
         * Create a request for the method "attributes.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer attribute. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");

          /**
           * Returns the value of the specified developer attribute.
           *
           * Create a request for the method "attributes.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer attribute. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer attribute. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns a list of all developer attributes.
         *
         * Create a request for the method "attributes.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Email address of the developer for which attributes are being listed. Use the following
         *        structure in your request: `organizations/{org}/developers/{developer_email}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

          private static final String REST_PATH = "v1/{+parent}/attributes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

          /**
           * Returns a list of all developer attributes.
           *
           * Create a request for the method "attributes.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Email address of the developer for which attributes are being listed. Use the following
         *        structure in your request: `organizations/{org}/developers/{developer_email}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Email address of the developer for which attributes are being listed. Use the
           * following structure in your request: `organizations/{org}/developers/{developer_email}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Email address of the developer for which attributes are being listed. Use the following
         structure in your request: `organizations/{org}/developers/{developer_email}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Email address of the developer for which attributes are being listed. Use the
           * following structure in your request: `organizations/{org}/developers/{developer_email}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a developer attribute. **Note**: OAuth access tokens and Key Management Service (KMS)
         * entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom
         * attributes associated with these entities are cached for at least 180 seconds after the entity is
         * accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to
         * expire an access token in less than 180 seconds.
         *
         * Create a request for the method "attributes.updateDeveloperAttribute".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateDeveloperAttribute#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Name of the developer attribute. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
         * @return the request
         */
        public UpdateDeveloperAttribute updateDeveloperAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) throws java.io.IOException {
          UpdateDeveloperAttribute result = new UpdateDeveloperAttribute(name, content);
          initialize(result);
          return result;
        }

        public class UpdateDeveloperAttribute extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");

          /**
           * Updates a developer attribute. **Note**: OAuth access tokens and Key Management Service (KMS)
           * entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom
           * attributes associated with these entities are cached for at least 180 seconds after the entity
           * is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able
           * to expire an access token in less than 180 seconds.
           *
           * Create a request for the method "attributes.updateDeveloperAttribute".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateDeveloperAttribute#execute()} method to invoke the remote
           * operation. <p> {@link UpdateDeveloperAttribute#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. Name of the developer attribute. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
           * @since 1.13
           */
          protected UpdateDeveloperAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public UpdateDeveloperAttribute set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateDeveloperAttribute) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateDeveloperAttribute setAccessToken(java.lang.String accessToken) {
            return (UpdateDeveloperAttribute) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateDeveloperAttribute setAlt(java.lang.String alt) {
            return (UpdateDeveloperAttribute) super.setAlt(alt);
          }

          @Override
          public UpdateDeveloperAttribute setCallback(java.lang.String callback) {
            return (UpdateDeveloperAttribute) super.setCallback(callback);
          }

          @Override
          public UpdateDeveloperAttribute setFields(java.lang.String fields) {
            return (UpdateDeveloperAttribute) super.setFields(fields);
          }

          @Override
          public UpdateDeveloperAttribute setKey(java.lang.String key) {
            return (UpdateDeveloperAttribute) super.setKey(key);
          }

          @Override
          public UpdateDeveloperAttribute setOauthToken(java.lang.String oauthToken) {
            return (UpdateDeveloperAttribute) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateDeveloperAttribute setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateDeveloperAttribute) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateDeveloperAttribute setQuotaUser(java.lang.String quotaUser) {
            return (UpdateDeveloperAttribute) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateDeveloperAttribute setUploadType(java.lang.String uploadType) {
            return (UpdateDeveloperAttribute) super.setUploadType(uploadType);
          }

          @Override
          public UpdateDeveloperAttribute setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateDeveloperAttribute) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer attribute. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public UpdateDeveloperAttribute setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public UpdateDeveloperAttribute set(String parameterName, Object value) {
            return (UpdateDeveloperAttribute) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Balance collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Balance.List request = apigee.balance().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Balance balance() {
        return new Balance();
      }

      /**
       * The "balance" collection of methods.
       */
      public class Balance {

        /**
         * Adjust the prepaid balance for the developer. This API will be used in scenarios where the
         * developer has been under-charged or over-charged.
         *
         * Create a request for the method "balance.adjust".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Adjust#execute()} method to invoke the remote operation.
         *
         * @param name Required. Account balance for the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer}/balance`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AdjustDeveloperBalanceRequest}
         * @return the request
         */
        public Adjust adjust(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AdjustDeveloperBalanceRequest content) throws java.io.IOException {
          Adjust result = new Adjust(name, content);
          initialize(result);
          return result;
        }

        public class Adjust extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperBalance> {

          private static final String REST_PATH = "v1/{+name}:adjust";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/balance$");

          /**
           * Adjust the prepaid balance for the developer. This API will be used in scenarios where the
           * developer has been under-charged or over-charged.
           *
           * Create a request for the method "balance.adjust".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Adjust#execute()} method to invoke the remote operation. <p> {@link
           * Adjust#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Account balance for the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer}/balance`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AdjustDeveloperBalanceRequest}
           * @since 1.13
           */
          protected Adjust(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AdjustDeveloperBalanceRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperBalance.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/balance$");
            }
          }

          @Override
          public Adjust set$Xgafv(java.lang.String $Xgafv) {
            return (Adjust) super.set$Xgafv($Xgafv);
          }

          @Override
          public Adjust setAccessToken(java.lang.String accessToken) {
            return (Adjust) super.setAccessToken(accessToken);
          }

          @Override
          public Adjust setAlt(java.lang.String alt) {
            return (Adjust) super.setAlt(alt);
          }

          @Override
          public Adjust setCallback(java.lang.String callback) {
            return (Adjust) super.setCallback(callback);
          }

          @Override
          public Adjust setFields(java.lang.String fields) {
            return (Adjust) super.setFields(fields);
          }

          @Override
          public Adjust setKey(java.lang.String key) {
            return (Adjust) super.setKey(key);
          }

          @Override
          public Adjust setOauthToken(java.lang.String oauthToken) {
            return (Adjust) super.setOauthToken(oauthToken);
          }

          @Override
          public Adjust setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Adjust) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Adjust setQuotaUser(java.lang.String quotaUser) {
            return (Adjust) super.setQuotaUser(quotaUser);
          }

          @Override
          public Adjust setUploadType(java.lang.String uploadType) {
            return (Adjust) super.setUploadType(uploadType);
          }

          @Override
          public Adjust setUploadProtocol(java.lang.String uploadProtocol) {
            return (Adjust) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Account balance for the developer. Use the following structure in your
           * request: `organizations/{org}/developers/{developer}/balance`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Account balance for the developer. Use the following structure in your request:
         `organizations/{org}/developers/{developer}/balance`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Account balance for the developer. Use the following structure in your
           * request: `organizations/{org}/developers/{developer}/balance`
           */
          public Adjust setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/balance$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Adjust set(String parameterName, Object value) {
            return (Adjust) super.set(parameterName, value);
          }
        }
        /**
         * Credits the account balance for the developer.
         *
         * Create a request for the method "balance.credit".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Credit#execute()} method to invoke the remote operation.
         *
         * @param name Required. Account balance for the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer}/balance`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CreditDeveloperBalanceRequest}
         * @return the request
         */
        public Credit credit(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CreditDeveloperBalanceRequest content) throws java.io.IOException {
          Credit result = new Credit(name, content);
          initialize(result);
          return result;
        }

        public class Credit extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperBalance> {

          private static final String REST_PATH = "v1/{+name}:credit";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/balance$");

          /**
           * Credits the account balance for the developer.
           *
           * Create a request for the method "balance.credit".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Credit#execute()} method to invoke the remote operation. <p> {@link
           * Credit#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Account balance for the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer}/balance`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CreditDeveloperBalanceRequest}
           * @since 1.13
           */
          protected Credit(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CreditDeveloperBalanceRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperBalance.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/balance$");
            }
          }

          @Override
          public Credit set$Xgafv(java.lang.String $Xgafv) {
            return (Credit) super.set$Xgafv($Xgafv);
          }

          @Override
          public Credit setAccessToken(java.lang.String accessToken) {
            return (Credit) super.setAccessToken(accessToken);
          }

          @Override
          public Credit setAlt(java.lang.String alt) {
            return (Credit) super.setAlt(alt);
          }

          @Override
          public Credit setCallback(java.lang.String callback) {
            return (Credit) super.setCallback(callback);
          }

          @Override
          public Credit setFields(java.lang.String fields) {
            return (Credit) super.setFields(fields);
          }

          @Override
          public Credit setKey(java.lang.String key) {
            return (Credit) super.setKey(key);
          }

          @Override
          public Credit setOauthToken(java.lang.String oauthToken) {
            return (Credit) super.setOauthToken(oauthToken);
          }

          @Override
          public Credit setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Credit) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Credit setQuotaUser(java.lang.String quotaUser) {
            return (Credit) super.setQuotaUser(quotaUser);
          }

          @Override
          public Credit setUploadType(java.lang.String uploadType) {
            return (Credit) super.setUploadType(uploadType);
          }

          @Override
          public Credit setUploadProtocol(java.lang.String uploadProtocol) {
            return (Credit) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Account balance for the developer. Use the following structure in your
           * request: `organizations/{org}/developers/{developer}/balance`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Account balance for the developer. Use the following structure in your request:
         `organizations/{org}/developers/{developer}/balance`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Account balance for the developer. Use the following structure in your
           * request: `organizations/{org}/developers/{developer}/balance`
           */
          public Credit setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/balance$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Credit set(String parameterName, Object value) {
            return (Credit) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Subscriptions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Subscriptions.List request = apigee.subscriptions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Subscriptions subscriptions() {
        return new Subscriptions();
      }

      /**
       * The "subscriptions" collection of methods.
       */
      public class Subscriptions {

        /**
         * Creates a subscription to an API product.
         *
         * Create a request for the method "subscriptions.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Email address of the developer that is purchasing a subscription to the API product. Use
         *        the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperSubscription}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperSubscription content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperSubscription> {

          private static final String REST_PATH = "v1/{+parent}/subscriptions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

          /**
           * Creates a subscription to an API product.
           *
           * Create a request for the method "subscriptions.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Email address of the developer that is purchasing a subscription to the API product. Use
         *        the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperSubscription}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperSubscription content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperSubscription.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Email address of the developer that is purchasing a subscription to the API
           * product. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Email address of the developer that is purchasing a subscription to the API product. Use
         the following structure in your request: `organizations/{org}/developers/{developer_email}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Email address of the developer that is purchasing a subscription to the API
           * product. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Expires an API product subscription immediately.
         *
         * Create a request for the method "subscriptions.expire".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Expire#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the API product subscription. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest}
         * @return the request
         */
        public Expire expire(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest content) throws java.io.IOException {
          Expire result = new Expire(name, content);
          initialize(result);
          return result;
        }

        public class Expire extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperSubscription> {

          private static final String REST_PATH = "v1/{+name}:expire";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/subscriptions/[^/]+$");

          /**
           * Expires an API product subscription immediately.
           *
           * Create a request for the method "subscriptions.expire".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Expire#execute()} method to invoke the remote operation. <p> {@link
           * Expire#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the API product subscription. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest}
           * @since 1.13
           */
          protected Expire(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperSubscription.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/subscriptions/[^/]+$");
            }
          }

          @Override
          public Expire set$Xgafv(java.lang.String $Xgafv) {
            return (Expire) super.set$Xgafv($Xgafv);
          }

          @Override
          public Expire setAccessToken(java.lang.String accessToken) {
            return (Expire) super.setAccessToken(accessToken);
          }

          @Override
          public Expire setAlt(java.lang.String alt) {
            return (Expire) super.setAlt(alt);
          }

          @Override
          public Expire setCallback(java.lang.String callback) {
            return (Expire) super.setCallback(callback);
          }

          @Override
          public Expire setFields(java.lang.String fields) {
            return (Expire) super.setFields(fields);
          }

          @Override
          public Expire setKey(java.lang.String key) {
            return (Expire) super.setKey(key);
          }

          @Override
          public Expire setOauthToken(java.lang.String oauthToken) {
            return (Expire) super.setOauthToken(oauthToken);
          }

          @Override
          public Expire setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Expire) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Expire setQuotaUser(java.lang.String quotaUser) {
            return (Expire) super.setQuotaUser(quotaUser);
          }

          @Override
          public Expire setUploadType(java.lang.String uploadType) {
            return (Expire) super.setUploadType(uploadType);
          }

          @Override
          public Expire setUploadProtocol(java.lang.String uploadProtocol) {
            return (Expire) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API product subscription. Use the following structure in your
           * request:
           * `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the API product subscription. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the API product subscription. Use the following structure in your
           * request:
           * `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
           */
          public Expire setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/subscriptions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Expire set(String parameterName, Object value) {
            return (Expire) super.set(parameterName, value);
          }
        }
        /**
         * Gets details for an API product subscription.
         *
         * Create a request for the method "subscriptions.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the API product subscription. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperSubscription> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/subscriptions/[^/]+$");

          /**
           * Gets details for an API product subscription.
           *
           * Create a request for the method "subscriptions.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the API product subscription. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperSubscription.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/subscriptions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API product subscription. Use the following structure in your
           * request:
           * `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the API product subscription. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the API product subscription. Use the following structure in your
           * request:
           * `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/subscriptions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all API product subscriptions for a developer.
         *
         * Create a request for the method "subscriptions.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Email address of the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse> {

          private static final String REST_PATH = "v1/{+parent}/subscriptions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

          /**
           * Lists all API product subscriptions for a developer.
           *
           * Create a request for the method "subscriptions.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Email address of the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Email address of the developer. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Email address of the developer. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Email address of the developer. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Number of API product subscriptions to return in the API call. Use with `startKey` to
           * provide more targeted filtering. Defaults to 100. The maximum limit is 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer count;

          /** Number of API product subscriptions to return in the API call. Use with `startKey` to provide more
         targeted filtering. Defaults to 100. The maximum limit is 1000.
           */
          public java.lang.Integer getCount() {
            return count;
          }

          /**
           * Number of API product subscriptions to return in the API call. Use with `startKey` to
           * provide more targeted filtering. Defaults to 100. The maximum limit is 1000.
           */
          public List setCount(java.lang.Integer count) {
            this.count = count;
            return this;
          }

          /**
           * Name of the API product subscription from which to start displaying the list of
           * subscriptions. If omitted, the list starts from the first item. For example, to view
           * the API product subscriptions from 51-150, set the value of `startKey` to the name of
           * the 51st subscription and set the value of `count` to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.String startKey;

          /** Name of the API product subscription from which to start displaying the list of subscriptions. If
         omitted, the list starts from the first item. For example, to view the API product subscriptions
         from 51-150, set the value of `startKey` to the name of the 51st subscription and set the value of
         `count` to 100.
           */
          public java.lang.String getStartKey() {
            return startKey;
          }

          /**
           * Name of the API product subscription from which to start displaying the list of
           * subscriptions. If omitted, the list starts from the first item. For example, to view
           * the API product subscriptions from 51-150, set the value of `startKey` to the name of
           * the 51st subscription and set the value of `count` to 100.
           */
          public List setStartKey(java.lang.String startKey) {
            this.startKey = startKey;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the EndpointAttachments collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.EndpointAttachments.List request = apigee.endpointAttachments().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public EndpointAttachments endpointAttachments() {
      return new EndpointAttachments();
    }

    /**
     * The "endpointAttachments" collection of methods.
     */
    public class EndpointAttachments {

      /**
       * Creates an endpoint attachment. **Note:** Not supported for Apigee hybrid.
       *
       * Create a request for the method "endpointAttachments.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Organization the endpoint attachment will be created in.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EndpointAttachment}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EndpointAttachment content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+parent}/endpointAttachments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an endpoint attachment. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "endpointAttachments.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Organization the endpoint attachment will be created in.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EndpointAttachment}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EndpointAttachment content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Organization the endpoint attachment will be created in. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Organization the endpoint attachment will be created in.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Organization the endpoint attachment will be created in. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * ID to use for the endpoint attachment. ID must start with a lowercase letter followed by
         * up to 31 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. The
         * minimum length is 2.
         */
        @com.google.api.client.util.Key
        private java.lang.String endpointAttachmentId;

        /** ID to use for the endpoint attachment. ID must start with a lowercase letter followed by up to 31
       lowercase letters, numbers, or hyphens, and cannot end with a hyphen. The minimum length is 2.
         */
        public java.lang.String getEndpointAttachmentId() {
          return endpointAttachmentId;
        }

        /**
         * ID to use for the endpoint attachment. ID must start with a lowercase letter followed by
         * up to 31 lowercase letters, numbers, or hyphens, and cannot end with a hyphen. The
         * minimum length is 2.
         */
        public Create setEndpointAttachmentId(java.lang.String endpointAttachmentId) {
          this.endpointAttachmentId = endpointAttachmentId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an endpoint attachment.
       *
       * Create a request for the method "endpointAttachments.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the endpoint attachment. Use the following structure in your request:
       *        `organizations/{org}/endpointAttachments/{endpoint_attachment}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/endpointAttachments/[^/]+$");

        /**
         * Deletes an endpoint attachment.
         *
         * Create a request for the method "endpointAttachments.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the endpoint attachment. Use the following structure in your request:
       *        `organizations/{org}/endpointAttachments/{endpoint_attachment}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/endpointAttachments/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the endpoint attachment. Use the following structure in your request:
         * `organizations/{org}/endpointAttachments/{endpoint_attachment}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the endpoint attachment. Use the following structure in your request:
       `organizations/{org}/endpointAttachments/{endpoint_attachment}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the endpoint attachment. Use the following structure in your request:
         * `organizations/{org}/endpointAttachments/{endpoint_attachment}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/endpointAttachments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the endpoint attachment.
       *
       * Create a request for the method "endpointAttachments.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the endpoint attachment. Use the following structure in your request:
       *        `organizations/{org}/endpointAttachments/{endpoint_attachment}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EndpointAttachment> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/endpointAttachments/[^/]+$");

        /**
         * Gets the endpoint attachment.
         *
         * Create a request for the method "endpointAttachments.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the endpoint attachment. Use the following structure in your request:
       *        `organizations/{org}/endpointAttachments/{endpoint_attachment}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EndpointAttachment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/endpointAttachments/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the endpoint attachment. Use the following structure in your request:
         * `organizations/{org}/endpointAttachments/{endpoint_attachment}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the endpoint attachment. Use the following structure in your request:
       `organizations/{org}/endpointAttachments/{endpoint_attachment}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the endpoint attachment. Use the following structure in your request:
         * `organizations/{org}/endpointAttachments/{endpoint_attachment}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/endpointAttachments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the endpoint attachments in an organization.
       *
       * Create a request for the method "endpointAttachments.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization for which to list endpoint attachments. Use the following
       *        structure in your request: `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEndpointAttachmentsResponse> {

        private static final String REST_PATH = "v1/{+parent}/endpointAttachments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists the endpoint attachments in an organization.
         *
         * Create a request for the method "endpointAttachments.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization for which to list endpoint attachments. Use the following
       *        structure in your request: `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEndpointAttachmentsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization for which to list endpoint attachments. Use the
         * following structure in your request: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization for which to list endpoint attachments. Use the following
       structure in your request: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization for which to list endpoint attachments. Use the
         * following structure in your request: `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Maximum number of endpoint attachments to return. If unspecified, at most 25
         * attachments will be returned.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. Maximum number of endpoint attachments to return. If unspecified, at most 25 attachments
       will be returned.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * Optional. Maximum number of endpoint attachments to return. If unspecified, at most 25
         * attachments will be returned.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. Page token, returned from a previous `ListEndpointAttachments` call, that you
         * can use to retrieve the next page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. Page token, returned from a previous `ListEndpointAttachments` call, that you can use to
       retrieve the next page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. Page token, returned from a previous `ListEndpointAttachments` call, that you
         * can use to retrieve the next page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Envgroups collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Envgroups.List request = apigee.envgroups().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Envgroups envgroups() {
      return new Envgroups();
    }

    /**
     * The "envgroups" collection of methods.
     */
    public class Envgroups {

      /**
       * Creates a new environment group.
       *
       * Create a request for the method "envgroups.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in which to create the environment group in the following format:
       *        `organizations/{org}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroup}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroup content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+parent}/envgroups";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a new environment group.
         *
         * Create a request for the method "envgroups.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in which to create the environment group in the following format:
       *        `organizations/{org}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroup}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroup content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization in which to create the environment group in the
         * following format: `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in which to create the environment group in the following
       format: `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization in which to create the environment group in the
         * following format: `organizations/{org}`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. ID of the environment group. Overrides any ID in the environment_group
         * resource.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Optional. ID of the environment group. Overrides any ID in the environment_group resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Optional. ID of the environment group. Overrides any ID in the environment_group
         * resource.
         */
        public Create setName(java.lang.String name) {
          this.name = name;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an environment group.
       *
       * Create a request for the method "envgroups.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment group in the following format:
       *        `organizations/{org}/envgroups/{envgroup}`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/envgroups/[^/]+$");

        /**
         * Deletes an environment group.
         *
         * Create a request for the method "envgroups.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the environment group in the following format:
       *        `organizations/{org}/envgroups/{envgroup}`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/envgroups/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment group in the following format:
         * `organizations/{org}/envgroups/{envgroup}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment group in the following format:
       `organizations/{org}/envgroups/{envgroup}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment group in the following format:
         * `organizations/{org}/envgroups/{envgroup}`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/envgroups/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets an environment group.
       *
       * Create a request for the method "envgroups.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment group in the following format:
       *        `organizations/{org}/envgroups/{envgroup}`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroup> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/envgroups/[^/]+$");

        /**
         * Gets an environment group.
         *
         * Create a request for the method "envgroups.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the environment group in the following format:
       *        `organizations/{org}/envgroups/{envgroup}`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroup.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/envgroups/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment group in the following format:
         * `organizations/{org}/envgroups/{envgroup}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment group in the following format:
       `organizations/{org}/envgroups/{envgroup}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment group in the following format:
         * `organizations/{org}/envgroups/{envgroup}`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/envgroups/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the deployed ingress configuration for an environment group.
       *
       * Create a request for the method "envgroups.getDeployedIngressConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetDeployedIngressConfig#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Name of the deployed configuration for the environment group in the following format:
       *        'organizations/{org}/envgroups/{envgroup}/deployedIngressConfig'.
       * @return the request
       */
      public GetDeployedIngressConfig getDeployedIngressConfig(java.lang.String name) throws java.io.IOException {
        GetDeployedIngressConfig result = new GetDeployedIngressConfig(name);
        initialize(result);
        return result;
      }

      public class GetDeployedIngressConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroupConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/envgroups/[^/]+/deployedIngressConfig$");

        /**
         * Gets the deployed ingress configuration for an environment group.
         *
         * Create a request for the method "envgroups.getDeployedIngressConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetDeployedIngressConfig#execute()} method to invoke the remote
         * operation. <p> {@link GetDeployedIngressConfig#initialize(com.google.api.client.googleapis.serv
         * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. Name of the deployed configuration for the environment group in the following format:
       *        'organizations/{org}/envgroups/{envgroup}/deployedIngressConfig'.
         * @since 1.13
         */
        protected GetDeployedIngressConfig(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroupConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/envgroups/[^/]+/deployedIngressConfig$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetDeployedIngressConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetDeployedIngressConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetDeployedIngressConfig setAccessToken(java.lang.String accessToken) {
          return (GetDeployedIngressConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetDeployedIngressConfig setAlt(java.lang.String alt) {
          return (GetDeployedIngressConfig) super.setAlt(alt);
        }

        @Override
        public GetDeployedIngressConfig setCallback(java.lang.String callback) {
          return (GetDeployedIngressConfig) super.setCallback(callback);
        }

        @Override
        public GetDeployedIngressConfig setFields(java.lang.String fields) {
          return (GetDeployedIngressConfig) super.setFields(fields);
        }

        @Override
        public GetDeployedIngressConfig setKey(java.lang.String key) {
          return (GetDeployedIngressConfig) super.setKey(key);
        }

        @Override
        public GetDeployedIngressConfig setOauthToken(java.lang.String oauthToken) {
          return (GetDeployedIngressConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetDeployedIngressConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetDeployedIngressConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetDeployedIngressConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetDeployedIngressConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetDeployedIngressConfig setUploadType(java.lang.String uploadType) {
          return (GetDeployedIngressConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetDeployedIngressConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetDeployedIngressConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the deployed configuration for the environment group in the following
         * format: 'organizations/{org}/envgroups/{envgroup}/deployedIngressConfig'.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the deployed configuration for the environment group in the following format:
       'organizations/{org}/envgroups/{envgroup}/deployedIngressConfig'.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the deployed configuration for the environment group in the following
         * format: 'organizations/{org}/envgroups/{envgroup}/deployedIngressConfig'.
         */
        public GetDeployedIngressConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/envgroups/[^/]+/deployedIngressConfig$");
          }
          this.name = name;
          return this;
        }

        /**
         * When set to FULL, additional details about the specific deployments receiving traffic
         * will be included in the IngressConfig response's RoutingRules.
         */
        @com.google.api.client.util.Key
        private java.lang.String view;

        /** When set to FULL, additional details about the specific deployments receiving traffic will be
       included in the IngressConfig response's RoutingRules.
         */
        public java.lang.String getView() {
          return view;
        }

        /**
         * When set to FULL, additional details about the specific deployments receiving traffic
         * will be included in the IngressConfig response's RoutingRules.
         */
        public GetDeployedIngressConfig setView(java.lang.String view) {
          this.view = view;
          return this;
        }

        @Override
        public GetDeployedIngressConfig set(String parameterName, Object value) {
          return (GetDeployedIngressConfig) super.set(parameterName, value);
        }
      }
      /**
       * Lists all environment groups.
       *
       * Create a request for the method "envgroups.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization for which to list environment groups in the following format:
       *        `organizations/{org}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentGroupsResponse> {

        private static final String REST_PATH = "v1/{+parent}/envgroups";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all environment groups.
         *
         * Create a request for the method "envgroups.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization for which to list environment groups in the following format:
       *        `organizations/{org}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentGroupsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization for which to list environment groups in the following
         * format: `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization for which to list environment groups in the following format:
       `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization for which to list environment groups in the following
         * format: `organizations/{org}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Maximum number of environment groups to return. The page size defaults to 25. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of environment groups to return. The page size defaults to 25.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum number of environment groups to return. The page size defaults to 25. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Page token, returned from a previous ListEnvironmentGroups call, that you can use to
         * retrieve the next page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token, returned from a previous ListEnvironmentGroups call, that you can use to retrieve the
       next page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Page token, returned from a previous ListEnvironmentGroups call, that you can use to
         * retrieve the next page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an environment group.
       *
       * Create a request for the method "envgroups.patch".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment group to update in the format:
       *        `organizations/{org}/envgroups/{envgroup}.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroup}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroup content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/envgroups/[^/]+$");

        /**
         * Updates an environment group.
         *
         * Create a request for the method "envgroups.patch".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the environment group to update in the format:
       *        `organizations/{org}/envgroups/{envgroup}.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroup}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroup content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/envgroups/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment group to update in the format:
         * `organizations/{org}/envgroups/{envgroup}.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment group to update in the format:
       `organizations/{org}/envgroups/{envgroup}.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment group to update in the format:
         * `organizations/{org}/envgroups/{envgroup}.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/envgroups/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Optional. List of fields to be updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. List of fields to be updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Optional. List of fields to be updated. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Attachments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Attachments.List request = apigee.attachments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Attachments attachments() {
        return new Attachments();
      }

      /**
       * The "attachments" collection of methods.
       */
      public class Attachments {

        /**
         * Creates a new attachment of an environment to an environment group.
         *
         * Create a request for the method "attachments.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. EnvironmentGroup under which to create the attachment in the following format:
         *        `organizations/{org}/envgroups/{envgroup}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroupAttachment}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroupAttachment content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/attachments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/envgroups/[^/]+$");

          /**
           * Creates a new attachment of an environment to an environment group.
           *
           * Create a request for the method "attachments.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. EnvironmentGroup under which to create the attachment in the following format:
         *        `organizations/{org}/envgroups/{envgroup}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroupAttachment}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroupAttachment content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/envgroups/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. EnvironmentGroup under which to create the attachment in the following
           * format: `organizations/{org}/envgroups/{envgroup}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. EnvironmentGroup under which to create the attachment in the following format:
         `organizations/{org}/envgroups/{envgroup}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. EnvironmentGroup under which to create the attachment in the following
           * format: `organizations/{org}/envgroups/{envgroup}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/envgroups/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an environment group attachment.
         *
         * Create a request for the method "attachments.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the environment group attachment to delete in the following format:
         *        `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/envgroups/[^/]+/attachments/[^/]+$");

          /**
           * Deletes an environment group attachment.
           *
           * Create a request for the method "attachments.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the environment group attachment to delete in the following format:
         *        `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/envgroups/[^/]+/attachments/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment group attachment to delete in the following format:
           * `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the environment group attachment to delete in the following format:
         `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the environment group attachment to delete in the following format:
           * `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/envgroups/[^/]+/attachments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets an environment group attachment.
         *
         * Create a request for the method "attachments.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the environment group attachment in the following format:
         *        `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroupAttachment> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/envgroups/[^/]+/attachments/[^/]+$");

          /**
           * Gets an environment group attachment.
           *
           * Create a request for the method "attachments.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the environment group attachment in the following format:
         *        `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentGroupAttachment.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/envgroups/[^/]+/attachments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment group attachment in the following format:
           * `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the environment group attachment in the following format:
         `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the environment group attachment in the following format:
           * `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/envgroups/[^/]+/attachments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all attachments of an environment group.
         *
         * Create a request for the method "attachments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment group in the following format:
         *        `organizations/{org}/envgroups/{envgroup}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/attachments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/envgroups/[^/]+$");

          /**
           * Lists all attachments of an environment group.
           *
           * Create a request for the method "attachments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment group in the following format:
         *        `organizations/{org}/envgroups/{envgroup}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/envgroups/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment group in the following format:
           * `organizations/{org}/envgroups/{envgroup}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment group in the following format:
         `organizations/{org}/envgroups/{envgroup}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment group in the following format:
           * `organizations/{org}/envgroups/{envgroup}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/envgroups/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Maximum number of environment group attachments to return. The page size defaults to
           * 25.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of environment group attachments to return. The page size defaults to 25.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Maximum number of environment group attachments to return. The page size defaults to
           * 25.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Page token, returned by a previous ListEnvironmentGroupAttachments call, that you can
           * use to retrieve the next page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Page token, returned by a previous ListEnvironmentGroupAttachments call, that you can use to
         retrieve the next page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Page token, returned by a previous ListEnvironmentGroupAttachments call, that you can
           * use to retrieve the next page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Environments collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Environments.List request = apigee.environments().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Environments environments() {
      return new Environments();
    }

    /**
     * The "environments" collection of methods.
     */
    public class Environments {

      /**
       * Creates an environment in an organization.
       *
       * Create a request for the method "environments.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in which the environment will be created. Use the following
       *        structure in your request: `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+parent}/environments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an environment in an organization.
         *
         * Create a request for the method "environments.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in which the environment will be created. Use the following
       *        structure in your request: `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization in which the environment will be created. Use the
         * following structure in your request: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in which the environment will be created. Use the following
       structure in your request: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization in which the environment will be created. Use the
         * following structure in your request: `organizations/{org}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Optional. Name of the environment. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Optional. Name of the environment.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Optional. Name of the environment. */
        public Create setName(java.lang.String name) {
          this.name = name;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an environment from an organization. **Warning: You must delete all key value maps and
       * key value entries before you delete an environment.** Otherwise, if you re-create the environment
       * the key value map entry operations will encounter encryption/decryption discrepancies.
       *
       * Create a request for the method "environments.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Deletes an environment from an organization. **Warning: You must delete all key value maps and
         * key value entries before you delete an environment.** Otherwise, if you re-create the
         * environment the key value map entry operations will encounter encryption/decryption
         * discrepancies.
         *
         * Create a request for the method "environments.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment. Use the following structure in your request:
       `organizations/{org}/environments/{env}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets environment details.
       *
       * Create a request for the method "environments.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Gets environment details.
         *
         * Create a request for the method "environments.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment. Use the following structure in your request:
       `organizations/{org}/environments/{env}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Gets the add-ons config of an environment.
       *
       * Create a request for the method "environments.getAddonsConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetAddonsConfig#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the add-ons config. Must be in the format of
       *        `/organizations/{org}/environments/{env}/addonsConfig`
       * @return the request
       */
      public GetAddonsConfig getAddonsConfig(java.lang.String name) throws java.io.IOException {
        GetAddonsConfig result = new GetAddonsConfig(name);
        initialize(result);
        return result;
      }

      public class GetAddonsConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AddonsConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/addonsConfig$");

        /**
         * Gets the add-ons config of an environment.
         *
         * Create a request for the method "environments.getAddonsConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetAddonsConfig#execute()} method to invoke the remote operation.
         * <p> {@link GetAddonsConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
         * lientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. Name of the add-ons config. Must be in the format of
       *        `/organizations/{org}/environments/{env}/addonsConfig`
         * @since 1.13
         */
        protected GetAddonsConfig(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AddonsConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/addonsConfig$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetAddonsConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetAddonsConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetAddonsConfig setAccessToken(java.lang.String accessToken) {
          return (GetAddonsConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetAddonsConfig setAlt(java.lang.String alt) {
          return (GetAddonsConfig) super.setAlt(alt);
        }

        @Override
        public GetAddonsConfig setCallback(java.lang.String callback) {
          return (GetAddonsConfig) super.setCallback(callback);
        }

        @Override
        public GetAddonsConfig setFields(java.lang.String fields) {
          return (GetAddonsConfig) super.setFields(fields);
        }

        @Override
        public GetAddonsConfig setKey(java.lang.String key) {
          return (GetAddonsConfig) super.setKey(key);
        }

        @Override
        public GetAddonsConfig setOauthToken(java.lang.String oauthToken) {
          return (GetAddonsConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetAddonsConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetAddonsConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetAddonsConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetAddonsConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetAddonsConfig setUploadType(java.lang.String uploadType) {
          return (GetAddonsConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetAddonsConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetAddonsConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the add-ons config. Must be in the format of
         * `/organizations/{org}/environments/{env}/addonsConfig`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the add-ons config. Must be in the format of
       `/organizations/{org}/environments/{env}/addonsConfig`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the add-ons config. Must be in the format of
         * `/organizations/{org}/environments/{env}/addonsConfig`
         */
        public GetAddonsConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/addonsConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetAddonsConfig set(String parameterName, Object value) {
          return (GetAddonsConfig) super.set(parameterName, value);
        }
      }
      /**
       * Gets the API Security runtime configuration for an environment. This named
       * ApiSecurityRuntimeConfig to prevent conflicts with ApiSecurityConfig from addon config.
       *
       * Create a request for the method "environments.getApiSecurityRuntimeConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetApiSecurityRuntimeConfig#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. Name of the environment API Security Runtime configuration resource. Use the following
       *        structure in your request:
       *        `organizations/{org}/environments/{env}/apiSecurityRuntimeConfig`
       * @return the request
       */
      public GetApiSecurityRuntimeConfig getApiSecurityRuntimeConfig(java.lang.String name) throws java.io.IOException {
        GetApiSecurityRuntimeConfig result = new GetApiSecurityRuntimeConfig(name);
        initialize(result);
        return result;
      }

      public class GetApiSecurityRuntimeConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiSecurityRuntimeConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apiSecurityRuntimeConfig$");

        /**
         * Gets the API Security runtime configuration for an environment. This named
         * ApiSecurityRuntimeConfig to prevent conflicts with ApiSecurityConfig from addon config.
         *
         * Create a request for the method "environments.getApiSecurityRuntimeConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetApiSecurityRuntimeConfig#execute()} method to invoke the remote
         * operation. <p> {@link GetApiSecurityRuntimeConfig#initialize(com.google.api.client.googleapis.s
         * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name Required. Name of the environment API Security Runtime configuration resource. Use the following
       *        structure in your request:
       *        `organizations/{org}/environments/{env}/apiSecurityRuntimeConfig`
         * @since 1.13
         */
        protected GetApiSecurityRuntimeConfig(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiSecurityRuntimeConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/apiSecurityRuntimeConfig$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetApiSecurityRuntimeConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetApiSecurityRuntimeConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetApiSecurityRuntimeConfig setAccessToken(java.lang.String accessToken) {
          return (GetApiSecurityRuntimeConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetApiSecurityRuntimeConfig setAlt(java.lang.String alt) {
          return (GetApiSecurityRuntimeConfig) super.setAlt(alt);
        }

        @Override
        public GetApiSecurityRuntimeConfig setCallback(java.lang.String callback) {
          return (GetApiSecurityRuntimeConfig) super.setCallback(callback);
        }

        @Override
        public GetApiSecurityRuntimeConfig setFields(java.lang.String fields) {
          return (GetApiSecurityRuntimeConfig) super.setFields(fields);
        }

        @Override
        public GetApiSecurityRuntimeConfig setKey(java.lang.String key) {
          return (GetApiSecurityRuntimeConfig) super.setKey(key);
        }

        @Override
        public GetApiSecurityRuntimeConfig setOauthToken(java.lang.String oauthToken) {
          return (GetApiSecurityRuntimeConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetApiSecurityRuntimeConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetApiSecurityRuntimeConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetApiSecurityRuntimeConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetApiSecurityRuntimeConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetApiSecurityRuntimeConfig setUploadType(java.lang.String uploadType) {
          return (GetApiSecurityRuntimeConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetApiSecurityRuntimeConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetApiSecurityRuntimeConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment API Security Runtime configuration resource. Use the
         * following structure in your request:
         * `organizations/{org}/environments/{env}/apiSecurityRuntimeConfig`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment API Security Runtime configuration resource. Use the following
       structure in your request: `organizations/{org}/environments/{env}/apiSecurityRuntimeConfig`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment API Security Runtime configuration resource. Use the
         * following structure in your request:
         * `organizations/{org}/environments/{env}/apiSecurityRuntimeConfig`
         */
        public GetApiSecurityRuntimeConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/apiSecurityRuntimeConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetApiSecurityRuntimeConfig set(String parameterName, Object value) {
          return (GetApiSecurityRuntimeConfig) super.set(parameterName, value);
        }
      }
      /**
       * Gets the debug mask singleton resource for an environment.
       *
       * Create a request for the method "environments.getDebugmask".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetDebugmask#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the debug mask. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}/debugmask`.
       * @return the request
       */
      public GetDebugmask getDebugmask(java.lang.String name) throws java.io.IOException {
        GetDebugmask result = new GetDebugmask(name);
        initialize(result);
        return result;
      }

      public class GetDebugmask extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/debugmask$");

        /**
         * Gets the debug mask singleton resource for an environment.
         *
         * Create a request for the method "environments.getDebugmask".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetDebugmask#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetDebugmask#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the debug mask. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}/debugmask`.
         * @since 1.13
         */
        protected GetDebugmask(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetDebugmask set$Xgafv(java.lang.String $Xgafv) {
          return (GetDebugmask) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetDebugmask setAccessToken(java.lang.String accessToken) {
          return (GetDebugmask) super.setAccessToken(accessToken);
        }

        @Override
        public GetDebugmask setAlt(java.lang.String alt) {
          return (GetDebugmask) super.setAlt(alt);
        }

        @Override
        public GetDebugmask setCallback(java.lang.String callback) {
          return (GetDebugmask) super.setCallback(callback);
        }

        @Override
        public GetDebugmask setFields(java.lang.String fields) {
          return (GetDebugmask) super.setFields(fields);
        }

        @Override
        public GetDebugmask setKey(java.lang.String key) {
          return (GetDebugmask) super.setKey(key);
        }

        @Override
        public GetDebugmask setOauthToken(java.lang.String oauthToken) {
          return (GetDebugmask) super.setOauthToken(oauthToken);
        }

        @Override
        public GetDebugmask setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetDebugmask) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetDebugmask setQuotaUser(java.lang.String quotaUser) {
          return (GetDebugmask) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetDebugmask setUploadType(java.lang.String uploadType) {
          return (GetDebugmask) super.setUploadType(uploadType);
        }

        @Override
        public GetDebugmask setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetDebugmask) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the debug mask. Use the following structure in your request:
         * `organizations/{org}/environments/{env}/debugmask`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the debug mask. Use the following structure in your request:
       `organizations/{org}/environments/{env}/debugmask`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the debug mask. Use the following structure in your request:
         * `organizations/{org}/environments/{env}/debugmask`.
         */
        public GetDebugmask setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetDebugmask set(String parameterName, Object value) {
          return (GetDebugmask) super.set(parameterName, value);
        }
      }
      /**
       * Gets the deployed configuration for an environment.
       *
       * Create a request for the method "environments.getDeployedConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetDeployedConfig#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment deployed configuration resource. Use the following structure in
       *        your request: `organizations/{org}/environments/{env}/deployedConfig`
       * @return the request
       */
      public GetDeployedConfig getDeployedConfig(java.lang.String name) throws java.io.IOException {
        GetDeployedConfig result = new GetDeployedConfig(name);
        initialize(result);
        return result;
      }

      public class GetDeployedConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/deployedConfig$");

        /**
         * Gets the deployed configuration for an environment.
         *
         * Create a request for the method "environments.getDeployedConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetDeployedConfig#execute()} method to invoke the remote operation.
         * <p> {@link GetDeployedConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogl
         * eClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. Name of the environment deployed configuration resource. Use the following structure in
       *        your request: `organizations/{org}/environments/{env}/deployedConfig`
         * @since 1.13
         */
        protected GetDeployedConfig(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/deployedConfig$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetDeployedConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetDeployedConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetDeployedConfig setAccessToken(java.lang.String accessToken) {
          return (GetDeployedConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetDeployedConfig setAlt(java.lang.String alt) {
          return (GetDeployedConfig) super.setAlt(alt);
        }

        @Override
        public GetDeployedConfig setCallback(java.lang.String callback) {
          return (GetDeployedConfig) super.setCallback(callback);
        }

        @Override
        public GetDeployedConfig setFields(java.lang.String fields) {
          return (GetDeployedConfig) super.setFields(fields);
        }

        @Override
        public GetDeployedConfig setKey(java.lang.String key) {
          return (GetDeployedConfig) super.setKey(key);
        }

        @Override
        public GetDeployedConfig setOauthToken(java.lang.String oauthToken) {
          return (GetDeployedConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetDeployedConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetDeployedConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetDeployedConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetDeployedConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetDeployedConfig setUploadType(java.lang.String uploadType) {
          return (GetDeployedConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetDeployedConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetDeployedConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment deployed configuration resource. Use the following
         * structure in your request: `organizations/{org}/environments/{env}/deployedConfig`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment deployed configuration resource. Use the following structure in
       your request: `organizations/{org}/environments/{env}/deployedConfig`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment deployed configuration resource. Use the following
         * structure in your request: `organizations/{org}/environments/{env}/deployedConfig`
         */
        public GetDeployedConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/deployedConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetDeployedConfig set(String parameterName, Object value) {
          return (GetDeployedConfig) super.set(parameterName, value);
        }
      }
      /**
       * Gets the IAM policy on an environment. For more information, see [Manage users, roles, and
       * permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-
       * administration/manage-users-roles). You must have the `apigee.environments.getIamPolicy`
       * permission to call this API.
       *
       * Create a request for the method "environments.getIamPolicy".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
       * @return the request
       */
      public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
        GetIamPolicy result = new GetIamPolicy(resource);
        initialize(result);
        return result;
      }

      public class GetIamPolicy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1Policy> {

        private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Gets the IAM policy on an environment. For more information, see [Manage users, roles, and
         * permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-
         * administration/manage-users-roles). You must have the `apigee.environments.getIamPolicy`
         * permission to call this API.
         *
         * Create a request for the method "environments.getIamPolicy".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
         * @since 1.13
         */
        protected GetIamPolicy(java.lang.String resource) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleIamV1Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (GetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (GetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public GetIamPolicy setAlt(java.lang.String alt) {
          return (GetIamPolicy) super.setAlt(alt);
        }

        @Override
        public GetIamPolicy setCallback(java.lang.String callback) {
          return (GetIamPolicy) super.setCallback(callback);
        }

        @Override
        public GetIamPolicy setFields(java.lang.String fields) {
          return (GetIamPolicy) super.setFields(fields);
        }

        @Override
        public GetIamPolicy setKey(java.lang.String key) {
          return (GetIamPolicy) super.setKey(key);
        }

        @Override
        public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (GetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (GetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetIamPolicy setUploadType(java.lang.String uploadType) {
          return (GetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being requested. See [Resource
       names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
       field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        public GetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /**
         * Optional. The maximum policy version that will be used to format the policy. Valid values
         * are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for
         * policies with any conditional role bindings must specify version 3. Policies with no
         * conditional role bindings may specify any valid value or leave the field unset. The
         * policy in the response might use the policy version that you specified, or it might use a
         * lower policy version. For example, if you specify version 3, but the policy has no
         * conditional role bindings, the response uses version 1. To learn which resources support
         * conditions in their IAM policies, see the [IAM
         * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
         */
        @com.google.api.client.util.Key("options.requestedPolicyVersion")
        private java.lang.Integer optionsRequestedPolicyVersion;

        /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
       and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
       conditional role bindings must specify version 3. Policies with no conditional role bindings may
       specify any valid value or leave the field unset. The policy in the response might use the policy
       version that you specified, or it might use a lower policy version. For example, if you specify
       version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
       which resources support conditions in their IAM policies, see the [IAM
       documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
         */
        public java.lang.Integer getOptionsRequestedPolicyVersion() {
          return optionsRequestedPolicyVersion;
        }

        /**
         * Optional. The maximum policy version that will be used to format the policy. Valid values
         * are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for
         * policies with any conditional role bindings must specify version 3. Policies with no
         * conditional role bindings may specify any valid value or leave the field unset. The
         * policy in the response might use the policy version that you specified, or it might use a
         * lower policy version. For example, if you specify version 3, but the policy has no
         * conditional role bindings, the response uses version 1. To learn which resources support
         * conditions in their IAM policies, see the [IAM
         * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
         */
        public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
          this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
          return this;
        }

        @Override
        public GetIamPolicy set(String parameterName, Object value) {
          return (GetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * GetSecurityActionConfig returns the current SecurityActions configuration.
       *
       * Create a request for the method "environments.getSecurityActionsConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetSecurityActionsConfig#execute()} method to invoke the remote
       * operation.
       *
       * @param name Required. The name of the SecurityActionsConfig to retrieve. This will always be:
       *        `organizations/{org}/environments/{env}/security_actions_config`
       * @return the request
       */
      public GetSecurityActionsConfig getSecurityActionsConfig(java.lang.String name) throws java.io.IOException {
        GetSecurityActionsConfig result = new GetSecurityActionsConfig(name);
        initialize(result);
        return result;
      }

      public class GetSecurityActionsConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityActionsConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/securityActionsConfig$");

        /**
         * GetSecurityActionConfig returns the current SecurityActions configuration.
         *
         * Create a request for the method "environments.getSecurityActionsConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetSecurityActionsConfig#execute()} method to invoke the remote
         * operation. <p> {@link GetSecurityActionsConfig#initialize(com.google.api.client.googleapis.serv
         * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. The name of the SecurityActionsConfig to retrieve. This will always be:
       *        `organizations/{org}/environments/{env}/security_actions_config`
         * @since 1.13
         */
        protected GetSecurityActionsConfig(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityActionsConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/securityActionsConfig$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetSecurityActionsConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetSecurityActionsConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetSecurityActionsConfig setAccessToken(java.lang.String accessToken) {
          return (GetSecurityActionsConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetSecurityActionsConfig setAlt(java.lang.String alt) {
          return (GetSecurityActionsConfig) super.setAlt(alt);
        }

        @Override
        public GetSecurityActionsConfig setCallback(java.lang.String callback) {
          return (GetSecurityActionsConfig) super.setCallback(callback);
        }

        @Override
        public GetSecurityActionsConfig setFields(java.lang.String fields) {
          return (GetSecurityActionsConfig) super.setFields(fields);
        }

        @Override
        public GetSecurityActionsConfig setKey(java.lang.String key) {
          return (GetSecurityActionsConfig) super.setKey(key);
        }

        @Override
        public GetSecurityActionsConfig setOauthToken(java.lang.String oauthToken) {
          return (GetSecurityActionsConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetSecurityActionsConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetSecurityActionsConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetSecurityActionsConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetSecurityActionsConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetSecurityActionsConfig setUploadType(java.lang.String uploadType) {
          return (GetSecurityActionsConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetSecurityActionsConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetSecurityActionsConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the SecurityActionsConfig to retrieve. This will always be:
         * `organizations/{org}/environments/{env}/security_actions_config`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the SecurityActionsConfig to retrieve. This will always be:
       `organizations/{org}/environments/{env}/security_actions_config`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the SecurityActionsConfig to retrieve. This will always be:
         * `organizations/{org}/environments/{env}/security_actions_config`
         */
        public GetSecurityActionsConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/securityActionsConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetSecurityActionsConfig set(String parameterName, Object value) {
          return (GetSecurityActionsConfig) super.set(parameterName, value);
        }
      }
      /**
       * Get distributed trace configuration in an environment.
       *
       * Create a request for the method "environments.getTraceConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetTraceConfig#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the trace configuration. Use the following structure in your request:
       *        "organizations/environments/traceConfig".
       * @return the request
       */
      public GetTraceConfig getTraceConfig(java.lang.String name) throws java.io.IOException {
        GetTraceConfig result = new GetTraceConfig(name);
        initialize(result);
        return result;
      }

      public class GetTraceConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/traceConfig$");

        /**
         * Get distributed trace configuration in an environment.
         *
         * Create a request for the method "environments.getTraceConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetTraceConfig#execute()} method to invoke the remote operation.
         * <p> {@link GetTraceConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
         * ientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. Name of the trace configuration. Use the following structure in your request:
       *        "organizations/environments/traceConfig".
         * @since 1.13
         */
        protected GetTraceConfig(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/traceConfig$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetTraceConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetTraceConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetTraceConfig setAccessToken(java.lang.String accessToken) {
          return (GetTraceConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetTraceConfig setAlt(java.lang.String alt) {
          return (GetTraceConfig) super.setAlt(alt);
        }

        @Override
        public GetTraceConfig setCallback(java.lang.String callback) {
          return (GetTraceConfig) super.setCallback(callback);
        }

        @Override
        public GetTraceConfig setFields(java.lang.String fields) {
          return (GetTraceConfig) super.setFields(fields);
        }

        @Override
        public GetTraceConfig setKey(java.lang.String key) {
          return (GetTraceConfig) super.setKey(key);
        }

        @Override
        public GetTraceConfig setOauthToken(java.lang.String oauthToken) {
          return (GetTraceConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetTraceConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetTraceConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetTraceConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetTraceConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetTraceConfig setUploadType(java.lang.String uploadType) {
          return (GetTraceConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetTraceConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetTraceConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the trace configuration. Use the following structure in your request:
         * "organizations/environments/traceConfig".
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the trace configuration. Use the following structure in your request:
       "organizations/environments/traceConfig".
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the trace configuration. Use the following structure in your request:
         * "organizations/environments/traceConfig".
         */
        public GetTraceConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/traceConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetTraceConfig set(String parameterName, Object value) {
          return (GetTraceConfig) super.set(parameterName, value);
        }
      }
      /**
       * Updates properties for an Apigee environment with patch semantics using a field mask. **Note:**
       * Not supported for Apigee hybrid.
       *
       * Create a request for the method "environments.modifyEnvironment".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link ModifyEnvironment#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{environment}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
       * @return the request
       */
      public ModifyEnvironment modifyEnvironment(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) throws java.io.IOException {
        ModifyEnvironment result = new ModifyEnvironment(name, content);
        initialize(result);
        return result;
      }

      public class ModifyEnvironment extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Updates properties for an Apigee environment with patch semantics using a field mask. **Note:**
         * Not supported for Apigee hybrid.
         *
         * Create a request for the method "environments.modifyEnvironment".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link ModifyEnvironment#execute()} method to invoke the remote operation.
         * <p> {@link ModifyEnvironment#initialize(com.google.api.client.googleapis.services.AbstractGoogl
         * eClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{environment}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
         * @since 1.13
         */
        protected ModifyEnvironment(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public ModifyEnvironment set$Xgafv(java.lang.String $Xgafv) {
          return (ModifyEnvironment) super.set$Xgafv($Xgafv);
        }

        @Override
        public ModifyEnvironment setAccessToken(java.lang.String accessToken) {
          return (ModifyEnvironment) super.setAccessToken(accessToken);
        }

        @Override
        public ModifyEnvironment setAlt(java.lang.String alt) {
          return (ModifyEnvironment) super.setAlt(alt);
        }

        @Override
        public ModifyEnvironment setCallback(java.lang.String callback) {
          return (ModifyEnvironment) super.setCallback(callback);
        }

        @Override
        public ModifyEnvironment setFields(java.lang.String fields) {
          return (ModifyEnvironment) super.setFields(fields);
        }

        @Override
        public ModifyEnvironment setKey(java.lang.String key) {
          return (ModifyEnvironment) super.setKey(key);
        }

        @Override
        public ModifyEnvironment setOauthToken(java.lang.String oauthToken) {
          return (ModifyEnvironment) super.setOauthToken(oauthToken);
        }

        @Override
        public ModifyEnvironment setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ModifyEnvironment) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ModifyEnvironment setQuotaUser(java.lang.String quotaUser) {
          return (ModifyEnvironment) super.setQuotaUser(quotaUser);
        }

        @Override
        public ModifyEnvironment setUploadType(java.lang.String uploadType) {
          return (ModifyEnvironment) super.setUploadType(uploadType);
        }

        @Override
        public ModifyEnvironment setUploadProtocol(java.lang.String uploadProtocol) {
          return (ModifyEnvironment) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{environment}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment. Use the following structure in your request:
       `organizations/{org}/environments/{environment}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{environment}`.
         */
        public ModifyEnvironment setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** List of fields to be updated. Fields that can be updated: node_config. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** List of fields to be updated. Fields that can be updated: node_config.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** List of fields to be updated. Fields that can be updated: node_config. */
        public ModifyEnvironment setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public ModifyEnvironment set(String parameterName, Object value) {
          return (ModifyEnvironment) super.set(parameterName, value);
        }
      }
      /**
       * Sets the IAM policy on an environment, if the policy already exists it will be replaced. For more
       * information, see [Manage users, roles, and permissions using the
       * API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles).
       * You must have the `apigee.environments.setIamPolicy` permission to call this API.
       *
       * Create a request for the method "environments.setIamPolicy".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest}
       * @return the request
       */
      public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
        SetIamPolicy result = new SetIamPolicy(resource, content);
        initialize(result);
        return result;
      }

      public class SetIamPolicy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1Policy> {

        private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Sets the IAM policy on an environment, if the policy already exists it will be replaced. For
         * more information, see [Manage users, roles, and permissions using the
         * API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-
         * roles). You must have the `apigee.environments.setIamPolicy` permission to call this API.
         *
         * Create a request for the method "environments.setIamPolicy".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation. <p>
         * {@link
         * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @since 1.13
         */
        protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleIamV1Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (SetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (SetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public SetIamPolicy setAlt(java.lang.String alt) {
          return (SetIamPolicy) super.setAlt(alt);
        }

        @Override
        public SetIamPolicy setCallback(java.lang.String callback) {
          return (SetIamPolicy) super.setCallback(callback);
        }

        @Override
        public SetIamPolicy setFields(java.lang.String fields) {
          return (SetIamPolicy) super.setFields(fields);
        }

        @Override
        public SetIamPolicy setKey(java.lang.String key) {
          return (SetIamPolicy) super.setKey(key);
        }

        @Override
        public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (SetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (SetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetIamPolicy setUploadType(java.lang.String uploadType) {
          return (SetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being specified. See [Resource
       names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
       field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        public SetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public SetIamPolicy set(String parameterName, Object value) {
          return (SetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Creates a subscription for the environment's Pub/Sub topic. The server will assign a random name
       * for this subscription. The "name" and "push_config" must *not* be specified.
       *
       * Create a request for the method "environments.subscribe".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Subscribe#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
       * @return the request
       */
      public Subscribe subscribe(java.lang.String parent) throws java.io.IOException {
        Subscribe result = new Subscribe(parent);
        initialize(result);
        return result;
      }

      public class Subscribe extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription> {

        private static final String REST_PATH = "v1/{+parent}:subscribe";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Creates a subscription for the environment's Pub/Sub topic. The server will assign a random
         * name for this subscription. The "name" and "push_config" must *not* be specified.
         *
         * Create a request for the method "environments.subscribe".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Subscribe#execute()} method to invoke the remote operation. <p>
         * {@link
         * Subscribe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
         * @since 1.13
         */
        protected Subscribe(java.lang.String parent) {
          super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Subscribe set$Xgafv(java.lang.String $Xgafv) {
          return (Subscribe) super.set$Xgafv($Xgafv);
        }

        @Override
        public Subscribe setAccessToken(java.lang.String accessToken) {
          return (Subscribe) super.setAccessToken(accessToken);
        }

        @Override
        public Subscribe setAlt(java.lang.String alt) {
          return (Subscribe) super.setAlt(alt);
        }

        @Override
        public Subscribe setCallback(java.lang.String callback) {
          return (Subscribe) super.setCallback(callback);
        }

        @Override
        public Subscribe setFields(java.lang.String fields) {
          return (Subscribe) super.setFields(fields);
        }

        @Override
        public Subscribe setKey(java.lang.String key) {
          return (Subscribe) super.setKey(key);
        }

        @Override
        public Subscribe setOauthToken(java.lang.String oauthToken) {
          return (Subscribe) super.setOauthToken(oauthToken);
        }

        @Override
        public Subscribe setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Subscribe) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Subscribe setQuotaUser(java.lang.String quotaUser) {
          return (Subscribe) super.setQuotaUser(quotaUser);
        }

        @Override
        public Subscribe setUploadType(java.lang.String uploadType) {
          return (Subscribe) super.setUploadType(uploadType);
        }

        @Override
        public Subscribe setUploadProtocol(java.lang.String uploadProtocol) {
          return (Subscribe) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the environment. Use the following structure in your request:
       `organizations/{org}/environments/{env}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        public Subscribe setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Subscribe set(String parameterName, Object value) {
          return (Subscribe) super.set(parameterName, value);
        }
      }
      /**
       * Tests the permissions of a user on an environment, and returns a subset of permissions that the
       * user has on the environment. If the environment does not exist, an empty permission set is
       * returned (a NOT_FOUND error is not returned).
       *
       * Create a request for the method "environments.testIamPermissions".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest}
       * @return the request
       */
      public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
        TestIamPermissions result = new TestIamPermissions(resource, content);
        initialize(result);
        return result;
      }

      public class TestIamPermissions extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsResponse> {

        private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Tests the permissions of a user on an environment, and returns a subset of permissions that the
         * user has on the environment. If the environment does not exist, an empty permission set is
         * returned (a NOT_FOUND error is not returned).
         *
         * Create a request for the method "environments.testIamPermissions".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
       *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
       *        this field.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest}
         * @since 1.13
         */
        protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
          return (TestIamPermissions) super.set$Xgafv($Xgafv);
        }

        @Override
        public TestIamPermissions setAccessToken(java.lang.String accessToken) {
          return (TestIamPermissions) super.setAccessToken(accessToken);
        }

        @Override
        public TestIamPermissions setAlt(java.lang.String alt) {
          return (TestIamPermissions) super.setAlt(alt);
        }

        @Override
        public TestIamPermissions setCallback(java.lang.String callback) {
          return (TestIamPermissions) super.setCallback(callback);
        }

        @Override
        public TestIamPermissions setFields(java.lang.String fields) {
          return (TestIamPermissions) super.setFields(fields);
        }

        @Override
        public TestIamPermissions setKey(java.lang.String key) {
          return (TestIamPermissions) super.setKey(key);
        }

        @Override
        public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
          return (TestIamPermissions) super.setOauthToken(oauthToken);
        }

        @Override
        public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
          return (TestIamPermissions) super.setQuotaUser(quotaUser);
        }

        @Override
        public TestIamPermissions setUploadType(java.lang.String uploadType) {
          return (TestIamPermissions) super.setUploadType(uploadType);
        }

        @Override
        public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
          return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
       names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
       field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See [Resource
         * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         * this field.
         */
        public TestIamPermissions setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public TestIamPermissions set(String parameterName, Object value) {
          return (TestIamPermissions) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a subscription for the environment's Pub/Sub topic.
       *
       * Create a request for the method "environments.unsubscribe".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Unsubscribe#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription}
       * @return the request
       */
      public Unsubscribe unsubscribe(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription content) throws java.io.IOException {
        Unsubscribe result = new Unsubscribe(parent, content);
        initialize(result);
        return result;
      }

      public class Unsubscribe extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+parent}:unsubscribe";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Deletes a subscription for the environment's Pub/Sub topic.
         *
         * Create a request for the method "environments.unsubscribe".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Unsubscribe#execute()} method to invoke the remote operation. <p>
         * {@link
         * Unsubscribe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription}
         * @since 1.13
         */
        protected Unsubscribe(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Unsubscribe set$Xgafv(java.lang.String $Xgafv) {
          return (Unsubscribe) super.set$Xgafv($Xgafv);
        }

        @Override
        public Unsubscribe setAccessToken(java.lang.String accessToken) {
          return (Unsubscribe) super.setAccessToken(accessToken);
        }

        @Override
        public Unsubscribe setAlt(java.lang.String alt) {
          return (Unsubscribe) super.setAlt(alt);
        }

        @Override
        public Unsubscribe setCallback(java.lang.String callback) {
          return (Unsubscribe) super.setCallback(callback);
        }

        @Override
        public Unsubscribe setFields(java.lang.String fields) {
          return (Unsubscribe) super.setFields(fields);
        }

        @Override
        public Unsubscribe setKey(java.lang.String key) {
          return (Unsubscribe) super.setKey(key);
        }

        @Override
        public Unsubscribe setOauthToken(java.lang.String oauthToken) {
          return (Unsubscribe) super.setOauthToken(oauthToken);
        }

        @Override
        public Unsubscribe setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Unsubscribe) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Unsubscribe setQuotaUser(java.lang.String quotaUser) {
          return (Unsubscribe) super.setQuotaUser(quotaUser);
        }

        @Override
        public Unsubscribe setUploadType(java.lang.String uploadType) {
          return (Unsubscribe) super.setUploadType(uploadType);
        }

        @Override
        public Unsubscribe setUploadProtocol(java.lang.String uploadProtocol) {
          return (Unsubscribe) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the environment. Use the following structure in your request:
       `organizations/{org}/environments/{env}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        public Unsubscribe setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Unsubscribe set(String parameterName, Object value) {
          return (Unsubscribe) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing environment. When updating properties, you must pass all existing properties
       * to the API, even if they are not being changed. If you omit properties from the payload, the
       * properties are removed. To get the current list of properties for the environment, use the [Get
       * Environment API](get). **Note**: Both `PUT` and `POST` methods are supported for updating an
       * existing environment.
       *
       * Create a request for the method "environments.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Updates an existing environment. When updating properties, you must pass all existing
         * properties to the API, even if they are not being changed. If you omit properties from the
         * payload, the properties are removed. To get the current list of properties for the environment,
         * use the [Get Environment API](get). **Note**: Both `PUT` and `POST` methods are supported for
         * updating an existing environment.
         *
         * Create a request for the method "environments.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment. Use the following structure in your request:
       `organizations/{org}/environments/{env}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }
      /**
       * Updates the debug mask singleton resource for an environment.
       *
       * Create a request for the method "environments.updateDebugmask".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdateDebugmask#execute()} method to invoke the remote operation.
       *
       * @param name Name of the debug mask.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask}
       * @return the request
       */
      public UpdateDebugmask updateDebugmask(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask content) throws java.io.IOException {
        UpdateDebugmask result = new UpdateDebugmask(name, content);
        initialize(result);
        return result;
      }

      public class UpdateDebugmask extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/debugmask$");

        /**
         * Updates the debug mask singleton resource for an environment.
         *
         * Create a request for the method "environments.updateDebugmask".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdateDebugmask#execute()} method to invoke the remote operation.
         * <p> {@link UpdateDebugmask#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
         * lientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Name of the debug mask.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask}
         * @since 1.13
         */
        protected UpdateDebugmask(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
        }

        @Override
        public UpdateDebugmask set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateDebugmask) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateDebugmask setAccessToken(java.lang.String accessToken) {
          return (UpdateDebugmask) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateDebugmask setAlt(java.lang.String alt) {
          return (UpdateDebugmask) super.setAlt(alt);
        }

        @Override
        public UpdateDebugmask setCallback(java.lang.String callback) {
          return (UpdateDebugmask) super.setCallback(callback);
        }

        @Override
        public UpdateDebugmask setFields(java.lang.String fields) {
          return (UpdateDebugmask) super.setFields(fields);
        }

        @Override
        public UpdateDebugmask setKey(java.lang.String key) {
          return (UpdateDebugmask) super.setKey(key);
        }

        @Override
        public UpdateDebugmask setOauthToken(java.lang.String oauthToken) {
          return (UpdateDebugmask) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateDebugmask setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateDebugmask) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateDebugmask setQuotaUser(java.lang.String quotaUser) {
          return (UpdateDebugmask) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateDebugmask setUploadType(java.lang.String uploadType) {
          return (UpdateDebugmask) super.setUploadType(uploadType);
        }

        @Override
        public UpdateDebugmask setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateDebugmask) super.setUploadProtocol(uploadProtocol);
        }

        /** Name of the debug mask. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the debug mask.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Name of the debug mask. */
        public UpdateDebugmask setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
          this.name = name;
          return this;
        }

        /**
         * Boolean flag that specifies whether to replace existing values in the debug mask when
         * doing an update. Set to true to replace existing values. The default behavior is to
         * append the values (false).
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean replaceRepeatedFields;

        /** Boolean flag that specifies whether to replace existing values in the debug mask when doing an
       update. Set to true to replace existing values. The default behavior is to append the values
       (false).
         */
        public java.lang.Boolean getReplaceRepeatedFields() {
          return replaceRepeatedFields;
        }

        /**
         * Boolean flag that specifies whether to replace existing values in the debug mask when
         * doing an update. Set to true to replace existing values. The default behavior is to
         * append the values (false).
         */
        public UpdateDebugmask setReplaceRepeatedFields(java.lang.Boolean replaceRepeatedFields) {
          this.replaceRepeatedFields = replaceRepeatedFields;
          return this;
        }

        /** Field debug mask to support partial updates. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Field debug mask to support partial updates.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Field debug mask to support partial updates. */
        public UpdateDebugmask setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateDebugmask set(String parameterName, Object value) {
          return (UpdateDebugmask) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing environment. When updating properties, you must pass all existing properties
       * to the API, even if they are not being changed. If you omit properties from the payload, the
       * properties are removed. To get the current list of properties for the environment, use the [Get
       * Environment API](get). **Note**: Both `PUT` and `POST` methods are supported for updating an
       * existing environment.
       *
       * Create a request for the method "environments.updateEnvironment".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdateEnvironment#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
       * @return the request
       */
      public UpdateEnvironment updateEnvironment(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) throws java.io.IOException {
        UpdateEnvironment result = new UpdateEnvironment(name, content);
        initialize(result);
        return result;
      }

      public class UpdateEnvironment extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Updates an existing environment. When updating properties, you must pass all existing
         * properties to the API, even if they are not being changed. If you omit properties from the
         * payload, the properties are removed. To get the current list of properties for the environment,
         * use the [Get Environment API](get). **Note**: Both `PUT` and `POST` methods are supported for
         * updating an existing environment.
         *
         * Create a request for the method "environments.updateEnvironment".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdateEnvironment#execute()} method to invoke the remote operation.
         * <p> {@link UpdateEnvironment#initialize(com.google.api.client.googleapis.services.AbstractGoogl
         * eClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. Name of the environment. Use the following structure in your request:
       *        `organizations/{org}/environments/{env}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
         * @since 1.13
         */
        protected UpdateEnvironment(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public UpdateEnvironment set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateEnvironment) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateEnvironment setAccessToken(java.lang.String accessToken) {
          return (UpdateEnvironment) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateEnvironment setAlt(java.lang.String alt) {
          return (UpdateEnvironment) super.setAlt(alt);
        }

        @Override
        public UpdateEnvironment setCallback(java.lang.String callback) {
          return (UpdateEnvironment) super.setCallback(callback);
        }

        @Override
        public UpdateEnvironment setFields(java.lang.String fields) {
          return (UpdateEnvironment) super.setFields(fields);
        }

        @Override
        public UpdateEnvironment setKey(java.lang.String key) {
          return (UpdateEnvironment) super.setKey(key);
        }

        @Override
        public UpdateEnvironment setOauthToken(java.lang.String oauthToken) {
          return (UpdateEnvironment) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateEnvironment setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateEnvironment) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateEnvironment setQuotaUser(java.lang.String quotaUser) {
          return (UpdateEnvironment) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateEnvironment setUploadType(java.lang.String uploadType) {
          return (UpdateEnvironment) super.setUploadType(uploadType);
        }

        @Override
        public UpdateEnvironment setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateEnvironment) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment. Use the following structure in your request:
       `organizations/{org}/environments/{env}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment. Use the following structure in your request:
         * `organizations/{org}/environments/{env}`
         */
        public UpdateEnvironment setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public UpdateEnvironment set(String parameterName, Object value) {
          return (UpdateEnvironment) super.set(parameterName, value);
        }
      }
      /**
       * UpdateSecurityActionConfig updates the current SecurityActions configuration. This method is used
       * to enable/disable the feature at the environment level.
       *
       * Create a request for the method "environments.updateSecurityActionsConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdateSecurityActionsConfig#execute()} method to invoke the remote
       * operation.
       *
       * @param name This is a singleton resource, the name will always be set by SecurityActions and any user input will
       *        be ignored. The name is always:
       *        `organizations/{org}/environments/{env}/security_actions_config`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityActionsConfig}
       * @return the request
       */
      public UpdateSecurityActionsConfig updateSecurityActionsConfig(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityActionsConfig content) throws java.io.IOException {
        UpdateSecurityActionsConfig result = new UpdateSecurityActionsConfig(name, content);
        initialize(result);
        return result;
      }

      public class UpdateSecurityActionsConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityActionsConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/securityActionsConfig$");

        /**
         * UpdateSecurityActionConfig updates the current SecurityActions configuration. This method is
         * used to enable/disable the feature at the environment level.
         *
         * Create a request for the method "environments.updateSecurityActionsConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdateSecurityActionsConfig#execute()} method to invoke the remote
         * operation. <p> {@link UpdateSecurityActionsConfig#initialize(com.google.api.client.googleapis.s
         * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
         * after invoking the constructor. </p>
         *
         * @param name This is a singleton resource, the name will always be set by SecurityActions and any user input will
       *        be ignored. The name is always:
       *        `organizations/{org}/environments/{env}/security_actions_config`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityActionsConfig}
         * @since 1.13
         */
        protected UpdateSecurityActionsConfig(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityActionsConfig content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityActionsConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/securityActionsConfig$");
          }
        }

        @Override
        public UpdateSecurityActionsConfig set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateSecurityActionsConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateSecurityActionsConfig setAccessToken(java.lang.String accessToken) {
          return (UpdateSecurityActionsConfig) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateSecurityActionsConfig setAlt(java.lang.String alt) {
          return (UpdateSecurityActionsConfig) super.setAlt(alt);
        }

        @Override
        public UpdateSecurityActionsConfig setCallback(java.lang.String callback) {
          return (UpdateSecurityActionsConfig) super.setCallback(callback);
        }

        @Override
        public UpdateSecurityActionsConfig setFields(java.lang.String fields) {
          return (UpdateSecurityActionsConfig) super.setFields(fields);
        }

        @Override
        public UpdateSecurityActionsConfig setKey(java.lang.String key) {
          return (UpdateSecurityActionsConfig) super.setKey(key);
        }

        @Override
        public UpdateSecurityActionsConfig setOauthToken(java.lang.String oauthToken) {
          return (UpdateSecurityActionsConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateSecurityActionsConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateSecurityActionsConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateSecurityActionsConfig setQuotaUser(java.lang.String quotaUser) {
          return (UpdateSecurityActionsConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateSecurityActionsConfig setUploadType(java.lang.String uploadType) {
          return (UpdateSecurityActionsConfig) super.setUploadType(uploadType);
        }

        @Override
        public UpdateSecurityActionsConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateSecurityActionsConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * This is a singleton resource, the name will always be set by SecurityActions and any user
         * input will be ignored. The name is always:
         * `organizations/{org}/environments/{env}/security_actions_config`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** This is a singleton resource, the name will always be set by SecurityActions and any user input
       will be ignored. The name is always:
       `organizations/{org}/environments/{env}/security_actions_config`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * This is a singleton resource, the name will always be set by SecurityActions and any user
         * input will be ignored. The name is always:
         * `organizations/{org}/environments/{env}/security_actions_config`
         */
        public UpdateSecurityActionsConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/securityActionsConfig$");
          }
          this.name = name;
          return this;
        }

        /** The list of fields to update. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** The list of fields to update.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** The list of fields to update. */
        public UpdateSecurityActionsConfig setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateSecurityActionsConfig set(String parameterName, Object value) {
          return (UpdateSecurityActionsConfig) super.set(parameterName, value);
        }
      }
      /**
       * Updates the trace configurations in an environment. Note that the repeated fields have replace
       * semantics when included in the field mask and that they will be overwritten by the value of the
       * fields in the request body.
       *
       * Create a request for the method "environments.updateTraceConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdateTraceConfig#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the trace configuration. Use the following structure in your request:
       *        "organizations/environments/traceConfig".
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfig}
       * @return the request
       */
      public UpdateTraceConfig updateTraceConfig(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfig content) throws java.io.IOException {
        UpdateTraceConfig result = new UpdateTraceConfig(name, content);
        initialize(result);
        return result;
      }

      public class UpdateTraceConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/traceConfig$");

        /**
         * Updates the trace configurations in an environment. Note that the repeated fields have replace
         * semantics when included in the field mask and that they will be overwritten by the value of the
         * fields in the request body.
         *
         * Create a request for the method "environments.updateTraceConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdateTraceConfig#execute()} method to invoke the remote operation.
         * <p> {@link UpdateTraceConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogl
         * eClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. Name of the trace configuration. Use the following structure in your request:
       *        "organizations/environments/traceConfig".
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfig}
         * @since 1.13
         */
        protected UpdateTraceConfig(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfig content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/traceConfig$");
          }
        }

        @Override
        public UpdateTraceConfig set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateTraceConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateTraceConfig setAccessToken(java.lang.String accessToken) {
          return (UpdateTraceConfig) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateTraceConfig setAlt(java.lang.String alt) {
          return (UpdateTraceConfig) super.setAlt(alt);
        }

        @Override
        public UpdateTraceConfig setCallback(java.lang.String callback) {
          return (UpdateTraceConfig) super.setCallback(callback);
        }

        @Override
        public UpdateTraceConfig setFields(java.lang.String fields) {
          return (UpdateTraceConfig) super.setFields(fields);
        }

        @Override
        public UpdateTraceConfig setKey(java.lang.String key) {
          return (UpdateTraceConfig) super.setKey(key);
        }

        @Override
        public UpdateTraceConfig setOauthToken(java.lang.String oauthToken) {
          return (UpdateTraceConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateTraceConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateTraceConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateTraceConfig setQuotaUser(java.lang.String quotaUser) {
          return (UpdateTraceConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateTraceConfig setUploadType(java.lang.String uploadType) {
          return (UpdateTraceConfig) super.setUploadType(uploadType);
        }

        @Override
        public UpdateTraceConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateTraceConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the trace configuration. Use the following structure in your request:
         * "organizations/environments/traceConfig".
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the trace configuration. Use the following structure in your request:
       "organizations/environments/traceConfig".
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the trace configuration. Use the following structure in your request:
         * "organizations/environments/traceConfig".
         */
        public UpdateTraceConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/traceConfig$");
          }
          this.name = name;
          return this;
        }

        /** List of fields to be updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** List of fields to be updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** List of fields to be updated. */
        public UpdateTraceConfig setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateTraceConfig set(String parameterName, Object value) {
          return (UpdateTraceConfig) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the AddonsConfig collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.AddonsConfig.List request = apigee.addonsConfig().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public AddonsConfig addonsConfig() {
        return new AddonsConfig();
      }

      /**
       * The "addonsConfig" collection of methods.
       */
      public class AddonsConfig {

        /**
         * Updates an add-on enablement status of an environment.
         *
         * Create a request for the method "addonsConfig.setAddonEnablement".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link SetAddonEnablement#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the add-ons config. Must be in the format of
         *        `/organizations/{org}/environments/{env}/addonsConfig`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SetAddonEnablementRequest}
         * @return the request
         */
        public SetAddonEnablement setAddonEnablement(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SetAddonEnablementRequest content) throws java.io.IOException {
          SetAddonEnablement result = new SetAddonEnablement(name, content);
          initialize(result);
          return result;
        }

        public class SetAddonEnablement extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:setAddonEnablement";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/addonsConfig$");

          /**
           * Updates an add-on enablement status of an environment.
           *
           * Create a request for the method "addonsConfig.setAddonEnablement".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link SetAddonEnablement#execute()} method to invoke the remote
           * operation. <p> {@link SetAddonEnablement#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. Name of the add-ons config. Must be in the format of
         *        `/organizations/{org}/environments/{env}/addonsConfig`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SetAddonEnablementRequest}
           * @since 1.13
           */
          protected SetAddonEnablement(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SetAddonEnablementRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/addonsConfig$");
            }
          }

          @Override
          public SetAddonEnablement set$Xgafv(java.lang.String $Xgafv) {
            return (SetAddonEnablement) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetAddonEnablement setAccessToken(java.lang.String accessToken) {
            return (SetAddonEnablement) super.setAccessToken(accessToken);
          }

          @Override
          public SetAddonEnablement setAlt(java.lang.String alt) {
            return (SetAddonEnablement) super.setAlt(alt);
          }

          @Override
          public SetAddonEnablement setCallback(java.lang.String callback) {
            return (SetAddonEnablement) super.setCallback(callback);
          }

          @Override
          public SetAddonEnablement setFields(java.lang.String fields) {
            return (SetAddonEnablement) super.setFields(fields);
          }

          @Override
          public SetAddonEnablement setKey(java.lang.String key) {
            return (SetAddonEnablement) super.setKey(key);
          }

          @Override
          public SetAddonEnablement setOauthToken(java.lang.String oauthToken) {
            return (SetAddonEnablement) super.setOauthToken(oauthToken);
          }

          @Override
          public SetAddonEnablement setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetAddonEnablement) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetAddonEnablement setQuotaUser(java.lang.String quotaUser) {
            return (SetAddonEnablement) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetAddonEnablement setUploadType(java.lang.String uploadType) {
            return (SetAddonEnablement) super.setUploadType(uploadType);
          }

          @Override
          public SetAddonEnablement setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetAddonEnablement) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the add-ons config. Must be in the format of
           * `/organizations/{org}/environments/{env}/addonsConfig`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the add-ons config. Must be in the format of
         `/organizations/{org}/environments/{env}/addonsConfig`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the add-ons config. Must be in the format of
           * `/organizations/{org}/environments/{env}/addonsConfig`
           */
          public SetAddonEnablement setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/addonsConfig$");
            }
            this.name = name;
            return this;
          }

          @Override
          public SetAddonEnablement set(String parameterName, Object value) {
            return (SetAddonEnablement) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Analytics collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Analytics.List request = apigee.analytics().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Analytics analytics() {
        return new Analytics();
      }

      /**
       * The "analytics" collection of methods.
       */
      public class Analytics {

        /**
         * An accessor for creating requests from the Admin collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Admin.List request = apigee.admin().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Admin admin() {
          return new Admin();
        }

        /**
         * The "admin" collection of methods.
         */
        public class Admin {

          /**
           * Gets a list of metrics and dimensions that can be used to create analytics queries and reports.
           * Each schema element contains the name of the field, its associated type, and a flag indicating
           * whether it is a standard or custom field.
           *
           * Create a request for the method "admin.getSchemav2".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetSchemav2#execute()} method to invoke the remote operation.
           *
           * @param name Required. Path to the schema. Use the following structure in your request:
           *        `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
           * @return the request
           */
          public GetSchemav2 getSchemav2(java.lang.String name) throws java.io.IOException {
            GetSchemav2 result = new GetSchemav2(name);
            initialize(result);
            return result;
          }

          public class GetSchemav2 extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Schema> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$");

            /**
             * Gets a list of metrics and dimensions that can be used to create analytics queries and reports.
             * Each schema element contains the name of the field, its associated type, and a flag indicating
             * whether it is a standard or custom field.
             *
             * Create a request for the method "admin.getSchemav2".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetSchemav2#execute()} method to invoke the remote operation. <p>
             * {@link
             * GetSchemav2#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Path to the schema. Use the following structure in your request:
           *        `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             * @since 1.13
             */
            protected GetSchemav2(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Schema.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetSchemav2 set$Xgafv(java.lang.String $Xgafv) {
              return (GetSchemav2) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetSchemav2 setAccessToken(java.lang.String accessToken) {
              return (GetSchemav2) super.setAccessToken(accessToken);
            }

            @Override
            public GetSchemav2 setAlt(java.lang.String alt) {
              return (GetSchemav2) super.setAlt(alt);
            }

            @Override
            public GetSchemav2 setCallback(java.lang.String callback) {
              return (GetSchemav2) super.setCallback(callback);
            }

            @Override
            public GetSchemav2 setFields(java.lang.String fields) {
              return (GetSchemav2) super.setFields(fields);
            }

            @Override
            public GetSchemav2 setKey(java.lang.String key) {
              return (GetSchemav2) super.setKey(key);
            }

            @Override
            public GetSchemav2 setOauthToken(java.lang.String oauthToken) {
              return (GetSchemav2) super.setOauthToken(oauthToken);
            }

            @Override
            public GetSchemav2 setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetSchemav2) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetSchemav2 setQuotaUser(java.lang.String quotaUser) {
              return (GetSchemav2) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetSchemav2 setUploadType(java.lang.String uploadType) {
              return (GetSchemav2) super.setUploadType(uploadType);
            }

            @Override
            public GetSchemav2 setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetSchemav2) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Path to the schema. Use the following structure in your request:
             * `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Path to the schema. Use the following structure in your request:
           `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Path to the schema. Use the following structure in your request:
             * `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             */
            public GetSchemav2 setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$");
              }
              this.name = name;
              return this;
            }

            /**
             * Flag that specifies whether the schema is be read from the database or cache. Set to
             * `true` to read the schema from the database. Defaults to cache.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean disableCache;

            /** Flag that specifies whether the schema is be read from the database or cache. Set to `true` to read
           the schema from the database. Defaults to cache.
             */
            public java.lang.Boolean getDisableCache() {
              return disableCache;
            }

            /**
             * Flag that specifies whether the schema is be read from the database or cache. Set to
             * `true` to read the schema from the database. Defaults to cache.
             */
            public GetSchemav2 setDisableCache(java.lang.Boolean disableCache) {
              this.disableCache = disableCache;
              return this;
            }

            /**
             * Required. Name of the dataset for which you want to retrieve the schema. For example:
             * `fact` or `agg_cus1`
             */
            @com.google.api.client.util.Key
            private java.lang.String type;

            /** Required. Name of the dataset for which you want to retrieve the schema. For example: `fact` or
           `agg_cus1`
             */
            public java.lang.String getType() {
              return type;
            }

            /**
             * Required. Name of the dataset for which you want to retrieve the schema. For example:
             * `fact` or `agg_cus1`
             */
            public GetSchemav2 setType(java.lang.String type) {
              this.type = type;
              return this;
            }

            @Override
            public GetSchemav2 set(String parameterName, Object value) {
              return (GetSchemav2) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Exports collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Exports.List request = apigee.exports().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Exports exports() {
          return new Exports();
        }

        /**
         * The "exports" collection of methods.
         */
        public class Exports {

          /**
           * Submit a data export job to be processed in the background. If the request is successful, the API
           * returns a 201 status, a URI that can be used to retrieve the status of the export job, and the
           * `state` value of "enqueued".
           *
           * Create a request for the method "exports.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Names of the parent organization and environment. Must be of the form
           *        `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ExportRequest}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ExportRequest content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Export> {

            private static final String REST_PATH = "v1/{+parent}/analytics/exports";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

            /**
             * Submit a data export job to be processed in the background. If the request is successful, the
             * API returns a 201 status, a URI that can be used to retrieve the status of the export job, and
             * the `state` value of "enqueued".
             *
             * Create a request for the method "exports.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Names of the parent organization and environment. Must be of the form
           *        `organizations/{org}/environments/{env}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ExportRequest}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ExportRequest content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Export.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Names of the parent organization and environment. Must be of the form
             * `organizations/{org}/environments/{env}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Names of the parent organization and environment. Must be of the form
           `organizations/{org}/environments/{env}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Names of the parent organization and environment. Must be of the form
             * `organizations/{org}/environments/{env}`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Gets the details and status of an analytics export job. If the export job is still in progress,
           * its `state` is set to "running". After the export job has completed successfully, its `state` is
           * set to "completed". If the export job fails, its `state` is set to `failed`.
           *
           * Create a request for the method "exports.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Resource name of the export to get.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Export> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/analytics/exports/[^/]+$");

            /**
             * Gets the details and status of an analytics export job. If the export job is still in progress,
             * its `state` is set to "running". After the export job has completed successfully, its `state`
             * is set to "completed". If the export job fails, its `state` is set to `failed`.
             *
             * Create a request for the method "exports.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Resource name of the export to get.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Export.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/analytics/exports/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /** Required. Resource name of the export to get. */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Resource name of the export to get.
             */
            public java.lang.String getName() {
              return name;
            }

            /** Required. Resource name of the export to get. */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/analytics/exports/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists the details and status of all analytics export jobs belonging to the parent organization
           * and environment.
           *
           * Create a request for the method "exports.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Names of the parent organization and environment. Must be of the form
           *        `organizations/{org}/environments/{env}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListExportsResponse> {

            private static final String REST_PATH = "v1/{+parent}/analytics/exports";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

            /**
             * Lists the details and status of all analytics export jobs belonging to the parent organization
             * and environment.
             *
             * Create a request for the method "exports.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Names of the parent organization and environment. Must be of the form
           *        `organizations/{org}/environments/{env}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListExportsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Names of the parent organization and environment. Must be of the form
             * `organizations/{org}/environments/{env}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Names of the parent organization and environment. Must be of the form
           `organizations/{org}/environments/{env}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Names of the parent organization and environment. Must be of the form
             * `organizations/{org}/environments/{env}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Apis collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apis.List request = apigee.apis().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apis apis() {
        return new Apis();
      }

      /**
       * The "apis" collection of methods.
       */
      public class Apis {

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of an API proxy in an environment.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name representing an API proxy in an environment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+$");

            /**
             * Lists all deployments of an API proxy in an environment.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name representing an API proxy in an environment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing an API proxy in an environment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name representing an API proxy in an environment in the following format:
           `organizations/{org}/environments/{env}/apis/{api}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name representing an API proxy in an environment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Revisions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Revisions revisions() {
          return new Revisions();
        }

        /**
         * The "revisions" collection of methods.
         */
        public class Revisions {

          /**
           * Deploys a revision of an API proxy. If another revision of the same API proxy revision is
           * currently deployed, set the `override` parameter to `true` to have this revision replace the
           * currently deployed revision. You cannot invoke an API proxy until it has been deployed to an
           * environment. After you deploy an API proxy revision, you cannot edit it. To edit the API proxy,
           * you must create and deploy a new revision. For a request path
           * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two permissions
           * are required: * `apigee.deployments.create` on the resource
           * `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           *
           * Create a request for the method "revisions.deploy".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Deploy#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the API proxy revision deployment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
           * @return the request
           */
          public Deploy deploy(java.lang.String name) throws java.io.IOException {
            Deploy result = new Deploy(name);
            initialize(result);
            return result;
          }

          public class Deploy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

            /**
             * Deploys a revision of an API proxy. If another revision of the same API proxy revision is
             * currently deployed, set the `override` parameter to `true` to have this revision replace the
             * currently deployed revision. You cannot invoke an API proxy until it has been deployed to an
             * environment. After you deploy an API proxy revision, you cannot edit it. To edit the API proxy,
             * you must create and deploy a new revision. For a request path
             * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two
             * permissions are required: * `apigee.deployments.create` on the resource
             * `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource
             * `organizations/{org}/apis/{api}/revisions/{rev}`
             *
             * Create a request for the method "revisions.deploy".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Deploy#execute()} method to invoke the remote operation. <p> {@link
             * Deploy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the API proxy revision deployment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             * @since 1.13
             */
            protected Deploy(java.lang.String name) {
              super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public Deploy set$Xgafv(java.lang.String $Xgafv) {
              return (Deploy) super.set$Xgafv($Xgafv);
            }

            @Override
            public Deploy setAccessToken(java.lang.String accessToken) {
              return (Deploy) super.setAccessToken(accessToken);
            }

            @Override
            public Deploy setAlt(java.lang.String alt) {
              return (Deploy) super.setAlt(alt);
            }

            @Override
            public Deploy setCallback(java.lang.String callback) {
              return (Deploy) super.setCallback(callback);
            }

            @Override
            public Deploy setFields(java.lang.String fields) {
              return (Deploy) super.setFields(fields);
            }

            @Override
            public Deploy setKey(java.lang.String key) {
              return (Deploy) super.setKey(key);
            }

            @Override
            public Deploy setOauthToken(java.lang.String oauthToken) {
              return (Deploy) super.setOauthToken(oauthToken);
            }

            @Override
            public Deploy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Deploy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Deploy setQuotaUser(java.lang.String quotaUser) {
              return (Deploy) super.setQuotaUser(quotaUser);
            }

            @Override
            public Deploy setUploadType(java.lang.String uploadType) {
              return (Deploy) super.setUploadType(uploadType);
            }

            @Override
            public Deploy setUploadProtocol(java.lang.String uploadProtocol) {
              return (Deploy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the API proxy revision deployment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the API proxy revision deployment in the following format:
           `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the API proxy revision deployment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public Deploy setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Flag that specifies whether the new deployment replaces other deployed revisions of
             * the API proxy in the environment. Set `override` to `true` to replace other deployed
             * revisions. By default, `override` is `false` and the deployment is rejected if other
             * revisions of the API proxy are deployed in the environment.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean override;

            /** Flag that specifies whether the new deployment replaces other deployed revisions of the API proxy
           in the environment. Set `override` to `true` to replace other deployed revisions. By default,
           `override` is `false` and the deployment is rejected if other revisions of the API proxy are
           deployed in the environment.
             */
            public java.lang.Boolean getOverride() {
              return override;
            }

            /**
             * Flag that specifies whether the new deployment replaces other deployed revisions of
             * the API proxy in the environment. Set `override` to `true` to replace other deployed
             * revisions. By default, `override` is `false` and the deployment is rejected if other
             * revisions of the API proxy are deployed in the environment.
             */
            public Deploy setOverride(java.lang.Boolean override) {
              this.override = override;
              return this;
            }

            /**
             * Flag that specifies whether to enable sequenced rollout. If set to `true`, the
             * routing rules for this deployment and the environment changes to add the deployment
             * will be rolled out in a safe order. This reduces the risk of downtime that could be
             * caused by changing the environment group's routing before the new destination for the
             * affected traffic is ready to receive it. This should only be necessary if the new
             * deployment will be capturing traffic from another environment under a shared
             * environment group or if traffic will be rerouted to a different environment due to a
             * base path removal. The generateDeployChangeReport API may be used to examine routing
             * changes before issuing the deployment request, and its response will indicate if a
             * sequenced rollout is recommended for the deployment.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean sequencedRollout;

            /** Flag that specifies whether to enable sequenced rollout. If set to `true`, the routing rules for
           this deployment and the environment changes to add the deployment will be rolled out in a safe
           order. This reduces the risk of downtime that could be caused by changing the environment group's
           routing before the new destination for the affected traffic is ready to receive it. This should
           only be necessary if the new deployment will be capturing traffic from another environment under a
           shared environment group or if traffic will be rerouted to a different environment due to a base
           path removal. The generateDeployChangeReport API may be used to examine routing changes before
           issuing the deployment request, and its response will indicate if a sequenced rollout is
           recommended for the deployment.
             */
            public java.lang.Boolean getSequencedRollout() {
              return sequencedRollout;
            }

            /**
             * Flag that specifies whether to enable sequenced rollout. If set to `true`, the
             * routing rules for this deployment and the environment changes to add the deployment
             * will be rolled out in a safe order. This reduces the risk of downtime that could be
             * caused by changing the environment group's routing before the new destination for the
             * affected traffic is ready to receive it. This should only be necessary if the new
             * deployment will be capturing traffic from another environment under a shared
             * environment group or if traffic will be rerouted to a different environment due to a
             * base path removal. The generateDeployChangeReport API may be used to examine routing
             * changes before issuing the deployment request, and its response will indicate if a
             * sequenced rollout is recommended for the deployment.
             */
            public Deploy setSequencedRollout(java.lang.Boolean sequencedRollout) {
              this.sequencedRollout = sequencedRollout;
              return this;
            }

            /**
             * Google Cloud IAM service account. The service account represents the identity of the
             * deployed proxy, and determines what permissions it has. The format must be
             * `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`.
             */
            @com.google.api.client.util.Key
            private java.lang.String serviceAccount;

            /** Google Cloud IAM service account. The service account represents the identity of the deployed
           proxy, and determines what permissions it has. The format must be
           `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`.
             */
            public java.lang.String getServiceAccount() {
              return serviceAccount;
            }

            /**
             * Google Cloud IAM service account. The service account represents the identity of the
             * deployed proxy, and determines what permissions it has. The format must be
             * `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`.
             */
            public Deploy setServiceAccount(java.lang.String serviceAccount) {
              this.serviceAccount = serviceAccount;
              return this;
            }

            @Override
            public Deploy set(String parameterName, Object value) {
              return (Deploy) super.set(parameterName, value);
            }
          }
          /**
           * Gets the deployment of an API proxy revision and actual state reported by runtime pods.
           *
           * Create a request for the method "revisions.getDeployments".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name representing an API proxy revision in an environment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
           * @return the request
           */
          public GetDeployments getDeployments(java.lang.String name) throws java.io.IOException {
            GetDeployments result = new GetDeployments(name);
            initialize(result);
            return result;
          }

          public class GetDeployments extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

            /**
             * Gets the deployment of an API proxy revision and actual state reported by runtime pods.
             *
             * Create a request for the method "revisions.getDeployments".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
             * <p> {@link GetDeployments#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
             * ientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param name Required. Name representing an API proxy revision in an environment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             * @since 1.13
             */
            protected GetDeployments(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetDeployments set$Xgafv(java.lang.String $Xgafv) {
              return (GetDeployments) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetDeployments setAccessToken(java.lang.String accessToken) {
              return (GetDeployments) super.setAccessToken(accessToken);
            }

            @Override
            public GetDeployments setAlt(java.lang.String alt) {
              return (GetDeployments) super.setAlt(alt);
            }

            @Override
            public GetDeployments setCallback(java.lang.String callback) {
              return (GetDeployments) super.setCallback(callback);
            }

            @Override
            public GetDeployments setFields(java.lang.String fields) {
              return (GetDeployments) super.setFields(fields);
            }

            @Override
            public GetDeployments setKey(java.lang.String key) {
              return (GetDeployments) super.setKey(key);
            }

            @Override
            public GetDeployments setOauthToken(java.lang.String oauthToken) {
              return (GetDeployments) super.setOauthToken(oauthToken);
            }

            @Override
            public GetDeployments setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetDeployments) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetDeployments setQuotaUser(java.lang.String quotaUser) {
              return (GetDeployments) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetDeployments setUploadType(java.lang.String uploadType) {
              return (GetDeployments) super.setUploadType(uploadType);
            }

            @Override
            public GetDeployments setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetDeployments) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing an API proxy revision in an environment in the following
             * format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name representing an API proxy revision in an environment in the following format:
           `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name representing an API proxy revision in an environment in the following
             * format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public GetDeployments setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetDeployments set(String parameterName, Object value) {
              return (GetDeployments) super.set(parameterName, value);
            }
          }
          /**
           * Undeploys an API proxy revision from an environment. For a request path
           * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two permissions
           * are required: * `apigee.deployments.delete` on the resource
           * `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           *
           * Create a request for the method "revisions.undeploy".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Undeploy#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the API proxy revision deployment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
           * @return the request
           */
          public Undeploy undeploy(java.lang.String name) throws java.io.IOException {
            Undeploy result = new Undeploy(name);
            initialize(result);
            return result;
          }

          public class Undeploy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

            /**
             * Undeploys an API proxy revision from an environment. For a request path
             * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two
             * permissions are required: * `apigee.deployments.delete` on the resource
             * `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource
             * `organizations/{org}/apis/{api}/revisions/{rev}`
             *
             * Create a request for the method "revisions.undeploy".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Undeploy#execute()} method to invoke the remote operation. <p>
             * {@link
             * Undeploy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the API proxy revision deployment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             * @since 1.13
             */
            protected Undeploy(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public Undeploy set$Xgafv(java.lang.String $Xgafv) {
              return (Undeploy) super.set$Xgafv($Xgafv);
            }

            @Override
            public Undeploy setAccessToken(java.lang.String accessToken) {
              return (Undeploy) super.setAccessToken(accessToken);
            }

            @Override
            public Undeploy setAlt(java.lang.String alt) {
              return (Undeploy) super.setAlt(alt);
            }

            @Override
            public Undeploy setCallback(java.lang.String callback) {
              return (Undeploy) super.setCallback(callback);
            }

            @Override
            public Undeploy setFields(java.lang.String fields) {
              return (Undeploy) super.setFields(fields);
            }

            @Override
            public Undeploy setKey(java.lang.String key) {
              return (Undeploy) super.setKey(key);
            }

            @Override
            public Undeploy setOauthToken(java.lang.String oauthToken) {
              return (Undeploy) super.setOauthToken(oauthToken);
            }

            @Override
            public Undeploy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Undeploy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Undeploy setQuotaUser(java.lang.String quotaUser) {
              return (Undeploy) super.setQuotaUser(quotaUser);
            }

            @Override
            public Undeploy setUploadType(java.lang.String uploadType) {
              return (Undeploy) super.setUploadType(uploadType);
            }

            @Override
            public Undeploy setUploadProtocol(java.lang.String uploadProtocol) {
              return (Undeploy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the API proxy revision deployment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the API proxy revision deployment in the following format:
           `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the API proxy revision deployment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public Undeploy setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Flag that specifies whether to enable sequenced rollout. If set to `true`, the
             * environment group routing rules corresponding to this deployment will be removed
             * before removing the deployment from the runtime. This is likely to be a rare use
             * case; it is only needed when the intended effect of undeploying this proxy is to
             * cause the traffic it currently handles to be rerouted to some other existing proxy in
             * the environment group. The GenerateUndeployChangeReport API may be used to examine
             * routing changes before issuing the undeployment request, and its response will
             * indicate if a sequenced rollout is recommended for the undeployment.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean sequencedRollout;

            /** Flag that specifies whether to enable sequenced rollout. If set to `true`, the environment group
           routing rules corresponding to this deployment will be removed before removing the deployment from
           the runtime. This is likely to be a rare use case; it is only needed when the intended effect of
           undeploying this proxy is to cause the traffic it currently handles to be rerouted to some other
           existing proxy in the environment group. The GenerateUndeployChangeReport API may be used to
           examine routing changes before issuing the undeployment request, and its response will indicate if
           a sequenced rollout is recommended for the undeployment.
             */
            public java.lang.Boolean getSequencedRollout() {
              return sequencedRollout;
            }

            /**
             * Flag that specifies whether to enable sequenced rollout. If set to `true`, the
             * environment group routing rules corresponding to this deployment will be removed
             * before removing the deployment from the runtime. This is likely to be a rare use
             * case; it is only needed when the intended effect of undeploying this proxy is to
             * cause the traffic it currently handles to be rerouted to some other existing proxy in
             * the environment group. The GenerateUndeployChangeReport API may be used to examine
             * routing changes before issuing the undeployment request, and its response will
             * indicate if a sequenced rollout is recommended for the undeployment.
             */
            public Undeploy setSequencedRollout(java.lang.Boolean sequencedRollout) {
              this.sequencedRollout = sequencedRollout;
              return this;
            }

            @Override
            public Undeploy set(String parameterName, Object value) {
              return (Undeploy) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Debugsessions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Apigee apigee = new Apigee(...);}
           *   {@code Apigee.Debugsessions.List request = apigee.debugsessions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Debugsessions debugsessions() {
            return new Debugsessions();
          }

          /**
           * The "debugsessions" collection of methods.
           */
          public class Debugsessions {

            /**
             * Creates a debug session for a deployed API Proxy revision.
             *
             * Create a request for the method "debugsessions.create".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the API Proxy revision deployment for which to create the
             *        DebugSession. Must be of the form
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession> {

              private static final String REST_PATH = "v1/{+parent}/debugsessions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

              /**
               * Creates a debug session for a deployed API Proxy revision.
               *
               * Create a request for the method "debugsessions.create".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the API Proxy revision deployment for which to create the
             *        DebugSession. Must be of the form
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession content) {
                super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the API Proxy revision deployment for which to
               * create the DebugSession. Must be of the form `organizations/{organization}/environm
               * ents/{environment}/apis/{api}/revisions/{revision}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the API Proxy revision deployment for which to create the
             DebugSession. Must be of the form
             `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the API Proxy revision deployment for which to
               * create the DebugSession. Must be of the form `organizations/{organization}/environm
               * ents/{environment}/apis/{api}/revisions/{revision}`.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. The time in seconds after which this DebugSession should end. A timeout
               * specified in DebugSession will overwrite this value.
               */
              @com.google.api.client.util.Key
              private java.lang.Long timeout;

              /** Optional. The time in seconds after which this DebugSession should end. A timeout specified in
             DebugSession will overwrite this value.
               */
              public java.lang.Long getTimeout() {
                return timeout;
              }

              /**
               * Optional. The time in seconds after which this DebugSession should end. A timeout
               * specified in DebugSession will overwrite this value.
               */
              public Create setTimeout(java.lang.Long timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the data from a debug session. This does not cancel the debug session or prevent further
             * data from being collected if the session is still active in runtime pods.
             *
             * Create a request for the method "debugsessions.deleteData".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link DeleteData#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the debug session to delete. Must be of the form: `organizations/{organization
             *        }/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`
             *        .
             * @return the request
             */
            public DeleteData deleteData(java.lang.String name) throws java.io.IOException {
              DeleteData result = new DeleteData(name);
              initialize(result);
              return result;
            }

            public class DeleteData extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}/data";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");

              /**
               * Deletes the data from a debug session. This does not cancel the debug session or prevent
               * further data from being collected if the session is still active in runtime pods.
               *
               * Create a request for the method "debugsessions.deleteData".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link DeleteData#execute()} method to invoke the remote operation. <p>
               * {@link
               * DeleteData#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the debug session to delete. Must be of the form: `organizations/{organization
             *        }/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`
             *        .
               * @since 1.13
               */
              protected DeleteData(java.lang.String name) {
                super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                }
              }

              @Override
              public DeleteData set$Xgafv(java.lang.String $Xgafv) {
                return (DeleteData) super.set$Xgafv($Xgafv);
              }

              @Override
              public DeleteData setAccessToken(java.lang.String accessToken) {
                return (DeleteData) super.setAccessToken(accessToken);
              }

              @Override
              public DeleteData setAlt(java.lang.String alt) {
                return (DeleteData) super.setAlt(alt);
              }

              @Override
              public DeleteData setCallback(java.lang.String callback) {
                return (DeleteData) super.setCallback(callback);
              }

              @Override
              public DeleteData setFields(java.lang.String fields) {
                return (DeleteData) super.setFields(fields);
              }

              @Override
              public DeleteData setKey(java.lang.String key) {
                return (DeleteData) super.setKey(key);
              }

              @Override
              public DeleteData setOauthToken(java.lang.String oauthToken) {
                return (DeleteData) super.setOauthToken(oauthToken);
              }

              @Override
              public DeleteData setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DeleteData) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DeleteData setQuotaUser(java.lang.String quotaUser) {
                return (DeleteData) super.setQuotaUser(quotaUser);
              }

              @Override
              public DeleteData setUploadType(java.lang.String uploadType) {
                return (DeleteData) super.setUploadType(uploadType);
              }

              @Override
              public DeleteData setUploadProtocol(java.lang.String uploadProtocol) {
                return (DeleteData) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the debug session to delete. Must be of the form: `organizati
               * ons/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debug
               * sessions/{debugsession}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the debug session to delete. Must be of the form: `organizations/{organizatio
             n}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the debug session to delete. Must be of the form: `organizati
               * ons/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debug
               * sessions/{debugsession}`.
               */
              public DeleteData setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public DeleteData set(String parameterName, Object value) {
                return (DeleteData) super.set(parameterName, value);
              }
            }
            /**
             * Retrieves a debug session.
             *
             * Create a request for the method "debugsessions.get".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the debug session to retrieve. Must be of the form: `organizations/{organizati
             *        on}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}`.
             * @return the request
             */
            public Get get(java.lang.String name) throws java.io.IOException {
              Get result = new Get(name);
              initialize(result);
              return result;
            }

            public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");

              /**
               * Retrieves a debug session.
               *
               * Create a request for the method "debugsessions.get".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
               * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the debug session to retrieve. Must be of the form: `organizations/{organizati
             *        on}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}`.
               * @since 1.13
               */
              protected Get(java.lang.String name) {
                super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public Get set$Xgafv(java.lang.String $Xgafv) {
                return (Get) super.set$Xgafv($Xgafv);
              }

              @Override
              public Get setAccessToken(java.lang.String accessToken) {
                return (Get) super.setAccessToken(accessToken);
              }

              @Override
              public Get setAlt(java.lang.String alt) {
                return (Get) super.setAlt(alt);
              }

              @Override
              public Get setCallback(java.lang.String callback) {
                return (Get) super.setCallback(callback);
              }

              @Override
              public Get setFields(java.lang.String fields) {
                return (Get) super.setFields(fields);
              }

              @Override
              public Get setKey(java.lang.String key) {
                return (Get) super.setKey(key);
              }

              @Override
              public Get setOauthToken(java.lang.String oauthToken) {
                return (Get) super.setOauthToken(oauthToken);
              }

              @Override
              public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Get) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Get setQuotaUser(java.lang.String quotaUser) {
                return (Get) super.setQuotaUser(quotaUser);
              }

              @Override
              public Get setUploadType(java.lang.String uploadType) {
                return (Get) super.setUploadType(uploadType);
              }

              @Override
              public Get setUploadProtocol(java.lang.String uploadProtocol) {
                return (Get) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the debug session to retrieve. Must be of the form: `organiza
               * tions/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/deb
               * ugsessions/{session}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the debug session to retrieve. Must be of the form: `organizations/{organizat
             ion}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}`.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the debug session to retrieve. Must be of the form: `organiza
               * tions/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/deb
               * ugsessions/{session}`.
               */
              public Get setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Get set(String parameterName, Object value) {
                return (Get) super.set(parameterName, value);
              }
            }
            /**
             * Lists debug sessions that are currently active in the given API Proxy revision.
             *
             * Create a request for the method "debugsessions.list".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the API Proxy revision deployment for which to list debug sessions. Must be of
             *        the form:
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDebugSessionsResponse> {

              private static final String REST_PATH = "v1/{+parent}/debugsessions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

              /**
               * Lists debug sessions that are currently active in the given API Proxy revision.
               *
               * Create a request for the method "debugsessions.list".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
               * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the API Proxy revision deployment for which to list debug sessions. Must be of
             *        the form:
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDebugSessionsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the API Proxy revision deployment for which to list debug
               * sessions. Must be of the form: `organizations/{organization}/environments/{environm
               * ent}/apis/{api}/revisions/{revision}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the API Proxy revision deployment for which to list debug sessions. Must be
             of the form:
             `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the API Proxy revision deployment for which to list debug
               * sessions. Must be of the form: `organizations/{organization}/environments/{environm
               * ent}/apis/{api}/revisions/{revision}`.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /** Maximum number of debug sessions to return. The page size defaults to 25. */
              @com.google.api.client.util.Key
              private java.lang.Integer pageSize;

              /** Maximum number of debug sessions to return. The page size defaults to 25.
               */
              public java.lang.Integer getPageSize() {
                return pageSize;
              }

              /** Maximum number of debug sessions to return. The page size defaults to 25. */
              public List setPageSize(java.lang.Integer pageSize) {
                this.pageSize = pageSize;
                return this;
              }

              /**
               * Page token, returned from a previous ListDebugSessions call, that you can use to
               * retrieve the next page.
               */
              @com.google.api.client.util.Key
              private java.lang.String pageToken;

              /** Page token, returned from a previous ListDebugSessions call, that you can use to retrieve the next
             page.
               */
              public java.lang.String getPageToken() {
                return pageToken;
              }

              /**
               * Page token, returned from a previous ListDebugSessions call, that you can use to
               * retrieve the next page.
               */
              public List setPageToken(java.lang.String pageToken) {
                this.pageToken = pageToken;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Data collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Apigee apigee = new Apigee(...);}
             *   {@code Apigee.Data.List request = apigee.data().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Data data() {
              return new Data();
            }

            /**
             * The "data" collection of methods.
             */
            public class Data {

              /**
               * Gets the debug data from a transaction.
               *
               * Create a request for the method "data.get".
               *
               * This request holds the parameters needed by the apigee server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the debug session transaction. Must be of the form: `organizations/{organizati
               *        on}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/dat
               *        a/{transaction}`.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSessionTransaction> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$");

                /**
                 * Gets the debug data from a transaction.
                 *
                 * Create a request for the method "data.get".
                 *
                 * This request holds the parameters needed by the the apigee server.  After setting any optional
                 * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
                 * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
                 * called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the debug session transaction. Must be of the form: `organizations/{organizati
               *        on}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/dat
               *        a/{transaction}`.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSessionTransaction.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the debug session transaction. Must be of the form: `organi
                 * zations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}
                 * /debugsessions/{session}/data/{transaction}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the debug session transaction. Must be of the form: `organizations/{organizat
               ion}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/data/{trans
               action}`.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the debug session transaction. Must be of the form: `organi
                 * zations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}
                 * /debugsessions/{session}/data/{transaction}`.
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }

            }
          }
          /**
           * An accessor for creating requests from the Deployments collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Apigee apigee = new Apigee(...);}
           *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Deployments deployments() {
            return new Deployments();
          }

          /**
           * The "deployments" collection of methods.
           */
          public class Deployments {

            /**
             * Generates a report for a dry run analysis of a DeployApiProxy request without committing the
             * deployment. In addition to the standard validations performed when adding deployments, additional
             * analysis will be done to detect possible traffic routing changes that would result from this
             * deployment being created. Any potential routing conflicts or unsafe changes will be reported in
             * the response. This routing analysis is not performed for a non-dry-run DeployApiProxy request.
             * For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments
             * :generateDeployChangeReport`, two permissions are required: * `apigee.deployments.create` on the
             * resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the
             * resource `organizations/{org}/apis/{api}/revisions/{rev}`
             *
             * Create a request for the method "deployments.generateDeployChangeReport".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link GenerateDeployChangeReport#execute()} method to invoke the remote
             * operation.
             *
             * @param name Name of the API proxy revision deployment in the following format:
             *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             * @return the request
             */
            public GenerateDeployChangeReport generateDeployChangeReport(java.lang.String name) throws java.io.IOException {
              GenerateDeployChangeReport result = new GenerateDeployChangeReport(name);
              initialize(result);
              return result;
            }

            public class GenerateDeployChangeReport extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeploymentChangeReport> {

              private static final String REST_PATH = "v1/{+name}/deployments:generateDeployChangeReport";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

              /**
               * Generates a report for a dry run analysis of a DeployApiProxy request without committing the
               * deployment. In addition to the standard validations performed when adding deployments,
               * additional analysis will be done to detect possible traffic routing changes that would result
               * from this deployment being created. Any potential routing conflicts or unsafe changes will be
               * reported in the response. This routing analysis is not performed for a non-dry-run
               * DeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/r
               * evisions/{rev}/deployments:generateDeployChangeReport`, two permissions are required: *
               * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` *
               * `apigee.proxyrevisions.deploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
               *
               * Create a request for the method "deployments.generateDeployChangeReport".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link GenerateDeployChangeReport#execute()} method to invoke the remote
               * operation. <p> {@link GenerateDeployChangeReport#initialize(com.google.api.client.googleapis.se
               * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
               * after invoking the constructor. </p>
               *
               * @param name Name of the API proxy revision deployment in the following format:
             *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
               * @since 1.13
               */
              protected GenerateDeployChangeReport(java.lang.String name) {
                super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeploymentChangeReport.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
              }

              @Override
              public GenerateDeployChangeReport set$Xgafv(java.lang.String $Xgafv) {
                return (GenerateDeployChangeReport) super.set$Xgafv($Xgafv);
              }

              @Override
              public GenerateDeployChangeReport setAccessToken(java.lang.String accessToken) {
                return (GenerateDeployChangeReport) super.setAccessToken(accessToken);
              }

              @Override
              public GenerateDeployChangeReport setAlt(java.lang.String alt) {
                return (GenerateDeployChangeReport) super.setAlt(alt);
              }

              @Override
              public GenerateDeployChangeReport setCallback(java.lang.String callback) {
                return (GenerateDeployChangeReport) super.setCallback(callback);
              }

              @Override
              public GenerateDeployChangeReport setFields(java.lang.String fields) {
                return (GenerateDeployChangeReport) super.setFields(fields);
              }

              @Override
              public GenerateDeployChangeReport setKey(java.lang.String key) {
                return (GenerateDeployChangeReport) super.setKey(key);
              }

              @Override
              public GenerateDeployChangeReport setOauthToken(java.lang.String oauthToken) {
                return (GenerateDeployChangeReport) super.setOauthToken(oauthToken);
              }

              @Override
              public GenerateDeployChangeReport setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GenerateDeployChangeReport) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GenerateDeployChangeReport setQuotaUser(java.lang.String quotaUser) {
                return (GenerateDeployChangeReport) super.setQuotaUser(quotaUser);
              }

              @Override
              public GenerateDeployChangeReport setUploadType(java.lang.String uploadType) {
                return (GenerateDeployChangeReport) super.setUploadType(uploadType);
              }

              @Override
              public GenerateDeployChangeReport setUploadProtocol(java.lang.String uploadProtocol) {
                return (GenerateDeployChangeReport) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Name of the API proxy revision deployment in the following format:
               * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Name of the API proxy revision deployment in the following format:
             `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Name of the API proxy revision deployment in the following format:
               * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
               */
              public GenerateDeployChangeReport setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Flag that specifies whether to force the deployment of the new revision over the
               * currently deployed revision by overriding conflict checks.
               */
              @com.google.api.client.util.Key
              private java.lang.Boolean override;

              /** Flag that specifies whether to force the deployment of the new revision over the currently deployed
             revision by overriding conflict checks.
               */
              public java.lang.Boolean getOverride() {
                return override;
              }

              /**
               * Flag that specifies whether to force the deployment of the new revision over the
               * currently deployed revision by overriding conflict checks.
               */
              public GenerateDeployChangeReport setOverride(java.lang.Boolean override) {
                this.override = override;
                return this;
              }

              @Override
              public GenerateDeployChangeReport set(String parameterName, Object value) {
                return (GenerateDeployChangeReport) super.set(parameterName, value);
              }
            }
            /**
             * Generates a report for a dry run analysis of an UndeployApiProxy request without committing the
             * undeploy. In addition to the standard validations performed when removing deployments, additional
             * analysis will be done to detect possible traffic routing changes that would result from this
             * deployment being removed. Any potential routing conflicts or unsafe changes will be reported in
             * the response. This routing analysis is not performed for a non-dry-run UndeployApiProxy request.
             * For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments
             * :generateUndeployChangeReport`, two permissions are required: * `apigee.deployments.delete` on
             * the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the
             * resource `organizations/{org}/apis/{api}/revisions/{rev}`
             *
             * Create a request for the method "deployments.generateUndeployChangeReport".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link GenerateUndeployChangeReport#execute()} method to invoke the remote
             * operation.
             *
             * @param name Name of the API proxy revision deployment in the following format:
             *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             * @return the request
             */
            public GenerateUndeployChangeReport generateUndeployChangeReport(java.lang.String name) throws java.io.IOException {
              GenerateUndeployChangeReport result = new GenerateUndeployChangeReport(name);
              initialize(result);
              return result;
            }

            public class GenerateUndeployChangeReport extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeploymentChangeReport> {

              private static final String REST_PATH = "v1/{+name}/deployments:generateUndeployChangeReport";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

              /**
               * Generates a report for a dry run analysis of an UndeployApiProxy request without committing the
               * undeploy. In addition to the standard validations performed when removing deployments,
               * additional analysis will be done to detect possible traffic routing changes that would result
               * from this deployment being removed. Any potential routing conflicts or unsafe changes will be
               * reported in the response. This routing analysis is not performed for a non-dry-run
               * UndeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}
               * /revisions/{rev}/deployments:generateUndeployChangeReport`, two permissions are required: *
               * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` *
               * `apigee.proxyrevisions.undeploy` on the resource
               * `organizations/{org}/apis/{api}/revisions/{rev}`
               *
               * Create a request for the method "deployments.generateUndeployChangeReport".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link GenerateUndeployChangeReport#execute()} method to invoke the remote
               * operation. <p> {@link GenerateUndeployChangeReport#initialize(com.google.api.client.googleapis.
               * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
               * after invoking the constructor. </p>
               *
               * @param name Name of the API proxy revision deployment in the following format:
             *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
               * @since 1.13
               */
              protected GenerateUndeployChangeReport(java.lang.String name) {
                super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeploymentChangeReport.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
              }

              @Override
              public GenerateUndeployChangeReport set$Xgafv(java.lang.String $Xgafv) {
                return (GenerateUndeployChangeReport) super.set$Xgafv($Xgafv);
              }

              @Override
              public GenerateUndeployChangeReport setAccessToken(java.lang.String accessToken) {
                return (GenerateUndeployChangeReport) super.setAccessToken(accessToken);
              }

              @Override
              public GenerateUndeployChangeReport setAlt(java.lang.String alt) {
                return (GenerateUndeployChangeReport) super.setAlt(alt);
              }

              @Override
              public GenerateUndeployChangeReport setCallback(java.lang.String callback) {
                return (GenerateUndeployChangeReport) super.setCallback(callback);
              }

              @Override
              public GenerateUndeployChangeReport setFields(java.lang.String fields) {
                return (GenerateUndeployChangeReport) super.setFields(fields);
              }

              @Override
              public GenerateUndeployChangeReport setKey(java.lang.String key) {
                return (GenerateUndeployChangeReport) super.setKey(key);
              }

              @Override
              public GenerateUndeployChangeReport setOauthToken(java.lang.String oauthToken) {
                return (GenerateUndeployChangeReport) super.setOauthToken(oauthToken);
              }

              @Override
              public GenerateUndeployChangeReport setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (GenerateUndeployChangeReport) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public GenerateUndeployChangeReport setQuotaUser(java.lang.String quotaUser) {
                return (GenerateUndeployChangeReport) super.setQuotaUser(quotaUser);
              }

              @Override
              public GenerateUndeployChangeReport setUploadType(java.lang.String uploadType) {
                return (GenerateUndeployChangeReport) super.setUploadType(uploadType);
              }

              @Override
              public GenerateUndeployChangeReport setUploadProtocol(java.lang.String uploadProtocol) {
                return (GenerateUndeployChangeReport) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Name of the API proxy revision deployment in the following format:
               * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Name of the API proxy revision deployment in the following format:
             `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Name of the API proxy revision deployment in the following format:
               * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
               */
              public GenerateUndeployChangeReport setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public GenerateUndeployChangeReport set(String parameterName, Object value) {
                return (GenerateUndeployChangeReport) super.set(parameterName, value);
              }
            }

          }
        }
      }
      /**
       * An accessor for creating requests from the ArchiveDeployments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.ArchiveDeployments.List request = apigee.archiveDeployments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ArchiveDeployments archiveDeployments() {
        return new ArchiveDeployments();
      }

      /**
       * The "archiveDeployments" collection of methods.
       */
      public class ArchiveDeployments {

        /**
         * Creates a new ArchiveDeployment.
         *
         * Create a request for the method "archiveDeployments.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The Environment this Archive Deployment will be created in.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/archiveDeployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a new ArchiveDeployment.
           *
           * Create a request for the method "archiveDeployments.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The Environment this Archive Deployment will be created in.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The Environment this Archive Deployment will be created in. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The Environment this Archive Deployment will be created in.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The Environment this Archive Deployment will be created in. */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an archive deployment.
         *
         * Create a request for the method "archiveDeployments.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the Archive Deployment in the following format:
         *        `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");

          /**
           * Deletes an archive deployment.
           *
           * Create a request for the method "archiveDeployments.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the Archive Deployment in the following format:
         *        `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the Archive Deployment in the following format:
           * `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the Archive Deployment in the following format:
         `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the Archive Deployment in the following format:
           * `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Generates a signed URL for downloading the original zip file used to create an Archive
         * Deployment. The URL is only valid for a limited period and should be used within minutes after
         * generation. Each call returns a new upload URL.
         *
         * Create a request for the method "archiveDeployments.generateDownloadUrl".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GenerateDownloadUrl#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Archive Deployment you want to download.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateDownloadUrlRequest}
         * @return the request
         */
        public GenerateDownloadUrl generateDownloadUrl(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateDownloadUrlRequest content) throws java.io.IOException {
          GenerateDownloadUrl result = new GenerateDownloadUrl(name, content);
          initialize(result);
          return result;
        }

        public class GenerateDownloadUrl extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateDownloadUrlResponse> {

          private static final String REST_PATH = "v1/{+name}:generateDownloadUrl";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");

          /**
           * Generates a signed URL for downloading the original zip file used to create an Archive
           * Deployment. The URL is only valid for a limited period and should be used within minutes after
           * generation. Each call returns a new upload URL.
           *
           * Create a request for the method "archiveDeployments.generateDownloadUrl".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GenerateDownloadUrl#execute()} method to invoke the remote
           * operation. <p> {@link GenerateDownloadUrl#initialize(com.google.api.client.googleapis.services.
           * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. The name of the Archive Deployment you want to download.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateDownloadUrlRequest}
           * @since 1.13
           */
          protected GenerateDownloadUrl(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateDownloadUrlRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateDownloadUrlResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");
            }
          }

          @Override
          public GenerateDownloadUrl set$Xgafv(java.lang.String $Xgafv) {
            return (GenerateDownloadUrl) super.set$Xgafv($Xgafv);
          }

          @Override
          public GenerateDownloadUrl setAccessToken(java.lang.String accessToken) {
            return (GenerateDownloadUrl) super.setAccessToken(accessToken);
          }

          @Override
          public GenerateDownloadUrl setAlt(java.lang.String alt) {
            return (GenerateDownloadUrl) super.setAlt(alt);
          }

          @Override
          public GenerateDownloadUrl setCallback(java.lang.String callback) {
            return (GenerateDownloadUrl) super.setCallback(callback);
          }

          @Override
          public GenerateDownloadUrl setFields(java.lang.String fields) {
            return (GenerateDownloadUrl) super.setFields(fields);
          }

          @Override
          public GenerateDownloadUrl setKey(java.lang.String key) {
            return (GenerateDownloadUrl) super.setKey(key);
          }

          @Override
          public GenerateDownloadUrl setOauthToken(java.lang.String oauthToken) {
            return (GenerateDownloadUrl) super.setOauthToken(oauthToken);
          }

          @Override
          public GenerateDownloadUrl setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GenerateDownloadUrl) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GenerateDownloadUrl setQuotaUser(java.lang.String quotaUser) {
            return (GenerateDownloadUrl) super.setQuotaUser(quotaUser);
          }

          @Override
          public GenerateDownloadUrl setUploadType(java.lang.String uploadType) {
            return (GenerateDownloadUrl) super.setUploadType(uploadType);
          }

          @Override
          public GenerateDownloadUrl setUploadProtocol(java.lang.String uploadProtocol) {
            return (GenerateDownloadUrl) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The name of the Archive Deployment you want to download. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Archive Deployment you want to download.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Required. The name of the Archive Deployment you want to download. */
          public GenerateDownloadUrl setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GenerateDownloadUrl set(String parameterName, Object value) {
            return (GenerateDownloadUrl) super.set(parameterName, value);
          }
        }
        /**
         * Generates a signed URL for uploading an Archive zip file to Google Cloud Storage. Once the upload
         * is complete, the signed URL should be passed to CreateArchiveDeployment. When uploading to the
         * generated signed URL, please follow these restrictions: * Source file type should be a zip file.
         * * Source file size should not exceed 1GB limit. * No credentials should be attached - the signed
         * URLs provide access to the target bucket using internal service identity; if credentials were
         * attached, the identity from the credentials would be used, but that identity does not have
         * permissions to upload files to the URL. When making a HTTP PUT request, these two headers need to
         * be specified: * `content-type: application/zip` * `x-goog-content-length-range: 0,1073741824` And
         * this header SHOULD NOT be specified: * `Authorization: Bearer YOUR_TOKEN`
         *
         * Create a request for the method "archiveDeployments.generateUploadUrl".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GenerateUploadUrl#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The organization and environment to upload to.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateUploadUrlRequest}
         * @return the request
         */
        public GenerateUploadUrl generateUploadUrl(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateUploadUrlRequest content) throws java.io.IOException {
          GenerateUploadUrl result = new GenerateUploadUrl(parent, content);
          initialize(result);
          return result;
        }

        public class GenerateUploadUrl extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateUploadUrlResponse> {

          private static final String REST_PATH = "v1/{+parent}/archiveDeployments:generateUploadUrl";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Generates a signed URL for uploading an Archive zip file to Google Cloud Storage. Once the
           * upload is complete, the signed URL should be passed to CreateArchiveDeployment. When uploading
           * to the generated signed URL, please follow these restrictions: * Source file type should be a
           * zip file. * Source file size should not exceed 1GB limit. * No credentials should be attached -
           * the signed URLs provide access to the target bucket using internal service identity; if
           * credentials were attached, the identity from the credentials would be used, but that identity
           * does not have permissions to upload files to the URL. When making a HTTP PUT request, these two
           * headers need to be specified: * `content-type: application/zip` * `x-goog-content-length-range:
           * 0,1073741824` And this header SHOULD NOT be specified: * `Authorization: Bearer YOUR_TOKEN`
           *
           * Create a request for the method "archiveDeployments.generateUploadUrl".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GenerateUploadUrl#execute()} method to invoke the remote operation.
           * <p> {@link GenerateUploadUrl#initialize(com.google.api.client.googleapis.services.AbstractGoogl
           * eClientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param parent Required. The organization and environment to upload to.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateUploadUrlRequest}
           * @since 1.13
           */
          protected GenerateUploadUrl(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateUploadUrlRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GenerateUploadUrlResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public GenerateUploadUrl set$Xgafv(java.lang.String $Xgafv) {
            return (GenerateUploadUrl) super.set$Xgafv($Xgafv);
          }

          @Override
          public GenerateUploadUrl setAccessToken(java.lang.String accessToken) {
            return (GenerateUploadUrl) super.setAccessToken(accessToken);
          }

          @Override
          public GenerateUploadUrl setAlt(java.lang.String alt) {
            return (GenerateUploadUrl) super.setAlt(alt);
          }

          @Override
          public GenerateUploadUrl setCallback(java.lang.String callback) {
            return (GenerateUploadUrl) super.setCallback(callback);
          }

          @Override
          public GenerateUploadUrl setFields(java.lang.String fields) {
            return (GenerateUploadUrl) super.setFields(fields);
          }

          @Override
          public GenerateUploadUrl setKey(java.lang.String key) {
            return (GenerateUploadUrl) super.setKey(key);
          }

          @Override
          public GenerateUploadUrl setOauthToken(java.lang.String oauthToken) {
            return (GenerateUploadUrl) super.setOauthToken(oauthToken);
          }

          @Override
          public GenerateUploadUrl setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GenerateUploadUrl) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GenerateUploadUrl setQuotaUser(java.lang.String quotaUser) {
            return (GenerateUploadUrl) super.setQuotaUser(quotaUser);
          }

          @Override
          public GenerateUploadUrl setUploadType(java.lang.String uploadType) {
            return (GenerateUploadUrl) super.setUploadType(uploadType);
          }

          @Override
          public GenerateUploadUrl setUploadProtocol(java.lang.String uploadProtocol) {
            return (GenerateUploadUrl) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. The organization and environment to upload to. */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The organization and environment to upload to.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Required. The organization and environment to upload to. */
          public GenerateUploadUrl setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public GenerateUploadUrl set(String parameterName, Object value) {
            return (GenerateUploadUrl) super.set(parameterName, value);
          }
        }
        /**
         * Gets the specified ArchiveDeployment.
         *
         * Create a request for the method "archiveDeployments.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the Archive Deployment in the following format:
         *        `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");

          /**
           * Gets the specified ArchiveDeployment.
           *
           * Create a request for the method "archiveDeployments.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the Archive Deployment in the following format:
         *        `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the Archive Deployment in the following format:
           * `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the Archive Deployment in the following format:
         `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the Archive Deployment in the following format:
           * `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the ArchiveDeployments in the specified Environment.
         *
         * Create a request for the method "archiveDeployments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the Environment for which to list Archive Deployments in the format:
         *        `organizations/{org}/environments/{env}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListArchiveDeploymentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/archiveDeployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists the ArchiveDeployments in the specified Environment.
           *
           * Create a request for the method "archiveDeployments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the Environment for which to list Archive Deployments in the format:
         *        `organizations/{org}/environments/{env}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListArchiveDeploymentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the Environment for which to list Archive Deployments in the format:
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the Environment for which to list Archive Deployments in the format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the Environment for which to list Archive Deployments in the format:
           * `organizations/{org}/environments/{env}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. An optional query used to return a subset of Archive Deployments using the
           * semantics defined in https://google.aip.dev/160.
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Optional. An optional query used to return a subset of Archive Deployments using the semantics
         defined in https://google.aip.dev/160.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * Optional. An optional query used to return a subset of Archive Deployments using the
           * semantics defined in https://google.aip.dev/160.
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. Maximum number of Archive Deployments to return. If unspecified, at most 25
           * deployments will be returned.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. Maximum number of Archive Deployments to return. If unspecified, at most 25 deployments
         will be returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. Maximum number of Archive Deployments to return. If unspecified, at most 25
           * deployments will be returned.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. Page token, returned from a previous ListArchiveDeployments call, that you
           * can use to retrieve the next page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. Page token, returned from a previous ListArchiveDeployments call, that you can use to
         retrieve the next page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. Page token, returned from a previous ListArchiveDeployments call, that you
           * can use to retrieve the next page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing ArchiveDeployment. Labels can modified but most of the other fields are not
         * modifiable.
         *
         * Create a request for the method "archiveDeployments.patch".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Name of the Archive Deployment in the following format:
         *        `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");

          /**
           * Updates an existing ArchiveDeployment. Labels can modified but most of the other fields are not
           * modifiable.
           *
           * Create a request for the method "archiveDeployments.patch".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Name of the Archive Deployment in the following format:
         *        `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment content) {
            super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ArchiveDeployment.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Name of the Archive Deployment in the following format:
           * `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Name of the Archive Deployment in the following format:
         `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Name of the Archive Deployment in the following format:
           * `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/archiveDeployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Required. The list of fields to be updated. */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The list of fields to be updated.
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /** Required. The list of fields to be updated. */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Caches collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Caches.List request = apigee.caches().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Caches caches() {
        return new Caches();
      }

      /**
       * The "caches" collection of methods.
       */
      public class Caches {

        /**
         * Deletes a cache.
         *
         * Create a request for the method "caches.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Cache resource name of the form:
         *        `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/caches/[^/]+$");

          /**
           * Deletes a cache.
           *
           * Create a request for the method "caches.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Cache resource name of the form:
         *        `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/caches/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Cache resource name of the form:
           * `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Cache resource name of the form:
         `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Cache resource name of the form:
           * `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/caches/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Deployments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Deployments deployments() {
        return new Deployments();
      }

      /**
       * The "deployments" collection of methods.
       */
      public class Deployments {

        /**
         * Gets a particular deployment of Api proxy or a shared flow in an environment
         *
         * Create a request for the method "deployments.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the api proxy or the shared flow deployment. Use the following structure in your
         *        request: `organizations/{org}/environments/{env}/deployments/{deployment}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");

          /**
           * Gets a particular deployment of Api proxy or a shared flow in an environment
           *
           * Create a request for the method "deployments.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the api proxy or the shared flow deployment. Use the following structure in your
         *        request: `organizations/{org}/environments/{env}/deployments/{deployment}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the api proxy or the shared flow deployment. Use the following
           * structure in your request:
           * `organizations/{org}/environments/{env}/deployments/{deployment}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the api proxy or the shared flow deployment. Use the following structure in your
         request: `organizations/{org}/environments/{env}/deployments/{deployment}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the api proxy or the shared flow deployment. Use the following
           * structure in your request:
           * `organizations/{org}/environments/{env}/deployments/{deployment}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the IAM policy on a deployment. For more information, see [Manage users, roles, and
         * permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-
         * administration/manage-users-roles). You must have the `apigee.deployments.getIamPolicy`
         * permission to call this API.
         *
         * Create a request for the method "deployments.getIamPolicy".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @return the request
         */
        public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
          GetIamPolicy result = new GetIamPolicy(resource);
          initialize(result);
          return result;
        }

        public class GetIamPolicy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");

          /**
           * Gets the IAM policy on a deployment. For more information, see [Manage users, roles, and
           * permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-
           * administration/manage-users-roles). You must have the `apigee.deployments.getIamPolicy`
           * permission to call this API.
           *
           * Create a request for the method "deployments.getIamPolicy".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation. <p>
           * {@link
           * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @since 1.13
           */
          protected GetIamPolicy(java.lang.String resource) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (GetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (GetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public GetIamPolicy setAlt(java.lang.String alt) {
            return (GetIamPolicy) super.setAlt(alt);
          }

          @Override
          public GetIamPolicy setCallback(java.lang.String callback) {
            return (GetIamPolicy) super.setCallback(callback);
          }

          @Override
          public GetIamPolicy setFields(java.lang.String fields) {
            return (GetIamPolicy) super.setFields(fields);
          }

          @Override
          public GetIamPolicy setKey(java.lang.String key) {
            return (GetIamPolicy) super.setKey(key);
          }

          @Override
          public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (GetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (GetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetIamPolicy setUploadType(java.lang.String uploadType) {
            return (GetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public GetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          @com.google.api.client.util.Key("options.requestedPolicyVersion")
          private java.lang.Integer optionsRequestedPolicyVersion;

          /** Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1,
         and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
         conditional role bindings must specify version 3. Policies with no conditional role bindings may
         specify any valid value or leave the field unset. The policy in the response might use the policy
         version that you specified, or it might use a lower policy version. For example, if you specify
         version 3, but the policy has no conditional role bindings, the response uses version 1. To learn
         which resources support conditions in their IAM policies, see the [IAM
         documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public java.lang.Integer getOptionsRequestedPolicyVersion() {
            return optionsRequestedPolicyVersion;
          }

          /**
           * Optional. The maximum policy version that will be used to format the policy. Valid
           * values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests
           * for policies with any conditional role bindings must specify version 3. Policies with
           * no conditional role bindings may specify any valid value or leave the field unset. The
           * policy in the response might use the policy version that you specified, or it might use
           * a lower policy version. For example, if you specify version 3, but the policy has no
           * conditional role bindings, the response uses version 1. To learn which resources
           * support conditions in their IAM policies, see the [IAM
           * documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
           */
          public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
            this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
            return this;
          }

          @Override
          public GetIamPolicy set(String parameterName, Object value) {
            return (GetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Lists all deployments of API proxies or shared flows in an environment.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment for which to return deployment information in the following
         *        format: `organizations/{org}/environments/{env}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all deployments of API proxies or shared flows in an environment.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment for which to return deployment information in the following
         *        format: `organizations/{org}/environments/{env}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment for which to return deployment information in the
           * following format: `organizations/{org}/environments/{env}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment for which to return deployment information in the following
         format: `organizations/{org}/environments/{env}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment for which to return deployment information in the
           * following format: `organizations/{org}/environments/{env}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Flag that specifies whether to return shared flow or API proxy deployments.
           * Set to `true` to return shared flow deployments; set to `false` to return API proxy
           * deployments. Defaults to `false`.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean sharedFlows;

          /** Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true`
         to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to
         `false`.
           */
          public java.lang.Boolean getSharedFlows() {
            return sharedFlows;
          }

          /**
           * Optional. Flag that specifies whether to return shared flow or API proxy deployments.
           * Set to `true` to return shared flow deployments; set to `false` to return API proxy
           * deployments. Defaults to `false`.
           */
          public List setSharedFlows(java.lang.Boolean sharedFlows) {
            this.sharedFlows = sharedFlows;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Sets the IAM policy on a deployment, if the policy already exists it will be replaced. For more
         * information, see [Manage users, roles, and permissions using the
         * API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles).
         * You must have the `apigee.deployments.setIamPolicy` permission to call this API.
         *
         * Create a request for the method "deployments.setIamPolicy".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @return the request
         */
        public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
          SetIamPolicy result = new SetIamPolicy(resource, content);
          initialize(result);
          return result;
        }

        public class SetIamPolicy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1Policy> {

          private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");

          /**
           * Sets the IAM policy on a deployment, if the policy already exists it will be replaced. For more
           * information, see [Manage users, roles, and permissions using the
           * API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-
           * roles). You must have the `apigee.deployments.setIamPolicy` permission to call this API.
           *
           * Create a request for the method "deployments.setIamPolicy".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation. <p>
           * {@link
           * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy is being specified. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest}
           * @since 1.13
           */
          protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleIamV1Policy.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
            return (SetIamPolicy) super.set$Xgafv($Xgafv);
          }

          @Override
          public SetIamPolicy setAccessToken(java.lang.String accessToken) {
            return (SetIamPolicy) super.setAccessToken(accessToken);
          }

          @Override
          public SetIamPolicy setAlt(java.lang.String alt) {
            return (SetIamPolicy) super.setAlt(alt);
          }

          @Override
          public SetIamPolicy setCallback(java.lang.String callback) {
            return (SetIamPolicy) super.setCallback(callback);
          }

          @Override
          public SetIamPolicy setFields(java.lang.String fields) {
            return (SetIamPolicy) super.setFields(fields);
          }

          @Override
          public SetIamPolicy setKey(java.lang.String key) {
            return (SetIamPolicy) super.setKey(key);
          }

          @Override
          public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
            return (SetIamPolicy) super.setOauthToken(oauthToken);
          }

          @Override
          public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
            return (SetIamPolicy) super.setQuotaUser(quotaUser);
          }

          @Override
          public SetIamPolicy setUploadType(java.lang.String uploadType) {
            return (SetIamPolicy) super.setUploadType(uploadType);
          }

          @Override
          public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
            return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy is being specified. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy is being specified. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public SetIamPolicy setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public SetIamPolicy set(String parameterName, Object value) {
            return (SetIamPolicy) super.set(parameterName, value);
          }
        }
        /**
         * Tests the permissions of a user on a deployment, and returns a subset of permissions that the
         * user has on the deployment. If the deployment does not exist, an empty permission set is returned
         * (a NOT_FOUND error is not returned).
         *
         * Create a request for the method "deployments.testIamPermissions".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest}
         * @return the request
         */
        public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
          TestIamPermissions result = new TestIamPermissions(resource, content);
          initialize(result);
          return result;
        }

        public class TestIamPermissions extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsResponse> {

          private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

          private final java.util.regex.Pattern RESOURCE_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");

          /**
           * Tests the permissions of a user on a deployment, and returns a subset of permissions that the
           * user has on the deployment. If the deployment does not exist, an empty permission set is
           * returned (a NOT_FOUND error is not returned).
           *
           * Create a request for the method "deployments.testIamPermissions".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
           * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param resource REQUIRED: The resource for which the policy detail is being requested. See [Resource
         *        names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
         *        this field.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest}
           * @since 1.13
           */
          protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
            this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");
            }
          }

          @Override
          public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
            return (TestIamPermissions) super.set$Xgafv($Xgafv);
          }

          @Override
          public TestIamPermissions setAccessToken(java.lang.String accessToken) {
            return (TestIamPermissions) super.setAccessToken(accessToken);
          }

          @Override
          public TestIamPermissions setAlt(java.lang.String alt) {
            return (TestIamPermissions) super.setAlt(alt);
          }

          @Override
          public TestIamPermissions setCallback(java.lang.String callback) {
            return (TestIamPermissions) super.setCallback(callback);
          }

          @Override
          public TestIamPermissions setFields(java.lang.String fields) {
            return (TestIamPermissions) super.setFields(fields);
          }

          @Override
          public TestIamPermissions setKey(java.lang.String key) {
            return (TestIamPermissions) super.setKey(key);
          }

          @Override
          public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
            return (TestIamPermissions) super.setOauthToken(oauthToken);
          }

          @Override
          public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
            return (TestIamPermissions) super.setQuotaUser(quotaUser);
          }

          @Override
          public TestIamPermissions setUploadType(java.lang.String uploadType) {
            return (TestIamPermissions) super.setUploadType(uploadType);
          }

          @Override
          public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
            return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String resource;

          /** REQUIRED: The resource for which the policy detail is being requested. See [Resource
         names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
         field.
           */
          public java.lang.String getResource() {
            return resource;
          }

          /**
           * REQUIRED: The resource for which the policy detail is being requested. See [Resource
           * names](https://cloud.google.com/apis/design/resource_names) for the appropriate value
           * for this field.
           */
          public TestIamPermissions setResource(java.lang.String resource) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                  "Parameter resource must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/deployments/[^/]+$");
            }
            this.resource = resource;
            return this;
          }

          @Override
          public TestIamPermissions set(String parameterName, Object value) {
            return (TestIamPermissions) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Flowhooks collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Flowhooks.List request = apigee.flowhooks().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Flowhooks flowhooks() {
        return new Flowhooks();
      }

      /**
       * The "flowhooks" collection of methods.
       */
      public class Flowhooks {

        /**
         * Attaches a shared flow to a flow hook.
         *
         * Create a request for the method "flowhooks.attachSharedFlowToFlowHook".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link AttachSharedFlowToFlowHook#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Name of the flow hook to which the shared flow should be attached in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook}
         * @return the request
         */
        public AttachSharedFlowToFlowHook attachSharedFlowToFlowHook(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook content) throws java.io.IOException {
          AttachSharedFlowToFlowHook result = new AttachSharedFlowToFlowHook(name, content);
          initialize(result);
          return result;
        }

        public class AttachSharedFlowToFlowHook extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");

          /**
           * Attaches a shared flow to a flow hook.
           *
           * Create a request for the method "flowhooks.attachSharedFlowToFlowHook".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link AttachSharedFlowToFlowHook#execute()} method to invoke the remote
           * operation. <p> {@link AttachSharedFlowToFlowHook#initialize(com.google.api.client.googleapis.se
           * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param name Required. Name of the flow hook to which the shared flow should be attached in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook}
           * @since 1.13
           */
          protected AttachSharedFlowToFlowHook(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
          }

          @Override
          public AttachSharedFlowToFlowHook set$Xgafv(java.lang.String $Xgafv) {
            return (AttachSharedFlowToFlowHook) super.set$Xgafv($Xgafv);
          }

          @Override
          public AttachSharedFlowToFlowHook setAccessToken(java.lang.String accessToken) {
            return (AttachSharedFlowToFlowHook) super.setAccessToken(accessToken);
          }

          @Override
          public AttachSharedFlowToFlowHook setAlt(java.lang.String alt) {
            return (AttachSharedFlowToFlowHook) super.setAlt(alt);
          }

          @Override
          public AttachSharedFlowToFlowHook setCallback(java.lang.String callback) {
            return (AttachSharedFlowToFlowHook) super.setCallback(callback);
          }

          @Override
          public AttachSharedFlowToFlowHook setFields(java.lang.String fields) {
            return (AttachSharedFlowToFlowHook) super.setFields(fields);
          }

          @Override
          public AttachSharedFlowToFlowHook setKey(java.lang.String key) {
            return (AttachSharedFlowToFlowHook) super.setKey(key);
          }

          @Override
          public AttachSharedFlowToFlowHook setOauthToken(java.lang.String oauthToken) {
            return (AttachSharedFlowToFlowHook) super.setOauthToken(oauthToken);
          }

          @Override
          public AttachSharedFlowToFlowHook setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (AttachSharedFlowToFlowHook) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public AttachSharedFlowToFlowHook setQuotaUser(java.lang.String quotaUser) {
            return (AttachSharedFlowToFlowHook) super.setQuotaUser(quotaUser);
          }

          @Override
          public AttachSharedFlowToFlowHook setUploadType(java.lang.String uploadType) {
            return (AttachSharedFlowToFlowHook) super.setUploadType(uploadType);
          }

          @Override
          public AttachSharedFlowToFlowHook setUploadProtocol(java.lang.String uploadProtocol) {
            return (AttachSharedFlowToFlowHook) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the flow hook to which the shared flow should be attached in the
           * following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the flow hook to which the shared flow should be attached in the following
         format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the flow hook to which the shared flow should be attached in the
           * following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public AttachSharedFlowToFlowHook setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public AttachSharedFlowToFlowHook set(String parameterName, Object value) {
            return (AttachSharedFlowToFlowHook) super.set(parameterName, value);
          }
        }
        /**
         * Detaches a shared flow from a flow hook.
         *
         * Create a request for the method "flowhooks.detachSharedFlowFromFlowHook".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link DetachSharedFlowFromFlowHook#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Name of the flow hook to detach in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
         * @return the request
         */
        public DetachSharedFlowFromFlowHook detachSharedFlowFromFlowHook(java.lang.String name) throws java.io.IOException {
          DetachSharedFlowFromFlowHook result = new DetachSharedFlowFromFlowHook(name);
          initialize(result);
          return result;
        }

        public class DetachSharedFlowFromFlowHook extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");

          /**
           * Detaches a shared flow from a flow hook.
           *
           * Create a request for the method "flowhooks.detachSharedFlowFromFlowHook".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link DetachSharedFlowFromFlowHook#execute()} method to invoke the remote
           * operation. <p> {@link DetachSharedFlowFromFlowHook#initialize(com.google.api.client.googleapis.
           * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param name Required. Name of the flow hook to detach in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           * @since 1.13
           */
          protected DetachSharedFlowFromFlowHook(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
          }

          @Override
          public DetachSharedFlowFromFlowHook set$Xgafv(java.lang.String $Xgafv) {
            return (DetachSharedFlowFromFlowHook) super.set$Xgafv($Xgafv);
          }

          @Override
          public DetachSharedFlowFromFlowHook setAccessToken(java.lang.String accessToken) {
            return (DetachSharedFlowFromFlowHook) super.setAccessToken(accessToken);
          }

          @Override
          public DetachSharedFlowFromFlowHook setAlt(java.lang.String alt) {
            return (DetachSharedFlowFromFlowHook) super.setAlt(alt);
          }

          @Override
          public DetachSharedFlowFromFlowHook setCallback(java.lang.String callback) {
            return (DetachSharedFlowFromFlowHook) super.setCallback(callback);
          }

          @Override
          public DetachSharedFlowFromFlowHook setFields(java.lang.String fields) {
            return (DetachSharedFlowFromFlowHook) super.setFields(fields);
          }

          @Override
          public DetachSharedFlowFromFlowHook setKey(java.lang.String key) {
            return (DetachSharedFlowFromFlowHook) super.setKey(key);
          }

          @Override
          public DetachSharedFlowFromFlowHook setOauthToken(java.lang.String oauthToken) {
            return (DetachSharedFlowFromFlowHook) super.setOauthToken(oauthToken);
          }

          @Override
          public DetachSharedFlowFromFlowHook setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DetachSharedFlowFromFlowHook) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DetachSharedFlowFromFlowHook setQuotaUser(java.lang.String quotaUser) {
            return (DetachSharedFlowFromFlowHook) super.setQuotaUser(quotaUser);
          }

          @Override
          public DetachSharedFlowFromFlowHook setUploadType(java.lang.String uploadType) {
            return (DetachSharedFlowFromFlowHook) super.setUploadType(uploadType);
          }

          @Override
          public DetachSharedFlowFromFlowHook setUploadProtocol(java.lang.String uploadProtocol) {
            return (DetachSharedFlowFromFlowHook) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the flow hook to detach in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the flow hook to detach in the following format:
         `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the flow hook to detach in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public DetachSharedFlowFromFlowHook setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public DetachSharedFlowFromFlowHook set(String parameterName, Object value) {
            return (DetachSharedFlowFromFlowHook) super.set(parameterName, value);
          }
        }
        /**
         * Returns the name of the shared flow attached to the specified flow hook. If there's no shared
         * flow attached to the flow hook, the API does not return an error; it simply does not return a
         * name in the response.
         *
         * Create a request for the method "flowhooks.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the flow hook in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");

          /**
           * Returns the name of the shared flow attached to the specified flow hook. If there's no shared
           * flow attached to the flow hook, the API does not return an error; it simply does not return a
           * name in the response.
           *
           * Create a request for the method "flowhooks.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the flow hook in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the flow hook in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the flow hook in the following format:
         `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the flow hook in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Keystores collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Keystores.List request = apigee.keystores().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Keystores keystores() {
        return new Keystores();
      }

      /**
       * The "keystores" collection of methods.
       */
      public class Keystores {

        /**
         * Creates a keystore or truststore. - Keystore: Contains certificates and their associated keys. -
         * Truststore: Contains trusted certificates used to validate a server's certificate. These
         * certificates are typically self-signed certificates or certificates that are not signed by a
         * trusted CA.
         *
         * Create a request for the method "keystores.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in which to create the keystore. Use the following format in your
         *        request: `organizations/{org}/environments/{env}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore> {

          private static final String REST_PATH = "v1/{+parent}/keystores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a keystore or truststore. - Keystore: Contains certificates and their associated keys.
           * - Truststore: Contains trusted certificates used to validate a server's certificate. These
           * certificates are typically self-signed certificates or certificates that are not signed by a
           * trusted CA.
           *
           * Create a request for the method "keystores.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in which to create the keystore. Use the following format in your
         *        request: `organizations/{org}/environments/{env}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in which to create the keystore. Use the following
           * format in your request: `organizations/{org}/environments/{env}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in which to create the keystore. Use the following format in your
         request: `organizations/{org}/environments/{env}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in which to create the keystore. Use the following
           * format in your request: `organizations/{org}/environments/{env}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. Name of the keystore. Overrides the value in Keystore. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Optional. Name of the keystore. Overrides the value in Keystore.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Optional. Name of the keystore. Overrides the value in Keystore. */
          public Create setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a keystore or truststore.
         *
         * Create a request for the method "keystores.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the keystore. Use the following format in your request:
         *        `organizations/{org}/environments/{env}/keystores/{keystore}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");

          /**
           * Deletes a keystore or truststore.
           *
           * Create a request for the method "keystores.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the keystore. Use the following format in your request:
         *        `organizations/{org}/environments/{env}/keystores/{keystore}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the keystore. Use the following format in your request:
           * `organizations/{org}/environments/{env}/keystores/{keystore}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the keystore. Use the following format in your request:
         `organizations/{org}/environments/{env}/keystores/{keystore}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the keystore. Use the following format in your request:
           * `organizations/{org}/environments/{env}/keystores/{keystore}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a keystore or truststore.
         *
         * Create a request for the method "keystores.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the keystore. Use the following format in your request:
         *        `organizations/{org}/environments/{env}/keystores/{keystore}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");

          /**
           * Gets a keystore or truststore.
           *
           * Create a request for the method "keystores.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the keystore. Use the following format in your request:
         *        `organizations/{org}/environments/{env}/keystores/{keystore}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the keystore. Use the following format in your request:
           * `organizations/{org}/environments/{env}/keystores/{keystore}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the keystore. Use the following format in your request:
         `organizations/{org}/environments/{env}/keystores/{keystore}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the keystore. Use the following format in your request:
           * `organizations/{org}/environments/{env}/keystores/{keystore}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Aliases collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Aliases.List request = apigee.aliases().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Aliases aliases() {
          return new Aliases();
        }

        /**
         * The "aliases" collection of methods.
         */
        public class Aliases {

          /**
           * Creates an alias from a key/certificate pair. The structure of the request is controlled by the
           * `format` query parameter: - `keycertfile` - Separate PEM-encoded key and certificate files are
           * uploaded. Set `Content-Type: multipart/form-data` and include the `keyFile`, `certFile`, and
           * `password` (if keys are encrypted) fields in the request body. If uploading to a truststore, omit
           * `keyFile`. - `pkcs12` - A PKCS12 file is uploaded. Set `Content-Type: multipart/form-data`,
           * provide the file in the `file` field, and include the `password` field if the file is encrypted
           * in the request body. - `selfsignedcert` - A new private key and certificate are generated. Set
           * `Content-Type: application/json` and include CertificateGenerationSpec in the request body.
           *
           * Create a request for the method "aliases.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the keystore. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+parent}/aliases";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");

            /**
             * Creates an alias from a key/certificate pair. The structure of the request is controlled by the
             * `format` query parameter: - `keycertfile` - Separate PEM-encoded key and certificate files are
             * uploaded. Set `Content-Type: multipart/form-data` and include the `keyFile`, `certFile`, and
             * `password` (if keys are encrypted) fields in the request body. If uploading to a truststore,
             * omit `keyFile`. - `pkcs12` - A PKCS12 file is uploaded. Set `Content-Type: multipart/form-
             * data`, provide the file in the `file` field, and include the `password` field if the file is
             * encrypted in the request body. - `selfsignedcert` - A new private key and certificate are
             * generated. Set `Content-Type: application/json` and include CertificateGenerationSpec in the
             * request body.
             *
             * Create a request for the method "aliases.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the keystore. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the keystore. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the keystore. Use the following format in your request:
           `organizations/{org}/environments/{env}/keystores/{keystore}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the keystore. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * DEPRECATED: For improved security, specify the password in the request body instead
             * of using the query parameter. To specify the password in the request body, set
             * `Content-type: multipart/form-data` part with name `password`. Password for the
             * private key file, if required.
             */
            @com.google.api.client.util.Key("_password")
            private java.lang.String password;

            /** DEPRECATED: For improved security, specify the password in the request body instead of using the
           query parameter. To specify the password in the request body, set `Content-type: multipart/form-
           data` part with name `password`. Password for the private key file, if required.
             */
            public java.lang.String getPassword() {
              return password;
            }

            /**
             * DEPRECATED: For improved security, specify the password in the request body instead
             * of using the query parameter. To specify the password in the request body, set
             * `Content-type: multipart/form-data` part with name `password`. Password for the
             * private key file, if required.
             */
            public Create setPassword(java.lang.String password) {
              this.password = password;
              return this;
            }

            /**
             * Alias for the key/certificate pair. Values must match the regular expression
             * `[\w\s-.]{1,255}`. This must be provided for all formats except `selfsignedcert`;
             * self-signed certs may specify the alias in either this parameter or the JSON body.
             */
            @com.google.api.client.util.Key
            private java.lang.String alias;

            /** Alias for the key/certificate pair. Values must match the regular expression `[\w\s-.]{1,255}`.
           This must be provided for all formats except `selfsignedcert`; self-signed certs may specify the
           alias in either this parameter or the JSON body.
             */
            public java.lang.String getAlias() {
              return alias;
            }

            /**
             * Alias for the key/certificate pair. Values must match the regular expression
             * `[\w\s-.]{1,255}`. This must be provided for all formats except `selfsignedcert`;
             * self-signed certs may specify the alias in either this parameter or the JSON body.
             */
            public Create setAlias(java.lang.String alias) {
              this.alias = alias;
              return this;
            }

            /**
             * Required. Format of the data. Valid values include: `selfsignedcert`, `keycertfile`,
             * or `pkcs12`
             */
            @com.google.api.client.util.Key
            private java.lang.String format;

            /** Required. Format of the data. Valid values include: `selfsignedcert`, `keycertfile`, or `pkcs12`
             */
            public java.lang.String getFormat() {
              return format;
            }

            /**
             * Required. Format of the data. Valid values include: `selfsignedcert`, `keycertfile`,
             * or `pkcs12`
             */
            public Create setFormat(java.lang.String format) {
              this.format = format;
              return this;
            }

            /**
             * Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry
             * validation will be performed.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreExpiryValidation;

            /** Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry validation
           will be performed.
             */
            public java.lang.Boolean getIgnoreExpiryValidation() {
              return ignoreExpiryValidation;
            }

            /**
             * Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry
             * validation will be performed.
             */
            public Create setIgnoreExpiryValidation(java.lang.Boolean ignoreExpiryValidation) {
              this.ignoreExpiryValidation = ignoreExpiryValidation;
              return this;
            }

            /**
             * Flag that specifies whether to ignore newline validation. If set to `true`, no error
             * is thrown when the file contains a certificate chain with no newline between each
             * certificate. Defaults to `false`.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreNewlineValidation;

            /** Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when
           the file contains a certificate chain with no newline between each certificate. Defaults to
           `false`.
             */
            public java.lang.Boolean getIgnoreNewlineValidation() {
              return ignoreNewlineValidation;
            }

            /**
             * Flag that specifies whether to ignore newline validation. If set to `true`, no error
             * is thrown when the file contains a certificate chain with no newline between each
             * certificate. Defaults to `false`.
             */
            public Create setIgnoreNewlineValidation(java.lang.Boolean ignoreNewlineValidation) {
              this.ignoreNewlineValidation = ignoreNewlineValidation;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Generates a PKCS #10 Certificate Signing Request for the private key in an alias.
           *
           * Create a request for the method "aliases.csr".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Csr#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the alias. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
           * @return the request
           */
          public Csr csr(java.lang.String name) throws java.io.IOException {
            Csr result = new Csr(name);
            initialize(result);
            return result;
          }

          public class Csr extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

            private static final String REST_PATH = "v1/{+name}/csr";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Generates a PKCS #10 Certificate Signing Request for the private key in an alias.
             *
             * Create a request for the method "aliases.csr".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Csr#execute()} method to invoke the remote operation. <p> {@link
             * Csr#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the alias. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             * @since 1.13
             */
            protected Csr(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Csr set$Xgafv(java.lang.String $Xgafv) {
              return (Csr) super.set$Xgafv($Xgafv);
            }

            @Override
            public Csr setAccessToken(java.lang.String accessToken) {
              return (Csr) super.setAccessToken(accessToken);
            }

            @Override
            public Csr setAlt(java.lang.String alt) {
              return (Csr) super.setAlt(alt);
            }

            @Override
            public Csr setCallback(java.lang.String callback) {
              return (Csr) super.setCallback(callback);
            }

            @Override
            public Csr setFields(java.lang.String fields) {
              return (Csr) super.setFields(fields);
            }

            @Override
            public Csr setKey(java.lang.String key) {
              return (Csr) super.setKey(key);
            }

            @Override
            public Csr setOauthToken(java.lang.String oauthToken) {
              return (Csr) super.setOauthToken(oauthToken);
            }

            @Override
            public Csr setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Csr) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Csr setQuotaUser(java.lang.String quotaUser) {
              return (Csr) super.setQuotaUser(quotaUser);
            }

            @Override
            public Csr setUploadType(java.lang.String uploadType) {
              return (Csr) super.setUploadType(uploadType);
            }

            @Override
            public Csr setUploadProtocol(java.lang.String uploadProtocol) {
              return (Csr) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the alias. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the alias. Use the following format in your request:
           `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the alias. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            public Csr setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Csr set(String parameterName, Object value) {
              return (Csr) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an alias.
           *
           * Create a request for the method "aliases.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the alias. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Deletes an alias.
             *
             * Create a request for the method "aliases.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the alias. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the alias. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the alias. Use the following format in your request:
           `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the alias. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets an alias.
           *
           * Create a request for the method "aliases.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the alias. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Gets an alias.
             *
             * Create a request for the method "aliases.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the alias. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the alias. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the alias. Use the following format in your request:
           `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the alias. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the certificate from an alias in PEM-encoded form.
           *
           * Create a request for the method "aliases.getCertificate".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetCertificate#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the alias. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
           * @return the request
           */
          public GetCertificate getCertificate(java.lang.String name) throws java.io.IOException {
            GetCertificate result = new GetCertificate(name);
            initialize(result);
            return result;
          }

          public class GetCertificate extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

            private static final String REST_PATH = "v1/{+name}/certificate";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Gets the certificate from an alias in PEM-encoded form.
             *
             * Create a request for the method "aliases.getCertificate".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetCertificate#execute()} method to invoke the remote operation.
             * <p> {@link GetCertificate#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
             * ientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param name Required. Name of the alias. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             * @since 1.13
             */
            protected GetCertificate(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetCertificate set$Xgafv(java.lang.String $Xgafv) {
              return (GetCertificate) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetCertificate setAccessToken(java.lang.String accessToken) {
              return (GetCertificate) super.setAccessToken(accessToken);
            }

            @Override
            public GetCertificate setAlt(java.lang.String alt) {
              return (GetCertificate) super.setAlt(alt);
            }

            @Override
            public GetCertificate setCallback(java.lang.String callback) {
              return (GetCertificate) super.setCallback(callback);
            }

            @Override
            public GetCertificate setFields(java.lang.String fields) {
              return (GetCertificate) super.setFields(fields);
            }

            @Override
            public GetCertificate setKey(java.lang.String key) {
              return (GetCertificate) super.setKey(key);
            }

            @Override
            public GetCertificate setOauthToken(java.lang.String oauthToken) {
              return (GetCertificate) super.setOauthToken(oauthToken);
            }

            @Override
            public GetCertificate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetCertificate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetCertificate setQuotaUser(java.lang.String quotaUser) {
              return (GetCertificate) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetCertificate setUploadType(java.lang.String uploadType) {
              return (GetCertificate) super.setUploadType(uploadType);
            }

            @Override
            public GetCertificate setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetCertificate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the alias. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the alias. Use the following format in your request:
           `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the alias. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
             */
            public GetCertificate setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetCertificate set(String parameterName, Object value) {
              return (GetCertificate) super.set(parameterName, value);
            }
          }
          /**
           * Updates the certificate in an alias.
           *
           * Create a request for the method "aliases.update".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the alias. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @return the request
           */
          public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
            Update result = new Update(name, content);
            initialize(result);
            return result;
          }

          public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Updates the certificate in an alias.
             *
             * Create a request for the method "aliases.update".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the alias. Use the following format in your request:
           *        `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
             * @since 1.13
             */
            protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
              super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public Update set$Xgafv(java.lang.String $Xgafv) {
              return (Update) super.set$Xgafv($Xgafv);
            }

            @Override
            public Update setAccessToken(java.lang.String accessToken) {
              return (Update) super.setAccessToken(accessToken);
            }

            @Override
            public Update setAlt(java.lang.String alt) {
              return (Update) super.setAlt(alt);
            }

            @Override
            public Update setCallback(java.lang.String callback) {
              return (Update) super.setCallback(callback);
            }

            @Override
            public Update setFields(java.lang.String fields) {
              return (Update) super.setFields(fields);
            }

            @Override
            public Update setKey(java.lang.String key) {
              return (Update) super.setKey(key);
            }

            @Override
            public Update setOauthToken(java.lang.String oauthToken) {
              return (Update) super.setOauthToken(oauthToken);
            }

            @Override
            public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Update) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Update setQuotaUser(java.lang.String quotaUser) {
              return (Update) super.setQuotaUser(quotaUser);
            }

            @Override
            public Update setUploadType(java.lang.String uploadType) {
              return (Update) super.setUploadType(uploadType);
            }

            @Override
            public Update setUploadProtocol(java.lang.String uploadProtocol) {
              return (Update) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the alias. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the alias. Use the following format in your request:
           `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the alias. Use the following format in your request:
             * `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`
             */
            public Update setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. Flag that specifies whether to ignore expiry validation. If set to `true`,
             * no expiry validation will be performed.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreExpiryValidation;

            /** Required. Flag that specifies whether to ignore expiry validation. If set to `true`, no expiry
           validation will be performed.
             */
            public java.lang.Boolean getIgnoreExpiryValidation() {
              return ignoreExpiryValidation;
            }

            /**
             * Required. Flag that specifies whether to ignore expiry validation. If set to `true`,
             * no expiry validation will be performed.
             */
            public Update setIgnoreExpiryValidation(java.lang.Boolean ignoreExpiryValidation) {
              this.ignoreExpiryValidation = ignoreExpiryValidation;
              return this;
            }

            /**
             * Flag that specifies whether to ignore newline validation. If set to `true`, no error
             * is thrown when the file contains a certificate chain with no newline between each
             * certificate. Defaults to `false`.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreNewlineValidation;

            /** Flag that specifies whether to ignore newline validation. If set to `true`, no error is thrown when
           the file contains a certificate chain with no newline between each certificate. Defaults to
           `false`.
             */
            public java.lang.Boolean getIgnoreNewlineValidation() {
              return ignoreNewlineValidation;
            }

            /**
             * Flag that specifies whether to ignore newline validation. If set to `true`, no error
             * is thrown when the file contains a certificate chain with no newline between each
             * certificate. Defaults to `false`.
             */
            public Update setIgnoreNewlineValidation(java.lang.Boolean ignoreNewlineValidation) {
              this.ignoreNewlineValidation = ignoreNewlineValidation;
              return this;
            }

            @Override
            public Update set(String parameterName, Object value) {
              return (Update) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Keyvaluemaps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Keyvaluemaps.List request = apigee.keyvaluemaps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Keyvaluemaps keyvaluemaps() {
        return new Keyvaluemaps();
      }

      /**
       * The "keyvaluemaps" collection of methods.
       */
      public class Keyvaluemaps {

        /**
         * Creates a key value map in an environment.
         *
         * Create a request for the method "keyvaluemaps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in which to create the key value map. Use the following structure
         *        in your request: `organizations/{org}/environments/{env}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a key value map in an environment.
           *
           * Create a request for the method "keyvaluemaps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in which to create the key value map. Use the following structure
         *        in your request: `organizations/{org}/environments/{env}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in which to create the key value map. Use the
           * following structure in your request: `organizations/{org}/environments/{env}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in which to create the key value map. Use the following structure
         in your request: `organizations/{org}/environments/{env}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in which to create the key value map. Use the
           * following structure in your request: `organizations/{org}/environments/{env}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a key value map from an environment.
         *
         * Create a request for the method "keyvaluemaps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the key value map. Use the following structure in your request:
         *        `organizations/{org}/environments/{env}/keyvaluemaps/{keyvaluemap}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");

          /**
           * Deletes a key value map from an environment.
           *
           * Create a request for the method "keyvaluemaps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the key value map. Use the following structure in your request:
         *        `organizations/{org}/environments/{env}/keyvaluemaps/{keyvaluemap}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the key value map. Use the following structure in your request:
           * `organizations/{org}/environments/{env}/keyvaluemaps/{keyvaluemap}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the key value map. Use the following structure in your request:
         `organizations/{org}/environments/{env}/keyvaluemaps/{keyvaluemap}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the key value map. Use the following structure in your request:
           * `organizations/{org}/environments/{env}/keyvaluemaps/{keyvaluemap}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Entries collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Entries.List request = apigee.entries().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Entries entries() {
          return new Entries();
        }

        /**
         * The "entries" collection of methods.
         */
        public class Entries {

          /**
           * Creates key value entries in a key value map scoped to an organization, environment, or API
           * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

            private static final String REST_PATH = "v1/{+parent}/entries";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");

            /**
             * Creates key value entries in a key value map scoped to an organization, environment, or API
             * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
             *
             * Create a request for the method "entries.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Scope as indicated by the URI in which to create the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           the following structures in your request: *
           `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Scope as indicated by the URI in which to create the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a key value entry from a key value map scoped to an organization, environment, or API
           * proxy. **Notes:** * After you delete the key value entry, the policy consuming the entry will
           * continue to function with its cached values for a few minutes. This is expected behavior. *
           * Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
           *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
           *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");

            /**
             * Deletes a key value entry from a key value map scoped to an organization, environment, or API
             * proxy. **Notes:** * After you delete the key value entry, the policy consuming the entry will
             * continue to function with its cached values for a few minutes. This is expected behavior. *
             * Supported for Apigee hybrid 1.8.x and higher.
             *
             * Create a request for the method "entries.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
           *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
           *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Scope as indicated by the URI in which to delete the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}
             * /entries/{entry}` *
             * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of
           the following structures in your request: *
           `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizati
           ons/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` *
           `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Scope as indicated by the URI in which to delete the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}
             * /entries/{entry}` *
             * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Get the key value entry value for a key value map scoped to an organization, environment, or API
           * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one**
           *        of the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
           *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
           *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");

            /**
             * Get the key value entry value for a key value map scoped to an organization, environment, or
             * API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
             *
             * Create a request for the method "entries.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one**
           *        of the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
           *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
           *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Scope as indicated by the URI in which to fetch the key value map
             * entry/value. Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}
             * /entries/{entry}` *
             * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use
           **one** of the following structures in your request: *
           `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizati
           ons/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` *
           `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Scope as indicated by the URI in which to fetch the key value map
             * entry/value. Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             * * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}
             * /entries/{entry}` *
             * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists key value entries for key values maps scoped to an organization, environment, or API proxy.
           * **Note**: Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the
           *        following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListKeyValueEntriesResponse> {

            private static final String REST_PATH = "v1/{+parent}/entries";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");

            /**
             * Lists key value entries for key values maps scoped to an organization, environment, or API
             * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
             *
             * Create a request for the method "entries.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the
           *        following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListKeyValueEntriesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Scope as indicated by the URI in which to list key value maps. Use **one**
             * of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the
           following structures in your request: *
           `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Scope as indicated by the URI in which to list key value maps. Use **one**
             * of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Optional. Maximum number of key value entries to return. If unspecified, at most 100
             * entries will be returned.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Optional. Maximum number of key value entries to return. If unspecified, at most 100 entries will
           be returned.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Optional. Maximum number of key value entries to return. If unspecified, at most 100
             * entries will be returned.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * Optional. Page token. If provides, must be a valid key value entry returned from a
             * previous call that can be used to retrieve the next page.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** Optional. Page token. If provides, must be a valid key value entry returned from a previous call
           that can be used to retrieve the next page.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * Optional. Page token. If provides, must be a valid key value entry returned from a
             * previous call that can be used to retrieve the next page.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Update key value entry scoped to an organization, environment, or API proxy for an existing key.
           *
           * Create a request for the method "entries.update".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation.
           *
           * @param name Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
           * @return the request
           */
          public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) throws java.io.IOException {
            Update result = new Update(name, content);
            initialize(result);
            return result;
          }

          public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");

            /**
             * Update key value entry scoped to an organization, environment, or API proxy for an existing
             * key.
             *
             * Create a request for the method "entries.update".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           *        the following structures in your request: *
           *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
             * @since 1.13
             */
            protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) {
              super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
            }

            @Override
            public Update set$Xgafv(java.lang.String $Xgafv) {
              return (Update) super.set$Xgafv($Xgafv);
            }

            @Override
            public Update setAccessToken(java.lang.String accessToken) {
              return (Update) super.setAccessToken(accessToken);
            }

            @Override
            public Update setAlt(java.lang.String alt) {
              return (Update) super.setAlt(alt);
            }

            @Override
            public Update setCallback(java.lang.String callback) {
              return (Update) super.setCallback(callback);
            }

            @Override
            public Update setFields(java.lang.String fields) {
              return (Update) super.setFields(fields);
            }

            @Override
            public Update setKey(java.lang.String key) {
              return (Update) super.setKey(key);
            }

            @Override
            public Update setOauthToken(java.lang.String oauthToken) {
              return (Update) super.setOauthToken(oauthToken);
            }

            @Override
            public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Update) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Update setQuotaUser(java.lang.String quotaUser) {
              return (Update) super.setQuotaUser(quotaUser);
            }

            @Override
            public Update setUploadType(java.lang.String uploadType) {
              return (Update) super.setUploadType(uploadType);
            }

            @Override
            public Update setUploadProtocol(java.lang.String uploadProtocol) {
              return (Update) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Scope as indicated by the URI in which to create the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
           the following structures in your request: *
           `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Scope as indicated by the URI in which to create the key value map entry.
             * Use **one** of the following structures in your request: *
             * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
             * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
             * * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
             */
            public Update setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Update set(String parameterName, Object value) {
              return (Update) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the OptimizedStats collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.OptimizedStats.List request = apigee.optimizedStats().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public OptimizedStats optimizedStats() {
        return new OptimizedStats();
      }

      /**
       * The "optimizedStats" collection of methods.
       */
      public class OptimizedStats {

        /**
         * Similar to GetStats except that the response is less verbose.
         *
         * Create a request for the method "optimizedStats.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name for which the interactive query will be executed. Use the following format
         *        in your request: `organizations/{org}/environments/{env}/optimizedStats/{dimensions}`
         *        Dimensions let you view metrics in meaningful groupings, such as `apiproxy`,
         *        `target_host`. The value of `dimensions` should be a comma-separated list as shown below:
         *        `organizations/{org}/environments/{env}/optimizedStats/apiproxy,request_verb`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1OptimizedStats> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/optimizedStats/.*$");

          /**
           * Similar to GetStats except that the response is less verbose.
           *
           * Create a request for the method "optimizedStats.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name for which the interactive query will be executed. Use the following format
         *        in your request: `organizations/{org}/environments/{env}/optimizedStats/{dimensions}`
         *        Dimensions let you view metrics in meaningful groupings, such as `apiproxy`,
         *        `target_host`. The value of `dimensions` should be a comma-separated list as shown below:
         *        `organizations/{org}/environments/{env}/optimizedStats/apiproxy,request_verb`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1OptimizedStats.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/optimizedStats/.*$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource name for which the interactive query will be executed. Use the
           * following format in your request:
           * `organizations/{org}/environments/{env}/optimizedStats/{dimensions}` Dimensions let you
           * view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of
           * `dimensions` should be a comma-separated list as shown below:
           * `organizations/{org}/environments/{env}/optimizedStats/apiproxy,request_verb`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name for which the interactive query will be executed. Use the following format
         in your request: `organizations/{org}/environments/{env}/optimizedStats/{dimensions}` Dimensions
         let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of
         `dimensions` should be a comma-separated list as shown below:
         `organizations/{org}/environments/{env}/optimizedStats/apiproxy,request_verb`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource name for which the interactive query will be executed. Use the
           * following format in your request:
           * `organizations/{org}/environments/{env}/optimizedStats/{dimensions}` Dimensions let you
           * view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of
           * `dimensions` should be a comma-separated list as shown below:
           * `organizations/{org}/environments/{env}/optimizedStats/apiproxy,request_verb`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/optimizedStats/.*$");
            }
            this.name = name;
            return this;
          }

          /** No longer used by Apigee. Supported for backwards compatibility. */
          @com.google.api.client.util.Key
          private java.lang.String accuracy;

          /** No longer used by Apigee. Supported for backwards compatibility.
           */
          public java.lang.String getAccuracy() {
            return accuracy;
          }

          /** No longer used by Apigee. Supported for backwards compatibility. */
          public Get setAccuracy(java.lang.String accuracy) {
            this.accuracy = accuracy;
            return this;
          }

          /**
           * Table name used to query custom aggregate tables. If this parameter is skipped, then
           * Apigee will try to retrieve the data from fact tables which will be expensive.
           */
          @com.google.api.client.util.Key
          private java.lang.String aggTable;

          /** Table name used to query custom aggregate tables. If this parameter is skipped, then Apigee will
         try to retrieve the data from fact tables which will be expensive.
           */
          public java.lang.String getAggTable() {
            return aggTable;
          }

          /**
           * Table name used to query custom aggregate tables. If this parameter is skipped, then
           * Apigee will try to retrieve the data from fact tables which will be expensive.
           */
          public Get setAggTable(java.lang.String aggTable) {
            this.aggTable = aggTable;
            return this;
          }

          /** Filter that enables you to drill-down on specific dimension values. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter that enables you to drill-down on specific dimension values.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter that enables you to drill-down on specific dimension values. */
          public Get setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Maximum number of result items to return. The default and maximum value that can be
           * returned is 14400.
           */
          @com.google.api.client.util.Key
          private java.lang.String limit;

          /** Maximum number of result items to return. The default and maximum value that can be returned is
         14400.
           */
          public java.lang.String getLimit() {
            return limit;
          }

          /**
           * Maximum number of result items to return. The default and maximum value that can be
           * returned is 14400.
           */
          public Get setLimit(java.lang.String limit) {
            this.limit = limit;
            return this;
          }

          /**
           * Offset value. Use `offset` with `limit` to enable pagination of results. For example,
           * to display results 11-20, set limit to `10` and offset to `10`.
           */
          @com.google.api.client.util.Key
          private java.lang.String offset;

          /** Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display
         results 11-20, set limit to `10` and offset to `10`.
           */
          public java.lang.String getOffset() {
            return offset;
          }

          /**
           * Offset value. Use `offset` with `limit` to enable pagination of results. For example,
           * to display results 11-20, set limit to `10` and offset to `10`.
           */
          public Get setOffset(java.lang.String offset) {
            this.offset = offset;
            return this;
          }

          /** No longer used by Apigee. Supported for backwards compatibility. */
          @com.google.api.client.util.Key
          private java.lang.Boolean realtime;

          /** No longer used by Apigee. Supported for backwards compatibility.
           */
          public java.lang.Boolean getRealtime() {
            return realtime;
          }

          /** No longer used by Apigee. Supported for backwards compatibility. */
          public Get setRealtime(java.lang.Boolean realtime) {
            this.realtime = realtime;
            return this;
          }

          /**
           * Required. Comma-separated list of metrics. For example:
           * `sum(message_count),sum(error_count)`
           */
          @com.google.api.client.util.Key
          private java.lang.String select;

          /** Required. Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`
           */
          public java.lang.String getSelect() {
            return select;
          }

          /**
           * Required. Comma-separated list of metrics. For example:
           * `sum(message_count),sum(error_count)`
           */
          public Get setSelect(java.lang.String select) {
            this.select = select;
            return this;
          }

          /** Routes the query to API Monitoring for the last hour. */
          @com.google.api.client.util.Key
          private java.lang.Boolean sonar;

          /** Routes the query to API Monitoring for the last hour.
           */
          public java.lang.Boolean getSonar() {
            return sonar;
          }

          /** Routes the query to API Monitoring for the last hour. */
          public Get setSonar(java.lang.Boolean sonar) {
            this.sonar = sonar;
            return this;
          }

          /**
           * Flag that specifies whether the sort order should be ascending or descending. Valid
           * values include `DESC` and `ASC`.
           */
          @com.google.api.client.util.Key
          private java.lang.String sort;

          /** Flag that specifies whether the sort order should be ascending or descending. Valid values include
         `DESC` and `ASC`.
           */
          public java.lang.String getSort() {
            return sort;
          }

          /**
           * Flag that specifies whether the sort order should be ascending or descending. Valid
           * values include `DESC` and `ASC`.
           */
          public Get setSort(java.lang.String sort) {
            this.sort = sort;
            return this;
          }

          /** Comma-separated list of columns to sort the final result. */
          @com.google.api.client.util.Key
          private java.lang.String sortby;

          /** Comma-separated list of columns to sort the final result.
           */
          public java.lang.String getSortby() {
            return sortby;
          }

          /** Comma-separated list of columns to sort the final result. */
          public Get setSortby(java.lang.String sortby) {
            this.sortby = sortby;
            return this;
          }

          /**
           * Required. Time interval for the interactive query. Time range is specified in GMT as
           * `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`
           */
          @com.google.api.client.util.Key
          private java.lang.String timeRange;

          /** Required. Time interval for the interactive query. Time range is specified in GMT as `start~end`.
         For example: `04/15/2017 00:00~05/15/2017 23:59`
           */
          public java.lang.String getTimeRange() {
            return timeRange;
          }

          /**
           * Required. Time interval for the interactive query. Time range is specified in GMT as
           * `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`
           */
          public Get setTimeRange(java.lang.String timeRange) {
            this.timeRange = timeRange;
            return this;
          }

          /**
           * Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`,
           * `day`, `week`, or `month`.
           */
          @com.google.api.client.util.Key
          private java.lang.String timeUnit;

          /** Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`,
         or `month`.
           */
          public java.lang.String getTimeUnit() {
            return timeUnit;
          }

          /**
           * Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`,
           * `day`, `week`, or `month`.
           */
          public Get setTimeUnit(java.lang.String timeUnit) {
            this.timeUnit = timeUnit;
            return this;
          }

          /**
           * Top number of results to return. For example, to return the top 5 results, set
           * `topk=5`.
           */
          @com.google.api.client.util.Key
          private java.lang.String topk;

          /** Top number of results to return. For example, to return the top 5 results, set `topk=5`.
           */
          public java.lang.String getTopk() {
            return topk;
          }

          /**
           * Top number of results to return. For example, to return the top 5 results, set
           * `topk=5`.
           */
          public Get setTopk(java.lang.String topk) {
            this.topk = topk;
            return this;
          }

          /**
           * Flag that specifies whether to list timestamps in ascending (`true`) or descending
           * (`false`) order. Apigee recommends setting this value to `true` if you are using
           * `sortby` with `sort=DESC`.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean tsAscending;

          /** Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order.
         Apigee recommends setting this value to `true` if you are using `sortby` with `sort=DESC`.
           */
          public java.lang.Boolean getTsAscending() {
            return tsAscending;
          }

          /**
           * Flag that specifies whether to list timestamps in ascending (`true`) or descending
           * (`false`) order. Apigee recommends setting this value to `true` if you are using
           * `sortby` with `sort=DESC`.
           */
          public Get setTsAscending(java.lang.Boolean tsAscending) {
            this.tsAscending = tsAscending;
            return this;
          }

          /** Timezone offset value. */
          @com.google.api.client.util.Key
          private java.lang.String tzo;

          /** Timezone offset value.
           */
          public java.lang.String getTzo() {
            return tzo;
          }

          /** Timezone offset value. */
          public Get setTzo(java.lang.String tzo) {
            this.tzo = tzo;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Queries collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Queries.List request = apigee.queries().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Queries queries() {
        return new Queries();
      }

      /**
       * The "queries" collection of methods.
       */
      public class Queries {

        /**
         * Submit a query to be processed in the background. If the submission of the query succeeds, the
         * API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201,
         * the `state` of "enqueued" means that the request succeeded.
         *
         * Create a request for the method "queries.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery> {

          private static final String REST_PATH = "v1/{+parent}/queries";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Submit a query to be processed in the background. If the submission of the query succeeds, the
           * API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201,
           * the `state` of "enqueued" means that the request succeeded.
           *
           * Create a request for the method "queries.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Get query status If the query is still in progress, the `state` is set to "running" After the
         * query has completed successfully, `state` is set to "completed"
         *
         * Create a request for the method "queries.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the asynchronous query to get. Must be of the form
         *        `organizations/{org}/environments/{env}/queries/{queryId}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/queries/[^/]+$");

          /**
           * Get query status If the query is still in progress, the `state` is set to "running" After the
           * query has completed successfully, `state` is set to "completed"
           *
           * Create a request for the method "queries.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the asynchronous query to get. Must be of the form
         *        `organizations/{org}/environments/{env}/queries/{queryId}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the asynchronous query to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the asynchronous query to get. Must be of the form
         `organizations/{org}/environments/{env}/queries/{queryId}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the asynchronous query to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * After the query is completed, use this API to retrieve the results. If the request succeeds, and
         * there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The
         * name of the downloaded file will be: OfflineQueryResult-.zip Example:
         * `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
         *
         * Create a request for the method "queries.getResult".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetResult#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the asynchronous query result to get. Must be of the form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/result`.
         * @return the request
         */
        public GetResult getResult(java.lang.String name) throws java.io.IOException {
          GetResult result = new GetResult(name);
          initialize(result);
          return result;
        }

        public class GetResult extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$");

          /**
           * After the query is completed, use this API to retrieve the results. If the request succeeds,
           * and there is a non-zero result set, the result is downloaded to the client as a zipped JSON
           * file. The name of the downloaded file will be: OfflineQueryResult-.zip Example:
           * `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
           *
           * Create a request for the method "queries.getResult".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetResult#execute()} method to invoke the remote operation. <p>
           * {@link
           * GetResult#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the asynchronous query result to get. Must be of the form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           * @since 1.13
           */
          protected GetResult(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetResult set$Xgafv(java.lang.String $Xgafv) {
            return (GetResult) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetResult setAccessToken(java.lang.String accessToken) {
            return (GetResult) super.setAccessToken(accessToken);
          }

          @Override
          public GetResult setAlt(java.lang.String alt) {
            return (GetResult) super.setAlt(alt);
          }

          @Override
          public GetResult setCallback(java.lang.String callback) {
            return (GetResult) super.setCallback(callback);
          }

          @Override
          public GetResult setFields(java.lang.String fields) {
            return (GetResult) super.setFields(fields);
          }

          @Override
          public GetResult setKey(java.lang.String key) {
            return (GetResult) super.setKey(key);
          }

          @Override
          public GetResult setOauthToken(java.lang.String oauthToken) {
            return (GetResult) super.setOauthToken(oauthToken);
          }

          @Override
          public GetResult setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetResult) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetResult setQuotaUser(java.lang.String quotaUser) {
            return (GetResult) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetResult setUploadType(java.lang.String uploadType) {
            return (GetResult) super.setUploadType(uploadType);
          }

          @Override
          public GetResult setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetResult) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the asynchronous query result to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the asynchronous query result to get. Must be of the form
         `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the asynchronous query result to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           */
          public GetResult setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetResult set(String parameterName, Object value) {
            return (GetResult) super.set(parameterName, value);
          }
        }
        /**
         * After the query is completed, use this API to retrieve the results. If the request succeeds, and
         * there is a non-zero result set, the result is sent to the client as a list of urls to JSON files.
         *
         * Create a request for the method "queries.getResulturl".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetResulturl#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the asynchronous query result to get. Must be of the form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/resulturl`.
         * @return the request
         */
        public GetResulturl getResulturl(java.lang.String name) throws java.io.IOException {
          GetResulturl result = new GetResulturl(name);
          initialize(result);
          return result;
        }

        public class GetResulturl extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/queries/[^/]+/resulturl$");

          /**
           * After the query is completed, use this API to retrieve the results. If the request succeeds,
           * and there is a non-zero result set, the result is sent to the client as a list of urls to JSON
           * files.
           *
           * Create a request for the method "queries.getResulturl".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetResulturl#execute()} method to invoke the remote operation. <p>
           * {@link
           * GetResulturl#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the asynchronous query result to get. Must be of the form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/resulturl`.
           * @since 1.13
           */
          protected GetResulturl(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/resulturl$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetResulturl set$Xgafv(java.lang.String $Xgafv) {
            return (GetResulturl) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetResulturl setAccessToken(java.lang.String accessToken) {
            return (GetResulturl) super.setAccessToken(accessToken);
          }

          @Override
          public GetResulturl setAlt(java.lang.String alt) {
            return (GetResulturl) super.setAlt(alt);
          }

          @Override
          public GetResulturl setCallback(java.lang.String callback) {
            return (GetResulturl) super.setCallback(callback);
          }

          @Override
          public GetResulturl setFields(java.lang.String fields) {
            return (GetResulturl) super.setFields(fields);
          }

          @Override
          public GetResulturl setKey(java.lang.String key) {
            return (GetResulturl) super.setKey(key);
          }

          @Override
          public GetResulturl setOauthToken(java.lang.String oauthToken) {
            return (GetResulturl) super.setOauthToken(oauthToken);
          }

          @Override
          public GetResulturl setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetResulturl) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetResulturl setQuotaUser(java.lang.String quotaUser) {
            return (GetResulturl) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetResulturl setUploadType(java.lang.String uploadType) {
            return (GetResulturl) super.setUploadType(uploadType);
          }

          @Override
          public GetResulturl setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetResulturl) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the asynchronous query result to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/resulturl`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the asynchronous query result to get. Must be of the form
         `organizations/{org}/environments/{env}/queries/{queryId}/resulturl`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the asynchronous query result to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/resulturl`.
           */
          public GetResulturl setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/resulturl$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetResulturl set(String parameterName, Object value) {
            return (GetResulturl) super.set(parameterName, value);
          }
        }
        /**
         * Return a list of Asynchronous Queries
         *
         * Create a request for the method "queries.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAsyncQueriesResponse> {

          private static final String REST_PATH = "v1/{+parent}/queries";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Return a list of Asynchronous Queries
           *
           * Create a request for the method "queries.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAsyncQueriesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter response list by dataset. Example: `api`, `mint` */
          @com.google.api.client.util.Key
          private java.lang.String dataset;

          /** Filter response list by dataset. Example: `api`, `mint`
           */
          public java.lang.String getDataset() {
            return dataset;
          }

          /** Filter response list by dataset. Example: `api`, `mint` */
          public List setDataset(java.lang.String dataset) {
            this.dataset = dataset;
            return this;
          }

          /**
           * Filter response list by returning asynchronous queries that created after this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          @com.google.api.client.util.Key
          private java.lang.String from;

          /** Filter response list by returning asynchronous queries that created after this date time. Time must
         be in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          public java.lang.String getFrom() {
            return from;
          }

          /**
           * Filter response list by returning asynchronous queries that created after this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          public List setFrom(java.lang.String from) {
            this.from = from;
            return this;
          }

          /** Flag to include asynchronous queries that don't have a report denifition. */
          @com.google.api.client.util.Key
          private java.lang.String inclQueriesWithoutReport;

          /** Flag to include asynchronous queries that don't have a report denifition.
           */
          public java.lang.String getInclQueriesWithoutReport() {
            return inclQueriesWithoutReport;
          }

          /** Flag to include asynchronous queries that don't have a report denifition. */
          public List setInclQueriesWithoutReport(java.lang.String inclQueriesWithoutReport) {
            this.inclQueriesWithoutReport = inclQueriesWithoutReport;
            return this;
          }

          /** Filter response list by asynchronous query status. */
          @com.google.api.client.util.Key
          private java.lang.String status;

          /** Filter response list by asynchronous query status.
           */
          public java.lang.String getStatus() {
            return status;
          }

          /** Filter response list by asynchronous query status. */
          public List setStatus(java.lang.String status) {
            this.status = status;
            return this;
          }

          /** Filter response list by user who submitted queries. */
          @com.google.api.client.util.Key
          private java.lang.String submittedBy;

          /** Filter response list by user who submitted queries.
           */
          public java.lang.String getSubmittedBy() {
            return submittedBy;
          }

          /** Filter response list by user who submitted queries. */
          public List setSubmittedBy(java.lang.String submittedBy) {
            this.submittedBy = submittedBy;
            return this;
          }

          /**
           * Filter response list by returning asynchronous queries that created before this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          @com.google.api.client.util.Key
          private java.lang.String to;

          /** Filter response list by returning asynchronous queries that created before this date time. Time
         must be in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          public java.lang.String getTo() {
            return to;
          }

          /**
           * Filter response list by returning asynchronous queries that created before this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          public List setTo(java.lang.String to) {
            this.to = to;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the References collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.References.List request = apigee.references().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public References references() {
        return new References();
      }

      /**
       * The "references" collection of methods.
       */
      public class References {

        /**
         * Creates a Reference in the specified environment.
         *
         * Create a request for the method "references.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent environment name under which the Reference will be created. Must be of the form
         *        `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+parent}/references";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a Reference in the specified environment.
           *
           * Create a request for the method "references.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent environment name under which the Reference will be created. Must be of the form
         *        `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent environment name under which the Reference will be created. Must
           * be of the form `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent environment name under which the Reference will be created. Must be of the
         form `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent environment name under which the Reference will be created. Must
           * be of the form `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Reference from an environment. Returns the deleted Reference resource.
         *
         * Create a request for the method "references.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Reference to delete. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/references/[^/]+$");

          /**
           * Deletes a Reference from an environment. Returns the deleted Reference resource.
           *
           * Create a request for the method "references.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Reference to delete. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Reference to delete. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Reference to delete. Must be of the form
         `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Reference to delete. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a Reference resource.
         *
         * Create a request for the method "references.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Reference to get. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/references/[^/]+$");

          /**
           * Gets a Reference resource.
           *
           * Create a request for the method "references.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Reference to get. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Reference to get. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Reference to get. Must be of the form
         `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Reference to get. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing Reference. Note that this operation has PUT semantics; it will replace the
         * entirety of the existing Reference with the resource in the request body.
         *
         * Create a request for the method "references.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Reference to update. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/references/[^/]+$");

          /**
           * Updates an existing Reference. Note that this operation has PUT semantics; it will replace the
           * entirety of the existing Reference with the resource in the request body.
           *
           * Create a request for the method "references.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Reference to update. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Reference to update. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Reference to update. Must be of the form
         `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Reference to update. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Resourcefiles collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Resourcefiles.List request = apigee.resourcefiles().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Resourcefiles resourcefiles() {
        return new Resourcefiles();
      }

      /**
       * The "resourcefiles" collection of methods.
       */
      public class Resourcefiles {

        /**
         * Creates a resource file. Specify the `Content-Type` as `application/octet-stream` or
         * `multipart/form-data`. For more information about resource files, see [Resource
         * files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
         *
         * Create a request for the method "resourcefiles.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in which to create the resource file in the following format:
         *        `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a resource file. Specify the `Content-Type` as `application/octet-stream` or
           * `multipart/form-data`. For more information about resource files, see [Resource
           * files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
           *
           * Create a request for the method "resourcefiles.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in which to create the resource file in the following format:
         *        `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in which to create the resource file in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in which to create the resource file in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in which to create the resource file in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. Name of the resource file. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource file. Must match the regular expression:
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the resource file. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Create setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. Resource file type. {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          public Create setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a resource file. For more information about resource files, see [Resource
         * files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
         *
         * Create a request for the method "resourcefiles.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.
         * @param type Required. Resource file type. {{ resource_file_type }}
         * @param name Required. ID of the resource file to delete. Must match the regular expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
         * @return the request
         */
        public Delete delete(java.lang.String parent, java.lang.String type, java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(parent, type, name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}/{name}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Deletes a resource file. For more information about resource files, see [Resource
           * files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
           *
           * Create a request for the method "resourcefiles.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.
           * @param type Required. Resource file type. {{ resource_file_type }}
           * @param name Required. ID of the resource file to delete. Must match the regular expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           * @since 1.13
           */
          protected Delete(java.lang.String parent, java.lang.String type, java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          public Delete setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. Resource file type. {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          public Delete setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          /**
           * Required. ID of the resource file to delete. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the resource file to delete. Must match the regular expression:
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the resource file to delete. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Delete setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the contents of a resource file. For more information about resource files, see [Resource
         * files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
         *
         * Create a request for the method "resourcefiles.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.
         * @param type Required. Resource file type. {{ resource_file_type }}
         * @param name Required. ID of the resource file. Must match the regular expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
         * @return the request
         */
        public Get get(java.lang.String parent, java.lang.String type, java.lang.String name) throws java.io.IOException {
          Get result = new Get(parent, type, name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}/{name}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Gets the contents of a resource file. For more information about resource files, see [Resource
           * files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
           *
           * Create a request for the method "resourcefiles.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.
           * @param type Required. Resource file type. {{ resource_file_type }}
           * @param name Required. ID of the resource file. Must match the regular expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           * @since 1.13
           */
          protected Get(java.lang.String parent, java.lang.String type, java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          public Get setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. Resource file type. {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          public Get setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          /**
           * Required. ID of the resource file. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the resource file. Must match the regular expression:
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the resource file. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Get setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all resource files, optionally filtering by type. For more information about resource
         * files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-
         * files).
         *
         * Create a request for the method "resourcefiles.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in which to list resource files in the following format:
         *        `organizations/{org}/environments/{env}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all resource files, optionally filtering by type. For more information about resource
           * files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-
           * files).
           *
           * Create a request for the method "resourcefiles.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in which to list resource files in the following format:
         *        `organizations/{org}/environments/{env}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in which to list resource files in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in which to list resource files in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in which to list resource files in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. Type of resource files to list. {{ resource_file_type }} */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Optional. Type of resource files to list. {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /** Optional. Type of resource files to list. {{ resource_file_type }} */
          public List setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Lists all resource files, optionally filtering by type. For more information about resource
         * files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-
         * files).
         *
         * Create a request for the method "resourcefiles.listEnvironmentResources".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link ListEnvironmentResources#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Required. Name of the environment in which to list resource files in the following format:
         *        `organizations/{org}/environments/{env}`.
         * @param type Optional. Type of resource files to list. {{ resource_file_type }}
         * @return the request
         */
        public ListEnvironmentResources listEnvironmentResources(java.lang.String parent, java.lang.String type) throws java.io.IOException {
          ListEnvironmentResources result = new ListEnvironmentResources(parent, type);
          initialize(result);
          return result;
        }

        public class ListEnvironmentResources extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all resource files, optionally filtering by type. For more information about resource
           * files, see [Resource files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-
           * files).
           *
           * Create a request for the method "resourcefiles.listEnvironmentResources".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link ListEnvironmentResources#execute()} method to invoke the remote
           * operation. <p> {@link ListEnvironmentResources#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in which to list resource files in the following format:
         *        `organizations/{org}/environments/{env}`.
           * @param type Optional. Type of resource files to list. {{ resource_file_type }}
           * @since 1.13
           */
          protected ListEnvironmentResources(java.lang.String parent, java.lang.String type) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ListEnvironmentResources set$Xgafv(java.lang.String $Xgafv) {
            return (ListEnvironmentResources) super.set$Xgafv($Xgafv);
          }

          @Override
          public ListEnvironmentResources setAccessToken(java.lang.String accessToken) {
            return (ListEnvironmentResources) super.setAccessToken(accessToken);
          }

          @Override
          public ListEnvironmentResources setAlt(java.lang.String alt) {
            return (ListEnvironmentResources) super.setAlt(alt);
          }

          @Override
          public ListEnvironmentResources setCallback(java.lang.String callback) {
            return (ListEnvironmentResources) super.setCallback(callback);
          }

          @Override
          public ListEnvironmentResources setFields(java.lang.String fields) {
            return (ListEnvironmentResources) super.setFields(fields);
          }

          @Override
          public ListEnvironmentResources setKey(java.lang.String key) {
            return (ListEnvironmentResources) super.setKey(key);
          }

          @Override
          public ListEnvironmentResources setOauthToken(java.lang.String oauthToken) {
            return (ListEnvironmentResources) super.setOauthToken(oauthToken);
          }

          @Override
          public ListEnvironmentResources setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ListEnvironmentResources) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ListEnvironmentResources setQuotaUser(java.lang.String quotaUser) {
            return (ListEnvironmentResources) super.setQuotaUser(quotaUser);
          }

          @Override
          public ListEnvironmentResources setUploadType(java.lang.String uploadType) {
            return (ListEnvironmentResources) super.setUploadType(uploadType);
          }

          @Override
          public ListEnvironmentResources setUploadProtocol(java.lang.String uploadProtocol) {
            return (ListEnvironmentResources) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in which to list resource files in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in which to list resource files in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in which to list resource files in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          public ListEnvironmentResources setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. Type of resource files to list. {{ resource_file_type }} */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Optional. Type of resource files to list. {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /** Optional. Type of resource files to list. {{ resource_file_type }} */
          public ListEnvironmentResources setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          @Override
          public ListEnvironmentResources set(String parameterName, Object value) {
            return (ListEnvironmentResources) super.set(parameterName, value);
          }
        }
        /**
         * Updates a resource file. Specify the `Content-Type` as `application/octet-stream` or
         * `multipart/form-data`. For more information about resource files, see [Resource
         * files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
         *
         * Create a request for the method "resourcefiles.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.
         * @param type Required. Resource file type. {{ resource_file_type }}
         * @param name Required. ID of the resource file to update. Must match the regular expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public Update update(java.lang.String parent, java.lang.String type, java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          Update result = new Update(parent, type, name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}/{name}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Updates a resource file. Specify the `Content-Type` as `application/octet-stream` or
           * `multipart/form-data`. For more information about resource files, see [Resource
           * files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
           *
           * Create a request for the method "resourcefiles.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.
           * @param type Required. Resource file type. {{ resource_file_type }}
           * @param name Required. ID of the resource file to update. Must match the regular expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected Update(java.lang.String parent, java.lang.String type, java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          public Update setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. Resource file type. {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          public Update setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          /**
           * Required. ID of the resource file to update. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the resource file to update. Must match the regular expression:
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the resource file to update. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Update setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the SecurityActions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.SecurityActions.List request = apigee.securityActions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public SecurityActions securityActions() {
        return new SecurityActions();
      }

      /**
       * The "securityActions" collection of methods.
       */
      public class SecurityActions {

        /**
         * CreateSecurityAction creates a SecurityAction.
         *
         * Create a request for the method "securityActions.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The organization and environment that this SecurityAction applies to. Format:
         *        organizations/{org}/environments/{env}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction> {

          private static final String REST_PATH = "v1/{+parent}/securityActions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * CreateSecurityAction creates a SecurityAction.
           *
           * Create a request for the method "securityActions.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The organization and environment that this SecurityAction applies to. Format:
         *        organizations/{org}/environments/{env}
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The organization and environment that this SecurityAction applies to. Format:
           * organizations/{org}/environments/{env}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The organization and environment that this SecurityAction applies to. Format:
         organizations/{org}/environments/{env}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The organization and environment that this SecurityAction applies to. Format:
           * organizations/{org}/environments/{env}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. The ID to use for the SecurityAction, which will become the final component
           * of the action's resource name. This value should be 0-61 characters, and valid format
           * is (^[a-z]([a-z0-9-]{​0,61}[a-z0-9])?$).
           */
          @com.google.api.client.util.Key
          private java.lang.String securityActionId;

          /** Required. The ID to use for the SecurityAction, which will become the final component of the
         action's resource name. This value should be 0-61 characters, and valid format is
         (^[a-z]([a-z0-9-]{​0,61}[a-z0-9])?$).
           */
          public java.lang.String getSecurityActionId() {
            return securityActionId;
          }

          /**
           * Required. The ID to use for the SecurityAction, which will become the final component
           * of the action's resource name. This value should be 0-61 characters, and valid format
           * is (^[a-z]([a-z0-9-]{​0,61}[a-z0-9])?$).
           */
          public Create setSecurityActionId(java.lang.String securityActionId) {
            this.securityActionId = securityActionId;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Disable a SecurityAction. The `state` of the SecurityAction after disabling is `DISABLED`.
         * `DisableSecurityAction` can be called on SecurityActions in the state `ENABLED`; SecurityActions
         * in a different state (including `DISABLED`) return an error.
         *
         * Create a request for the method "securityActions.disable".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Disable#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the SecurityAction to disable. Format:
         *        organizations/{org}/environments/{env}/securityActions/{security_action}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DisableSecurityActionRequest}
         * @return the request
         */
        public Disable disable(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DisableSecurityActionRequest content) throws java.io.IOException {
          Disable result = new Disable(name, content);
          initialize(result);
          return result;
        }

        public class Disable extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction> {

          private static final String REST_PATH = "v1/{+name}:disable";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/securityActions/[^/]+$");

          /**
           * Disable a SecurityAction. The `state` of the SecurityAction after disabling is `DISABLED`.
           * `DisableSecurityAction` can be called on SecurityActions in the state `ENABLED`;
           * SecurityActions in a different state (including `DISABLED`) return an error.
           *
           * Create a request for the method "securityActions.disable".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Disable#execute()} method to invoke the remote operation. <p>
           * {@link
           * Disable#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the SecurityAction to disable. Format:
         *        organizations/{org}/environments/{env}/securityActions/{security_action}
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DisableSecurityActionRequest}
           * @since 1.13
           */
          protected Disable(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DisableSecurityActionRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityActions/[^/]+$");
            }
          }

          @Override
          public Disable set$Xgafv(java.lang.String $Xgafv) {
            return (Disable) super.set$Xgafv($Xgafv);
          }

          @Override
          public Disable setAccessToken(java.lang.String accessToken) {
            return (Disable) super.setAccessToken(accessToken);
          }

          @Override
          public Disable setAlt(java.lang.String alt) {
            return (Disable) super.setAlt(alt);
          }

          @Override
          public Disable setCallback(java.lang.String callback) {
            return (Disable) super.setCallback(callback);
          }

          @Override
          public Disable setFields(java.lang.String fields) {
            return (Disable) super.setFields(fields);
          }

          @Override
          public Disable setKey(java.lang.String key) {
            return (Disable) super.setKey(key);
          }

          @Override
          public Disable setOauthToken(java.lang.String oauthToken) {
            return (Disable) super.setOauthToken(oauthToken);
          }

          @Override
          public Disable setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Disable) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Disable setQuotaUser(java.lang.String quotaUser) {
            return (Disable) super.setQuotaUser(quotaUser);
          }

          @Override
          public Disable setUploadType(java.lang.String uploadType) {
            return (Disable) super.setUploadType(uploadType);
          }

          @Override
          public Disable setUploadProtocol(java.lang.String uploadProtocol) {
            return (Disable) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the SecurityAction to disable. Format:
           * organizations/{org}/environments/{env}/securityActions/{security_action}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the SecurityAction to disable. Format:
         organizations/{org}/environments/{env}/securityActions/{security_action}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the SecurityAction to disable. Format:
           * organizations/{org}/environments/{env}/securityActions/{security_action}
           */
          public Disable setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityActions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Disable set(String parameterName, Object value) {
            return (Disable) super.set(parameterName, value);
          }
        }
        /**
         * Enable a SecurityAction. The `state` of the SecurityAction after enabling is `ENABLED`.
         * `EnableSecurityAction` can be called on SecurityActions in the state `DISABLED`; SecurityActions
         * in a different state (including `ENABLED) return an error.
         *
         * Create a request for the method "securityActions.enable".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Enable#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the SecurityAction to enable. Format:
         *        organizations/{org}/environments/{env}/securityActions/{security_action}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnableSecurityActionRequest}
         * @return the request
         */
        public Enable enable(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnableSecurityActionRequest content) throws java.io.IOException {
          Enable result = new Enable(name, content);
          initialize(result);
          return result;
        }

        public class Enable extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction> {

          private static final String REST_PATH = "v1/{+name}:enable";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/securityActions/[^/]+$");

          /**
           * Enable a SecurityAction. The `state` of the SecurityAction after enabling is `ENABLED`.
           * `EnableSecurityAction` can be called on SecurityActions in the state `DISABLED`;
           * SecurityActions in a different state (including `ENABLED) return an error.
           *
           * Create a request for the method "securityActions.enable".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Enable#execute()} method to invoke the remote operation. <p> {@link
           * Enable#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the SecurityAction to enable. Format:
         *        organizations/{org}/environments/{env}/securityActions/{security_action}
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnableSecurityActionRequest}
           * @since 1.13
           */
          protected Enable(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnableSecurityActionRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityActions/[^/]+$");
            }
          }

          @Override
          public Enable set$Xgafv(java.lang.String $Xgafv) {
            return (Enable) super.set$Xgafv($Xgafv);
          }

          @Override
          public Enable setAccessToken(java.lang.String accessToken) {
            return (Enable) super.setAccessToken(accessToken);
          }

          @Override
          public Enable setAlt(java.lang.String alt) {
            return (Enable) super.setAlt(alt);
          }

          @Override
          public Enable setCallback(java.lang.String callback) {
            return (Enable) super.setCallback(callback);
          }

          @Override
          public Enable setFields(java.lang.String fields) {
            return (Enable) super.setFields(fields);
          }

          @Override
          public Enable setKey(java.lang.String key) {
            return (Enable) super.setKey(key);
          }

          @Override
          public Enable setOauthToken(java.lang.String oauthToken) {
            return (Enable) super.setOauthToken(oauthToken);
          }

          @Override
          public Enable setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Enable) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Enable setQuotaUser(java.lang.String quotaUser) {
            return (Enable) super.setQuotaUser(quotaUser);
          }

          @Override
          public Enable setUploadType(java.lang.String uploadType) {
            return (Enable) super.setUploadType(uploadType);
          }

          @Override
          public Enable setUploadProtocol(java.lang.String uploadProtocol) {
            return (Enable) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the SecurityAction to enable. Format:
           * organizations/{org}/environments/{env}/securityActions/{security_action}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the SecurityAction to enable. Format:
         organizations/{org}/environments/{env}/securityActions/{security_action}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the SecurityAction to enable. Format:
           * organizations/{org}/environments/{env}/securityActions/{security_action}
           */
          public Enable setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityActions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Enable set(String parameterName, Object value) {
            return (Enable) super.set(parameterName, value);
          }
        }
        /**
         * Get a SecurityAction by name.
         *
         * Create a request for the method "securityActions.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The fully qualified name of the SecurityAction to retrieve. Format:
         *        organizations/{org}/environments/{env}/securityActions/{security_action}
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/securityActions/[^/]+$");

          /**
           * Get a SecurityAction by name.
           *
           * Create a request for the method "securityActions.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The fully qualified name of the SecurityAction to retrieve. Format:
         *        organizations/{org}/environments/{env}/securityActions/{security_action}
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityAction.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityActions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The fully qualified name of the SecurityAction to retrieve. Format:
           * organizations/{org}/environments/{env}/securityActions/{security_action}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The fully qualified name of the SecurityAction to retrieve. Format:
         organizations/{org}/environments/{env}/securityActions/{security_action}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The fully qualified name of the SecurityAction to retrieve. Format:
           * organizations/{org}/environments/{env}/securityActions/{security_action}
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityActions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns a list of SecurityActions. This returns both enabled and disabled actions.
         *
         * Create a request for the method "securityActions.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent, which owns this collection of SecurityActions. Format:
         *        organizations/{org}/environments/{env}
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityActionsResponse> {

          private static final String REST_PATH = "v1/{+parent}/securityActions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Returns a list of SecurityActions. This returns both enabled and disabled actions.
           *
           * Create a request for the method "securityActions.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent, which owns this collection of SecurityActions. Format:
         *        organizations/{org}/environments/{env}
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityActionsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent, which owns this collection of SecurityActions. Format:
           * organizations/{org}/environments/{env}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent, which owns this collection of SecurityActions. Format:
         organizations/{org}/environments/{env}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent, which owns this collection of SecurityActions. Format:
           * organizations/{org}/environments/{env}
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The filter expression to filter List results. https://google.aip.dev/160. Allows for
           * filtering over: state and api_proxies. E.g.: state = ACTIVE AND apiProxies:foo.
           * Filtering by action is not supported https://github.com/aip-
           * dev/google.aip.dev/issues/624
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The filter expression to filter List results. https://google.aip.dev/160. Allows for filtering
         over: state and api_proxies. E.g.: state = ACTIVE AND apiProxies:foo. Filtering by action is not
         supported https://github.com/aip-dev/google.aip.dev/issues/624
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The filter expression to filter List results. https://google.aip.dev/160. Allows for
           * filtering over: state and api_proxies. E.g.: state = ACTIVE AND apiProxies:foo.
           * Filtering by action is not supported https://github.com/aip-
           * dev/google.aip.dev/issues/624
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * The maximum number of SecurityActions to return. If unspecified, at most 50
           * SecurityActions will be returned. The maximum value is 1000; values above 1000 will be
           * coerced to 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of SecurityActions to return. If unspecified, at most 50 SecurityActions will be
         returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * The maximum number of SecurityActions to return. If unspecified, at most 50
           * SecurityActions will be returned. The maximum value is 1000; values above 1000 will be
           * coerced to 1000.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * A page token, received from a previous `ListSecurityActions` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListSecurityActions` must match the call that provided the page token.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** A page token, received from a previous `ListSecurityActions` call. Provide this to retrieve the
         subsequent page. When paginating, all other parameters provided to `ListSecurityActions` must match
         the call that provided the page token.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * A page token, received from a previous `ListSecurityActions` call. Provide this to
           * retrieve the subsequent page. When paginating, all other parameters provided to
           * `ListSecurityActions` must match the call that provided the page token.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the SecurityIncidents collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.SecurityIncidents.List request = apigee.securityIncidents().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public SecurityIncidents securityIncidents() {
        return new SecurityIncidents();
      }

      /**
       * The "securityIncidents" collection of methods.
       */
      public class SecurityIncidents {

        /**
         * BatchUpdateSecurityIncident updates multiple existing security incidents.
         *
         * Create a request for the method "securityIncidents.batchUpdate".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation.
         *
         * @param parent Optional. The parent resource shared by all security incidents being updated. If this is set, the
         *        parent field in the UpdateSecurityIncidentRequest messages must either be empty or match
         *        this field.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest}
         * @return the request
         */
        public BatchUpdate batchUpdate(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest content) throws java.io.IOException {
          BatchUpdate result = new BatchUpdate(parent, content);
          initialize(result);
          return result;
        }

        public class BatchUpdate extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/securityIncidents:batchUpdate";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * BatchUpdateSecurityIncident updates multiple existing security incidents.
           *
           * Create a request for the method "securityIncidents.batchUpdate".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link BatchUpdate#execute()} method to invoke the remote operation. <p>
           * {@link
           * BatchUpdate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Optional. The parent resource shared by all security incidents being updated. If this is set, the
         *        parent field in the UpdateSecurityIncidentRequest messages must either be empty or match
         *        this field.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest}
           * @since 1.13
           */
          protected BatchUpdate(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchUpdateSecurityIncidentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public BatchUpdate set$Xgafv(java.lang.String $Xgafv) {
            return (BatchUpdate) super.set$Xgafv($Xgafv);
          }

          @Override
          public BatchUpdate setAccessToken(java.lang.String accessToken) {
            return (BatchUpdate) super.setAccessToken(accessToken);
          }

          @Override
          public BatchUpdate setAlt(java.lang.String alt) {
            return (BatchUpdate) super.setAlt(alt);
          }

          @Override
          public BatchUpdate setCallback(java.lang.String callback) {
            return (BatchUpdate) super.setCallback(callback);
          }

          @Override
          public BatchUpdate setFields(java.lang.String fields) {
            return (BatchUpdate) super.setFields(fields);
          }

          @Override
          public BatchUpdate setKey(java.lang.String key) {
            return (BatchUpdate) super.setKey(key);
          }

          @Override
          public BatchUpdate setOauthToken(java.lang.String oauthToken) {
            return (BatchUpdate) super.setOauthToken(oauthToken);
          }

          @Override
          public BatchUpdate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (BatchUpdate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public BatchUpdate setQuotaUser(java.lang.String quotaUser) {
            return (BatchUpdate) super.setQuotaUser(quotaUser);
          }

          @Override
          public BatchUpdate setUploadType(java.lang.String uploadType) {
            return (BatchUpdate) super.setUploadType(uploadType);
          }

          @Override
          public BatchUpdate setUploadProtocol(java.lang.String uploadProtocol) {
            return (BatchUpdate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Optional. The parent resource shared by all security incidents being updated. If this
           * is set, the parent field in the UpdateSecurityIncidentRequest messages must either be
           * empty or match this field.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Optional. The parent resource shared by all security incidents being updated. If this is set, the
         parent field in the UpdateSecurityIncidentRequest messages must either be empty or match this
         field.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Optional. The parent resource shared by all security incidents being updated. If this
           * is set, the parent field in the UpdateSecurityIncidentRequest messages must either be
           * empty or match this field.
           */
          public BatchUpdate setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public BatchUpdate set(String parameterName, Object value) {
            return (BatchUpdate) super.set(parameterName, value);
          }
        }
        /**
         * GetSecurityIncident gets the specified security incident. Returns NOT_FOUND if security incident
         * is not present for the specified organization and environment.
         *
         * Create a request for the method "securityIncidents.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Security incident in the following format:
         *        `organizations/{org}/environments/{environment}/securityIncidents/{incident}'. Example:
         *        organizations/testOrg/environments/testEnv/securityIncidents/1234-4567-890-111
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityIncident> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/securityIncidents/[^/]+$");

          /**
           * GetSecurityIncident gets the specified security incident. Returns NOT_FOUND if security
           * incident is not present for the specified organization and environment.
           *
           * Create a request for the method "securityIncidents.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Security incident in the following format:
         *        `organizations/{org}/environments/{environment}/securityIncidents/{incident}'. Example:
         *        organizations/testOrg/environments/testEnv/securityIncidents/1234-4567-890-111
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityIncident.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityIncidents/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Security incident in the following format:
           * `organizations/{org}/environments/{environment}/securityIncidents/{incident}'. Example:
           * organizations/testOrg/environments/testEnv/securityIncidents/1234-4567-890-111
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Security incident in the following format:
         `organizations/{org}/environments/{environment}/securityIncidents/{incident}'. Example:
         organizations/testOrg/environments/testEnv/securityIncidents/1234-4567-890-111
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Security incident in the following format:
           * `organizations/{org}/environments/{environment}/securityIncidents/{incident}'. Example:
           * organizations/testOrg/environments/testEnv/securityIncidents/1234-4567-890-111
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityIncidents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * ListSecurityIncidents lists all the security incident associated with the environment.
         *
         * Create a request for the method "securityIncidents.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. For a specific organization, list of all the security incidents. Format:
         *        `organizations/{org}/environments/{environment}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityIncidentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/securityIncidents";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * ListSecurityIncidents lists all the security incident associated with the environment.
           *
           * Create a request for the method "securityIncidents.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. For a specific organization, list of all the security incidents. Format:
         *        `organizations/{org}/environments/{environment}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityIncidentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. For a specific organization, list of all the security incidents. Format:
           * `organizations/{org}/environments/{environment}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. For a specific organization, list of all the security incidents. Format:
         `organizations/{org}/environments/{environment}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. For a specific organization, list of all the security incidents. Format:
           * `organizations/{org}/environments/{environment}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * The filter expression to be used to get the list of security incidents, where filtering
           * can be done on API Proxies. Example: filter = "api_proxy = /", "first_detected_time >",
           * "last_detected_time <"
           */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** The filter expression to be used to get the list of security incidents, where filtering can be done
         on API Proxies. Example: filter = "api_proxy = /", "first_detected_time >", "last_detected_time <"
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /**
           * The filter expression to be used to get the list of security incidents, where filtering
           * can be done on API Proxies. Example: filter = "api_proxy = /", "first_detected_time >",
           * "last_detected_time <"
           */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Optional. The maximum number of incidents to return. The service may return fewer than
           * this value. If unspecified, at most 50 incidents will be returned.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of incidents to return. The service may return fewer than this value.
         If unspecified, at most 50 incidents will be returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of incidents to return. The service may return fewer than
           * this value. If unspecified, at most 50 incidents will be returned.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token, received from a previous `ListSecurityIncident` call. Provide
           * this to retrieve the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token, received from a previous `ListSecurityIncident` call. Provide this to
         retrieve the subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token, received from a previous `ListSecurityIncident` call. Provide
           * this to retrieve the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * UpdateSecurityIncidents updates an existing security incident.
         *
         * Create a request for the method "securityIncidents.patch".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Immutable. Name of the security incident resource. Format:
         *        organizations/{org}/environments/{environment}/securityIncidents/{incident} Example:
         *        organizations/apigee-org/environments/dev/securityIncidents/1234-5678-9101-1111
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityIncident}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityIncident content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityIncident> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/securityIncidents/[^/]+$");

          /**
           * UpdateSecurityIncidents updates an existing security incident.
           *
           * Create a request for the method "securityIncidents.patch".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Immutable. Name of the security incident resource. Format:
         *        organizations/{org}/environments/{environment}/securityIncidents/{incident} Example:
         *        organizations/apigee-org/environments/dev/securityIncidents/1234-5678-9101-1111
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityIncident}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityIncident content) {
            super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityIncident.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityIncidents/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Immutable. Name of the security incident resource. Format:
           * organizations/{org}/environments/{environment}/securityIncidents/{incident} Example:
           * organizations/apigee-org/environments/dev/securityIncidents/1234-5678-9101-1111
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Immutable. Name of the security incident resource. Format:
         organizations/{org}/environments/{environment}/securityIncidents/{incident} Example:
         organizations/apigee-org/environments/dev/securityIncidents/1234-5678-9101-1111
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Immutable. Name of the security incident resource. Format:
           * organizations/{org}/environments/{environment}/securityIncidents/{incident} Example:
           * organizations/apigee-org/environments/dev/securityIncidents/1234-5678-9101-1111
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityIncidents/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Required. The list of fields to update. Allowed fields are:
           * LINT.IfChange(allowed_update_fields_comment) - observability LINT.ThenChange()
           */
          @com.google.api.client.util.Key
          private String updateMask;

          /** Required. The list of fields to update. Allowed fields are:
         LINT.IfChange(allowed_update_fields_comment) - observability LINT.ThenChange()
           */
          public String getUpdateMask() {
            return updateMask;
          }

          /**
           * Required. The list of fields to update. Allowed fields are:
           * LINT.IfChange(allowed_update_fields_comment) - observability LINT.ThenChange()
           */
          public Patch setUpdateMask(String updateMask) {
            this.updateMask = updateMask;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the SecurityReports collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.SecurityReports.List request = apigee.securityReports().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public SecurityReports securityReports() {
        return new SecurityReports();
      }

      /**
       * The "securityReports" collection of methods.
       */
      public class SecurityReports {

        /**
         * Submit a report request to be processed in the background. If the submission succeeds, the API
         * returns a 200 status and an ID that refer to the report request. In addition to the HTTP status
         * 200, the `state` of "enqueued" means that the request succeeded.
         *
         * Create a request for the method "securityReports.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportQuery}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportQuery content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReport> {

          private static final String REST_PATH = "v1/{+parent}/securityReports";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Submit a report request to be processed in the background. If the submission succeeds, the API
           * returns a 200 status and an ID that refer to the report request. In addition to the HTTP status
           * 200, the `state` of "enqueued" means that the request succeeded.
           *
           * Create a request for the method "securityReports.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportQuery}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportQuery content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReport.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Get security report status If the query is still in progress, the `state` is set to "running"
         * After the query has completed successfully, `state` is set to "completed"
         *
         * Create a request for the method "securityReports.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the security report to get. Must be of the form
         *        `organizations/{org}/environments/{env}/securityReports/{reportId}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReport> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/securityReports/[^/]+$");

          /**
           * Get security report status If the query is still in progress, the `state` is set to "running"
           * After the query has completed successfully, `state` is set to "completed"
           *
           * Create a request for the method "securityReports.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the security report to get. Must be of the form
         *        `organizations/{org}/environments/{env}/securityReports/{reportId}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReport.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityReports/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the security report to get. Must be of the form
           * `organizations/{org}/environments/{env}/securityReports/{reportId}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the security report to get. Must be of the form
         `organizations/{org}/environments/{env}/securityReports/{reportId}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the security report to get. Must be of the form
           * `organizations/{org}/environments/{env}/securityReports/{reportId}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityReports/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * After the query is completed, use this API to retrieve the results as file. If the request
         * succeeds, and there is a non-zero result set, the result is downloaded to the client as a zipped
         * JSON file. The name of the downloaded file will be: OfflineQueryResult-.zip Example:
         * `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
         *
         * Create a request for the method "securityReports.getResult".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetResult#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the security report result to get. Must be of the form
         *        `organizations/{org}/environments/{env}/securityReports/{reportId}/result`.
         * @return the request
         */
        public GetResult getResult(java.lang.String name) throws java.io.IOException {
          GetResult result = new GetResult(name);
          initialize(result);
          return result;
        }

        public class GetResult extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/securityReports/[^/]+/result$");

          /**
           * After the query is completed, use this API to retrieve the results as file. If the request
           * succeeds, and there is a non-zero result set, the result is downloaded to the client as a
           * zipped JSON file. The name of the downloaded file will be: OfflineQueryResult-.zip Example:
           * `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
           *
           * Create a request for the method "securityReports.getResult".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetResult#execute()} method to invoke the remote operation. <p>
           * {@link
           * GetResult#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the security report result to get. Must be of the form
         *        `organizations/{org}/environments/{env}/securityReports/{reportId}/result`.
           * @since 1.13
           */
          protected GetResult(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityReports/[^/]+/result$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetResult set$Xgafv(java.lang.String $Xgafv) {
            return (GetResult) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetResult setAccessToken(java.lang.String accessToken) {
            return (GetResult) super.setAccessToken(accessToken);
          }

          @Override
          public GetResult setAlt(java.lang.String alt) {
            return (GetResult) super.setAlt(alt);
          }

          @Override
          public GetResult setCallback(java.lang.String callback) {
            return (GetResult) super.setCallback(callback);
          }

          @Override
          public GetResult setFields(java.lang.String fields) {
            return (GetResult) super.setFields(fields);
          }

          @Override
          public GetResult setKey(java.lang.String key) {
            return (GetResult) super.setKey(key);
          }

          @Override
          public GetResult setOauthToken(java.lang.String oauthToken) {
            return (GetResult) super.setOauthToken(oauthToken);
          }

          @Override
          public GetResult setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetResult) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetResult setQuotaUser(java.lang.String quotaUser) {
            return (GetResult) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetResult setUploadType(java.lang.String uploadType) {
            return (GetResult) super.setUploadType(uploadType);
          }

          @Override
          public GetResult setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetResult) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the security report result to get. Must be of the form
           * `organizations/{org}/environments/{env}/securityReports/{reportId}/result`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the security report result to get. Must be of the form
         `organizations/{org}/environments/{env}/securityReports/{reportId}/result`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the security report result to get. Must be of the form
           * `organizations/{org}/environments/{env}/securityReports/{reportId}/result`.
           */
          public GetResult setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityReports/[^/]+/result$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetResult set(String parameterName, Object value) {
            return (GetResult) super.set(parameterName, value);
          }
        }
        /**
         * After the query is completed, use this API to view the query result when result size is small.
         *
         * Create a request for the method "securityReports.getResultView".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetResultView#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the security report result view to get. Must be of the form
         *        `organizations/{org}/environments/{env}/securityReports/{reportId}/resultView`.
         * @return the request
         */
        public GetResultView getResultView(java.lang.String name) throws java.io.IOException {
          GetResultView result = new GetResultView(name);
          initialize(result);
          return result;
        }

        public class GetResultView extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportResultView> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/securityReports/[^/]+/resultView$");

          /**
           * After the query is completed, use this API to view the query result when result size is small.
           *
           * Create a request for the method "securityReports.getResultView".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetResultView#execute()} method to invoke the remote operation. <p>
           * {@link GetResultView#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
           * equest)} must be called to initialize this instance immediately after invoking the constructor.
           * </p>
           *
           * @param name Required. Name of the security report result view to get. Must be of the form
         *        `organizations/{org}/environments/{env}/securityReports/{reportId}/resultView`.
           * @since 1.13
           */
          protected GetResultView(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportResultView.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityReports/[^/]+/resultView$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetResultView set$Xgafv(java.lang.String $Xgafv) {
            return (GetResultView) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetResultView setAccessToken(java.lang.String accessToken) {
            return (GetResultView) super.setAccessToken(accessToken);
          }

          @Override
          public GetResultView setAlt(java.lang.String alt) {
            return (GetResultView) super.setAlt(alt);
          }

          @Override
          public GetResultView setCallback(java.lang.String callback) {
            return (GetResultView) super.setCallback(callback);
          }

          @Override
          public GetResultView setFields(java.lang.String fields) {
            return (GetResultView) super.setFields(fields);
          }

          @Override
          public GetResultView setKey(java.lang.String key) {
            return (GetResultView) super.setKey(key);
          }

          @Override
          public GetResultView setOauthToken(java.lang.String oauthToken) {
            return (GetResultView) super.setOauthToken(oauthToken);
          }

          @Override
          public GetResultView setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetResultView) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetResultView setQuotaUser(java.lang.String quotaUser) {
            return (GetResultView) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetResultView setUploadType(java.lang.String uploadType) {
            return (GetResultView) super.setUploadType(uploadType);
          }

          @Override
          public GetResultView setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetResultView) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the security report result view to get. Must be of the form
           * `organizations/{org}/environments/{env}/securityReports/{reportId}/resultView`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the security report result view to get. Must be of the form
         `organizations/{org}/environments/{env}/securityReports/{reportId}/resultView`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the security report result view to get. Must be of the form
           * `organizations/{org}/environments/{env}/securityReports/{reportId}/resultView`.
           */
          public GetResultView setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/securityReports/[^/]+/resultView$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetResultView set(String parameterName, Object value) {
            return (GetResultView) super.set(parameterName, value);
          }
        }
        /**
         * Return a list of Security Reports
         *
         * Create a request for the method "securityReports.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityReportsResponse> {

          private static final String REST_PATH = "v1/{+parent}/securityReports";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Return a list of Security Reports
           *
           * Create a request for the method "securityReports.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityReportsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent resource name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent resource name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Filter response list by dataset. Example: `api`, `mint` */
          @com.google.api.client.util.Key
          private java.lang.String dataset;

          /** Filter response list by dataset. Example: `api`, `mint`
           */
          public java.lang.String getDataset() {
            return dataset;
          }

          /** Filter response list by dataset. Example: `api`, `mint` */
          public List setDataset(java.lang.String dataset) {
            this.dataset = dataset;
            return this;
          }

          /**
           * Filter response list by returning security reports that created after this date time.
           * Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          @com.google.api.client.util.Key
          private java.lang.String from;

          /** Filter response list by returning security reports that created after this date time. Time must be
         in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          public java.lang.String getFrom() {
            return from;
          }

          /**
           * Filter response list by returning security reports that created after this date time.
           * Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          public List setFrom(java.lang.String from) {
            this.from = from;
            return this;
          }

          /** The maximum number of security report to return in the list response. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** The maximum number of security report to return in the list response.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** The maximum number of security report to return in the list response. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /** Token returned from the previous list response to fetch the next page. */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Token returned from the previous list response to fetch the next page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /** Token returned from the previous list response to fetch the next page. */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          /** Filter response list by security reports status. */
          @com.google.api.client.util.Key
          private java.lang.String status;

          /** Filter response list by security reports status.
           */
          public java.lang.String getStatus() {
            return status;
          }

          /** Filter response list by security reports status. */
          public List setStatus(java.lang.String status) {
            this.status = status;
            return this;
          }

          /** Filter response list by user who submitted queries. */
          @com.google.api.client.util.Key
          private java.lang.String submittedBy;

          /** Filter response list by user who submitted queries.
           */
          public java.lang.String getSubmittedBy() {
            return submittedBy;
          }

          /** Filter response list by user who submitted queries. */
          public List setSubmittedBy(java.lang.String submittedBy) {
            this.submittedBy = submittedBy;
            return this;
          }

          /**
           * Filter response list by returning security reports that created before this date time.
           * Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          @com.google.api.client.util.Key
          private java.lang.String to;

          /** Filter response list by returning security reports that created before this date time. Time must be
         in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          public java.lang.String getTo() {
            return to;
          }

          /**
           * Filter response list by returning security reports that created before this date time.
           * Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          public List setTo(java.lang.String to) {
            this.to = to;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the SecurityStats collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.SecurityStats.List request = apigee.securityStats().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public SecurityStats securityStats() {
        return new SecurityStats();
      }

      /**
       * The "securityStats" collection of methods.
       */
      public class SecurityStats {

        /**
         * Retrieve security statistics as tabular rows.
         *
         * Create a request for the method "securityStats.queryTabularStats".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link QueryTabularStats#execute()} method to invoke the remote operation.
         *
         * @param orgenv Required. Should be of the form organizations//environments/.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTabularStatsRequest}
         * @return the request
         */
        public QueryTabularStats queryTabularStats(java.lang.String orgenv, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTabularStatsRequest content) throws java.io.IOException {
          QueryTabularStats result = new QueryTabularStats(orgenv, content);
          initialize(result);
          return result;
        }

        public class QueryTabularStats extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTabularStatsResponse> {

          private static final String REST_PATH = "v1/{+orgenv}/securityStats:queryTabularStats";

          private final java.util.regex.Pattern ORGENV_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Retrieve security statistics as tabular rows.
           *
           * Create a request for the method "securityStats.queryTabularStats".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link QueryTabularStats#execute()} method to invoke the remote operation.
           * <p> {@link QueryTabularStats#initialize(com.google.api.client.googleapis.services.AbstractGoogl
           * eClientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param orgenv Required. Should be of the form organizations//environments/.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTabularStatsRequest}
           * @since 1.13
           */
          protected QueryTabularStats(java.lang.String orgenv, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTabularStatsRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTabularStatsResponse.class);
            this.orgenv = com.google.api.client.util.Preconditions.checkNotNull(orgenv, "Required parameter orgenv must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ORGENV_PATTERN.matcher(orgenv).matches(),
                  "Parameter orgenv must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public QueryTabularStats set$Xgafv(java.lang.String $Xgafv) {
            return (QueryTabularStats) super.set$Xgafv($Xgafv);
          }

          @Override
          public QueryTabularStats setAccessToken(java.lang.String accessToken) {
            return (QueryTabularStats) super.setAccessToken(accessToken);
          }

          @Override
          public QueryTabularStats setAlt(java.lang.String alt) {
            return (QueryTabularStats) super.setAlt(alt);
          }

          @Override
          public QueryTabularStats setCallback(java.lang.String callback) {
            return (QueryTabularStats) super.setCallback(callback);
          }

          @Override
          public QueryTabularStats setFields(java.lang.String fields) {
            return (QueryTabularStats) super.setFields(fields);
          }

          @Override
          public QueryTabularStats setKey(java.lang.String key) {
            return (QueryTabularStats) super.setKey(key);
          }

          @Override
          public QueryTabularStats setOauthToken(java.lang.String oauthToken) {
            return (QueryTabularStats) super.setOauthToken(oauthToken);
          }

          @Override
          public QueryTabularStats setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (QueryTabularStats) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public QueryTabularStats setQuotaUser(java.lang.String quotaUser) {
            return (QueryTabularStats) super.setQuotaUser(quotaUser);
          }

          @Override
          public QueryTabularStats setUploadType(java.lang.String uploadType) {
            return (QueryTabularStats) super.setUploadType(uploadType);
          }

          @Override
          public QueryTabularStats setUploadProtocol(java.lang.String uploadProtocol) {
            return (QueryTabularStats) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Should be of the form organizations//environments/. */
          @com.google.api.client.util.Key
          private java.lang.String orgenv;

          /** Required. Should be of the form organizations//environments/.
           */
          public java.lang.String getOrgenv() {
            return orgenv;
          }

          /** Required. Should be of the form organizations//environments/. */
          public QueryTabularStats setOrgenv(java.lang.String orgenv) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ORGENV_PATTERN.matcher(orgenv).matches(),
                  "Parameter orgenv must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.orgenv = orgenv;
            return this;
          }

          @Override
          public QueryTabularStats set(String parameterName, Object value) {
            return (QueryTabularStats) super.set(parameterName, value);
          }
        }
        /**
         * Retrieve security statistics as a collection of time series.
         *
         * Create a request for the method "securityStats.queryTimeSeriesStats".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link QueryTimeSeriesStats#execute()} method to invoke the remote
         * operation.
         *
         * @param orgenv Required. Should be of the form organizations//environments/.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTimeSeriesStatsRequest}
         * @return the request
         */
        public QueryTimeSeriesStats queryTimeSeriesStats(java.lang.String orgenv, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTimeSeriesStatsRequest content) throws java.io.IOException {
          QueryTimeSeriesStats result = new QueryTimeSeriesStats(orgenv, content);
          initialize(result);
          return result;
        }

        public class QueryTimeSeriesStats extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTimeSeriesStatsResponse> {

          private static final String REST_PATH = "v1/{+orgenv}/securityStats:queryTimeSeriesStats";

          private final java.util.regex.Pattern ORGENV_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Retrieve security statistics as a collection of time series.
           *
           * Create a request for the method "securityStats.queryTimeSeriesStats".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link QueryTimeSeriesStats#execute()} method to invoke the remote
           * operation. <p> {@link QueryTimeSeriesStats#initialize(com.google.api.client.googleapis.services
           * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param orgenv Required. Should be of the form organizations//environments/.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTimeSeriesStatsRequest}
           * @since 1.13
           */
          protected QueryTimeSeriesStats(java.lang.String orgenv, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTimeSeriesStatsRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1QueryTimeSeriesStatsResponse.class);
            this.orgenv = com.google.api.client.util.Preconditions.checkNotNull(orgenv, "Required parameter orgenv must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ORGENV_PATTERN.matcher(orgenv).matches(),
                  "Parameter orgenv must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public QueryTimeSeriesStats set$Xgafv(java.lang.String $Xgafv) {
            return (QueryTimeSeriesStats) super.set$Xgafv($Xgafv);
          }

          @Override
          public QueryTimeSeriesStats setAccessToken(java.lang.String accessToken) {
            return (QueryTimeSeriesStats) super.setAccessToken(accessToken);
          }

          @Override
          public QueryTimeSeriesStats setAlt(java.lang.String alt) {
            return (QueryTimeSeriesStats) super.setAlt(alt);
          }

          @Override
          public QueryTimeSeriesStats setCallback(java.lang.String callback) {
            return (QueryTimeSeriesStats) super.setCallback(callback);
          }

          @Override
          public QueryTimeSeriesStats setFields(java.lang.String fields) {
            return (QueryTimeSeriesStats) super.setFields(fields);
          }

          @Override
          public QueryTimeSeriesStats setKey(java.lang.String key) {
            return (QueryTimeSeriesStats) super.setKey(key);
          }

          @Override
          public QueryTimeSeriesStats setOauthToken(java.lang.String oauthToken) {
            return (QueryTimeSeriesStats) super.setOauthToken(oauthToken);
          }

          @Override
          public QueryTimeSeriesStats setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (QueryTimeSeriesStats) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public QueryTimeSeriesStats setQuotaUser(java.lang.String quotaUser) {
            return (QueryTimeSeriesStats) super.setQuotaUser(quotaUser);
          }

          @Override
          public QueryTimeSeriesStats setUploadType(java.lang.String uploadType) {
            return (QueryTimeSeriesStats) super.setUploadType(uploadType);
          }

          @Override
          public QueryTimeSeriesStats setUploadProtocol(java.lang.String uploadProtocol) {
            return (QueryTimeSeriesStats) super.setUploadProtocol(uploadProtocol);
          }

          /** Required. Should be of the form organizations//environments/. */
          @com.google.api.client.util.Key
          private java.lang.String orgenv;

          /** Required. Should be of the form organizations//environments/.
           */
          public java.lang.String getOrgenv() {
            return orgenv;
          }

          /** Required. Should be of the form organizations//environments/. */
          public QueryTimeSeriesStats setOrgenv(java.lang.String orgenv) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(ORGENV_PATTERN.matcher(orgenv).matches(),
                  "Parameter orgenv must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.orgenv = orgenv;
            return this;
          }

          @Override
          public QueryTimeSeriesStats set(String parameterName, Object value) {
            return (QueryTimeSeriesStats) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Sharedflows collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Sharedflows.List request = apigee.sharedflows().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Sharedflows sharedflows() {
        return new Sharedflows();
      }

      /**
       * The "sharedflows" collection of methods.
       */
      public class Sharedflows {

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of a shared flow in an environment.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name representing a shared flow in an environment in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$");

            /**
             * Lists all deployments of a shared flow in an environment.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name representing a shared flow in an environment in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name representing a shared flow in an environment in the following format:
           `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Revisions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Revisions revisions() {
          return new Revisions();
        }

        /**
         * The "revisions" collection of methods.
         */
        public class Revisions {

          /**
           * Deploys a revision of a shared flow. If another revision of the same shared flow is currently
           * deployed, set the `override` parameter to `true` to have this revision replace the currently
           * deployed revision. You cannot use a shared flow until it has been deployed to an environment. For
           * a request path
           * `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two
           * permissions are required: * `apigee.deployments.create` on the resource
           * `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.deploy` on the resource
           * `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
           *
           * Create a request for the method "revisions.deploy".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Deploy#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the shared flow revision to deploy in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
           * @return the request
           */
          public Deploy deploy(java.lang.String name) throws java.io.IOException {
            Deploy result = new Deploy(name);
            initialize(result);
            return result;
          }

          public class Deploy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

            /**
             * Deploys a revision of a shared flow. If another revision of the same shared flow is currently
             * deployed, set the `override` parameter to `true` to have this revision replace the currently
             * deployed revision. You cannot use a shared flow until it has been deployed to an environment.
             * For a request path
             * `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two
             * permissions are required: * `apigee.deployments.create` on the resource
             * `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.deploy` on the resource
             * `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
             *
             * Create a request for the method "revisions.deploy".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Deploy#execute()} method to invoke the remote operation. <p> {@link
             * Deploy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the shared flow revision to deploy in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             * @since 1.13
             */
            protected Deploy(java.lang.String name) {
              super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public Deploy set$Xgafv(java.lang.String $Xgafv) {
              return (Deploy) super.set$Xgafv($Xgafv);
            }

            @Override
            public Deploy setAccessToken(java.lang.String accessToken) {
              return (Deploy) super.setAccessToken(accessToken);
            }

            @Override
            public Deploy setAlt(java.lang.String alt) {
              return (Deploy) super.setAlt(alt);
            }

            @Override
            public Deploy setCallback(java.lang.String callback) {
              return (Deploy) super.setCallback(callback);
            }

            @Override
            public Deploy setFields(java.lang.String fields) {
              return (Deploy) super.setFields(fields);
            }

            @Override
            public Deploy setKey(java.lang.String key) {
              return (Deploy) super.setKey(key);
            }

            @Override
            public Deploy setOauthToken(java.lang.String oauthToken) {
              return (Deploy) super.setOauthToken(oauthToken);
            }

            @Override
            public Deploy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Deploy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Deploy setQuotaUser(java.lang.String quotaUser) {
              return (Deploy) super.setQuotaUser(quotaUser);
            }

            @Override
            public Deploy setUploadType(java.lang.String uploadType) {
              return (Deploy) super.setUploadType(uploadType);
            }

            @Override
            public Deploy setUploadProtocol(java.lang.String uploadProtocol) {
              return (Deploy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the shared flow revision to deploy in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the shared flow revision to deploy in the following format:
           `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the shared flow revision to deploy in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public Deploy setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Flag that specifies whether the new deployment replaces other deployed revisions of
             * the shared flow in the environment. Set `override` to `true` to replace other
             * deployed revisions. By default, `override` is `false` and the deployment is rejected
             * if other revisions of the shared flow are deployed in the environment.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean override;

            /** Flag that specifies whether the new deployment replaces other deployed revisions of the shared flow
           in the environment. Set `override` to `true` to replace other deployed revisions. By default,
           `override` is `false` and the deployment is rejected if other revisions of the shared flow are
           deployed in the environment.
             */
            public java.lang.Boolean getOverride() {
              return override;
            }

            /**
             * Flag that specifies whether the new deployment replaces other deployed revisions of
             * the shared flow in the environment. Set `override` to `true` to replace other
             * deployed revisions. By default, `override` is `false` and the deployment is rejected
             * if other revisions of the shared flow are deployed in the environment.
             */
            public Deploy setOverride(java.lang.Boolean override) {
              this.override = override;
              return this;
            }

            /**
             * Google Cloud IAM service account. The service account represents the identity of the
             * deployed proxy, and determines what permissions it has. The format must be
             * `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`.
             */
            @com.google.api.client.util.Key
            private java.lang.String serviceAccount;

            /** Google Cloud IAM service account. The service account represents the identity of the deployed
           proxy, and determines what permissions it has. The format must be
           `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`.
             */
            public java.lang.String getServiceAccount() {
              return serviceAccount;
            }

            /**
             * Google Cloud IAM service account. The service account represents the identity of the
             * deployed proxy, and determines what permissions it has. The format must be
             * `{ACCOUNT_ID}@{PROJECT}.iam.gserviceaccount.com`.
             */
            public Deploy setServiceAccount(java.lang.String serviceAccount) {
              this.serviceAccount = serviceAccount;
              return this;
            }

            @Override
            public Deploy set(String parameterName, Object value) {
              return (Deploy) super.set(parameterName, value);
            }
          }
          /**
           * Gets the deployment of a shared flow revision and actual state reported by runtime pods.
           *
           * Create a request for the method "revisions.getDeployments".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name representing a shared flow in an environment in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
           * @return the request
           */
          public GetDeployments getDeployments(java.lang.String name) throws java.io.IOException {
            GetDeployments result = new GetDeployments(name);
            initialize(result);
            return result;
          }

          public class GetDeployments extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

            /**
             * Gets the deployment of a shared flow revision and actual state reported by runtime pods.
             *
             * Create a request for the method "revisions.getDeployments".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
             * <p> {@link GetDeployments#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
             * ientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param name Required. Name representing a shared flow in an environment in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             * @since 1.13
             */
            protected GetDeployments(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetDeployments set$Xgafv(java.lang.String $Xgafv) {
              return (GetDeployments) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetDeployments setAccessToken(java.lang.String accessToken) {
              return (GetDeployments) super.setAccessToken(accessToken);
            }

            @Override
            public GetDeployments setAlt(java.lang.String alt) {
              return (GetDeployments) super.setAlt(alt);
            }

            @Override
            public GetDeployments setCallback(java.lang.String callback) {
              return (GetDeployments) super.setCallback(callback);
            }

            @Override
            public GetDeployments setFields(java.lang.String fields) {
              return (GetDeployments) super.setFields(fields);
            }

            @Override
            public GetDeployments setKey(java.lang.String key) {
              return (GetDeployments) super.setKey(key);
            }

            @Override
            public GetDeployments setOauthToken(java.lang.String oauthToken) {
              return (GetDeployments) super.setOauthToken(oauthToken);
            }

            @Override
            public GetDeployments setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetDeployments) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetDeployments setQuotaUser(java.lang.String quotaUser) {
              return (GetDeployments) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetDeployments setUploadType(java.lang.String uploadType) {
              return (GetDeployments) super.setUploadType(uploadType);
            }

            @Override
            public GetDeployments setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetDeployments) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name representing a shared flow in an environment in the following format:
           `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public GetDeployments setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetDeployments set(String parameterName, Object value) {
              return (GetDeployments) super.set(parameterName, value);
            }
          }
          /**
           * Undeploys a shared flow revision from an environment. For a request path
           * `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two
           * permissions are required: * `apigee.deployments.delete` on the resource
           * `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.undeploy` on the resource
           * `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
           *
           * Create a request for the method "revisions.undeploy".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Undeploy#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the shared flow revision to undeploy in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
           * @return the request
           */
          public Undeploy undeploy(java.lang.String name) throws java.io.IOException {
            Undeploy result = new Undeploy(name);
            initialize(result);
            return result;
          }

          public class Undeploy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

            /**
             * Undeploys a shared flow revision from an environment. For a request path
             * `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two
             * permissions are required: * `apigee.deployments.delete` on the resource
             * `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.undeploy` on the
             * resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
             *
             * Create a request for the method "revisions.undeploy".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Undeploy#execute()} method to invoke the remote operation. <p>
             * {@link
             * Undeploy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the shared flow revision to undeploy in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             * @since 1.13
             */
            protected Undeploy(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public Undeploy set$Xgafv(java.lang.String $Xgafv) {
              return (Undeploy) super.set$Xgafv($Xgafv);
            }

            @Override
            public Undeploy setAccessToken(java.lang.String accessToken) {
              return (Undeploy) super.setAccessToken(accessToken);
            }

            @Override
            public Undeploy setAlt(java.lang.String alt) {
              return (Undeploy) super.setAlt(alt);
            }

            @Override
            public Undeploy setCallback(java.lang.String callback) {
              return (Undeploy) super.setCallback(callback);
            }

            @Override
            public Undeploy setFields(java.lang.String fields) {
              return (Undeploy) super.setFields(fields);
            }

            @Override
            public Undeploy setKey(java.lang.String key) {
              return (Undeploy) super.setKey(key);
            }

            @Override
            public Undeploy setOauthToken(java.lang.String oauthToken) {
              return (Undeploy) super.setOauthToken(oauthToken);
            }

            @Override
            public Undeploy setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Undeploy) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Undeploy setQuotaUser(java.lang.String quotaUser) {
              return (Undeploy) super.setQuotaUser(quotaUser);
            }

            @Override
            public Undeploy setUploadType(java.lang.String uploadType) {
              return (Undeploy) super.setUploadType(uploadType);
            }

            @Override
            public Undeploy setUploadProtocol(java.lang.String uploadProtocol) {
              return (Undeploy) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the shared flow revision to undeploy in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the shared flow revision to undeploy in the following format:
           `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the shared flow revision to undeploy in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public Undeploy setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Undeploy set(String parameterName, Object value) {
              return (Undeploy) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Stats collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Stats.List request = apigee.stats().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Stats stats() {
        return new Stats();
      }

      /**
       * The "stats" collection of methods.
       */
      public class Stats {

        /**
         * Retrieve metrics grouped by dimensions. The types of metrics you can retrieve include traffic,
         * message counts, API call latency, response size, and cache hits and counts. Dimensions let you
         * view metrics in meaningful groups. You can optionally pass dimensions as path parameters to the
         * `stats` API. If dimensions are not specified, the metrics are computed on the entire set of data
         * for the given time range.
         *
         * Create a request for the method "stats.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name for which the interactive query will be executed. Use the following format
         *        in your request: `organizations/{org}/environments/{env}/stats/{dimensions}` Dimensions
         *        let you view metrics in meaningful groupings, such as `apiproxy` or `target_host`. The
         *        value of dimensions should be a comma-separated list, as shown below:
         *        `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Stats> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/stats/.*$");

          /**
           * Retrieve metrics grouped by dimensions. The types of metrics you can retrieve include traffic,
           * message counts, API call latency, response size, and cache hits and counts. Dimensions let you
           * view metrics in meaningful groups. You can optionally pass dimensions as path parameters to the
           * `stats` API. If dimensions are not specified, the metrics are computed on the entire set of
           * data for the given time range.
           *
           * Create a request for the method "stats.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Resource name for which the interactive query will be executed. Use the following format
         *        in your request: `organizations/{org}/environments/{env}/stats/{dimensions}` Dimensions
         *        let you view metrics in meaningful groupings, such as `apiproxy` or `target_host`. The
         *        value of dimensions should be a comma-separated list, as shown below:
         *        `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Stats.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/stats/.*$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource name for which the interactive query will be executed. Use the
           * following format in your request:
           * `organizations/{org}/environments/{env}/stats/{dimensions}` Dimensions let you view
           * metrics in meaningful groupings, such as `apiproxy` or `target_host`. The value of
           * dimensions should be a comma-separated list, as shown below:
           * `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name for which the interactive query will be executed. Use the following format
         in your request: `organizations/{org}/environments/{env}/stats/{dimensions}` Dimensions let you
         view metrics in meaningful groupings, such as `apiproxy` or `target_host`. The value of dimensions
         should be a comma-separated list, as shown below:
         `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource name for which the interactive query will be executed. Use the
           * following format in your request:
           * `organizations/{org}/environments/{env}/stats/{dimensions}` Dimensions let you view
           * metrics in meaningful groupings, such as `apiproxy` or `target_host`. The value of
           * dimensions should be a comma-separated list, as shown below:
           * `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/stats/.*$");
            }
            this.name = name;
            return this;
          }

          /** No longer used by Apigee. Supported for backwards compatibility. */
          @com.google.api.client.util.Key
          private java.lang.String accuracy;

          /** No longer used by Apigee. Supported for backwards compatibility.
           */
          public java.lang.String getAccuracy() {
            return accuracy;
          }

          /** No longer used by Apigee. Supported for backwards compatibility. */
          public Get setAccuracy(java.lang.String accuracy) {
            this.accuracy = accuracy;
            return this;
          }

          /**
           * Table name used to query custom aggregate tables. If this parameter is skipped, then
           * Apigee will try to retrieve the data from fact tables which will be expensive.
           */
          @com.google.api.client.util.Key
          private java.lang.String aggTable;

          /** Table name used to query custom aggregate tables. If this parameter is skipped, then Apigee will
         try to retrieve the data from fact tables which will be expensive.
           */
          public java.lang.String getAggTable() {
            return aggTable;
          }

          /**
           * Table name used to query custom aggregate tables. If this parameter is skipped, then
           * Apigee will try to retrieve the data from fact tables which will be expensive.
           */
          public Get setAggTable(java.lang.String aggTable) {
            this.aggTable = aggTable;
            return this;
          }

          /** Filter that enables you to drill down on specific dimension values. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Filter that enables you to drill down on specific dimension values.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Filter that enables you to drill down on specific dimension values. */
          public Get setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * Maximum number of result items to return. The default and maximum value that can be
           * returned is 14400.
           */
          @com.google.api.client.util.Key
          private java.lang.String limit;

          /** Maximum number of result items to return. The default and maximum value that can be returned is
         14400.
           */
          public java.lang.String getLimit() {
            return limit;
          }

          /**
           * Maximum number of result items to return. The default and maximum value that can be
           * returned is 14400.
           */
          public Get setLimit(java.lang.String limit) {
            this.limit = limit;
            return this;
          }

          /**
           * Offset value. Use `offset` with `limit` to enable pagination of results. For example,
           * to display results 11-20, set limit to `10` and offset to `10`.
           */
          @com.google.api.client.util.Key
          private java.lang.String offset;

          /** Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display
         results 11-20, set limit to `10` and offset to `10`.
           */
          public java.lang.String getOffset() {
            return offset;
          }

          /**
           * Offset value. Use `offset` with `limit` to enable pagination of results. For example,
           * to display results 11-20, set limit to `10` and offset to `10`.
           */
          public Get setOffset(java.lang.String offset) {
            this.offset = offset;
            return this;
          }

          /** No longer used by Apigee. Supported for backwards compatibility. */
          @com.google.api.client.util.Key
          private java.lang.Boolean realtime;

          /** No longer used by Apigee. Supported for backwards compatibility.
           */
          public java.lang.Boolean getRealtime() {
            return realtime;
          }

          /** No longer used by Apigee. Supported for backwards compatibility. */
          public Get setRealtime(java.lang.Boolean realtime) {
            this.realtime = realtime;
            return this;
          }

          /**
           * Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`
           */
          @com.google.api.client.util.Key
          private java.lang.String select;

          /** Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`
           */
          public java.lang.String getSelect() {
            return select;
          }

          /**
           * Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`
           */
          public Get setSelect(java.lang.String select) {
            this.select = select;
            return this;
          }

          /** Routes the query to API Monitoring for the last hour. */
          @com.google.api.client.util.Key
          private java.lang.Boolean sonar;

          /** Routes the query to API Monitoring for the last hour.
           */
          public java.lang.Boolean getSonar() {
            return sonar;
          }

          /** Routes the query to API Monitoring for the last hour. */
          public Get setSonar(java.lang.Boolean sonar) {
            this.sonar = sonar;
            return this;
          }

          /**
           * Flag that specifies whether the sort order should be ascending or descending. Valid
           * values include: `DESC` and `ASC`.
           */
          @com.google.api.client.util.Key
          private java.lang.String sort;

          /** Flag that specifies whether the sort order should be ascending or descending. Valid values include:
         `DESC` and `ASC`.
           */
          public java.lang.String getSort() {
            return sort;
          }

          /**
           * Flag that specifies whether the sort order should be ascending or descending. Valid
           * values include: `DESC` and `ASC`.
           */
          public Get setSort(java.lang.String sort) {
            this.sort = sort;
            return this;
          }

          /** Comma-separated list of columns to sort the final result. */
          @com.google.api.client.util.Key
          private java.lang.String sortby;

          /** Comma-separated list of columns to sort the final result.
           */
          public java.lang.String getSortby() {
            return sortby;
          }

          /** Comma-separated list of columns to sort the final result. */
          public Get setSortby(java.lang.String sortby) {
            this.sortby = sortby;
            return this;
          }

          /**
           * Time interval for the interactive query. Time range is specified in GMT as `start~end`.
           * For example: `04/15/2017 00:00~05/15/2017 23:59`
           */
          @com.google.api.client.util.Key
          private java.lang.String timeRange;

          /** Time interval for the interactive query. Time range is specified in GMT as `start~end`. For
         example: `04/15/2017 00:00~05/15/2017 23:59`
           */
          public java.lang.String getTimeRange() {
            return timeRange;
          }

          /**
           * Time interval for the interactive query. Time range is specified in GMT as `start~end`.
           * For example: `04/15/2017 00:00~05/15/2017 23:59`
           */
          public Get setTimeRange(java.lang.String timeRange) {
            this.timeRange = timeRange;
            return this;
          }

          /**
           * Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`,
           * `day`, `week`, or` month`.
           */
          @com.google.api.client.util.Key
          private java.lang.String timeUnit;

          /** Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`,
         or` month`.
           */
          public java.lang.String getTimeUnit() {
            return timeUnit;
          }

          /**
           * Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`,
           * `day`, `week`, or` month`.
           */
          public Get setTimeUnit(java.lang.String timeUnit) {
            this.timeUnit = timeUnit;
            return this;
          }

          /**
           * Top number of results to return. For example, to return the top 5 results, set
           * `topk=5`.
           */
          @com.google.api.client.util.Key
          private java.lang.String topk;

          /** Top number of results to return. For example, to return the top 5 results, set `topk=5`.
           */
          public java.lang.String getTopk() {
            return topk;
          }

          /**
           * Top number of results to return. For example, to return the top 5 results, set
           * `topk=5`.
           */
          public Get setTopk(java.lang.String topk) {
            this.topk = topk;
            return this;
          }

          /**
           * Flag that specifies whether to list timestamps in ascending (`true`) or descending
           * (`false`) order. Apigee recommends that you set this value to `true` if you are using
           * `sortby` with `sort=DESC`.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean tsAscending;

          /** Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order.
         Apigee recommends that you set this value to `true` if you are using `sortby` with `sort=DESC`.
           */
          public java.lang.Boolean getTsAscending() {
            return tsAscending;
          }

          /**
           * Flag that specifies whether to list timestamps in ascending (`true`) or descending
           * (`false`) order. Apigee recommends that you set this value to `true` if you are using
           * `sortby` with `sort=DESC`.
           */
          public Get setTsAscending(java.lang.Boolean tsAscending) {
            this.tsAscending = tsAscending;
            return this;
          }

          /** Timezone offset value. */
          @com.google.api.client.util.Key
          private java.lang.String tzo;

          /** Timezone offset value.
           */
          public java.lang.String getTzo() {
            return tzo;
          }

          /** Timezone offset value. */
          public Get setTzo(java.lang.String tzo) {
            this.tzo = tzo;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Targetservers collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Targetservers.List request = apigee.targetservers().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Targetservers targetservers() {
        return new Targetservers();
      }

      /**
       * The "targetservers" collection of methods.
       */
      public class Targetservers {

        /**
         * Creates a TargetServer in the specified environment.
         *
         * Create a request for the method "targetservers.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent environment name under which the TargetServer will be created. Must be of the
         *        form `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+parent}/targetservers";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a TargetServer in the specified environment.
           *
           * Create a request for the method "targetservers.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent environment name under which the TargetServer will be created. Must be of the
         *        form `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent environment name under which the TargetServer will be created.
           * Must be of the form `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent environment name under which the TargetServer will be created. Must be of the
         form `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent environment name under which the TargetServer will be created.
           * Must be of the form `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The ID to give the TargetServer. This will overwrite the value in
           * TargetServer.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Optional. The ID to give the TargetServer. This will overwrite the value in TargetServer.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Optional. The ID to give the TargetServer. This will overwrite the value in
           * TargetServer.
           */
          public Create setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a TargetServer from an environment. Returns the deleted TargetServer resource.
         *
         * Create a request for the method "targetservers.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TargetServer to delete. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");

          /**
           * Deletes a TargetServer from an environment. Returns the deleted TargetServer resource.
           *
           * Create a request for the method "targetservers.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TargetServer to delete. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TargetServer to delete. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TargetServer to delete. Must be of the form
         `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TargetServer to delete. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a TargetServer resource.
         *
         * Create a request for the method "targetservers.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TargetServer to get. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");

          /**
           * Gets a TargetServer resource.
           *
           * Create a request for the method "targetservers.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TargetServer to get. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TargetServer to get. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TargetServer to get. Must be of the form
         `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TargetServer to get. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing TargetServer. Note that this operation has PUT semantics; it will replace the
         * entirety of the existing TargetServer with the resource in the request body.
         *
         * Create a request for the method "targetservers.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TargetServer to replace. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");

          /**
           * Updates an existing TargetServer. Note that this operation has PUT semantics; it will replace
           * the entirety of the existing TargetServer with the resource in the request body.
           *
           * Create a request for the method "targetservers.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TargetServer to replace. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TargetServer to replace. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TargetServer to replace. Must be of the form
         `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TargetServer to replace. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the TraceConfig collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.TraceConfig.List request = apigee.traceConfig().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public TraceConfig traceConfig() {
        return new TraceConfig();
      }

      /**
       * The "traceConfig" collection of methods.
       */
      public class TraceConfig {

        /**
         * An accessor for creating requests from the Overrides collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Overrides.List request = apigee.overrides().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Overrides overrides() {
          return new Overrides();
        }

        /**
         * The "overrides" collection of methods.
         */
        public class Overrides {

          /**
           * Creates a trace configuration override. The response contains a system-generated UUID, that can
           * be used to view, update, or delete the configuration override. Use the List API to view the
           * existing trace configuration overrides.
           *
           * Create a request for the method "overrides.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of the trace configuration override. Use the following structure in your
           *        request. "organizations/environments/traceConfig".
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride> {

            private static final String REST_PATH = "v1/{+parent}/overrides";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/traceConfig$");

            /**
             * Creates a trace configuration override. The response contains a system-generated UUID, that can
             * be used to view, update, or delete the configuration override. Use the List API to view the
             * existing trace configuration overrides.
             *
             * Create a request for the method "overrides.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of the trace configuration override. Use the following structure in your
           *        request. "organizations/environments/traceConfig".
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/traceConfig$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of the trace configuration override. Use the following
             * structure in your request. "organizations/environments/traceConfig".
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of the trace configuration override. Use the following structure in your
           request. "organizations/environments/traceConfig".
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of the trace configuration override. Use the following
             * structure in your request. "organizations/environments/traceConfig".
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/traceConfig$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes a distributed trace configuration override.
           *
           * Create a request for the method "overrides.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the trace configuration override. Use the following structure in your request:
           *        "organizations/environments/traceConfig/overrides".
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$");

            /**
             * Deletes a distributed trace configuration override.
             *
             * Create a request for the method "overrides.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the trace configuration override. Use the following structure in your request:
           *        "organizations/environments/traceConfig/overrides".
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the trace configuration override. Use the following structure in
             * your request: "organizations/environments/traceConfig/overrides".
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the trace configuration override. Use the following structure in your request:
           "organizations/environments/traceConfig/overrides".
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the trace configuration override. Use the following structure in
             * your request: "organizations/environments/traceConfig/overrides".
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets a trace configuration override.
           *
           * Create a request for the method "overrides.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the trace configuration override. Use the following structure in your request:
           *        "organizations/environments/traceConfig/overrides".
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$");

            /**
             * Gets a trace configuration override.
             *
             * Create a request for the method "overrides.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the trace configuration override. Use the following structure in your request:
           *        "organizations/environments/traceConfig/overrides".
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the trace configuration override. Use the following structure in
             * your request: "organizations/environments/traceConfig/overrides".
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the trace configuration override. Use the following structure in your request:
           "organizations/environments/traceConfig/overrides".
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the trace configuration override. Use the following structure in
             * your request: "organizations/environments/traceConfig/overrides".
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Lists all of the distributed trace configuration overrides in an environment.
           *
           * Create a request for the method "overrides.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Parent resource of the trace configuration override. Use the following structure in your
           *        request: "organizations/environments/traceConfig".
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListTraceConfigOverridesResponse> {

            private static final String REST_PATH = "v1/{+parent}/overrides";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/traceConfig$");

            /**
             * Lists all of the distributed trace configuration overrides in an environment.
             *
             * Create a request for the method "overrides.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Parent resource of the trace configuration override. Use the following structure in your
           *        request: "organizations/environments/traceConfig".
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListTraceConfigOverridesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/traceConfig$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Parent resource of the trace configuration override. Use the following
             * structure in your request: "organizations/environments/traceConfig".
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Parent resource of the trace configuration override. Use the following structure in your
           request: "organizations/environments/traceConfig".
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Parent resource of the trace configuration override. Use the following
             * structure in your request: "organizations/environments/traceConfig".
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/traceConfig$");
              }
              this.parent = parent;
              return this;
            }

            /**
             * Maximum number of trace configuration overrides to return. If not specified, the
             * maximum number returned is 25. The maximum number cannot exceed 100.
             */
            @com.google.api.client.util.Key
            private java.lang.Integer pageSize;

            /** Maximum number of trace configuration overrides to return. If not specified, the maximum number
           returned is 25. The maximum number cannot exceed 100.
             */
            public java.lang.Integer getPageSize() {
              return pageSize;
            }

            /**
             * Maximum number of trace configuration overrides to return. If not specified, the
             * maximum number returned is 25. The maximum number cannot exceed 100.
             */
            public List setPageSize(java.lang.Integer pageSize) {
              this.pageSize = pageSize;
              return this;
            }

            /**
             * A page token, returned from a previous `ListTraceConfigOverrides` call. Token value
             * that can be used to retrieve the subsequent page. When paginating, all other
             * parameters provided to `ListTraceConfigOverrides` must match those specified in the
             * call to obtain the page token.
             */
            @com.google.api.client.util.Key
            private java.lang.String pageToken;

            /** A page token, returned from a previous `ListTraceConfigOverrides` call. Token value that can be
           used to retrieve the subsequent page. When paginating, all other parameters provided to
           `ListTraceConfigOverrides` must match those specified in the call to obtain the page token.
             */
            public java.lang.String getPageToken() {
              return pageToken;
            }

            /**
             * A page token, returned from a previous `ListTraceConfigOverrides` call. Token value
             * that can be used to retrieve the subsequent page. When paginating, all other
             * parameters provided to `ListTraceConfigOverrides` must match those specified in the
             * call to obtain the page token.
             */
            public List setPageToken(java.lang.String pageToken) {
              this.pageToken = pageToken;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a distributed trace configuration override. Note that the repeated fields have replace
           * semantics when included in the field mask and that they will be overwritten by the value of the
           * fields in the request body.
           *
           * Create a request for the method "overrides.patch".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the trace configuration override. Use the following structure in your request:
           *        "organizations/environments/traceConfig/overrides".
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride}
           * @return the request
           */
          public Patch patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride content) throws java.io.IOException {
            Patch result = new Patch(name, content);
            initialize(result);
            return result;
          }

          public class Patch extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$");

            /**
             * Updates a distributed trace configuration override. Note that the repeated fields have replace
             * semantics when included in the field mask and that they will be overwritten by the value of the
             * fields in the request body.
             *
             * Create a request for the method "overrides.patch".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
             * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the trace configuration override. Use the following structure in your request:
           *        "organizations/environments/traceConfig/overrides".
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride}
             * @since 1.13
             */
            protected Patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride content) {
              super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TraceConfigOverride.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$");
              }
            }

            @Override
            public Patch set$Xgafv(java.lang.String $Xgafv) {
              return (Patch) super.set$Xgafv($Xgafv);
            }

            @Override
            public Patch setAccessToken(java.lang.String accessToken) {
              return (Patch) super.setAccessToken(accessToken);
            }

            @Override
            public Patch setAlt(java.lang.String alt) {
              return (Patch) super.setAlt(alt);
            }

            @Override
            public Patch setCallback(java.lang.String callback) {
              return (Patch) super.setCallback(callback);
            }

            @Override
            public Patch setFields(java.lang.String fields) {
              return (Patch) super.setFields(fields);
            }

            @Override
            public Patch setKey(java.lang.String key) {
              return (Patch) super.setKey(key);
            }

            @Override
            public Patch setOauthToken(java.lang.String oauthToken) {
              return (Patch) super.setOauthToken(oauthToken);
            }

            @Override
            public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Patch) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Patch setQuotaUser(java.lang.String quotaUser) {
              return (Patch) super.setQuotaUser(quotaUser);
            }

            @Override
            public Patch setUploadType(java.lang.String uploadType) {
              return (Patch) super.setUploadType(uploadType);
            }

            @Override
            public Patch setUploadProtocol(java.lang.String uploadProtocol) {
              return (Patch) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the trace configuration override. Use the following structure in
             * your request: "organizations/environments/traceConfig/overrides".
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the trace configuration override. Use the following structure in your request:
           "organizations/environments/traceConfig/overrides".
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the trace configuration override. Use the following structure in
             * your request: "organizations/environments/traceConfig/overrides".
             */
            public Patch setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/traceConfig/overrides/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** List of fields to be updated. */
            @com.google.api.client.util.Key
            private String updateMask;

            /** List of fields to be updated.
             */
            public String getUpdateMask() {
              return updateMask;
            }

            /** List of fields to be updated. */
            public Patch setUpdateMask(String updateMask) {
              this.updateMask = updateMask;
              return this;
            }

            @Override
            public Patch set(String parameterName, Object value) {
              return (Patch) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the HostQueries collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.HostQueries.List request = apigee.hostQueries().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public HostQueries hostQueries() {
      return new HostQueries();
    }

    /**
     * The "hostQueries" collection of methods.
     */
    public class HostQueries {

      /**
       * Submit a query at host level to be processed in the background. If the submission of the query
       * succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP
       * status 201, the `state` of "enqueued" means that the request succeeded.
       *
       * Create a request for the method "hostQueries.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource name. Must be of the form `organizations/{org}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery> {

        private static final String REST_PATH = "v1/{+parent}/hostQueries";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Submit a query at host level to be processed in the background. If the submission of the query
         * succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the
         * HTTP status 201, the `state` of "enqueued" means that the request succeeded.
         *
         * Create a request for the method "hostQueries.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource name. Must be of the form `organizations/{org}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent resource name. Must be of the form `organizations/{org}`. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource name. Must be of the form `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent resource name. Must be of the form `organizations/{org}`. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Get status of a query submitted at host level. If the query is still in progress, the `state` is
       * set to "running" After the query has completed successfully, `state` is set to "completed"
       *
       * Create a request for the method "hostQueries.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the asynchronous query to get. Must be of the form
       *        `organizations/{org}/queries/{queryId}`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/hostQueries/[^/]+$");

        /**
         * Get status of a query submitted at host level. If the query is still in progress, the `state`
         * is set to "running" After the query has completed successfully, `state` is set to "completed"
         *
         * Create a request for the method "hostQueries.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the asynchronous query to get. Must be of the form
       *        `organizations/{org}/queries/{queryId}`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostQueries/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the asynchronous query to get. Must be of the form
         * `organizations/{org}/queries/{queryId}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the asynchronous query to get. Must be of the form
       `organizations/{org}/queries/{queryId}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the asynchronous query to get. Must be of the form
         * `organizations/{org}/queries/{queryId}`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostQueries/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * After the query is completed, use this API to retrieve the results. If the request succeeds, and
       * there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The
       * name of the downloaded file will be: OfflineQueryResult-.zip Example:
       * `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
       *
       * Create a request for the method "hostQueries.getResult".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetResult#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the asynchronous query result to get. Must be of the form
       *        `organizations/{org}/queries/{queryId}/result`.
       * @return the request
       */
      public GetResult getResult(java.lang.String name) throws java.io.IOException {
        GetResult result = new GetResult(name);
        initialize(result);
        return result;
      }

      public class GetResult extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/hostQueries/[^/]+/result$");

        /**
         * After the query is completed, use this API to retrieve the results. If the request succeeds,
         * and there is a non-zero result set, the result is downloaded to the client as a zipped JSON
         * file. The name of the downloaded file will be: OfflineQueryResult-.zip Example:
         * `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
         *
         * Create a request for the method "hostQueries.getResult".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetResult#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetResult#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the asynchronous query result to get. Must be of the form
       *        `organizations/{org}/queries/{queryId}/result`.
         * @since 1.13
         */
        protected GetResult(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostQueries/[^/]+/result$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetResult set$Xgafv(java.lang.String $Xgafv) {
          return (GetResult) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetResult setAccessToken(java.lang.String accessToken) {
          return (GetResult) super.setAccessToken(accessToken);
        }

        @Override
        public GetResult setAlt(java.lang.String alt) {
          return (GetResult) super.setAlt(alt);
        }

        @Override
        public GetResult setCallback(java.lang.String callback) {
          return (GetResult) super.setCallback(callback);
        }

        @Override
        public GetResult setFields(java.lang.String fields) {
          return (GetResult) super.setFields(fields);
        }

        @Override
        public GetResult setKey(java.lang.String key) {
          return (GetResult) super.setKey(key);
        }

        @Override
        public GetResult setOauthToken(java.lang.String oauthToken) {
          return (GetResult) super.setOauthToken(oauthToken);
        }

        @Override
        public GetResult setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetResult) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetResult setQuotaUser(java.lang.String quotaUser) {
          return (GetResult) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetResult setUploadType(java.lang.String uploadType) {
          return (GetResult) super.setUploadType(uploadType);
        }

        @Override
        public GetResult setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetResult) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the asynchronous query result to get. Must be of the form
         * `organizations/{org}/queries/{queryId}/result`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the asynchronous query result to get. Must be of the form
       `organizations/{org}/queries/{queryId}/result`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the asynchronous query result to get. Must be of the form
         * `organizations/{org}/queries/{queryId}/result`.
         */
        public GetResult setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostQueries/[^/]+/result$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetResult set(String parameterName, Object value) {
          return (GetResult) super.set(parameterName, value);
        }
      }
      /**
       * Create a request for the method "hostQueries.getResultView".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetResultView#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the asynchronous query result view to get. Must be of the form
       *        `organizations/{org}/queries/{queryId}/resultView`.
       * @return the request
       */
      public GetResultView getResultView(java.lang.String name) throws java.io.IOException {
        GetResultView result = new GetResultView(name);
        initialize(result);
        return result;
      }

      public class GetResultView extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQueryResultView> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/hostQueries/[^/]+/resultView$");

        /**
         * Create a request for the method "hostQueries.getResultView".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetResultView#execute()} method to invoke the remote operation. <p>
         * {@link GetResultView#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
         * equest)} must be called to initialize this instance immediately after invoking the constructor.
         * </p>
         *
         * @param name Required. Name of the asynchronous query result view to get. Must be of the form
       *        `organizations/{org}/queries/{queryId}/resultView`.
         * @since 1.13
         */
        protected GetResultView(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQueryResultView.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostQueries/[^/]+/resultView$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetResultView set$Xgafv(java.lang.String $Xgafv) {
          return (GetResultView) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetResultView setAccessToken(java.lang.String accessToken) {
          return (GetResultView) super.setAccessToken(accessToken);
        }

        @Override
        public GetResultView setAlt(java.lang.String alt) {
          return (GetResultView) super.setAlt(alt);
        }

        @Override
        public GetResultView setCallback(java.lang.String callback) {
          return (GetResultView) super.setCallback(callback);
        }

        @Override
        public GetResultView setFields(java.lang.String fields) {
          return (GetResultView) super.setFields(fields);
        }

        @Override
        public GetResultView setKey(java.lang.String key) {
          return (GetResultView) super.setKey(key);
        }

        @Override
        public GetResultView setOauthToken(java.lang.String oauthToken) {
          return (GetResultView) super.setOauthToken(oauthToken);
        }

        @Override
        public GetResultView setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetResultView) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetResultView setQuotaUser(java.lang.String quotaUser) {
          return (GetResultView) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetResultView setUploadType(java.lang.String uploadType) {
          return (GetResultView) super.setUploadType(uploadType);
        }

        @Override
        public GetResultView setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetResultView) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the asynchronous query result view to get. Must be of the form
         * `organizations/{org}/queries/{queryId}/resultView`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the asynchronous query result view to get. Must be of the form
       `organizations/{org}/queries/{queryId}/resultView`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the asynchronous query result view to get. Must be of the form
         * `organizations/{org}/queries/{queryId}/resultView`.
         */
        public GetResultView setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostQueries/[^/]+/resultView$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetResultView set(String parameterName, Object value) {
          return (GetResultView) super.set(parameterName, value);
        }
      }
      /**
       * Return a list of Asynchronous Queries at host level.
       *
       * Create a request for the method "hostQueries.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource name. Must be of the form `organizations/{org}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAsyncQueriesResponse> {

        private static final String REST_PATH = "v1/{+parent}/hostQueries";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Return a list of Asynchronous Queries at host level.
         *
         * Create a request for the method "hostQueries.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource name. Must be of the form `organizations/{org}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAsyncQueriesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent resource name. Must be of the form `organizations/{org}`. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource name. Must be of the form `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent resource name. Must be of the form `organizations/{org}`. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Filter response list by dataset. Example: `api`, `mint` */
        @com.google.api.client.util.Key
        private java.lang.String dataset;

        /** Filter response list by dataset. Example: `api`, `mint`
         */
        public java.lang.String getDataset() {
          return dataset;
        }

        /** Filter response list by dataset. Example: `api`, `mint` */
        public List setDataset(java.lang.String dataset) {
          this.dataset = dataset;
          return this;
        }

        /** Required. Filter response list by hostname. */
        @com.google.api.client.util.Key
        private java.lang.String envgroupHostname;

        /** Required. Filter response list by hostname.
         */
        public java.lang.String getEnvgroupHostname() {
          return envgroupHostname;
        }

        /** Required. Filter response list by hostname. */
        public List setEnvgroupHostname(java.lang.String envgroupHostname) {
          this.envgroupHostname = envgroupHostname;
          return this;
        }

        /**
         * Filter response list by returning asynchronous queries that created after this date time.
         * Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
         */
        @com.google.api.client.util.Key
        private java.lang.String from;

        /** Filter response list by returning asynchronous queries that created after this date time. Time must
       be in ISO date-time format like '2011-12-03T10:15:30Z'.
         */
        public java.lang.String getFrom() {
          return from;
        }

        /**
         * Filter response list by returning asynchronous queries that created after this date time.
         * Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
         */
        public List setFrom(java.lang.String from) {
          this.from = from;
          return this;
        }

        /** Flag to include asynchronous queries that don't have a report denifition. */
        @com.google.api.client.util.Key
        private java.lang.String inclQueriesWithoutReport;

        /** Flag to include asynchronous queries that don't have a report denifition.
         */
        public java.lang.String getInclQueriesWithoutReport() {
          return inclQueriesWithoutReport;
        }

        /** Flag to include asynchronous queries that don't have a report denifition. */
        public List setInclQueriesWithoutReport(java.lang.String inclQueriesWithoutReport) {
          this.inclQueriesWithoutReport = inclQueriesWithoutReport;
          return this;
        }

        /** Filter response list by asynchronous query status. */
        @com.google.api.client.util.Key
        private java.lang.String status;

        /** Filter response list by asynchronous query status.
         */
        public java.lang.String getStatus() {
          return status;
        }

        /** Filter response list by asynchronous query status. */
        public List setStatus(java.lang.String status) {
          this.status = status;
          return this;
        }

        /** Filter response list by user who submitted queries. */
        @com.google.api.client.util.Key
        private java.lang.String submittedBy;

        /** Filter response list by user who submitted queries.
         */
        public java.lang.String getSubmittedBy() {
          return submittedBy;
        }

        /** Filter response list by user who submitted queries. */
        public List setSubmittedBy(java.lang.String submittedBy) {
          this.submittedBy = submittedBy;
          return this;
        }

        /**
         * Filter response list by returning asynchronous queries that created before this date
         * time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
         */
        @com.google.api.client.util.Key
        private java.lang.String to;

        /** Filter response list by returning asynchronous queries that created before this date time. Time
       must be in ISO date-time format like '2011-12-03T10:16:30Z'.
         */
        public java.lang.String getTo() {
          return to;
        }

        /**
         * Filter response list by returning asynchronous queries that created before this date
         * time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
         */
        public List setTo(java.lang.String to) {
          this.to = to;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the HostSecurityReports collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.HostSecurityReports.List request = apigee.hostSecurityReports().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public HostSecurityReports hostSecurityReports() {
      return new HostSecurityReports();
    }

    /**
     * The "hostSecurityReports" collection of methods.
     */
    public class HostSecurityReports {

      /**
       * Submit a query at host level to be processed in the background. If the submission of the query
       * succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP
       * status 201, the `state` of "enqueued" means that the request succeeded.
       *
       * Create a request for the method "hostSecurityReports.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource name. Must be of the form `organizations/{org}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportQuery}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportQuery content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReport> {

        private static final String REST_PATH = "v1/{+parent}/hostSecurityReports";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Submit a query at host level to be processed in the background. If the submission of the query
         * succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the
         * HTTP status 201, the `state` of "enqueued" means that the request succeeded.
         *
         * Create a request for the method "hostSecurityReports.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource name. Must be of the form `organizations/{org}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportQuery}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportQuery content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReport.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent resource name. Must be of the form `organizations/{org}`. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource name. Must be of the form `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent resource name. Must be of the form `organizations/{org}`. */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Get status of a query submitted at host level. If the query is still in progress, the `state` is
       * set to "running" After the query has completed successfully, `state` is set to "completed"
       *
       * Create a request for the method "hostSecurityReports.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the security report to get. Must be of the form
       *        `organizations/{org}/securityReports/{reportId}`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReport> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/hostSecurityReports/[^/]+$");

        /**
         * Get status of a query submitted at host level. If the query is still in progress, the `state`
         * is set to "running" After the query has completed successfully, `state` is set to "completed"
         *
         * Create a request for the method "hostSecurityReports.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the security report to get. Must be of the form
       *        `organizations/{org}/securityReports/{reportId}`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReport.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostSecurityReports/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the security report to get. Must be of the form
         * `organizations/{org}/securityReports/{reportId}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the security report to get. Must be of the form
       `organizations/{org}/securityReports/{reportId}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the security report to get. Must be of the form
         * `organizations/{org}/securityReports/{reportId}`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostSecurityReports/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * After the query is completed, use this API to retrieve the results. If the request succeeds, and
       * there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The
       * name of the downloaded file will be: OfflineQueryResult-.zip Example:
       * `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
       *
       * Create a request for the method "hostSecurityReports.getResult".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetResult#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the security report result to get. Must be of the form
       *        `organizations/{org}/securityReports/{reportId}/result`.
       * @return the request
       */
      public GetResult getResult(java.lang.String name) throws java.io.IOException {
        GetResult result = new GetResult(name);
        initialize(result);
        return result;
      }

      public class GetResult extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/hostSecurityReports/[^/]+/result$");

        /**
         * After the query is completed, use this API to retrieve the results. If the request succeeds,
         * and there is a non-zero result set, the result is downloaded to the client as a zipped JSON
         * file. The name of the downloaded file will be: OfflineQueryResult-.zip Example:
         * `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
         *
         * Create a request for the method "hostSecurityReports.getResult".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetResult#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetResult#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the security report result to get. Must be of the form
       *        `organizations/{org}/securityReports/{reportId}/result`.
         * @since 1.13
         */
        protected GetResult(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostSecurityReports/[^/]+/result$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetResult set$Xgafv(java.lang.String $Xgafv) {
          return (GetResult) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetResult setAccessToken(java.lang.String accessToken) {
          return (GetResult) super.setAccessToken(accessToken);
        }

        @Override
        public GetResult setAlt(java.lang.String alt) {
          return (GetResult) super.setAlt(alt);
        }

        @Override
        public GetResult setCallback(java.lang.String callback) {
          return (GetResult) super.setCallback(callback);
        }

        @Override
        public GetResult setFields(java.lang.String fields) {
          return (GetResult) super.setFields(fields);
        }

        @Override
        public GetResult setKey(java.lang.String key) {
          return (GetResult) super.setKey(key);
        }

        @Override
        public GetResult setOauthToken(java.lang.String oauthToken) {
          return (GetResult) super.setOauthToken(oauthToken);
        }

        @Override
        public GetResult setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetResult) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetResult setQuotaUser(java.lang.String quotaUser) {
          return (GetResult) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetResult setUploadType(java.lang.String uploadType) {
          return (GetResult) super.setUploadType(uploadType);
        }

        @Override
        public GetResult setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetResult) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the security report result to get. Must be of the form
         * `organizations/{org}/securityReports/{reportId}/result`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the security report result to get. Must be of the form
       `organizations/{org}/securityReports/{reportId}/result`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the security report result to get. Must be of the form
         * `organizations/{org}/securityReports/{reportId}/result`.
         */
        public GetResult setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostSecurityReports/[^/]+/result$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetResult set(String parameterName, Object value) {
          return (GetResult) super.set(parameterName, value);
        }
      }
      /**
       * After the query is completed, use this API to view the query result when result size is small.
       *
       * Create a request for the method "hostSecurityReports.getResultView".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetResultView#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the security report result view to get. Must be of the form
       *        `organizations/{org}/securityReports/{reportId}/resultView`.
       * @return the request
       */
      public GetResultView getResultView(java.lang.String name) throws java.io.IOException {
        GetResultView result = new GetResultView(name);
        initialize(result);
        return result;
      }

      public class GetResultView extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportResultView> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/hostSecurityReports/[^/]+/resultView$");

        /**
         * After the query is completed, use this API to view the query result when result size is small.
         *
         * Create a request for the method "hostSecurityReports.getResultView".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetResultView#execute()} method to invoke the remote operation. <p>
         * {@link GetResultView#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
         * equest)} must be called to initialize this instance immediately after invoking the constructor.
         * </p>
         *
         * @param name Required. Name of the security report result view to get. Must be of the form
       *        `organizations/{org}/securityReports/{reportId}/resultView`.
         * @since 1.13
         */
        protected GetResultView(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityReportResultView.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostSecurityReports/[^/]+/resultView$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetResultView set$Xgafv(java.lang.String $Xgafv) {
          return (GetResultView) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetResultView setAccessToken(java.lang.String accessToken) {
          return (GetResultView) super.setAccessToken(accessToken);
        }

        @Override
        public GetResultView setAlt(java.lang.String alt) {
          return (GetResultView) super.setAlt(alt);
        }

        @Override
        public GetResultView setCallback(java.lang.String callback) {
          return (GetResultView) super.setCallback(callback);
        }

        @Override
        public GetResultView setFields(java.lang.String fields) {
          return (GetResultView) super.setFields(fields);
        }

        @Override
        public GetResultView setKey(java.lang.String key) {
          return (GetResultView) super.setKey(key);
        }

        @Override
        public GetResultView setOauthToken(java.lang.String oauthToken) {
          return (GetResultView) super.setOauthToken(oauthToken);
        }

        @Override
        public GetResultView setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetResultView) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetResultView setQuotaUser(java.lang.String quotaUser) {
          return (GetResultView) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetResultView setUploadType(java.lang.String uploadType) {
          return (GetResultView) super.setUploadType(uploadType);
        }

        @Override
        public GetResultView setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetResultView) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the security report result view to get. Must be of the form
         * `organizations/{org}/securityReports/{reportId}/resultView`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the security report result view to get. Must be of the form
       `organizations/{org}/securityReports/{reportId}/resultView`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the security report result view to get. Must be of the form
         * `organizations/{org}/securityReports/{reportId}/resultView`.
         */
        public GetResultView setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostSecurityReports/[^/]+/resultView$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetResultView set(String parameterName, Object value) {
          return (GetResultView) super.set(parameterName, value);
        }
      }
      /**
       * Return a list of Security Reports at host level.
       *
       * Create a request for the method "hostSecurityReports.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource name. Must be of the form `organizations/{org}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityReportsResponse> {

        private static final String REST_PATH = "v1/{+parent}/hostSecurityReports";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Return a list of Security Reports at host level.
         *
         * Create a request for the method "hostSecurityReports.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource name. Must be of the form `organizations/{org}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityReportsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent resource name. Must be of the form `organizations/{org}`. */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource name. Must be of the form `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent resource name. Must be of the form `organizations/{org}`. */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Filter response list by dataset. Example: `api`, `mint` */
        @com.google.api.client.util.Key
        private java.lang.String dataset;

        /** Filter response list by dataset. Example: `api`, `mint`
         */
        public java.lang.String getDataset() {
          return dataset;
        }

        /** Filter response list by dataset. Example: `api`, `mint` */
        public List setDataset(java.lang.String dataset) {
          this.dataset = dataset;
          return this;
        }

        /** Required. Filter response list by hostname. */
        @com.google.api.client.util.Key
        private java.lang.String envgroupHostname;

        /** Required. Filter response list by hostname.
         */
        public java.lang.String getEnvgroupHostname() {
          return envgroupHostname;
        }

        /** Required. Filter response list by hostname. */
        public List setEnvgroupHostname(java.lang.String envgroupHostname) {
          this.envgroupHostname = envgroupHostname;
          return this;
        }

        /**
         * Filter response list by returning security reports that created after this date time.
         * Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
         */
        @com.google.api.client.util.Key
        private java.lang.String from;

        /** Filter response list by returning security reports that created after this date time. Time must be
       in ISO date-time format like '2011-12-03T10:15:30Z'.
         */
        public java.lang.String getFrom() {
          return from;
        }

        /**
         * Filter response list by returning security reports that created after this date time.
         * Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
         */
        public List setFrom(java.lang.String from) {
          this.from = from;
          return this;
        }

        /** The maximum number of security report to return in the list response. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of security report to return in the list response.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The maximum number of security report to return in the list response. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** Token returned from the previous list response to fetch the next page. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Token returned from the previous list response to fetch the next page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** Token returned from the previous list response to fetch the next page. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        /** Filter response list by security report status. */
        @com.google.api.client.util.Key
        private java.lang.String status;

        /** Filter response list by security report status.
         */
        public java.lang.String getStatus() {
          return status;
        }

        /** Filter response list by security report status. */
        public List setStatus(java.lang.String status) {
          this.status = status;
          return this;
        }

        /** Filter response list by user who submitted queries. */
        @com.google.api.client.util.Key
        private java.lang.String submittedBy;

        /** Filter response list by user who submitted queries.
         */
        public java.lang.String getSubmittedBy() {
          return submittedBy;
        }

        /** Filter response list by user who submitted queries. */
        public List setSubmittedBy(java.lang.String submittedBy) {
          this.submittedBy = submittedBy;
          return this;
        }

        /**
         * Filter response list by returning security reports that created before this date time.
         * Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
         */
        @com.google.api.client.util.Key
        private java.lang.String to;

        /** Filter response list by returning security reports that created before this date time. Time must be
       in ISO date-time format like '2011-12-03T10:16:30Z'.
         */
        public java.lang.String getTo() {
          return to;
        }

        /**
         * Filter response list by returning security reports that created before this date time.
         * Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
         */
        public List setTo(java.lang.String to) {
          this.to = to;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the HostStats collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.HostStats.List request = apigee.hostStats().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public HostStats hostStats() {
      return new HostStats();
    }

    /**
     * The "hostStats" collection of methods.
     */
    public class HostStats {

      /**
       * Retrieve metrics grouped by dimensions in host level. The types of metrics you can retrieve
       * include traffic, message counts, API call latency, response size, and cache hits and counts.
       * Dimensions let you view metrics in meaningful groups. You can optionally pass dimensions as path
       * parameters to the `stats` API. If dimensions are not specified, the metrics are computed on the
       * entire set of data for the given time range.
       *
       * Create a request for the method "hostStats.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name for which the interactive query will be executed. Use the following format
       *        in your request: `organizations/{org}/hostStats/{dimensions}` Dimensions let you view
       *        metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of
       *        dimensions should be a comma-separated list as shown below
       *        `organizations/{org}/hostStats/apiproxy,request_verb`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Stats> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/hostStats/.*$");

        /**
         * Retrieve metrics grouped by dimensions in host level. The types of metrics you can retrieve
         * include traffic, message counts, API call latency, response size, and cache hits and counts.
         * Dimensions let you view metrics in meaningful groups. You can optionally pass dimensions as
         * path parameters to the `stats` API. If dimensions are not specified, the metrics are computed
         * on the entire set of data for the given time range.
         *
         * Create a request for the method "hostStats.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name for which the interactive query will be executed. Use the following format
       *        in your request: `organizations/{org}/hostStats/{dimensions}` Dimensions let you view
       *        metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of
       *        dimensions should be a comma-separated list as shown below
       *        `organizations/{org}/hostStats/apiproxy,request_verb`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Stats.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostStats/.*$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for which the interactive query will be executed. Use the
         * following format in your request: `organizations/{org}/hostStats/{dimensions}` Dimensions
         * let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The
         * value of dimensions should be a comma-separated list as shown below
         * `organizations/{org}/hostStats/apiproxy,request_verb`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name for which the interactive query will be executed. Use the following format
       in your request: `organizations/{org}/hostStats/{dimensions}` Dimensions let you view metrics in
       meaningful groupings, such as `apiproxy`, `target_host`. The value of dimensions should be a comma-
       separated list as shown below `organizations/{org}/hostStats/apiproxy,request_verb`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name for which the interactive query will be executed. Use the
         * following format in your request: `organizations/{org}/hostStats/{dimensions}` Dimensions
         * let you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The
         * value of dimensions should be a comma-separated list as shown below
         * `organizations/{org}/hostStats/apiproxy,request_verb`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/hostStats/.*$");
          }
          this.name = name;
          return this;
        }

        /** No longer used by Apigee. Supported for backwards compatibility. */
        @com.google.api.client.util.Key
        private java.lang.String accuracy;

        /** No longer used by Apigee. Supported for backwards compatibility.
         */
        public java.lang.String getAccuracy() {
          return accuracy;
        }

        /** No longer used by Apigee. Supported for backwards compatibility. */
        public Get setAccuracy(java.lang.String accuracy) {
          this.accuracy = accuracy;
          return this;
        }

        /** Required. Hostname for which the interactive query will be executed. */
        @com.google.api.client.util.Key
        private java.lang.String envgroupHostname;

        /** Required. Hostname for which the interactive query will be executed.
         */
        public java.lang.String getEnvgroupHostname() {
          return envgroupHostname;
        }

        /** Required. Hostname for which the interactive query will be executed. */
        public Get setEnvgroupHostname(java.lang.String envgroupHostname) {
          this.envgroupHostname = envgroupHostname;
          return this;
        }

        /** Flag that enables drill-down on specific dimension values. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Flag that enables drill-down on specific dimension values.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** Flag that enables drill-down on specific dimension values. */
        public Get setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Maximum number of result items to return. The default and maximum value that can be
         * returned is 14400.
         */
        @com.google.api.client.util.Key
        private java.lang.String limit;

        /** Maximum number of result items to return. The default and maximum value that can be returned is
       14400.
         */
        public java.lang.String getLimit() {
          return limit;
        }

        /**
         * Maximum number of result items to return. The default and maximum value that can be
         * returned is 14400.
         */
        public Get setLimit(java.lang.String limit) {
          this.limit = limit;
          return this;
        }

        /**
         * Offset value. Use `offset` with `limit` to enable pagination of results. For example, to
         * display results 11-20, set limit to `10` and offset to `10`.
         */
        @com.google.api.client.util.Key
        private java.lang.String offset;

        /** Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display
       results 11-20, set limit to `10` and offset to `10`.
         */
        public java.lang.String getOffset() {
          return offset;
        }

        /**
         * Offset value. Use `offset` with `limit` to enable pagination of results. For example, to
         * display results 11-20, set limit to `10` and offset to `10`.
         */
        public Get setOffset(java.lang.String offset) {
          this.offset = offset;
          return this;
        }

        /** No longer used by Apigee. Supported for backwards compatibility. */
        @com.google.api.client.util.Key
        private java.lang.Boolean realtime;

        /** No longer used by Apigee. Supported for backwards compatibility.
         */
        public java.lang.Boolean getRealtime() {
          return realtime;
        }

        /** No longer used by Apigee. Supported for backwards compatibility. */
        public Get setRealtime(java.lang.Boolean realtime) {
          this.realtime = realtime;
          return this;
        }

        /** Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)` */
        @com.google.api.client.util.Key
        private java.lang.String select;

        /** Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`
         */
        public java.lang.String getSelect() {
          return select;
        }

        /** Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)` */
        public Get setSelect(java.lang.String select) {
          this.select = select;
          return this;
        }

        /**
         * Flag that specifies if the sort order should be ascending or descending. Valid values are
         * `DESC` and `ASC`.
         */
        @com.google.api.client.util.Key
        private java.lang.String sort;

        /** Flag that specifies if the sort order should be ascending or descending. Valid values are `DESC`
       and `ASC`.
         */
        public java.lang.String getSort() {
          return sort;
        }

        /**
         * Flag that specifies if the sort order should be ascending or descending. Valid values are
         * `DESC` and `ASC`.
         */
        public Get setSort(java.lang.String sort) {
          this.sort = sort;
          return this;
        }

        /** Comma-separated list of columns to sort the final result. */
        @com.google.api.client.util.Key
        private java.lang.String sortby;

        /** Comma-separated list of columns to sort the final result.
         */
        public java.lang.String getSortby() {
          return sortby;
        }

        /** Comma-separated list of columns to sort the final result. */
        public Get setSortby(java.lang.String sortby) {
          this.sortby = sortby;
          return this;
        }

        /**
         * Time interval for the interactive query. Time range is specified in GMT as `start~end`.
         * For example: `04/15/2017 00:00~05/15/2017 23:59`
         */
        @com.google.api.client.util.Key
        private java.lang.String timeRange;

        /** Time interval for the interactive query. Time range is specified in GMT as `start~end`. For
       example: `04/15/2017 00:00~05/15/2017 23:59`
         */
        public java.lang.String getTimeRange() {
          return timeRange;
        }

        /**
         * Time interval for the interactive query. Time range is specified in GMT as `start~end`.
         * For example: `04/15/2017 00:00~05/15/2017 23:59`
         */
        public Get setTimeRange(java.lang.String timeRange) {
          this.timeRange = timeRange;
          return this;
        }

        /**
         * Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`,
         * `week`, or `month`.
         */
        @com.google.api.client.util.Key
        private java.lang.String timeUnit;

        /** Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`,
       or `month`.
         */
        public java.lang.String getTimeUnit() {
          return timeUnit;
        }

        /**
         * Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`,
         * `week`, or `month`.
         */
        public Get setTimeUnit(java.lang.String timeUnit) {
          this.timeUnit = timeUnit;
          return this;
        }

        /**
         * Top number of results to return. For example, to return the top 5 results, set `topk=5`.
         */
        @com.google.api.client.util.Key
        private java.lang.String topk;

        /** Top number of results to return. For example, to return the top 5 results, set `topk=5`.
         */
        public java.lang.String getTopk() {
          return topk;
        }

        /**
         * Top number of results to return. For example, to return the top 5 results, set `topk=5`.
         */
        public Get setTopk(java.lang.String topk) {
          this.topk = topk;
          return this;
        }

        /**
         * Flag that specifies whether to list timestamps in ascending (`true`) or descending
         * (`false`) order. Apigee recommends that you set this value to `true` if you are using
         * `sortby` with `sort=DESC`.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean tsAscending;

        /** Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order.
       Apigee recommends that you set this value to `true` if you are using `sortby` with `sort=DESC`.
         */
        public java.lang.Boolean getTsAscending() {
          return tsAscending;
        }

        /**
         * Flag that specifies whether to list timestamps in ascending (`true`) or descending
         * (`false`) order. Apigee recommends that you set this value to `true` if you are using
         * `sortby` with `sort=DESC`.
         */
        public Get setTsAscending(java.lang.Boolean tsAscending) {
          this.tsAscending = tsAscending;
          return this;
        }

        /** Timezone offset value. */
        @com.google.api.client.util.Key
        private java.lang.String tzo;

        /** Timezone offset value.
         */
        public java.lang.String getTzo() {
          return tzo;
        }

        /** Timezone offset value. */
        public Get setTzo(java.lang.String tzo) {
          this.tzo = tzo;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Instances collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Instances.List request = apigee.instances().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Instances instances() {
      return new Instances();
    }

    /**
     * The "instances" collection of methods.
     */
    public class Instances {

      /**
       * Creates an Apigee runtime instance. The instance is accessible from the authorized network
       * configured on the organization. **Note:** Not supported for Apigee hybrid.
       *
       * Create a request for the method "instances.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization. Use the following structure in your request:
       *        `organizations/{org}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Instance}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Instance content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+parent}/instances";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an Apigee runtime instance. The instance is accessible from the authorized network
         * configured on the organization. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "instances.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization. Use the following structure in your request:
       *        `organizations/{org}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Instance}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Instance content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization. Use the following structure in your request:
         * `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization. Use the following structure in your request:
       `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization. Use the following structure in your request:
         * `organizations/{org}`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an Apigee runtime instance. The instance stops serving requests and the runtime data is
       * deleted. **Note:** Not supported for Apigee hybrid.
       *
       * Create a request for the method "instances.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the instance. Use the following structure in your request:
       *        `organizations/{org}/instances/{instance}`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+$");

        /**
         * Deletes an Apigee runtime instance. The instance stops serving requests and the runtime data is
         * deleted. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "instances.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the instance. Use the following structure in your request:
       *        `organizations/{org}/instances/{instance}`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the instance. Use the following structure in your request:
         * `organizations/{org}/instances/{instance}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the instance. Use the following structure in your request:
       `organizations/{org}/instances/{instance}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the instance. Use the following structure in your request:
         * `organizations/{org}/instances/{instance}`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/instances/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the details for an Apigee runtime instance. **Note:** Not supported for Apigee hybrid.
       *
       * Create a request for the method "instances.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the instance. Use the following structure in your request:
       *        `organizations/{org}/instances/{instance}`.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Instance> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+$");

        /**
         * Gets the details for an Apigee runtime instance. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "instances.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the instance. Use the following structure in your request:
       *        `organizations/{org}/instances/{instance}`.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Instance.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the instance. Use the following structure in your request:
         * `organizations/{org}/instances/{instance}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the instance. Use the following structure in your request:
       `organizations/{org}/instances/{instance}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the instance. Use the following structure in your request:
         * `organizations/{org}/instances/{instance}`.
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/instances/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all Apigee runtime instances for the organization. **Note:** Not supported for Apigee
       * hybrid.
       *
       * Create a request for the method "instances.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization. Use the following structure in your request:
       *        `organizations/{org}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListInstancesResponse> {

        private static final String REST_PATH = "v1/{+parent}/instances";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all Apigee runtime instances for the organization. **Note:** Not supported for Apigee
         * hybrid.
         *
         * Create a request for the method "instances.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization. Use the following structure in your request:
       *        `organizations/{org}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListInstancesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization. Use the following structure in your request:
         * `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization. Use the following structure in your request:
       `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization. Use the following structure in your request:
         * `organizations/{org}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Maximum number of instances to return. Defaults to 25. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Maximum number of instances to return. Defaults to 25.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Maximum number of instances to return. Defaults to 25. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Page token, returned from a previous ListInstances call, that you can use to retrieve the
         * next page of content.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Page token, returned from a previous ListInstances call, that you can use to retrieve the next page
       of content.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Page token, returned from a previous ListInstances call, that you can use to retrieve the
         * next page of content.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an Apigee runtime instance. You can update the fields described in NodeConfig. No other
       * fields will be updated. **Note:** Not supported for Apigee hybrid.
       *
       * Create a request for the method "instances.patch".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the instance. Use the following structure in your request:
       *        `organizations/{org}/instances/{instance}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Instance}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Instance content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+$");

        /**
         * Updates an Apigee runtime instance. You can update the fields described in NodeConfig. No other
         * fields will be updated. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "instances.patch".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the instance. Use the following structure in your request:
       *        `organizations/{org}/instances/{instance}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Instance}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Instance content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the instance. Use the following structure in your request:
         * `organizations/{org}/instances/{instance}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the instance. Use the following structure in your request:
       `organizations/{org}/instances/{instance}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the instance. Use the following structure in your request:
         * `organizations/{org}/instances/{instance}`.
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/instances/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** List of fields to be updated. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** List of fields to be updated.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** List of fields to be updated. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }
      /**
       * Reports the latest status for a runtime instance.
       *
       * Create a request for the method "instances.reportStatus".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link ReportStatus#execute()} method to invoke the remote operation.
       *
       * @param instance The name of the instance reporting this status. For SaaS the request will be rejected if no instance
       *        exists under this name. Format is organizations/{org}/instances/{instance}
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ReportInstanceStatusRequest}
       * @return the request
       */
      public ReportStatus reportStatus(java.lang.String instance, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ReportInstanceStatusRequest content) throws java.io.IOException {
        ReportStatus result = new ReportStatus(instance, content);
        initialize(result);
        return result;
      }

      public class ReportStatus extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ReportInstanceStatusResponse> {

        private static final String REST_PATH = "v1/{+instance}:reportStatus";

        private final java.util.regex.Pattern INSTANCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+$");

        /**
         * Reports the latest status for a runtime instance.
         *
         * Create a request for the method "instances.reportStatus".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link ReportStatus#execute()} method to invoke the remote operation. <p>
         * {@link
         * ReportStatus#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param instance The name of the instance reporting this status. For SaaS the request will be rejected if no instance
       *        exists under this name. Format is organizations/{org}/instances/{instance}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ReportInstanceStatusRequest}
         * @since 1.13
         */
        protected ReportStatus(java.lang.String instance, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ReportInstanceStatusRequest content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ReportInstanceStatusResponse.class);
          this.instance = com.google.api.client.util.Preconditions.checkNotNull(instance, "Required parameter instance must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                "Parameter instance must conform to the pattern " +
                "^organizations/[^/]+/instances/[^/]+$");
          }
        }

        @Override
        public ReportStatus set$Xgafv(java.lang.String $Xgafv) {
          return (ReportStatus) super.set$Xgafv($Xgafv);
        }

        @Override
        public ReportStatus setAccessToken(java.lang.String accessToken) {
          return (ReportStatus) super.setAccessToken(accessToken);
        }

        @Override
        public ReportStatus setAlt(java.lang.String alt) {
          return (ReportStatus) super.setAlt(alt);
        }

        @Override
        public ReportStatus setCallback(java.lang.String callback) {
          return (ReportStatus) super.setCallback(callback);
        }

        @Override
        public ReportStatus setFields(java.lang.String fields) {
          return (ReportStatus) super.setFields(fields);
        }

        @Override
        public ReportStatus setKey(java.lang.String key) {
          return (ReportStatus) super.setKey(key);
        }

        @Override
        public ReportStatus setOauthToken(java.lang.String oauthToken) {
          return (ReportStatus) super.setOauthToken(oauthToken);
        }

        @Override
        public ReportStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ReportStatus) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ReportStatus setQuotaUser(java.lang.String quotaUser) {
          return (ReportStatus) super.setQuotaUser(quotaUser);
        }

        @Override
        public ReportStatus setUploadType(java.lang.String uploadType) {
          return (ReportStatus) super.setUploadType(uploadType);
        }

        @Override
        public ReportStatus setUploadProtocol(java.lang.String uploadProtocol) {
          return (ReportStatus) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The name of the instance reporting this status. For SaaS the request will be rejected if
         * no instance exists under this name. Format is organizations/{org}/instances/{instance}
         */
        @com.google.api.client.util.Key
        private java.lang.String instance;

        /** The name of the instance reporting this status. For SaaS the request will be rejected if no
       instance exists under this name. Format is organizations/{org}/instances/{instance}
         */
        public java.lang.String getInstance() {
          return instance;
        }

        /**
         * The name of the instance reporting this status. For SaaS the request will be rejected if
         * no instance exists under this name. Format is organizations/{org}/instances/{instance}
         */
        public ReportStatus setInstance(java.lang.String instance) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(INSTANCE_PATTERN.matcher(instance).matches(),
                "Parameter instance must conform to the pattern " +
                "^organizations/[^/]+/instances/[^/]+$");
          }
          this.instance = instance;
          return this;
        }

        @Override
        public ReportStatus set(String parameterName, Object value) {
          return (ReportStatus) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Attachments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Attachments.List request = apigee.attachments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Attachments attachments() {
        return new Attachments();
      }

      /**
       * The "attachments" collection of methods.
       */
      public class Attachments {

        /**
         * Creates a new attachment of an environment to an instance. **Note:** Not supported for Apigee
         * hybrid.
         *
         * Create a request for the method "attachments.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the instance. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1InstanceAttachment}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1InstanceAttachment content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/attachments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+$");

          /**
           * Creates a new attachment of an environment to an instance. **Note:** Not supported for Apigee
           * hybrid.
           *
           * Create a request for the method "attachments.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the instance. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1InstanceAttachment}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1InstanceAttachment content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the instance. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the instance. Use the following structure in your request:
         `organizations/{org}/instances/{instance}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the instance. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an attachment. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "attachments.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the attachment. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}/attachments/{attachment}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+/attachments/[^/]+$");

          /**
           * Deletes an attachment. **Note:** Not supported for Apigee hybrid.
           *
           * Create a request for the method "attachments.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the attachment. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}/attachments/{attachment}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/attachments/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the attachment. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}/attachments/{attachment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the attachment. Use the following structure in your request:
         `organizations/{org}/instances/{instance}/attachments/{attachment}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the attachment. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}/attachments/{attachment}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/attachments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets an attachment. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "attachments.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the attachment. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}/attachments/{attachment}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1InstanceAttachment> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+/attachments/[^/]+$");

          /**
           * Gets an attachment. **Note:** Not supported for Apigee hybrid.
           *
           * Create a request for the method "attachments.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the attachment. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}/attachments/{attachment}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1InstanceAttachment.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/attachments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the attachment. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}/attachments/{attachment}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the attachment. Use the following structure in your request:
         `organizations/{org}/instances/{instance}/attachments/{attachment}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the attachment. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}/attachments/{attachment}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/attachments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all attachments to an instance. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "attachments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the organization. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListInstanceAttachmentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/attachments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+$");

          /**
           * Lists all attachments to an instance. **Note:** Not supported for Apigee hybrid.
           *
           * Create a request for the method "attachments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the organization. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListInstanceAttachmentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the organization. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the organization. Use the following structure in your request:
         `organizations/{org}/instances/{instance}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the organization. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Maximum number of instance attachments to return. Defaults to 25. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of instance attachments to return. Defaults to 25.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Maximum number of instance attachments to return. Defaults to 25. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Page token, returned by a previous ListInstanceAttachments call, that you can use to
           * retrieve the next page of content.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Page token, returned by a previous ListInstanceAttachments call, that you can use to retrieve the
         next page of content.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Page token, returned by a previous ListInstanceAttachments call, that you can use to
           * retrieve the next page of content.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Canaryevaluations collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Canaryevaluations.List request = apigee.canaryevaluations().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Canaryevaluations canaryevaluations() {
        return new Canaryevaluations();
      }

      /**
       * The "canaryevaluations" collection of methods.
       */
      public class Canaryevaluations {

        /**
         * Creates a new canary evaluation for an organization.
         *
         * Create a request for the method "canaryevaluations.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the organization. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CanaryEvaluation}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CanaryEvaluation content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/canaryevaluations";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+$");

          /**
           * Creates a new canary evaluation for an organization.
           *
           * Create a request for the method "canaryevaluations.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the organization. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CanaryEvaluation}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CanaryEvaluation content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the organization. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the organization. Use the following structure in your request:
         `organizations/{org}/instances/{instance}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the organization. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Gets a CanaryEvaluation for an organization.
         *
         * Create a request for the method "canaryevaluations.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the CanaryEvaluation. Use the following structure in your request:
         *        `organizations/{org}/instances/canaryevaluations/{evaluation}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CanaryEvaluation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+/canaryevaluations/[^/]+$");

          /**
           * Gets a CanaryEvaluation for an organization.
           *
           * Create a request for the method "canaryevaluations.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the CanaryEvaluation. Use the following structure in your request:
         *        `organizations/{org}/instances/canaryevaluations/{evaluation}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CanaryEvaluation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/canaryevaluations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the CanaryEvaluation. Use the following structure in your request:
           * `organizations/{org}/instances/canaryevaluations/{evaluation}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the CanaryEvaluation. Use the following structure in your request:
         `organizations/{org}/instances/canaryevaluations/{evaluation}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the CanaryEvaluation. Use the following structure in your request:
           * `organizations/{org}/instances/canaryevaluations/{evaluation}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/canaryevaluations/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the NatAddresses collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.NatAddresses.List request = apigee.natAddresses().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public NatAddresses natAddresses() {
        return new NatAddresses();
      }

      /**
       * The "natAddresses" collection of methods.
       */
      public class NatAddresses {

        /**
         * Activates the NAT address. The Apigee instance can now use this for Internet egress traffic.
         * **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "natAddresses.activate".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Activate#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the nat address. Use the following structure in your request:
         *        `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ActivateNatAddressRequest}
         * @return the request
         */
        public Activate activate(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ActivateNatAddressRequest content) throws java.io.IOException {
          Activate result = new Activate(name, content);
          initialize(result);
          return result;
        }

        public class Activate extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}:activate";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$");

          /**
           * Activates the NAT address. The Apigee instance can now use this for Internet egress traffic.
           * **Note:** Not supported for Apigee hybrid.
           *
           * Create a request for the method "natAddresses.activate".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Activate#execute()} method to invoke the remote operation. <p>
           * {@link
           * Activate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the nat address. Use the following structure in your request:
         *        `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ActivateNatAddressRequest}
           * @since 1.13
           */
          protected Activate(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ActivateNatAddressRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$");
            }
          }

          @Override
          public Activate set$Xgafv(java.lang.String $Xgafv) {
            return (Activate) super.set$Xgafv($Xgafv);
          }

          @Override
          public Activate setAccessToken(java.lang.String accessToken) {
            return (Activate) super.setAccessToken(accessToken);
          }

          @Override
          public Activate setAlt(java.lang.String alt) {
            return (Activate) super.setAlt(alt);
          }

          @Override
          public Activate setCallback(java.lang.String callback) {
            return (Activate) super.setCallback(callback);
          }

          @Override
          public Activate setFields(java.lang.String fields) {
            return (Activate) super.setFields(fields);
          }

          @Override
          public Activate setKey(java.lang.String key) {
            return (Activate) super.setKey(key);
          }

          @Override
          public Activate setOauthToken(java.lang.String oauthToken) {
            return (Activate) super.setOauthToken(oauthToken);
          }

          @Override
          public Activate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Activate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Activate setQuotaUser(java.lang.String quotaUser) {
            return (Activate) super.setQuotaUser(quotaUser);
          }

          @Override
          public Activate setUploadType(java.lang.String uploadType) {
            return (Activate) super.setUploadType(uploadType);
          }

          @Override
          public Activate setUploadProtocol(java.lang.String uploadProtocol) {
            return (Activate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the nat address. Use the following structure in your request:
           * `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the nat address. Use the following structure in your request:
         `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the nat address. Use the following structure in your request:
           * `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
           */
          public Activate setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Activate set(String parameterName, Object value) {
            return (Activate) super.set(parameterName, value);
          }
        }
        /**
         * Creates a NAT address. The address is created in the RESERVED state and a static external IP
         * address will be provisioned. At this time, the instance will not use this IP address for Internet
         * egress traffic. The address can be activated for use once any required firewall IP whitelisting
         * has been completed. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "natAddresses.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the instance. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1NatAddress}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1NatAddress content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+parent}/natAddresses";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+$");

          /**
           * Creates a NAT address. The address is created in the RESERVED state and a static external IP
           * address will be provisioned. At this time, the instance will not use this IP address for
           * Internet egress traffic. The address can be activated for use once any required firewall IP
           * whitelisting has been completed. **Note:** Not supported for Apigee hybrid.
           *
           * Create a request for the method "natAddresses.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the instance. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1NatAddress}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1NatAddress content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the instance. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the instance. Use the following structure in your request:
         `organizations/{org}/instances/{instance}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the instance. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes the NAT address. Connections that are actively using the address are drained before it is
         * removed. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "natAddresses.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the nat address. Use the following structure in your request:
         *        `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$");

          /**
           * Deletes the NAT address. Connections that are actively using the address are drained before it
           * is removed. **Note:** Not supported for Apigee hybrid.
           *
           * Create a request for the method "natAddresses.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the nat address. Use the following structure in your request:
         *        `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the nat address. Use the following structure in your request:
           * `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the nat address. Use the following structure in your request:
         `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the nat address. Use the following structure in your request:
           * `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the details of a NAT address. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "natAddresses.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the nat address. Use the following structure in your request:
         *        `organizations/{org}/instances/{instances}/natAddresses/{nataddress}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1NatAddress> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$");

          /**
           * Gets the details of a NAT address. **Note:** Not supported for Apigee hybrid.
           *
           * Create a request for the method "natAddresses.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the nat address. Use the following structure in your request:
         *        `organizations/{org}/instances/{instances}/natAddresses/{nataddress}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1NatAddress.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the nat address. Use the following structure in your request:
           * `organizations/{org}/instances/{instances}/natAddresses/{nataddress}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the nat address. Use the following structure in your request:
         `organizations/{org}/instances/{instances}/natAddresses/{nataddress}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the nat address. Use the following structure in your request:
           * `organizations/{org}/instances/{instances}/natAddresses/{nataddress}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+/natAddresses/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the NAT addresses for an Apigee instance. **Note:** Not supported for Apigee hybrid.
         *
         * Create a request for the method "natAddresses.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the instance. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListNatAddressesResponse> {

          private static final String REST_PATH = "v1/{+parent}/natAddresses";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/instances/[^/]+$");

          /**
           * Lists the NAT addresses for an Apigee instance. **Note:** Not supported for Apigee hybrid.
           *
           * Create a request for the method "natAddresses.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the instance. Use the following structure in your request:
         *        `organizations/{org}/instances/{instance}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListNatAddressesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the instance. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the instance. Use the following structure in your request:
         `organizations/{org}/instances/{instance}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the instance. Use the following structure in your request:
           * `organizations/{org}/instances/{instance}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/instances/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Maximum number of natAddresses to return. Defaults to 25. */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Maximum number of natAddresses to return. Defaults to 25.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /** Maximum number of natAddresses to return. Defaults to 25. */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Page token, returned from a previous ListNatAddresses call, that you can use to
           * retrieve the next page of content.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Page token, returned from a previous ListNatAddresses call, that you can use to retrieve the next
         page of content.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Page token, returned from a previous ListNatAddresses call, that you can use to
           * retrieve the next page of content.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Keyvaluemaps collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Keyvaluemaps.List request = apigee.keyvaluemaps().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Keyvaluemaps keyvaluemaps() {
      return new Keyvaluemaps();
    }

    /**
     * The "keyvaluemaps" collection of methods.
     */
    public class Keyvaluemaps {

      /**
       * Creates a key value map in an organization.
       *
       * Create a request for the method "keyvaluemaps.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in which to create the key value map file. Use the following
       *        structure in your request: `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

        private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a key value map in an organization.
         *
         * Create a request for the method "keyvaluemaps.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in which to create the key value map file. Use the following
       *        structure in your request: `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization in which to create the key value map file. Use the
         * following structure in your request: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in which to create the key value map file. Use the following
       structure in your request: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization in which to create the key value map file. Use the
         * following structure in your request: `organizations/{org}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a key value map from an organization.
       *
       * Create a request for the method "keyvaluemaps.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the key value map. Use the following structure in your request:
       *        `organizations/{org}/keyvaluemaps/{keyvaluemap}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/keyvaluemaps/[^/]+$");

        /**
         * Deletes a key value map from an organization.
         *
         * Create a request for the method "keyvaluemaps.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the key value map. Use the following structure in your request:
       *        `organizations/{org}/keyvaluemaps/{keyvaluemap}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/keyvaluemaps/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the key value map. Use the following structure in your request:
         * `organizations/{org}/keyvaluemaps/{keyvaluemap}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the key value map. Use the following structure in your request:
       `organizations/{org}/keyvaluemaps/{keyvaluemap}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the key value map. Use the following structure in your request:
         * `organizations/{org}/keyvaluemaps/{keyvaluemap}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/keyvaluemaps/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Entries collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Entries.List request = apigee.entries().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Entries entries() {
        return new Entries();
      }

      /**
       * The "entries" collection of methods.
       */
      public class Entries {

        /**
         * Creates key value entries in a key value map scoped to an organization, environment, or API
         * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
         *
         * Create a request for the method "entries.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
         *        the following structures in your request: *
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
         *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
         *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

          private static final String REST_PATH = "v1/{+parent}/entries";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/keyvaluemaps/[^/]+$");

          /**
           * Creates key value entries in a key value map scoped to an organization, environment, or API
           * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
         *        the following structures in your request: *
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
         *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
         *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/keyvaluemaps/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Scope as indicated by the URI in which to create the key value map entry. Use
           * **one** of the following structures in your request: *
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
         the following structures in your request: *
         `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
         `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
         `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Scope as indicated by the URI in which to create the key value map entry. Use
           * **one** of the following structures in your request: *
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/keyvaluemaps/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a key value entry from a key value map scoped to an organization, environment, or API
         * proxy. **Notes:** * After you delete the key value entry, the policy consuming the entry will
         * continue to function with its cached values for a few minutes. This is expected behavior. *
         * Supported for Apigee hybrid 1.8.x and higher.
         *
         * Create a request for the method "entries.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of
         *        the following structures in your request: *
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
         *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
         *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");

          /**
           * Deletes a key value entry from a key value map scoped to an organization, environment, or API
           * proxy. **Notes:** * After you delete the key value entry, the policy consuming the entry will
           * continue to function with its cached values for a few minutes. This is expected behavior. *
           * Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of
         *        the following structures in your request: *
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
         *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
         *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Scope as indicated by the URI in which to delete the key value map entry. Use
           * **one** of the following structures in your request: *
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. *
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/ent
           * ries/{entry}` *
           * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Scope as indicated by the URI in which to delete the key value map entry. Use **one** of
         the following structures in your request: *
         `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizati
         ons/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` *
         `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Scope as indicated by the URI in which to delete the key value map entry. Use
           * **one** of the following structures in your request: *
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. *
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/ent
           * ries/{entry}` *
           * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Get the key value entry value for a key value map scoped to an organization, environment, or API
         * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
         *
         * Create a request for the method "entries.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one**
         *        of the following structures in your request: *
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
         *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
         *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");

          /**
           * Get the key value entry value for a key value map scoped to an organization, environment, or
           * API proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use **one**
         *        of the following structures in your request: *
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `o
         *        rganizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/
         *        {entry}` * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Scope as indicated by the URI in which to fetch the key value map
           * entry/value. Use **one** of the following structures in your request: *
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. *
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/ent
           * ries/{entry}` *
           * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Scope as indicated by the URI in which to fetch the key value map entry/value. Use
         **one** of the following structures in your request: *
         `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. * `organizati
         ons/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}` *
         `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Scope as indicated by the URI in which to fetch the key value map
           * entry/value. Use **one** of the following structures in your request: *
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`. *
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/ent
           * ries/{entry}` *
           * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists key value entries for key values maps scoped to an organization, environment, or API proxy.
         * **Note**: Supported for Apigee hybrid 1.8.x and higher.
         *
         * Create a request for the method "entries.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the
         *        following structures in your request: *
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
         *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
         *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListKeyValueEntriesResponse> {

          private static final String REST_PATH = "v1/{+parent}/entries";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/keyvaluemaps/[^/]+$");

          /**
           * Lists key value entries for key values maps scoped to an organization, environment, or API
           * proxy. **Note**: Supported for Apigee hybrid 1.8.x and higher.
           *
           * Create a request for the method "entries.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the
         *        following structures in your request: *
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
         *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
         *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListKeyValueEntriesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/keyvaluemaps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Scope as indicated by the URI in which to list key value maps. Use **one** of
           * the following structures in your request: *
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Scope as indicated by the URI in which to list key value maps. Use **one** of the
         following structures in your request: *
         `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
         `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
         `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Scope as indicated by the URI in which to list key value maps. Use **one** of
           * the following structures in your request: *
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/keyvaluemaps/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Maximum number of key value entries to return. If unspecified, at most 100
           * entries will be returned.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. Maximum number of key value entries to return. If unspecified, at most 100 entries will
         be returned.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. Maximum number of key value entries to return. If unspecified, at most 100
           * entries will be returned.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. Page token. If provides, must be a valid key value entry returned from a
           * previous call that can be used to retrieve the next page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. Page token. If provides, must be a valid key value entry returned from a previous call
         that can be used to retrieve the next page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. Page token. If provides, must be a valid key value entry returned from a
           * previous call that can be used to retrieve the next page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Update key value entry scoped to an organization, environment, or API proxy for an existing key.
         *
         * Create a request for the method "entries.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
         *        the following structures in your request: *
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
         *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
         *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");

          /**
           * Update key value entry scoped to an organization, environment, or API proxy for an existing
           * key.
           *
           * Create a request for the method "entries.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
         *        the following structures in your request: *
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
         *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
         *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueEntry.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Scope as indicated by the URI in which to create the key value map entry. Use
           * **one** of the following structures in your request: *
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Scope as indicated by the URI in which to create the key value map entry. Use **one** of
         the following structures in your request: *
         `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
         `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
         `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Scope as indicated by the URI in which to create the key value map entry. Use
           * **one** of the following structures in your request: *
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}` *
           * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/keyvaluemaps/[^/]+/entries/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Operations.List request = apigee.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Gets the latest state of a long-running operation. Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/operations/[^/]+$");

        /**
         * Gets the latest state of a long-running operation. Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation's parent resource.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningListOperationsResponse> {

        private static final String REST_PATH = "v1/{+name}/operations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation's parent resource.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningListOperationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation's parent resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation's parent resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation's parent resource. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the OptimizedHostStats collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.OptimizedHostStats.List request = apigee.optimizedHostStats().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public OptimizedHostStats optimizedHostStats() {
      return new OptimizedHostStats();
    }

    /**
     * The "optimizedHostStats" collection of methods.
     */
    public class OptimizedHostStats {

      /**
       * Similar to GetHostStats except that the response is less verbose.
       *
       * Create a request for the method "optimizedHostStats.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Resource name for which the interactive query will be executed. Use the following format
       *        in your request: `organizations/{organization_id}/optimizedHostStats/{dimensions}`
       *        Dimensions let you view metrics in meaningful groupings, such as `apiproxy`,
       *        `target_host`. The value of dimensions should be a comma-separated list as shown below:
       *        `organizations/{org}/optimizedHostStats/apiproxy,request_verb`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1OptimizedStats> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/optimizedHostStats/.*$");

        /**
         * Similar to GetHostStats except that the response is less verbose.
         *
         * Create a request for the method "optimizedHostStats.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Resource name for which the interactive query will be executed. Use the following format
       *        in your request: `organizations/{organization_id}/optimizedHostStats/{dimensions}`
       *        Dimensions let you view metrics in meaningful groupings, such as `apiproxy`,
       *        `target_host`. The value of dimensions should be a comma-separated list as shown below:
       *        `organizations/{org}/optimizedHostStats/apiproxy,request_verb`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1OptimizedStats.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/optimizedHostStats/.*$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource name for which the interactive query will be executed. Use the
         * following format in your request:
         * `organizations/{organization_id}/optimizedHostStats/{dimensions}` Dimensions let you view
         * metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of
         * dimensions should be a comma-separated list as shown below:
         * `organizations/{org}/optimizedHostStats/apiproxy,request_verb`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Resource name for which the interactive query will be executed. Use the following format
       in your request: `organizations/{organization_id}/optimizedHostStats/{dimensions}` Dimensions let
       you view metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of
       dimensions should be a comma-separated list as shown below:
       `organizations/{org}/optimizedHostStats/apiproxy,request_verb`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Resource name for which the interactive query will be executed. Use the
         * following format in your request:
         * `organizations/{organization_id}/optimizedHostStats/{dimensions}` Dimensions let you view
         * metrics in meaningful groupings, such as `apiproxy`, `target_host`. The value of
         * dimensions should be a comma-separated list as shown below:
         * `organizations/{org}/optimizedHostStats/apiproxy,request_verb`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/optimizedHostStats/.*$");
          }
          this.name = name;
          return this;
        }

        /** No longer used by Apigee. Supported for backwards compatibility. */
        @com.google.api.client.util.Key
        private java.lang.String accuracy;

        /** No longer used by Apigee. Supported for backwards compatibility.
         */
        public java.lang.String getAccuracy() {
          return accuracy;
        }

        /** No longer used by Apigee. Supported for backwards compatibility. */
        public Get setAccuracy(java.lang.String accuracy) {
          this.accuracy = accuracy;
          return this;
        }

        /** Required. Hostname for which the interactive query will be executed. */
        @com.google.api.client.util.Key
        private java.lang.String envgroupHostname;

        /** Required. Hostname for which the interactive query will be executed.
         */
        public java.lang.String getEnvgroupHostname() {
          return envgroupHostname;
        }

        /** Required. Hostname for which the interactive query will be executed. */
        public Get setEnvgroupHostname(java.lang.String envgroupHostname) {
          this.envgroupHostname = envgroupHostname;
          return this;
        }

        /** Filter that enables you to drill-down on specific dimension values. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** Filter that enables you to drill-down on specific dimension values.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** Filter that enables you to drill-down on specific dimension values. */
        public Get setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /**
         * Maximum number of result items to return. The default and maximum value that can be
         * returned is 14400.
         */
        @com.google.api.client.util.Key
        private java.lang.String limit;

        /** Maximum number of result items to return. The default and maximum value that can be returned is
       14400.
         */
        public java.lang.String getLimit() {
          return limit;
        }

        /**
         * Maximum number of result items to return. The default and maximum value that can be
         * returned is 14400.
         */
        public Get setLimit(java.lang.String limit) {
          this.limit = limit;
          return this;
        }

        /**
         * Offset value. Use `offset` with `limit` to enable pagination of results. For example, to
         * display results 11-20, set limit to `10` and offset to `10`.
         */
        @com.google.api.client.util.Key
        private java.lang.String offset;

        /** Offset value. Use `offset` with `limit` to enable pagination of results. For example, to display
       results 11-20, set limit to `10` and offset to `10`.
         */
        public java.lang.String getOffset() {
          return offset;
        }

        /**
         * Offset value. Use `offset` with `limit` to enable pagination of results. For example, to
         * display results 11-20, set limit to `10` and offset to `10`.
         */
        public Get setOffset(java.lang.String offset) {
          this.offset = offset;
          return this;
        }

        /** No longer used by Apigee. Supported for backwards compatibility. */
        @com.google.api.client.util.Key
        private java.lang.Boolean realtime;

        /** No longer used by Apigee. Supported for backwards compatibility.
         */
        public java.lang.Boolean getRealtime() {
          return realtime;
        }

        /** No longer used by Apigee. Supported for backwards compatibility. */
        public Get setRealtime(java.lang.Boolean realtime) {
          this.realtime = realtime;
          return this;
        }

        /**
         * Required. Comma-separated list of metrics. For example:
         * `sum(message_count),sum(error_count)`
         */
        @com.google.api.client.util.Key
        private java.lang.String select;

        /** Required. Comma-separated list of metrics. For example: `sum(message_count),sum(error_count)`
         */
        public java.lang.String getSelect() {
          return select;
        }

        /**
         * Required. Comma-separated list of metrics. For example:
         * `sum(message_count),sum(error_count)`
         */
        public Get setSelect(java.lang.String select) {
          this.select = select;
          return this;
        }

        /**
         * Flag that specifies whether the sort order should be ascending or descending. Valid
         * values include `DESC` and `ASC`.
         */
        @com.google.api.client.util.Key
        private java.lang.String sort;

        /** Flag that specifies whether the sort order should be ascending or descending. Valid values include
       `DESC` and `ASC`.
         */
        public java.lang.String getSort() {
          return sort;
        }

        /**
         * Flag that specifies whether the sort order should be ascending or descending. Valid
         * values include `DESC` and `ASC`.
         */
        public Get setSort(java.lang.String sort) {
          this.sort = sort;
          return this;
        }

        /** Comma-separated list of columns used to sort the final result. */
        @com.google.api.client.util.Key
        private java.lang.String sortby;

        /** Comma-separated list of columns used to sort the final result.
         */
        public java.lang.String getSortby() {
          return sortby;
        }

        /** Comma-separated list of columns used to sort the final result. */
        public Get setSortby(java.lang.String sortby) {
          this.sortby = sortby;
          return this;
        }

        /**
         * Required. Time interval for the interactive query. Time range is specified in GMT as
         * `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`.
         */
        @com.google.api.client.util.Key
        private java.lang.String timeRange;

        /** Required. Time interval for the interactive query. Time range is specified in GMT as `start~end`.
       For example: `04/15/2017 00:00~05/15/2017 23:59`.
         */
        public java.lang.String getTimeRange() {
          return timeRange;
        }

        /**
         * Required. Time interval for the interactive query. Time range is specified in GMT as
         * `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`.
         */
        public Get setTimeRange(java.lang.String timeRange) {
          this.timeRange = timeRange;
          return this;
        }

        /**
         * Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`,
         * `week`, or `month`.
         */
        @com.google.api.client.util.Key
        private java.lang.String timeUnit;

        /** Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`, `week`,
       or `month`.
         */
        public java.lang.String getTimeUnit() {
          return timeUnit;
        }

        /**
         * Granularity of metrics returned. Valid values include: `second`, `minute`, `hour`, `day`,
         * `week`, or `month`.
         */
        public Get setTimeUnit(java.lang.String timeUnit) {
          this.timeUnit = timeUnit;
          return this;
        }

        /**
         * Top number of results to return. For example, to return the top 5 results, set `topk=5`.
         */
        @com.google.api.client.util.Key
        private java.lang.String topk;

        /** Top number of results to return. For example, to return the top 5 results, set `topk=5`.
         */
        public java.lang.String getTopk() {
          return topk;
        }

        /**
         * Top number of results to return. For example, to return the top 5 results, set `topk=5`.
         */
        public Get setTopk(java.lang.String topk) {
          this.topk = topk;
          return this;
        }

        /**
         * Flag that specifies whether to list timestamps in ascending (`true`) or descending
         * (`false`) order. Apigee recommends that you set this value to `true` if you are using
         * `sortby` with `sort=DESC`.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean tsAscending;

        /** Flag that specifies whether to list timestamps in ascending (`true`) or descending (`false`) order.
       Apigee recommends that you set this value to `true` if you are using `sortby` with `sort=DESC`.
         */
        public java.lang.Boolean getTsAscending() {
          return tsAscending;
        }

        /**
         * Flag that specifies whether to list timestamps in ascending (`true`) or descending
         * (`false`) order. Apigee recommends that you set this value to `true` if you are using
         * `sortby` with `sort=DESC`.
         */
        public Get setTsAscending(java.lang.Boolean tsAscending) {
          this.tsAscending = tsAscending;
          return this;
        }

        /** Timezone offset value. */
        @com.google.api.client.util.Key
        private java.lang.String tzo;

        /** Timezone offset value.
         */
        public java.lang.String getTzo() {
          return tzo;
        }

        /** Timezone offset value. */
        public Get setTzo(java.lang.String tzo) {
          this.tzo = tzo;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Reports collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Reports.List request = apigee.reports().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Reports reports() {
      return new Reports();
    }

    /**
     * The "reports" collection of methods.
     */
    public class Reports {

      /**
       * Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to create
       * custom dashboards in addition to the standard dashboards which are provided. The Custom Report in
       * its simplest form contains specifications about metrics, dimensions and filters. It is important
       * to note that the custom report by itself does not provide an executable entity. The Edge UI
       * converts the custom report definition into an analytics query and displays the result in a chart.
       *
       * Create a request for the method "reports.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name under which the Custom Report will be created. Must be of the
       *        form: `organizations/{organization_id}/reports`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport> {

        private static final String REST_PATH = "v1/{+parent}/reports";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to
         * create custom dashboards in addition to the standard dashboards which are provided. The Custom
         * Report in its simplest form contains specifications about metrics, dimensions and filters. It
         * is important to note that the custom report by itself does not provide an executable entity.
         * The Edge UI converts the custom report definition into an analytics query and displays the
         * result in a chart.
         *
         * Create a request for the method "reports.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name under which the Custom Report will be created. Must be of the
       *        form: `organizations/{organization_id}/reports`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name under which the Custom Report will be created.
         * Must be of the form: `organizations/{organization_id}/reports`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name under which the Custom Report will be created. Must be of
       the form: `organizations/{organization_id}/reports`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name under which the Custom Report will be created.
         * Must be of the form: `organizations/{organization_id}/reports`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an existing custom report definition
       *
       * Create a request for the method "reports.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeleteCustomReportResponse> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/reports/[^/]+$");

        /**
         * Deletes an existing custom report definition
         *
         * Create a request for the method "reports.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeleteCustomReportResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieve a custom report definition.
       *
       * Create a request for the method "reports.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/reports/[^/]+$");

        /**
         * Retrieve a custom report definition.
         *
         * Create a request for the method "reports.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Return a list of Custom Reports
       *
       * Create a request for the method "reports.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name under which the API product will be listed
       *        `organizations/{organization_id}/reports`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCustomReportsResponse> {

        private static final String REST_PATH = "v1/{+parent}/reports";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Return a list of Custom Reports
         *
         * Create a request for the method "reports.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name under which the API product will be listed
       *        `organizations/{organization_id}/reports`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCustomReportsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name under which the API product will be listed
         * `organizations/{organization_id}/reports`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name under which the API product will be listed
       `organizations/{organization_id}/reports`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name under which the API product will be listed
         * `organizations/{organization_id}/reports`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Set to 'true' to get expanded details about each custom report. */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Set to 'true' to get expanded details about each custom report.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /** Set to 'true' to get expanded details about each custom report. */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update an existing custom report definition
       *
       * Create a request for the method "reports.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/reports/[^/]+$");

        /**
         * Update an existing custom report definition
         *
         * Create a request for the method "reports.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the SecurityAssessmentResults collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.SecurityAssessmentResults.List request = apigee.securityAssessmentResults().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public SecurityAssessmentResults securityAssessmentResults() {
      return new SecurityAssessmentResults();
    }

    /**
     * The "securityAssessmentResults" collection of methods.
     */
    public class SecurityAssessmentResults {

      /**
       * Compute RAV2 security scores for a set of resources.
       *
       * Create a request for the method "securityAssessmentResults.batchCompute".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link BatchCompute#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the organization for which the score needs to be computed in the following format:
       *        `organizations/{org}/securityAssessmentResults`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest}
       * @return the request
       */
      public BatchCompute batchCompute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest content) throws java.io.IOException {
        BatchCompute result = new BatchCompute(name, content);
        initialize(result);
        return result;
      }

      public class BatchCompute extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse> {

        private static final String REST_PATH = "v1/{+name}:batchCompute";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/securityAssessmentResults$");

        /**
         * Compute RAV2 security scores for a set of resources.
         *
         * Create a request for the method "securityAssessmentResults.batchCompute".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link BatchCompute#execute()} method to invoke the remote operation. <p>
         * {@link
         * BatchCompute#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the organization for which the score needs to be computed in the following format:
       *        `organizations/{org}/securityAssessmentResults`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest}
         * @since 1.13
         */
        protected BatchCompute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsRequest content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1BatchComputeSecurityAssessmentResultsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityAssessmentResults$");
          }
        }

        @Override
        public BatchCompute set$Xgafv(java.lang.String $Xgafv) {
          return (BatchCompute) super.set$Xgafv($Xgafv);
        }

        @Override
        public BatchCompute setAccessToken(java.lang.String accessToken) {
          return (BatchCompute) super.setAccessToken(accessToken);
        }

        @Override
        public BatchCompute setAlt(java.lang.String alt) {
          return (BatchCompute) super.setAlt(alt);
        }

        @Override
        public BatchCompute setCallback(java.lang.String callback) {
          return (BatchCompute) super.setCallback(callback);
        }

        @Override
        public BatchCompute setFields(java.lang.String fields) {
          return (BatchCompute) super.setFields(fields);
        }

        @Override
        public BatchCompute setKey(java.lang.String key) {
          return (BatchCompute) super.setKey(key);
        }

        @Override
        public BatchCompute setOauthToken(java.lang.String oauthToken) {
          return (BatchCompute) super.setOauthToken(oauthToken);
        }

        @Override
        public BatchCompute setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (BatchCompute) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public BatchCompute setQuotaUser(java.lang.String quotaUser) {
          return (BatchCompute) super.setQuotaUser(quotaUser);
        }

        @Override
        public BatchCompute setUploadType(java.lang.String uploadType) {
          return (BatchCompute) super.setUploadType(uploadType);
        }

        @Override
        public BatchCompute setUploadProtocol(java.lang.String uploadProtocol) {
          return (BatchCompute) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization for which the score needs to be computed in the
         * following format: `organizations/{org}/securityAssessmentResults`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the organization for which the score needs to be computed in the following
       format: `organizations/{org}/securityAssessmentResults`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the organization for which the score needs to be computed in the
         * following format: `organizations/{org}/securityAssessmentResults`
         */
        public BatchCompute setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityAssessmentResults$");
          }
          this.name = name;
          return this;
        }

        @Override
        public BatchCompute set(String parameterName, Object value) {
          return (BatchCompute) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the SecurityProfiles collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.SecurityProfiles.List request = apigee.securityProfiles().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public SecurityProfiles securityProfiles() {
      return new SecurityProfiles();
    }

    /**
     * The "securityProfiles" collection of methods.
     */
    public class SecurityProfiles {

      /**
       * CreateSecurityProfile create a new custom security profile.
       *
       * Create a request for the method "securityProfiles.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of organization. Format: organizations/{org}
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile> {

        private static final String REST_PATH = "v1/{+parent}/securityProfiles";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * CreateSecurityProfile create a new custom security profile.
         *
         * Create a request for the method "securityProfiles.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of organization. Format: organizations/{org}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Name of organization. Format: organizations/{org} */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of organization. Format: organizations/{org}
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Name of organization. Format: organizations/{org} */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Required. The ID to use for the SecurityProfile, which will become the final component of
         * the action's resource name. This value should be 1-63 characters and validated by
         * "(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$)".
         */
        @com.google.api.client.util.Key
        private java.lang.String securityProfileId;

        /** Required. The ID to use for the SecurityProfile, which will become the final component of the
       action's resource name. This value should be 1-63 characters and validated by
       "(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$)".
         */
        public java.lang.String getSecurityProfileId() {
          return securityProfileId;
        }

        /**
         * Required. The ID to use for the SecurityProfile, which will become the final component of
         * the action's resource name. This value should be 1-63 characters and validated by
         * "(^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$)".
         */
        public Create setSecurityProfileId(java.lang.String securityProfileId) {
          this.securityProfileId = securityProfileId;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * DeleteSecurityProfile delete a profile with all its revisions.
       *
       * Create a request for the method "securityProfiles.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of profile. Format: organizations/{org}/securityProfiles/{profile}
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/securityProfiles/[^/]+$");

        /**
         * DeleteSecurityProfile delete a profile with all its revisions.
         *
         * Create a request for the method "securityProfiles.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of profile. Format: organizations/{org}/securityProfiles/{profile}
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfiles/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Name of profile. Format: organizations/{org}/securityProfiles/{profile} */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of profile. Format: organizations/{org}/securityProfiles/{profile}
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Name of profile. Format: organizations/{org}/securityProfiles/{profile} */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * GetSecurityProfile gets the specified security profile. Returns NOT_FOUND if security profile is
       * not present for the specified organization.
       *
       * Create a request for the method "securityProfiles.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Security profile in the following format:
       *        `organizations/{org}/securityProfiles/{profile}'. Profile may optionally contain revision
       *        ID. If revision ID is not provided, the response will contain latest revision by default.
       *        Example: organizations/testOrg/securityProfiles/testProfile@5
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/securityProfiles/[^/]+$");

        /**
         * GetSecurityProfile gets the specified security profile. Returns NOT_FOUND if security profile
         * is not present for the specified organization.
         *
         * Create a request for the method "securityProfiles.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Security profile in the following format:
       *        `organizations/{org}/securityProfiles/{profile}'. Profile may optionally contain revision
       *        ID. If revision ID is not provided, the response will contain latest revision by default.
       *        Example: organizations/testOrg/securityProfiles/testProfile@5
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfiles/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Security profile in the following format:
         * `organizations/{org}/securityProfiles/{profile}'. Profile may optionally contain revision
         * ID. If revision ID is not provided, the response will contain latest revision by default.
         * Example: organizations/testOrg/securityProfiles/testProfile@5
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Security profile in the following format:
       `organizations/{org}/securityProfiles/{profile}'. Profile may optionally contain revision ID. If
       revision ID is not provided, the response will contain latest revision by default. Example:
       organizations/testOrg/securityProfiles/testProfile@5
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Security profile in the following format:
         * `organizations/{org}/securityProfiles/{profile}'. Profile may optionally contain revision
         * ID. If revision ID is not provided, the response will contain latest revision by default.
         * Example: organizations/testOrg/securityProfiles/testProfile@5
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * ListSecurityProfiles lists all the security profiles associated with the org including attached
       * and unattached profiles.
       *
       * Create a request for the method "securityProfiles.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. For a specific organization, list of all the security profiles. Format:
       *        `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityProfilesResponse> {

        private static final String REST_PATH = "v1/{+parent}/securityProfiles";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * ListSecurityProfiles lists all the security profiles associated with the org including attached
         * and unattached profiles.
         *
         * Create a request for the method "securityProfiles.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. For a specific organization, list of all the security profiles. Format:
       *        `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityProfilesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. For a specific organization, list of all the security profiles. Format:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. For a specific organization, list of all the security profiles. Format:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. For a specific organization, list of all the security profiles. Format:
         * `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * The maximum number of profiles to return. The service may return fewer than this value.
         * If unspecified, at most 50 profiles will be returned.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of profiles to return. The service may return fewer than this value. If
       unspecified, at most 50 profiles will be returned.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of profiles to return. The service may return fewer than this value.
         * If unspecified, at most 50 profiles will be returned.
         */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListSecurityProfiles` call. Provide this to
         * retrieve the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListSecurityProfiles` call. Provide this to retrieve the
       subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListSecurityProfiles` call. Provide this to
         * retrieve the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * ListSecurityProfileRevisions lists all the revisions of the security profile.
       *
       * Create a request for the method "securityProfiles.listRevisions".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link ListRevisions#execute()} method to invoke the remote operation.
       *
       * @param name Required. For a specific profile, list all the revisions. Format:
       *        `organizations/{org}/securityProfiles/{profile}`
       * @return the request
       */
      public ListRevisions listRevisions(java.lang.String name) throws java.io.IOException {
        ListRevisions result = new ListRevisions(name);
        initialize(result);
        return result;
      }

      public class ListRevisions extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse> {

        private static final String REST_PATH = "v1/{+name}:listRevisions";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/securityProfiles/[^/]+$");

        /**
         * ListSecurityProfileRevisions lists all the revisions of the security profile.
         *
         * Create a request for the method "securityProfiles.listRevisions".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link ListRevisions#execute()} method to invoke the remote operation. <p>
         * {@link ListRevisions#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
         * equest)} must be called to initialize this instance immediately after invoking the constructor.
         * </p>
         *
         * @param name Required. For a specific profile, list all the revisions. Format:
       *        `organizations/{org}/securityProfiles/{profile}`
         * @since 1.13
         */
        protected ListRevisions(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfiles/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public ListRevisions set$Xgafv(java.lang.String $Xgafv) {
          return (ListRevisions) super.set$Xgafv($Xgafv);
        }

        @Override
        public ListRevisions setAccessToken(java.lang.String accessToken) {
          return (ListRevisions) super.setAccessToken(accessToken);
        }

        @Override
        public ListRevisions setAlt(java.lang.String alt) {
          return (ListRevisions) super.setAlt(alt);
        }

        @Override
        public ListRevisions setCallback(java.lang.String callback) {
          return (ListRevisions) super.setCallback(callback);
        }

        @Override
        public ListRevisions setFields(java.lang.String fields) {
          return (ListRevisions) super.setFields(fields);
        }

        @Override
        public ListRevisions setKey(java.lang.String key) {
          return (ListRevisions) super.setKey(key);
        }

        @Override
        public ListRevisions setOauthToken(java.lang.String oauthToken) {
          return (ListRevisions) super.setOauthToken(oauthToken);
        }

        @Override
        public ListRevisions setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ListRevisions) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ListRevisions setQuotaUser(java.lang.String quotaUser) {
          return (ListRevisions) super.setQuotaUser(quotaUser);
        }

        @Override
        public ListRevisions setUploadType(java.lang.String uploadType) {
          return (ListRevisions) super.setUploadType(uploadType);
        }

        @Override
        public ListRevisions setUploadProtocol(java.lang.String uploadProtocol) {
          return (ListRevisions) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. For a specific profile, list all the revisions. Format:
         * `organizations/{org}/securityProfiles/{profile}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. For a specific profile, list all the revisions. Format:
       `organizations/{org}/securityProfiles/{profile}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. For a specific profile, list all the revisions. Format:
         * `organizations/{org}/securityProfiles/{profile}`
         */
        public ListRevisions setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * The maximum number of profile revisions to return. The service may return fewer than this
         * value. If unspecified, at most 50 revisions will be returned.
         */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The maximum number of profile revisions to return. The service may return fewer than this value. If
       unspecified, at most 50 revisions will be returned.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /**
         * The maximum number of profile revisions to return. The service may return fewer than this
         * value. If unspecified, at most 50 revisions will be returned.
         */
        public ListRevisions setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * A page token, received from a previous `ListSecurityProfileRevisions` call. Provide this
         * to retrieve the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** A page token, received from a previous `ListSecurityProfileRevisions` call. Provide this to
       retrieve the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * A page token, received from a previous `ListSecurityProfileRevisions` call. Provide this
         * to retrieve the subsequent page.
         */
        public ListRevisions setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public ListRevisions set(String parameterName, Object value) {
          return (ListRevisions) super.set(parameterName, value);
        }
      }
      /**
       * UpdateSecurityProfile update the metadata of security profile.
       *
       * Create a request for the method "securityProfiles.patch".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Immutable. Name of the security profile resource. Format:
       *        organizations/{org}/securityProfiles/{profile}
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/securityProfiles/[^/]+$");

        /**
         * UpdateSecurityProfile update the metadata of security profile.
         *
         * Create a request for the method "securityProfiles.patch".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Immutable. Name of the security profile resource. Format:
       *        organizations/{org}/securityProfiles/{profile}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfile.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfiles/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Immutable. Name of the security profile resource. Format:
         * organizations/{org}/securityProfiles/{profile}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Immutable. Name of the security profile resource. Format:
       organizations/{org}/securityProfiles/{profile}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Immutable. Name of the security profile resource. Format:
         * organizations/{org}/securityProfiles/{profile}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfiles/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Required. The list of fields to update. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Required. The list of fields to update.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Required. The list of fields to update. */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Environments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Environments.List request = apigee.environments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Environments environments() {
        return new Environments();
      }

      /**
       * The "environments" collection of methods.
       */
      public class Environments {

        /**
         * ComputeEnvironmentScores calculates scores for requested time range for the specified security
         * profile and environment.
         *
         * Create a request for the method "environments.computeEnvironmentScores".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link ComputeEnvironmentScores#execute()} method to invoke the remote
         * operation.
         *
         * @param profileEnvironment Required. Name of organization and environment and profile id for which score needs to be computed.
         *        Format: organizations/{org}/securityProfiles/{profile}/environments/{env}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ComputeEnvironmentScoresRequest}
         * @return the request
         */
        public ComputeEnvironmentScores computeEnvironmentScores(java.lang.String profileEnvironment, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ComputeEnvironmentScoresRequest content) throws java.io.IOException {
          ComputeEnvironmentScores result = new ComputeEnvironmentScores(profileEnvironment, content);
          initialize(result);
          return result;
        }

        public class ComputeEnvironmentScores extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ComputeEnvironmentScoresResponse> {

          private static final String REST_PATH = "v1/{+profileEnvironment}:computeEnvironmentScores";

          private final java.util.regex.Pattern PROFILE_ENVIRONMENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/securityProfiles/[^/]+/environments/[^/]+$");

          /**
           * ComputeEnvironmentScores calculates scores for requested time range for the specified security
           * profile and environment.
           *
           * Create a request for the method "environments.computeEnvironmentScores".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link ComputeEnvironmentScores#execute()} method to invoke the remote
           * operation. <p> {@link ComputeEnvironmentScores#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param profileEnvironment Required. Name of organization and environment and profile id for which score needs to be computed.
         *        Format: organizations/{org}/securityProfiles/{profile}/environments/{env}
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ComputeEnvironmentScoresRequest}
           * @since 1.13
           */
          protected ComputeEnvironmentScores(java.lang.String profileEnvironment, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ComputeEnvironmentScoresRequest content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ComputeEnvironmentScoresResponse.class);
            this.profileEnvironment = com.google.api.client.util.Preconditions.checkNotNull(profileEnvironment, "Required parameter profileEnvironment must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PROFILE_ENVIRONMENT_PATTERN.matcher(profileEnvironment).matches(),
                  "Parameter profileEnvironment must conform to the pattern " +
                  "^organizations/[^/]+/securityProfiles/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public ComputeEnvironmentScores set$Xgafv(java.lang.String $Xgafv) {
            return (ComputeEnvironmentScores) super.set$Xgafv($Xgafv);
          }

          @Override
          public ComputeEnvironmentScores setAccessToken(java.lang.String accessToken) {
            return (ComputeEnvironmentScores) super.setAccessToken(accessToken);
          }

          @Override
          public ComputeEnvironmentScores setAlt(java.lang.String alt) {
            return (ComputeEnvironmentScores) super.setAlt(alt);
          }

          @Override
          public ComputeEnvironmentScores setCallback(java.lang.String callback) {
            return (ComputeEnvironmentScores) super.setCallback(callback);
          }

          @Override
          public ComputeEnvironmentScores setFields(java.lang.String fields) {
            return (ComputeEnvironmentScores) super.setFields(fields);
          }

          @Override
          public ComputeEnvironmentScores setKey(java.lang.String key) {
            return (ComputeEnvironmentScores) super.setKey(key);
          }

          @Override
          public ComputeEnvironmentScores setOauthToken(java.lang.String oauthToken) {
            return (ComputeEnvironmentScores) super.setOauthToken(oauthToken);
          }

          @Override
          public ComputeEnvironmentScores setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ComputeEnvironmentScores) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ComputeEnvironmentScores setQuotaUser(java.lang.String quotaUser) {
            return (ComputeEnvironmentScores) super.setQuotaUser(quotaUser);
          }

          @Override
          public ComputeEnvironmentScores setUploadType(java.lang.String uploadType) {
            return (ComputeEnvironmentScores) super.setUploadType(uploadType);
          }

          @Override
          public ComputeEnvironmentScores setUploadProtocol(java.lang.String uploadProtocol) {
            return (ComputeEnvironmentScores) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of organization and environment and profile id for which score needs to
           * be computed. Format: organizations/{org}/securityProfiles/{profile}/environments/{env}
           */
          @com.google.api.client.util.Key
          private java.lang.String profileEnvironment;

          /** Required. Name of organization and environment and profile id for which score needs to be computed.
         Format: organizations/{org}/securityProfiles/{profile}/environments/{env}
           */
          public java.lang.String getProfileEnvironment() {
            return profileEnvironment;
          }

          /**
           * Required. Name of organization and environment and profile id for which score needs to
           * be computed. Format: organizations/{org}/securityProfiles/{profile}/environments/{env}
           */
          public ComputeEnvironmentScores setProfileEnvironment(java.lang.String profileEnvironment) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PROFILE_ENVIRONMENT_PATTERN.matcher(profileEnvironment).matches(),
                  "Parameter profileEnvironment must conform to the pattern " +
                  "^organizations/[^/]+/securityProfiles/[^/]+/environments/[^/]+$");
            }
            this.profileEnvironment = profileEnvironment;
            return this;
          }

          @Override
          public ComputeEnvironmentScores set(String parameterName, Object value) {
            return (ComputeEnvironmentScores) super.set(parameterName, value);
          }
        }
        /**
         * CreateSecurityProfileEnvironmentAssociation creates profile environment association i.e. attaches
         * environment to security profile.
         *
         * Create a request for the method "environments.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of organization and security profile ID. Format:
         *        organizations/{org}/securityProfiles/{profile}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation> {

          private static final String REST_PATH = "v1/{+parent}/environments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/securityProfiles/[^/]+$");

          /**
           * CreateSecurityProfileEnvironmentAssociation creates profile environment association i.e.
           * attaches environment to security profile.
           *
           * Create a request for the method "environments.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of organization and security profile ID. Format:
         *        organizations/{org}/securityProfiles/{profile}
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/securityProfiles/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of organization and security profile ID. Format:
           * organizations/{org}/securityProfiles/{profile}
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of organization and security profile ID. Format:
         organizations/{org}/securityProfiles/{profile}
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of organization and security profile ID. Format:
           * organizations/{org}/securityProfiles/{profile}
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/securityProfiles/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * DeleteSecurityProfileEnvironmentAssociation removes profile environment association i.e. detaches
         * environment from security profile.
         *
         * Create a request for the method "environments.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the environment attachment to delete. Format:
         *        organizations/{org}/securityProfiles/{profile}/environments/{env}
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/securityProfiles/[^/]+/environments/[^/]+$");

          /**
           * DeleteSecurityProfileEnvironmentAssociation removes profile environment association i.e.
           * detaches environment from security profile.
           *
           * Create a request for the method "environments.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the environment attachment to delete. Format:
         *        organizations/{org}/securityProfiles/{profile}/environments/{env}
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/securityProfiles/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment attachment to delete. Format:
           * organizations/{org}/securityProfiles/{profile}/environments/{env}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the environment attachment to delete. Format:
         organizations/{org}/securityProfiles/{profile}/environments/{env}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the environment attachment to delete. Format:
           * organizations/{org}/securityProfiles/{profile}/environments/{env}
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/securityProfiles/[^/]+/environments/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the SecurityProfilesV2 collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.SecurityProfilesV2.List request = apigee.securityProfilesV2().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public SecurityProfilesV2 securityProfilesV2() {
      return new SecurityProfilesV2();
    }

    /**
     * The "securityProfilesV2" collection of methods.
     */
    public class SecurityProfilesV2 {

      /**
       * Create a security profile v2.
       *
       * Create a request for the method "securityProfilesV2.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent resource name. Format: `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2 content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2> {

        private static final String REST_PATH = "v1/{+parent}/securityProfilesV2";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Create a security profile v2.
         *
         * Create a request for the method "securityProfilesV2.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent resource name. Format: `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2 content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. The parent resource name. Format: `organizations/{org}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent resource name. Format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. The parent resource name. Format: `organizations/{org}` */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Required. The security profile id. */
        @com.google.api.client.util.Key
        private java.lang.String securityProfileV2Id;

        /** Required. The security profile id.
         */
        public java.lang.String getSecurityProfileV2Id() {
          return securityProfileV2Id;
        }

        /** Required. The security profile id. */
        public Create setSecurityProfileV2Id(java.lang.String securityProfileV2Id) {
          this.securityProfileV2Id = securityProfileV2Id;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete a security profile v2.
       *
       * Create a request for the method "securityProfilesV2.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the security profile v2 to delete. Format:
       *        `organizations/{org}/securityProfilesV2/{profile}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/securityProfilesV2/[^/]+$");

        /**
         * Delete a security profile v2.
         *
         * Create a request for the method "securityProfilesV2.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the security profile v2 to delete. Format:
       *        `organizations/{org}/securityProfilesV2/{profile}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfilesV2/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the security profile v2 to delete. Format:
         * `organizations/{org}/securityProfilesV2/{profile}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the security profile v2 to delete. Format:
       `organizations/{org}/securityProfilesV2/{profile}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the security profile v2 to delete. Format:
         * `organizations/{org}/securityProfilesV2/{profile}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfilesV2/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Get a security profile v2.
       *
       * Create a request for the method "securityProfilesV2.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the security profile v2 to get. Format:
       *        `organizations/{org}/securityProfilesV2/{profile}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/securityProfilesV2/[^/]+$");

        /**
         * Get a security profile v2.
         *
         * Create a request for the method "securityProfilesV2.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the security profile v2 to get. Format:
       *        `organizations/{org}/securityProfilesV2/{profile}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfilesV2/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the security profile v2 to get. Format:
         * `organizations/{org}/securityProfilesV2/{profile}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the security profile v2 to get. Format:
       `organizations/{org}/securityProfilesV2/{profile}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the security profile v2 to get. Format:
         * `organizations/{org}/securityProfilesV2/{profile}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfilesV2/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List security profiles v2.
       *
       * Create a request for the method "securityProfilesV2.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. For a specific organization, list of all the security profiles. Format:
       *        `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityProfilesV2Response> {

        private static final String REST_PATH = "v1/{+parent}/securityProfilesV2";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * List security profiles v2.
         *
         * Create a request for the method "securityProfilesV2.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. For a specific organization, list of all the security profiles. Format:
       *        `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSecurityProfilesV2Response.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. For a specific organization, list of all the security profiles. Format:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. For a specific organization, list of all the security profiles. Format:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. For a specific organization, list of all the security profiles. Format:
         * `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Optional. The maximum number of profiles to return */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** Optional. The maximum number of profiles to return
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** Optional. The maximum number of profiles to return */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /**
         * Optional. A page token, received from a previous `ListSecurityProfilesV2` call. Provide
         * this to retrieve the subsequent page.
         */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** Optional. A page token, received from a previous `ListSecurityProfilesV2` call. Provide this to
       retrieve the subsequent page.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /**
         * Optional. A page token, received from a previous `ListSecurityProfilesV2` call. Provide
         * this to retrieve the subsequent page.
         */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update a security profile V2.
       *
       * Create a request for the method "securityProfilesV2.patch".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       *
       * @param name Identifier. Name of the security profile v2 resource. Format:
       *        organizations/{org}/securityProfilesV2/{profile}
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2}
       * @return the request
       */
      public Patch patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2 content) throws java.io.IOException {
        Patch result = new Patch(name, content);
        initialize(result);
        return result;
      }

      public class Patch extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/securityProfilesV2/[^/]+$");

        /**
         * Update a security profile V2.
         *
         * Create a request for the method "securityProfilesV2.patch".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
         * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Identifier. Name of the security profile v2 resource. Format:
       *        organizations/{org}/securityProfilesV2/{profile}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2}
         * @since 1.13
         */
        protected Patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2 content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SecurityProfileV2.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfilesV2/[^/]+$");
          }
        }

        @Override
        public Patch set$Xgafv(java.lang.String $Xgafv) {
          return (Patch) super.set$Xgafv($Xgafv);
        }

        @Override
        public Patch setAccessToken(java.lang.String accessToken) {
          return (Patch) super.setAccessToken(accessToken);
        }

        @Override
        public Patch setAlt(java.lang.String alt) {
          return (Patch) super.setAlt(alt);
        }

        @Override
        public Patch setCallback(java.lang.String callback) {
          return (Patch) super.setCallback(callback);
        }

        @Override
        public Patch setFields(java.lang.String fields) {
          return (Patch) super.setFields(fields);
        }

        @Override
        public Patch setKey(java.lang.String key) {
          return (Patch) super.setKey(key);
        }

        @Override
        public Patch setOauthToken(java.lang.String oauthToken) {
          return (Patch) super.setOauthToken(oauthToken);
        }

        @Override
        public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Patch) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Patch setQuotaUser(java.lang.String quotaUser) {
          return (Patch) super.setQuotaUser(quotaUser);
        }

        @Override
        public Patch setUploadType(java.lang.String uploadType) {
          return (Patch) super.setUploadType(uploadType);
        }

        @Override
        public Patch setUploadProtocol(java.lang.String uploadProtocol) {
          return (Patch) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Identifier. Name of the security profile v2 resource. Format:
         * organizations/{org}/securityProfilesV2/{profile}
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Identifier. Name of the security profile v2 resource. Format:
       organizations/{org}/securityProfilesV2/{profile}
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Identifier. Name of the security profile v2 resource. Format:
         * organizations/{org}/securityProfilesV2/{profile}
         */
        public Patch setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/securityProfilesV2/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /**
         * Optional. The list of fields to update. Valid fields to update are `description` and
         * `profileAssessmentConfigs`.
         */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Optional. The list of fields to update. Valid fields to update are `description` and
       `profileAssessmentConfigs`.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /**
         * Optional. The list of fields to update. Valid fields to update are `description` and
         * `profileAssessmentConfigs`.
         */
        public Patch setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public Patch set(String parameterName, Object value) {
          return (Patch) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Sharedflows collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Sharedflows.List request = apigee.sharedflows().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Sharedflows sharedflows() {
      return new Sharedflows();
    }

    /**
     * The "sharedflows" collection of methods.
     */
    public class Sharedflows {

      /**
       * Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow
       * already exists, this creates a new revision of it. If the shared flow does not exist, this
       * creates it. Once imported, the shared flow revision must be deployed before it can be accessed at
       * runtime. The size limit of a shared flow bundle is 15 MB.
       *
       * Create a request for the method "sharedflows.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the parent organization under which to create the shared flow. Must be of the
       *        form: `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision> {

        private static final String REST_PATH = "v1/{+parent}/sharedflows";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow
         * already exists, this creates a new revision of it. If the shared flow does not exist, this
         * creates it. Once imported, the shared flow revision must be deployed before it can be accessed
         * at runtime. The size limit of a shared flow bundle is 15 MB.
         *
         * Create a request for the method "sharedflows.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the parent organization under which to create the shared flow. Must be of the
       *        form: `organizations/{organization_id}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the parent organization under which to create the shared flow. Must
         * be of the form: `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the parent organization under which to create the shared flow. Must be of the
       form: `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the parent organization under which to create the shared flow. Must
         * be of the form: `organizations/{organization_id}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Required. Must be set to either `import` or `validate`. */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Required. Must be set to either `import` or `validate`.
         */
        public java.lang.String getAction() {
          return action;
        }

        /** Required. Must be set to either `import` or `validate`. */
        public Create setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        /** Required. The name to give the shared flow */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name to give the shared flow
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name to give the shared flow */
        public Create setName(java.lang.String name) {
          this.name = name;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a shared flow and all it's revisions. The shared flow must be undeployed before you can
       * delete it.
       *
       * Create a request for the method "sharedflows.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. shared flow name of the form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+$");

        /**
         * Deletes a shared flow and all it's revisions. The shared flow must be undeployed before you can
         * delete it.
         *
         * Create a request for the method "sharedflows.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. shared flow name of the form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. shared flow name of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. shared flow name of the form:
       `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. shared flow name of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a shared flow by name, including a list of its revisions.
       *
       * Create a request for the method "sharedflows.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the shared flow to get. Must be of the form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+$");

        /**
         * Gets a shared flow by name, including a list of its revisions.
         *
         * Create a request for the method "sharedflows.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the shared flow to get. Must be of the form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the shared flow to get. Must be of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the shared flow to get. Must be of the form:
       `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the shared flow to get. Must be of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all shared flows in the organization.
       *
       * Create a request for the method "sharedflows.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the parent organization under which to get shared flows. Must be of the form:
       *        `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSharedFlowsResponse> {

        private static final String REST_PATH = "v1/{+parent}/sharedflows";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all shared flows in the organization.
         *
         * Create a request for the method "sharedflows.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the parent organization under which to get shared flows. Must be of the form:
       *        `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSharedFlowsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the parent organization under which to get shared flows. Must be of
         * the form: `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the parent organization under which to get shared flows. Must be of the form:
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the parent organization under which to get shared flows. Must be of
         * the form: `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Indicates whether to include shared flow metadata in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeMetaData;

        /** Indicates whether to include shared flow metadata in the response.
         */
        public java.lang.Boolean getIncludeMetaData() {
          return includeMetaData;
        }

        /** Indicates whether to include shared flow metadata in the response. */
        public List setIncludeMetaData(java.lang.Boolean includeMetaData) {
          this.includeMetaData = includeMetaData;
          return this;
        }

        /** Indicates whether to include a list of revisions in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeRevisions;

        /** Indicates whether to include a list of revisions in the response.
         */
        public java.lang.Boolean getIncludeRevisions() {
          return includeRevisions;
        }

        /** Indicates whether to include a list of revisions in the response. */
        public List setIncludeRevisions(java.lang.Boolean includeRevisions) {
          this.includeRevisions = includeRevisions;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Deployments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Deployments deployments() {
        return new Deployments();
      }

      /**
       * The "deployments" collection of methods.
       */
      public class Deployments {

        /**
         * Lists all deployments of a shared flow.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the shared flow for which to return deployment information in the following
         *        format: `organizations/{org}/sharedflows/{sharedflow}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+$");

          /**
           * Lists all deployments of a shared flow.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the shared flow for which to return deployment information in the following
         *        format: `organizations/{org}/sharedflows/{sharedflow}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the shared flow for which to return deployment information in the
           * following format: `organizations/{org}/sharedflows/{sharedflow}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the shared flow for which to return deployment information in the following
         format: `organizations/{org}/sharedflows/{sharedflow}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the shared flow for which to return deployment information in the
           * following format: `organizations/{org}/sharedflows/{sharedflow}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Revisions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Revisions revisions() {
        return new Revisions();
      }

      /**
       * The "revisions" collection of methods.
       */
      public class Revisions {

        /**
         * Deletes a shared flow and all associated policies, resources, and revisions. You must undeploy
         * the shared flow before deleting it.
         *
         * Create a request for the method "revisions.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the shared flow revision to delete. Must be of the form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

          /**
           * Deletes a shared flow and all associated policies, resources, and revisions. You must undeploy
           * the shared flow before deleting it.
           *
           * Create a request for the method "revisions.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the shared flow revision to delete. Must be of the form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the shared flow revision to delete. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the shared flow revision to delete. Must be of the form:
         `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the shared flow revision to delete. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a revision of a shared flow. To download the shared flow configuration bundle for the
         * specified revision as a zip file, set the `format` query parameter to `bundle`. If you are using
         * curl, specify `-o filename.zip` to save the output to a file; otherwise, it displays to `stdout`.
         * Then, develop the shared flow configuration locally and upload the updated sharedFlow
         * configuration revision, as described in [updateSharedFlowRevision](updateSharedFlowRevision).
         *
         * Create a request for the method "revisions.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the shared flow revision to get. Must be of the form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

          /**
           * Gets a revision of a shared flow. To download the shared flow configuration bundle for the
           * specified revision as a zip file, set the `format` query parameter to `bundle`. If you are
           * using curl, specify `-o filename.zip` to save the output to a file; otherwise, it displays to
           * `stdout`. Then, develop the shared flow configuration locally and upload the updated sharedFlow
           * configuration revision, as described in [updateSharedFlowRevision](updateSharedFlowRevision).
           *
           * Create a request for the method "revisions.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the shared flow revision to get. Must be of the form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the shared flow revision to get. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the shared flow revision to get. Must be of the form:
         `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the shared flow revision to get. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the
           * bundle metadata is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String format;

          /** Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the bundle metadata
         is returned.
           */
          public java.lang.String getFormat() {
            return format;
          }

          /**
           * Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the
           * bundle metadata is returned.
           */
          public Get setFormat(java.lang.String format) {
            this.format = format;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Updates a shared flow revision. This operation is only allowed on revisions which have never been
         * deployed. After deployment a revision becomes immutable, even if it becomes undeployed. The
         * payload is a ZIP-formatted shared flow. Content type must be either multipart/form-data or
         * application/octet-stream.
         *
         * Create a request for the method "revisions.updateSharedFlowRevision".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateSharedFlowRevision#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. The name of the shared flow revision to update. Must be of the form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public UpdateSharedFlowRevision updateSharedFlowRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          UpdateSharedFlowRevision result = new UpdateSharedFlowRevision(name, content);
          initialize(result);
          return result;
        }

        public class UpdateSharedFlowRevision extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

          /**
           * Updates a shared flow revision. This operation is only allowed on revisions which have never
           * been deployed. After deployment a revision becomes immutable, even if it becomes undeployed.
           * The payload is a ZIP-formatted shared flow. Content type must be either multipart/form-data or
           * application/octet-stream.
           *
           * Create a request for the method "revisions.updateSharedFlowRevision".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateSharedFlowRevision#execute()} method to invoke the remote
           * operation. <p> {@link UpdateSharedFlowRevision#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. The name of the shared flow revision to update. Must be of the form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected UpdateSharedFlowRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public UpdateSharedFlowRevision set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateSharedFlowRevision) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateSharedFlowRevision setAccessToken(java.lang.String accessToken) {
            return (UpdateSharedFlowRevision) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateSharedFlowRevision setAlt(java.lang.String alt) {
            return (UpdateSharedFlowRevision) super.setAlt(alt);
          }

          @Override
          public UpdateSharedFlowRevision setCallback(java.lang.String callback) {
            return (UpdateSharedFlowRevision) super.setCallback(callback);
          }

          @Override
          public UpdateSharedFlowRevision setFields(java.lang.String fields) {
            return (UpdateSharedFlowRevision) super.setFields(fields);
          }

          @Override
          public UpdateSharedFlowRevision setKey(java.lang.String key) {
            return (UpdateSharedFlowRevision) super.setKey(key);
          }

          @Override
          public UpdateSharedFlowRevision setOauthToken(java.lang.String oauthToken) {
            return (UpdateSharedFlowRevision) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateSharedFlowRevision setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateSharedFlowRevision) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateSharedFlowRevision setQuotaUser(java.lang.String quotaUser) {
            return (UpdateSharedFlowRevision) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateSharedFlowRevision setUploadType(java.lang.String uploadType) {
            return (UpdateSharedFlowRevision) super.setUploadType(uploadType);
          }

          @Override
          public UpdateSharedFlowRevision setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateSharedFlowRevision) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the shared flow revision to update. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the shared flow revision to update. Must be of the form:
         `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the shared flow revision to update. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public UpdateSharedFlowRevision setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. It is kept
           * for compatibility with existing APIs. Must be `true` or `false` if provided.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validate;

          /** Ignored. All uploads are validated regardless of the value of this field. It is kept for
         compatibility with existing APIs. Must be `true` or `false` if provided.
           */
          public java.lang.Boolean getValidate() {
            return validate;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. It is kept
           * for compatibility with existing APIs. Must be `true` or `false` if provided.
           */
          public UpdateSharedFlowRevision setValidate(java.lang.Boolean validate) {
            this.validate = validate;
            return this;
          }

          @Override
          public UpdateSharedFlowRevision set(String parameterName, Object value) {
            return (UpdateSharedFlowRevision) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of a shared flow revision.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the API proxy revision for which to return deployment information in the following
           *        format: `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

            /**
             * Lists all deployments of a shared flow revision.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the API proxy revision for which to return deployment information in the following
           *        format: `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format:
             * `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the API proxy revision for which to return deployment information in the
           following format: `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format:
             * `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the Sites collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Sites.List request = apigee.sites().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Sites sites() {
      return new Sites();
    }

    /**
     * The "sites" collection of methods.
     */
    public class Sites {

      /**
       * An accessor for creating requests from the Apicategories collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apicategories.List request = apigee.apicategories().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apicategories apicategories() {
        return new Apicategories();
      }

      /**
       * The "apicategories" collection of methods.
       */
      public class Apicategories {

        /**
         * Creates a new API category.
         *
         * Create a request for the method "apicategories.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategory}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategory content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategoryResponse> {

          private static final String REST_PATH = "v1/{+parent}/apicategories";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Creates a new API category.
           *
           * Create a request for the method "apicategories.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategory}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategory content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategoryResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an API category.
         *
         * Create a request for the method "apicategories.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the category. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apicategories/{apicategory}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeleteResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$");

          /**
           * Deletes an API category.
           *
           * Create a request for the method "apicategories.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the category. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeleteResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the category. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the category. Use the following structure in your request:
         `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the category. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets an API category.
         *
         * Create a request for the method "apicategories.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the category. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apicategories/{apicategory}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategoryResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$");

          /**
           * Gets an API category.
           *
           * Create a request for the method "apicategories.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the category. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategoryResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the category. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the category. Use the following structure in your request:
         `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the category. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns the API categories associated with a portal.
         *
         * Create a request for the method "apicategories.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiCategoriesResponse> {

          private static final String REST_PATH = "v1/{+parent}/apicategories";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Returns the API categories associated with a portal.
           *
           * Create a request for the method "apicategories.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiCategoriesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an API category.
         *
         * Create a request for the method "apicategories.patch".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the category. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apicategories/{apicategory}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategory}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategory content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategoryResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$");

          /**
           * Updates an API category.
           *
           * Create a request for the method "apicategories.patch".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the category. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategory}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategory content) {
            super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiCategoryResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the category. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the category. Use the following structure in your request:
         `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the category. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apicategories/{apicategory}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Apidocs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apidocs.List request = apigee.apidocs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apidocs apidocs() {
        return new Apidocs();
      }

      /**
       * The "apidocs" collection of methods.
       */
      public class Apidocs {

        /**
         * Creates a new catalog item.
         *
         * Create a request for the method "apidocs.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocResponse> {

          private static final String REST_PATH = "v1/{+parent}/apidocs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Creates a new catalog item.
           *
           * Create a request for the method "apidocs.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a catalog item.
         *
         * Create a request for the method "apidocs.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the catalog item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeleteResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");

          /**
           * Deletes a catalog item.
           *
           * Create a request for the method "apidocs.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the catalog item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeleteResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the catalog item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the catalog item. Use the following structure in your request:
         `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the catalog item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a catalog item.
         *
         * Create a request for the method "apidocs.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the catalog item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");

          /**
           * Gets a catalog item.
           *
           * Create a request for the method "apidocs.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the catalog item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the catalog item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the catalog item. Use the following structure in your request:
         `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the catalog item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Gets the documentation for the specified catalog item.
         *
         * Create a request for the method "apidocs.getDocumentation".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetDocumentation#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the catalog item documentation. Use the following structure in your
         *        request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
         * @return the request
         */
        public GetDocumentation getDocumentation(java.lang.String name) throws java.io.IOException {
          GetDocumentation result = new GetDocumentation(name);
          initialize(result);
          return result;
        }

        public class GetDocumentation extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocDocumentationResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+/documentation$");

          /**
           * Gets the documentation for the specified catalog item.
           *
           * Create a request for the method "apidocs.getDocumentation".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetDocumentation#execute()} method to invoke the remote operation.
           * <p> {@link GetDocumentation#initialize(com.google.api.client.googleapis.services.AbstractGoogle
           * ClientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param name Required. Resource name of the catalog item documentation. Use the following structure in your
         *        request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
           * @since 1.13
           */
          protected GetDocumentation(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocDocumentationResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+/documentation$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetDocumentation set$Xgafv(java.lang.String $Xgafv) {
            return (GetDocumentation) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetDocumentation setAccessToken(java.lang.String accessToken) {
            return (GetDocumentation) super.setAccessToken(accessToken);
          }

          @Override
          public GetDocumentation setAlt(java.lang.String alt) {
            return (GetDocumentation) super.setAlt(alt);
          }

          @Override
          public GetDocumentation setCallback(java.lang.String callback) {
            return (GetDocumentation) super.setCallback(callback);
          }

          @Override
          public GetDocumentation setFields(java.lang.String fields) {
            return (GetDocumentation) super.setFields(fields);
          }

          @Override
          public GetDocumentation setKey(java.lang.String key) {
            return (GetDocumentation) super.setKey(key);
          }

          @Override
          public GetDocumentation setOauthToken(java.lang.String oauthToken) {
            return (GetDocumentation) super.setOauthToken(oauthToken);
          }

          @Override
          public GetDocumentation setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetDocumentation) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetDocumentation setQuotaUser(java.lang.String quotaUser) {
            return (GetDocumentation) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetDocumentation setUploadType(java.lang.String uploadType) {
            return (GetDocumentation) super.setUploadType(uploadType);
          }

          @Override
          public GetDocumentation setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetDocumentation) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource name of the catalog item documentation. Use the following structure
           * in your request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the catalog item documentation. Use the following structure in your
         request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource name of the catalog item documentation. Use the following structure
           * in your request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
           */
          public GetDocumentation setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+/documentation$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetDocumentation set(String parameterName, Object value) {
            return (GetDocumentation) super.set(parameterName, value);
          }
        }
        /**
         * Returns the catalog items associated with a portal.
         *
         * Create a request for the method "apidocs.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiDocsResponse> {

          private static final String REST_PATH = "v1/{+parent}/apidocs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Returns the catalog items associated with a portal.
           *
           * Create a request for the method "apidocs.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiDocsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The maximum number of items to return. The service may return fewer than this
           * value. If unspecified, at most 25 books will be returned. The maximum value is 100;
           * values above 100 will be coerced to 100.
           */
          @com.google.api.client.util.Key
          private java.lang.Integer pageSize;

          /** Optional. The maximum number of items to return. The service may return fewer than this value. If
         unspecified, at most 25 books will be returned. The maximum value is 100; values above 100 will be
         coerced to 100.
           */
          public java.lang.Integer getPageSize() {
            return pageSize;
          }

          /**
           * Optional. The maximum number of items to return. The service may return fewer than this
           * value. If unspecified, at most 25 books will be returned. The maximum value is 100;
           * values above 100 will be coerced to 100.
           */
          public List setPageSize(java.lang.Integer pageSize) {
            this.pageSize = pageSize;
            return this;
          }

          /**
           * Optional. A page token, received from a previous `ListApiDocs` call. Provide this to
           * retrieve the subsequent page.
           */
          @com.google.api.client.util.Key
          private java.lang.String pageToken;

          /** Optional. A page token, received from a previous `ListApiDocs` call. Provide this to retrieve the
         subsequent page.
           */
          public java.lang.String getPageToken() {
            return pageToken;
          }

          /**
           * Optional. A page token, received from a previous `ListApiDocs` call. Provide this to
           * retrieve the subsequent page.
           */
          public List setPageToken(java.lang.String pageToken) {
            this.pageToken = pageToken;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a catalog item.
         *
         * Create a request for the method "apidocs.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the catalog item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");

          /**
           * Updates a catalog item.
           *
           * Create a request for the method "apidocs.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the catalog item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the catalog item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the catalog item. Use the following structure in your request:
         `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the catalog item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }
        /**
         * Updates the documentation for the specified catalog item. Note that the documentation file
         * contents will not be populated in the return message.
         *
         * Create a request for the method "apidocs.updateDocumentation".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateDocumentation#execute()} method to invoke the remote operation.
         *
         * @param name Required. Resource name of the catalog item documentation. Use the following structure in your
         *        request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocDocumentation}
         * @return the request
         */
        public UpdateDocumentation updateDocumentation(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocDocumentation content) throws java.io.IOException {
          UpdateDocumentation result = new UpdateDocumentation(name, content);
          initialize(result);
          return result;
        }

        public class UpdateDocumentation extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocDocumentationResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+/documentation$");

          /**
           * Updates the documentation for the specified catalog item. Note that the documentation file
           * contents will not be populated in the return message.
           *
           * Create a request for the method "apidocs.updateDocumentation".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateDocumentation#execute()} method to invoke the remote
           * operation. <p> {@link UpdateDocumentation#initialize(com.google.api.client.googleapis.services.
           * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. Resource name of the catalog item documentation. Use the following structure in your
         *        request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocDocumentation}
           * @since 1.13
           */
          protected UpdateDocumentation(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocDocumentation content) {
            super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocDocumentationResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+/documentation$");
            }
          }

          @Override
          public UpdateDocumentation set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateDocumentation) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateDocumentation setAccessToken(java.lang.String accessToken) {
            return (UpdateDocumentation) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateDocumentation setAlt(java.lang.String alt) {
            return (UpdateDocumentation) super.setAlt(alt);
          }

          @Override
          public UpdateDocumentation setCallback(java.lang.String callback) {
            return (UpdateDocumentation) super.setCallback(callback);
          }

          @Override
          public UpdateDocumentation setFields(java.lang.String fields) {
            return (UpdateDocumentation) super.setFields(fields);
          }

          @Override
          public UpdateDocumentation setKey(java.lang.String key) {
            return (UpdateDocumentation) super.setKey(key);
          }

          @Override
          public UpdateDocumentation setOauthToken(java.lang.String oauthToken) {
            return (UpdateDocumentation) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateDocumentation setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateDocumentation) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateDocumentation setQuotaUser(java.lang.String quotaUser) {
            return (UpdateDocumentation) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateDocumentation setUploadType(java.lang.String uploadType) {
            return (UpdateDocumentation) super.setUploadType(uploadType);
          }

          @Override
          public UpdateDocumentation setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateDocumentation) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Resource name of the catalog item documentation. Use the following structure
           * in your request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Resource name of the catalog item documentation. Use the following structure in your
         request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Resource name of the catalog item documentation. Use the following structure
           * in your request: `organizations/{org}/sites/{site}/apidocs/{apidoc}/documentation`
           */
          public UpdateDocumentation setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+/documentation$");
            }
            this.name = name;
            return this;
          }

          @Override
          public UpdateDocumentation set(String parameterName, Object value) {
            return (UpdateDocumentation) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * An accessor for creating requests from the Projects collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Apigee apigee = new Apigee(...);}
   *   {@code Apigee.Projects.List request = apigee.projects().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Projects projects() {
    return new Projects();
  }

  /**
   * The "projects" collection of methods.
   */
  public class Projects {

    /**
     * Provisions a new Apigee organization with a functioning runtime. This is the standard way to
     * create trial organizations for a free Apigee trial.
     *
     * Create a request for the method "projects.provisionOrganization".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link ProvisionOrganization#execute()} method to invoke the remote
     * operation.
     *
     * @param project Required. Name of the GCP project with which to associate the Apigee organization.
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ProvisionOrganizationRequest}
     * @return the request
     */
    public ProvisionOrganization provisionOrganization(java.lang.String project, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ProvisionOrganizationRequest content) throws java.io.IOException {
      ProvisionOrganization result = new ProvisionOrganization(project, content);
      initialize(result);
      return result;
    }

    public class ProvisionOrganization extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

      private static final String REST_PATH = "v1/{+project}:provisionOrganization";

      private final java.util.regex.Pattern PROJECT_PATTERN =
          java.util.regex.Pattern.compile("^projects/[^/]+$");

      /**
       * Provisions a new Apigee organization with a functioning runtime. This is the standard way to
       * create trial organizations for a free Apigee trial.
       *
       * Create a request for the method "projects.provisionOrganization".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link ProvisionOrganization#execute()} method to invoke the remote
       * operation. <p> {@link ProvisionOrganization#initialize(com.google.api.client.googleapis.service
       * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param project Required. Name of the GCP project with which to associate the Apigee organization.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ProvisionOrganizationRequest}
       * @since 1.13
       */
      protected ProvisionOrganization(java.lang.String project, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ProvisionOrganizationRequest content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
        this.project = com.google.api.client.util.Preconditions.checkNotNull(project, "Required parameter project must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "^projects/[^/]+$");
        }
      }

      @Override
      public ProvisionOrganization set$Xgafv(java.lang.String $Xgafv) {
        return (ProvisionOrganization) super.set$Xgafv($Xgafv);
      }

      @Override
      public ProvisionOrganization setAccessToken(java.lang.String accessToken) {
        return (ProvisionOrganization) super.setAccessToken(accessToken);
      }

      @Override
      public ProvisionOrganization setAlt(java.lang.String alt) {
        return (ProvisionOrganization) super.setAlt(alt);
      }

      @Override
      public ProvisionOrganization setCallback(java.lang.String callback) {
        return (ProvisionOrganization) super.setCallback(callback);
      }

      @Override
      public ProvisionOrganization setFields(java.lang.String fields) {
        return (ProvisionOrganization) super.setFields(fields);
      }

      @Override
      public ProvisionOrganization setKey(java.lang.String key) {
        return (ProvisionOrganization) super.setKey(key);
      }

      @Override
      public ProvisionOrganization setOauthToken(java.lang.String oauthToken) {
        return (ProvisionOrganization) super.setOauthToken(oauthToken);
      }

      @Override
      public ProvisionOrganization setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (ProvisionOrganization) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public ProvisionOrganization setQuotaUser(java.lang.String quotaUser) {
        return (ProvisionOrganization) super.setQuotaUser(quotaUser);
      }

      @Override
      public ProvisionOrganization setUploadType(java.lang.String uploadType) {
        return (ProvisionOrganization) super.setUploadType(uploadType);
      }

      @Override
      public ProvisionOrganization setUploadProtocol(java.lang.String uploadProtocol) {
        return (ProvisionOrganization) super.setUploadProtocol(uploadProtocol);
      }

      /** Required. Name of the GCP project with which to associate the Apigee organization. */
      @com.google.api.client.util.Key
      private java.lang.String project;

      /** Required. Name of the GCP project with which to associate the Apigee organization.
       */
      public java.lang.String getProject() {
        return project;
      }

      /** Required. Name of the GCP project with which to associate the Apigee organization. */
      public ProvisionOrganization setProject(java.lang.String project) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PROJECT_PATTERN.matcher(project).matches(),
              "Parameter project must conform to the pattern " +
              "^projects/[^/]+$");
        }
        this.project = project;
        return this;
      }

      @Override
      public ProvisionOrganization set(String parameterName, Object value) {
        return (ProvisionOrganization) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Apigee}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    private static String chooseEndpoint(com.google.api.client.http.HttpTransport transport) {
      // If the GOOGLE_API_USE_MTLS_ENDPOINT environment variable value is "always", use mTLS endpoint.
      // If the env variable is "auto", use mTLS endpoint if and only if the transport is mTLS.
      // Use the regular endpoint for all other cases.
      String useMtlsEndpoint = System.getenv("GOOGLE_API_USE_MTLS_ENDPOINT");
      useMtlsEndpoint = useMtlsEndpoint == null ? "auto" : useMtlsEndpoint;
      if ("always".equals(useMtlsEndpoint) || ("auto".equals(useMtlsEndpoint) && transport != null && transport.isMtls())) {
        return DEFAULT_MTLS_ROOT_URL;
      }
      return DEFAULT_ROOT_URL;
    }

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          Builder.chooseEndpoint(transport),
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Apigee}. */
    @Override
    public Apigee build() {
      return new Apigee(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ApigeeRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setApigeeRequestInitializer(
        ApigeeRequestInitializer apigeeRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(apigeeRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }

    @Override
    public Builder setUniverseDomain(String universeDomain) {
      return (Builder) super.setUniverseDomain(universeDomain);
    }
  }
}
