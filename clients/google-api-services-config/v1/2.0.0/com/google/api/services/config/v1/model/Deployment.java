/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.config.v1.model;

/**
 * A Deployment is a group of resources and configs managed and provisioned by Infra Manager.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Infrastructure Manager API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Deployment extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Arbitrary key-value metadata storage e.g. to help client tools identify deployments
   * during automation. See https://google.aip.dev/148#annotations for details on format and size
   * limitations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> annotations;

  /**
   * Optional. User-defined location of Cloud Build logs and artifacts in Google Cloud Storage.
   * Format: `gs://{bucket}/{folder}` A default bucket will be bootstrapped if the field is not set
   * or empty. Default bucket format: `gs://--blueprint-config` Constraints: - The bucket needs to
   * be in the same project as the deployment - The path cannot be within the path of `gcs_source` -
   * The field cannot be updated, including changing its presence
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String artifactsGcsBucket;

  /**
   * Output only. Time when the deployment was created.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String createTime;

  /**
   * Output only. Cloud Build instance UUID associated with deleting this deployment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deleteBuild;

  /**
   * Output only. Location of Cloud Build logs in Google Cloud Storage, populated when deleting this
   * deployment. Format: `gs://{bucket}/{object}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deleteLogs;

  /**
   * Output only. Location of artifacts from a DeleteDeployment operation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ApplyResults deleteResults;

  /**
   * Output only. Error code describing errors that may have occurred.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String errorCode;

  /**
   * Output only. Location of Terraform error logs in Google Cloud Storage. Format:
   * `gs://{bucket}/{object}`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String errorLogs;

  /**
   * By default, Infra Manager will return a failure when Terraform encounters a 409 code (resource
   * conflict error) during actuation. If this flag is set to true, Infra Manager will instead
   * attempt to automatically import the resource into the Terraform state (for supported resource
   * types) and continue actuation. Not all resource types are supported, refer to documentation.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean importExistingResources;

  /**
   * User-defined metadata for the deployment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * Output only. Revision name that was most recently applied. Format:
   * `projects/{project}/locations/{location}/deployments/{deployment}/ revisions/{revision}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String latestRevision;

  /**
   * Output only. Current lock state of the deployment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String lockState;

  /**
   * Resource name of the deployment. Format:
   * `projects/{project}/locations/{location}/deployments/{deployment}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Optional. Input to control quota checks for resources in terraform configuration files. There
   * are limited resources on which quota validation applies.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String quotaValidation;

  /**
   * Required. User-specified Service Account (SA) credentials to be used when actuating resources.
   * Format: `projects/{projectID}/serviceAccounts/{serviceAccount}`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serviceAccount;

  /**
   * Output only. Current state of the deployment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Additional information regarding the current state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String stateDetail;

  /**
   * A blueprint described using Terraform's HashiCorp Configuration Language as a root module.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TerraformBlueprint terraformBlueprint;

  /**
   * Output only. Errors encountered when deleting this deployment. Errors are truncated to 10
   * entries, see `delete_results` and `error_logs` for full details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<TerraformError> tfErrors;

  /**
   * Output only. The current Terraform version set on the deployment. It is in the format of
   * "Major.Minor.Patch", for example, "1.3.10".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tfVersion;

  /**
   * Optional. The user-specified Terraform version constraint. Example: "=1.3.10".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String tfVersionConstraint;

  /**
   * Output only. Time when the deployment was last modified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String updateTime;

  /**
   * Optional. The user-specified Cloud Build worker pool resource in which the Cloud Build job will
   * execute. Format: `projects/{project}/locations/{location}/workerPools/{workerPoolId}`. If this
   * field is unspecified, the default Cloud Build worker pool will be used.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String workerPool;

  /**
   * Optional. Arbitrary key-value metadata storage e.g. to help client tools identify deployments
   * during automation. See https://google.aip.dev/148#annotations for details on format and size
   * limitations.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getAnnotations() {
    return annotations;
  }

  /**
   * Optional. Arbitrary key-value metadata storage e.g. to help client tools identify deployments
   * during automation. See https://google.aip.dev/148#annotations for details on format and size
   * limitations.
   * @param annotations annotations or {@code null} for none
   */
  public Deployment setAnnotations(java.util.Map<String, java.lang.String> annotations) {
    this.annotations = annotations;
    return this;
  }

  /**
   * Optional. User-defined location of Cloud Build logs and artifacts in Google Cloud Storage.
   * Format: `gs://{bucket}/{folder}` A default bucket will be bootstrapped if the field is not set
   * or empty. Default bucket format: `gs://--blueprint-config` Constraints: - The bucket needs to
   * be in the same project as the deployment - The path cannot be within the path of `gcs_source` -
   * The field cannot be updated, including changing its presence
   * @return value or {@code null} for none
   */
  public java.lang.String getArtifactsGcsBucket() {
    return artifactsGcsBucket;
  }

  /**
   * Optional. User-defined location of Cloud Build logs and artifacts in Google Cloud Storage.
   * Format: `gs://{bucket}/{folder}` A default bucket will be bootstrapped if the field is not set
   * or empty. Default bucket format: `gs://--blueprint-config` Constraints: - The bucket needs to
   * be in the same project as the deployment - The path cannot be within the path of `gcs_source` -
   * The field cannot be updated, including changing its presence
   * @param artifactsGcsBucket artifactsGcsBucket or {@code null} for none
   */
  public Deployment setArtifactsGcsBucket(java.lang.String artifactsGcsBucket) {
    this.artifactsGcsBucket = artifactsGcsBucket;
    return this;
  }

  /**
   * Output only. Time when the deployment was created.
   * @return value or {@code null} for none
   */
  public String getCreateTime() {
    return createTime;
  }

  /**
   * Output only. Time when the deployment was created.
   * @param createTime createTime or {@code null} for none
   */
  public Deployment setCreateTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Cloud Build instance UUID associated with deleting this deployment.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeleteBuild() {
    return deleteBuild;
  }

  /**
   * Output only. Cloud Build instance UUID associated with deleting this deployment.
   * @param deleteBuild deleteBuild or {@code null} for none
   */
  public Deployment setDeleteBuild(java.lang.String deleteBuild) {
    this.deleteBuild = deleteBuild;
    return this;
  }

  /**
   * Output only. Location of Cloud Build logs in Google Cloud Storage, populated when deleting this
   * deployment. Format: `gs://{bucket}/{object}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeleteLogs() {
    return deleteLogs;
  }

  /**
   * Output only. Location of Cloud Build logs in Google Cloud Storage, populated when deleting this
   * deployment. Format: `gs://{bucket}/{object}`.
   * @param deleteLogs deleteLogs or {@code null} for none
   */
  public Deployment setDeleteLogs(java.lang.String deleteLogs) {
    this.deleteLogs = deleteLogs;
    return this;
  }

  /**
   * Output only. Location of artifacts from a DeleteDeployment operation.
   * @return value or {@code null} for none
   */
  public ApplyResults getDeleteResults() {
    return deleteResults;
  }

  /**
   * Output only. Location of artifacts from a DeleteDeployment operation.
   * @param deleteResults deleteResults or {@code null} for none
   */
  public Deployment setDeleteResults(ApplyResults deleteResults) {
    this.deleteResults = deleteResults;
    return this;
  }

  /**
   * Output only. Error code describing errors that may have occurred.
   * @return value or {@code null} for none
   */
  public java.lang.String getErrorCode() {
    return errorCode;
  }

  /**
   * Output only. Error code describing errors that may have occurred.
   * @param errorCode errorCode or {@code null} for none
   */
  public Deployment setErrorCode(java.lang.String errorCode) {
    this.errorCode = errorCode;
    return this;
  }

  /**
   * Output only. Location of Terraform error logs in Google Cloud Storage. Format:
   * `gs://{bucket}/{object}`.
   * @return value or {@code null} for none
   */
  public java.lang.String getErrorLogs() {
    return errorLogs;
  }

  /**
   * Output only. Location of Terraform error logs in Google Cloud Storage. Format:
   * `gs://{bucket}/{object}`.
   * @param errorLogs errorLogs or {@code null} for none
   */
  public Deployment setErrorLogs(java.lang.String errorLogs) {
    this.errorLogs = errorLogs;
    return this;
  }

  /**
   * By default, Infra Manager will return a failure when Terraform encounters a 409 code (resource
   * conflict error) during actuation. If this flag is set to true, Infra Manager will instead
   * attempt to automatically import the resource into the Terraform state (for supported resource
   * types) and continue actuation. Not all resource types are supported, refer to documentation.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getImportExistingResources() {
    return importExistingResources;
  }

  /**
   * By default, Infra Manager will return a failure when Terraform encounters a 409 code (resource
   * conflict error) during actuation. If this flag is set to true, Infra Manager will instead
   * attempt to automatically import the resource into the Terraform state (for supported resource
   * types) and continue actuation. Not all resource types are supported, refer to documentation.
   * @param importExistingResources importExistingResources or {@code null} for none
   */
  public Deployment setImportExistingResources(java.lang.Boolean importExistingResources) {
    this.importExistingResources = importExistingResources;
    return this;
  }

  /**
   * User-defined metadata for the deployment.
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * User-defined metadata for the deployment.
   * @param labels labels or {@code null} for none
   */
  public Deployment setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * Output only. Revision name that was most recently applied. Format:
   * `projects/{project}/locations/{location}/deployments/{deployment}/ revisions/{revision}`
   * @return value or {@code null} for none
   */
  public java.lang.String getLatestRevision() {
    return latestRevision;
  }

  /**
   * Output only. Revision name that was most recently applied. Format:
   * `projects/{project}/locations/{location}/deployments/{deployment}/ revisions/{revision}`
   * @param latestRevision latestRevision or {@code null} for none
   */
  public Deployment setLatestRevision(java.lang.String latestRevision) {
    this.latestRevision = latestRevision;
    return this;
  }

  /**
   * Output only. Current lock state of the deployment.
   * @return value or {@code null} for none
   */
  public java.lang.String getLockState() {
    return lockState;
  }

  /**
   * Output only. Current lock state of the deployment.
   * @param lockState lockState or {@code null} for none
   */
  public Deployment setLockState(java.lang.String lockState) {
    this.lockState = lockState;
    return this;
  }

  /**
   * Resource name of the deployment. Format:
   * `projects/{project}/locations/{location}/deployments/{deployment}`
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Resource name of the deployment. Format:
   * `projects/{project}/locations/{location}/deployments/{deployment}`
   * @param name name or {@code null} for none
   */
  public Deployment setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Optional. Input to control quota checks for resources in terraform configuration files. There
   * are limited resources on which quota validation applies.
   * @return value or {@code null} for none
   */
  public java.lang.String getQuotaValidation() {
    return quotaValidation;
  }

  /**
   * Optional. Input to control quota checks for resources in terraform configuration files. There
   * are limited resources on which quota validation applies.
   * @param quotaValidation quotaValidation or {@code null} for none
   */
  public Deployment setQuotaValidation(java.lang.String quotaValidation) {
    this.quotaValidation = quotaValidation;
    return this;
  }

  /**
   * Required. User-specified Service Account (SA) credentials to be used when actuating resources.
   * Format: `projects/{projectID}/serviceAccounts/{serviceAccount}`
   * @return value or {@code null} for none
   */
  public java.lang.String getServiceAccount() {
    return serviceAccount;
  }

  /**
   * Required. User-specified Service Account (SA) credentials to be used when actuating resources.
   * Format: `projects/{projectID}/serviceAccounts/{serviceAccount}`
   * @param serviceAccount serviceAccount or {@code null} for none
   */
  public Deployment setServiceAccount(java.lang.String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * Output only. Current state of the deployment.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Current state of the deployment.
   * @param state state or {@code null} for none
   */
  public Deployment setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Additional information regarding the current state.
   * @return value or {@code null} for none
   */
  public java.lang.String getStateDetail() {
    return stateDetail;
  }

  /**
   * Output only. Additional information regarding the current state.
   * @param stateDetail stateDetail or {@code null} for none
   */
  public Deployment setStateDetail(java.lang.String stateDetail) {
    this.stateDetail = stateDetail;
    return this;
  }

  /**
   * A blueprint described using Terraform's HashiCorp Configuration Language as a root module.
   * @return value or {@code null} for none
   */
  public TerraformBlueprint getTerraformBlueprint() {
    return terraformBlueprint;
  }

  /**
   * A blueprint described using Terraform's HashiCorp Configuration Language as a root module.
   * @param terraformBlueprint terraformBlueprint or {@code null} for none
   */
  public Deployment setTerraformBlueprint(TerraformBlueprint terraformBlueprint) {
    this.terraformBlueprint = terraformBlueprint;
    return this;
  }

  /**
   * Output only. Errors encountered when deleting this deployment. Errors are truncated to 10
   * entries, see `delete_results` and `error_logs` for full details.
   * @return value or {@code null} for none
   */
  public java.util.List<TerraformError> getTfErrors() {
    return tfErrors;
  }

  /**
   * Output only. Errors encountered when deleting this deployment. Errors are truncated to 10
   * entries, see `delete_results` and `error_logs` for full details.
   * @param tfErrors tfErrors or {@code null} for none
   */
  public Deployment setTfErrors(java.util.List<TerraformError> tfErrors) {
    this.tfErrors = tfErrors;
    return this;
  }

  /**
   * Output only. The current Terraform version set on the deployment. It is in the format of
   * "Major.Minor.Patch", for example, "1.3.10".
   * @return value or {@code null} for none
   */
  public java.lang.String getTfVersion() {
    return tfVersion;
  }

  /**
   * Output only. The current Terraform version set on the deployment. It is in the format of
   * "Major.Minor.Patch", for example, "1.3.10".
   * @param tfVersion tfVersion or {@code null} for none
   */
  public Deployment setTfVersion(java.lang.String tfVersion) {
    this.tfVersion = tfVersion;
    return this;
  }

  /**
   * Optional. The user-specified Terraform version constraint. Example: "=1.3.10".
   * @return value or {@code null} for none
   */
  public java.lang.String getTfVersionConstraint() {
    return tfVersionConstraint;
  }

  /**
   * Optional. The user-specified Terraform version constraint. Example: "=1.3.10".
   * @param tfVersionConstraint tfVersionConstraint or {@code null} for none
   */
  public Deployment setTfVersionConstraint(java.lang.String tfVersionConstraint) {
    this.tfVersionConstraint = tfVersionConstraint;
    return this;
  }

  /**
   * Output only. Time when the deployment was last modified.
   * @return value or {@code null} for none
   */
  public String getUpdateTime() {
    return updateTime;
  }

  /**
   * Output only. Time when the deployment was last modified.
   * @param updateTime updateTime or {@code null} for none
   */
  public Deployment setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Optional. The user-specified Cloud Build worker pool resource in which the Cloud Build job will
   * execute. Format: `projects/{project}/locations/{location}/workerPools/{workerPoolId}`. If this
   * field is unspecified, the default Cloud Build worker pool will be used.
   * @return value or {@code null} for none
   */
  public java.lang.String getWorkerPool() {
    return workerPool;
  }

  /**
   * Optional. The user-specified Cloud Build worker pool resource in which the Cloud Build job will
   * execute. Format: `projects/{project}/locations/{location}/workerPools/{workerPoolId}`. If this
   * field is unspecified, the default Cloud Build worker pool will be used.
   * @param workerPool workerPool or {@code null} for none
   */
  public Deployment setWorkerPool(java.lang.String workerPool) {
    this.workerPool = workerPool;
    return this;
  }

  @Override
  public Deployment set(String fieldName, Object value) {
    return (Deployment) super.set(fieldName, value);
  }

  @Override
  public Deployment clone() {
    return (Deployment) super.clone();
  }

}
