/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.container.v1beta1.model;

/**
 * NodePoolUpgradeInfo contains the upgrade information of a nodepool.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Kubernetes Engine API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NodePoolUpgradeInfo extends com.google.api.client.json.GenericJson {

  /**
   * The auto upgrade status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> autoUpgradeStatus;

  /**
   * The nodepool's current minor version's end of extended support timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String endOfExtendedSupportTimestamp;

  /**
   * The nodepool's current minor version's end of standard support timestamp.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String endOfStandardSupportTimestamp;

  /**
   * minor_target_version indicates the target version for minor upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String minorTargetVersion;

  /**
   * patch_target_version indicates the target version for patch upgrade.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String patchTargetVersion;

  /**
   * The auto upgrade paused reason.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> pausedReason;

  /**
   * The list of past auto upgrades.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<UpgradeDetails> upgradeDetails;

  /**
   * The auto upgrade status.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAutoUpgradeStatus() {
    return autoUpgradeStatus;
  }

  /**
   * The auto upgrade status.
   * @param autoUpgradeStatus autoUpgradeStatus or {@code null} for none
   */
  public NodePoolUpgradeInfo setAutoUpgradeStatus(java.util.List<java.lang.String> autoUpgradeStatus) {
    this.autoUpgradeStatus = autoUpgradeStatus;
    return this;
  }

  /**
   * The nodepool's current minor version's end of extended support timestamp.
   * @return value or {@code null} for none
   */
  public java.lang.String getEndOfExtendedSupportTimestamp() {
    return endOfExtendedSupportTimestamp;
  }

  /**
   * The nodepool's current minor version's end of extended support timestamp.
   * @param endOfExtendedSupportTimestamp endOfExtendedSupportTimestamp or {@code null} for none
   */
  public NodePoolUpgradeInfo setEndOfExtendedSupportTimestamp(java.lang.String endOfExtendedSupportTimestamp) {
    this.endOfExtendedSupportTimestamp = endOfExtendedSupportTimestamp;
    return this;
  }

  /**
   * The nodepool's current minor version's end of standard support timestamp.
   * @return value or {@code null} for none
   */
  public java.lang.String getEndOfStandardSupportTimestamp() {
    return endOfStandardSupportTimestamp;
  }

  /**
   * The nodepool's current minor version's end of standard support timestamp.
   * @param endOfStandardSupportTimestamp endOfStandardSupportTimestamp or {@code null} for none
   */
  public NodePoolUpgradeInfo setEndOfStandardSupportTimestamp(java.lang.String endOfStandardSupportTimestamp) {
    this.endOfStandardSupportTimestamp = endOfStandardSupportTimestamp;
    return this;
  }

  /**
   * minor_target_version indicates the target version for minor upgrade.
   * @return value or {@code null} for none
   */
  public java.lang.String getMinorTargetVersion() {
    return minorTargetVersion;
  }

  /**
   * minor_target_version indicates the target version for minor upgrade.
   * @param minorTargetVersion minorTargetVersion or {@code null} for none
   */
  public NodePoolUpgradeInfo setMinorTargetVersion(java.lang.String minorTargetVersion) {
    this.minorTargetVersion = minorTargetVersion;
    return this;
  }

  /**
   * patch_target_version indicates the target version for patch upgrade.
   * @return value or {@code null} for none
   */
  public java.lang.String getPatchTargetVersion() {
    return patchTargetVersion;
  }

  /**
   * patch_target_version indicates the target version for patch upgrade.
   * @param patchTargetVersion patchTargetVersion or {@code null} for none
   */
  public NodePoolUpgradeInfo setPatchTargetVersion(java.lang.String patchTargetVersion) {
    this.patchTargetVersion = patchTargetVersion;
    return this;
  }

  /**
   * The auto upgrade paused reason.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPausedReason() {
    return pausedReason;
  }

  /**
   * The auto upgrade paused reason.
   * @param pausedReason pausedReason or {@code null} for none
   */
  public NodePoolUpgradeInfo setPausedReason(java.util.List<java.lang.String> pausedReason) {
    this.pausedReason = pausedReason;
    return this;
  }

  /**
   * The list of past auto upgrades.
   * @return value or {@code null} for none
   */
  public java.util.List<UpgradeDetails> getUpgradeDetails() {
    return upgradeDetails;
  }

  /**
   * The list of past auto upgrades.
   * @param upgradeDetails upgradeDetails or {@code null} for none
   */
  public NodePoolUpgradeInfo setUpgradeDetails(java.util.List<UpgradeDetails> upgradeDetails) {
    this.upgradeDetails = upgradeDetails;
    return this;
  }

  @Override
  public NodePoolUpgradeInfo set(String fieldName, Object value) {
    return (NodePoolUpgradeInfo) super.set(fieldName, value);
  }

  @Override
  public NodePoolUpgradeInfo clone() {
    return (NodePoolUpgradeInfo) super.clone();
  }

}
