/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.alloydb.v1beta.model;

/**
 * Information about a single window when BackupDR was enabled for this cluster.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the AlloyDB API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BackupDrEnabledWindow extends com.google.api.client.json.GenericJson {

  /**
   * Whether automated backup was previously enabled prior to enabling BackupDR protection for this
   * cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean automatedBackupPreviouslyEnabled;

  /**
   * The BackupPlanAssociation resource that was used to enable BackupDR protection for this
   * cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String backupPlanAssociation;

  /**
   * The retention set for the continuous backup that was previously enabled prior to enabling
   * BackupDR protection for this cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer continuousBackupPreviousRecoveryWindowDays;

  /**
   * Whether continuous backup was previously enabled prior to enabling BackupDR protection for this
   * cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean continuousBackupPreviouslyEnabled;

  /**
   * The time when continuous backup was previously enabled prior to enabling BackupDR protection
   * for this cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String continuousBackupPreviouslyEnabledTime;

  /**
   * The DataSource resource that represents the cluster in BackupDR.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String dataSource;

  /**
   * Time when the BackupDR protection for this cluster was disabled. This field will be empty if
   * this BackupDR window is the `current_window`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String disabledTime;

  /**
   * Time when the BackupDR protection for this cluster was enabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String enabledTime;

  /**
   * The retention period for logs generated by BackupDR for this cluster.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String logRetentionPeriod;

  /**
   * Whether automated backup was previously enabled prior to enabling BackupDR protection for this
   * cluster.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAutomatedBackupPreviouslyEnabled() {
    return automatedBackupPreviouslyEnabled;
  }

  /**
   * Whether automated backup was previously enabled prior to enabling BackupDR protection for this
   * cluster.
   * @param automatedBackupPreviouslyEnabled automatedBackupPreviouslyEnabled or {@code null} for none
   */
  public BackupDrEnabledWindow setAutomatedBackupPreviouslyEnabled(java.lang.Boolean automatedBackupPreviouslyEnabled) {
    this.automatedBackupPreviouslyEnabled = automatedBackupPreviouslyEnabled;
    return this;
  }

  /**
   * The BackupPlanAssociation resource that was used to enable BackupDR protection for this
   * cluster.
   * @return value or {@code null} for none
   */
  public java.lang.String getBackupPlanAssociation() {
    return backupPlanAssociation;
  }

  /**
   * The BackupPlanAssociation resource that was used to enable BackupDR protection for this
   * cluster.
   * @param backupPlanAssociation backupPlanAssociation or {@code null} for none
   */
  public BackupDrEnabledWindow setBackupPlanAssociation(java.lang.String backupPlanAssociation) {
    this.backupPlanAssociation = backupPlanAssociation;
    return this;
  }

  /**
   * The retention set for the continuous backup that was previously enabled prior to enabling
   * BackupDR protection for this cluster.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getContinuousBackupPreviousRecoveryWindowDays() {
    return continuousBackupPreviousRecoveryWindowDays;
  }

  /**
   * The retention set for the continuous backup that was previously enabled prior to enabling
   * BackupDR protection for this cluster.
   * @param continuousBackupPreviousRecoveryWindowDays continuousBackupPreviousRecoveryWindowDays or {@code null} for none
   */
  public BackupDrEnabledWindow setContinuousBackupPreviousRecoveryWindowDays(java.lang.Integer continuousBackupPreviousRecoveryWindowDays) {
    this.continuousBackupPreviousRecoveryWindowDays = continuousBackupPreviousRecoveryWindowDays;
    return this;
  }

  /**
   * Whether continuous backup was previously enabled prior to enabling BackupDR protection for this
   * cluster.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getContinuousBackupPreviouslyEnabled() {
    return continuousBackupPreviouslyEnabled;
  }

  /**
   * Whether continuous backup was previously enabled prior to enabling BackupDR protection for this
   * cluster.
   * @param continuousBackupPreviouslyEnabled continuousBackupPreviouslyEnabled or {@code null} for none
   */
  public BackupDrEnabledWindow setContinuousBackupPreviouslyEnabled(java.lang.Boolean continuousBackupPreviouslyEnabled) {
    this.continuousBackupPreviouslyEnabled = continuousBackupPreviouslyEnabled;
    return this;
  }

  /**
   * The time when continuous backup was previously enabled prior to enabling BackupDR protection
   * for this cluster.
   * @return value or {@code null} for none
   */
  public String getContinuousBackupPreviouslyEnabledTime() {
    return continuousBackupPreviouslyEnabledTime;
  }

  /**
   * The time when continuous backup was previously enabled prior to enabling BackupDR protection
   * for this cluster.
   * @param continuousBackupPreviouslyEnabledTime continuousBackupPreviouslyEnabledTime or {@code null} for none
   */
  public BackupDrEnabledWindow setContinuousBackupPreviouslyEnabledTime(String continuousBackupPreviouslyEnabledTime) {
    this.continuousBackupPreviouslyEnabledTime = continuousBackupPreviouslyEnabledTime;
    return this;
  }

  /**
   * The DataSource resource that represents the cluster in BackupDR.
   * @return value or {@code null} for none
   */
  public java.lang.String getDataSource() {
    return dataSource;
  }

  /**
   * The DataSource resource that represents the cluster in BackupDR.
   * @param dataSource dataSource or {@code null} for none
   */
  public BackupDrEnabledWindow setDataSource(java.lang.String dataSource) {
    this.dataSource = dataSource;
    return this;
  }

  /**
   * Time when the BackupDR protection for this cluster was disabled. This field will be empty if
   * this BackupDR window is the `current_window`.
   * @return value or {@code null} for none
   */
  public String getDisabledTime() {
    return disabledTime;
  }

  /**
   * Time when the BackupDR protection for this cluster was disabled. This field will be empty if
   * this BackupDR window is the `current_window`.
   * @param disabledTime disabledTime or {@code null} for none
   */
  public BackupDrEnabledWindow setDisabledTime(String disabledTime) {
    this.disabledTime = disabledTime;
    return this;
  }

  /**
   * Time when the BackupDR protection for this cluster was enabled.
   * @return value or {@code null} for none
   */
  public String getEnabledTime() {
    return enabledTime;
  }

  /**
   * Time when the BackupDR protection for this cluster was enabled.
   * @param enabledTime enabledTime or {@code null} for none
   */
  public BackupDrEnabledWindow setEnabledTime(String enabledTime) {
    this.enabledTime = enabledTime;
    return this;
  }

  /**
   * The retention period for logs generated by BackupDR for this cluster.
   * @return value or {@code null} for none
   */
  public String getLogRetentionPeriod() {
    return logRetentionPeriod;
  }

  /**
   * The retention period for logs generated by BackupDR for this cluster.
   * @param logRetentionPeriod logRetentionPeriod or {@code null} for none
   */
  public BackupDrEnabledWindow setLogRetentionPeriod(String logRetentionPeriod) {
    this.logRetentionPeriod = logRetentionPeriod;
    return this;
  }

  @Override
  public BackupDrEnabledWindow set(String fieldName, Object value) {
    return (BackupDrEnabledWindow) super.set(fieldName, value);
  }

  @Override
  public BackupDrEnabledWindow clone() {
    return (BackupDrEnabledWindow) super.clone();
  }

}
