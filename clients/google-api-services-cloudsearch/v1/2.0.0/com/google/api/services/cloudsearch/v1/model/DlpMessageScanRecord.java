/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * A summary of a DLP scan. This is a combination summary that contains both scan on message and
 * scan on attachments if any.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DlpMessageScanRecord extends com.google.api.client.json.GenericJson {

  /**
   * Summaries of the attachment scan if any.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DlpScanSummary attachmentScanSummary;

  /**
   * The applied action.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DlpAction dlpAction;

  /**
   * Summaries of the message scan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DlpScanSummary messageScanSummary;

  /**
   * The DLP scan outcome for the message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String scanOutcome;

  /**
   * Summaries of the attachment scan if any.
   * @return value or {@code null} for none
   */
  public DlpScanSummary getAttachmentScanSummary() {
    return attachmentScanSummary;
  }

  /**
   * Summaries of the attachment scan if any.
   * @param attachmentScanSummary attachmentScanSummary or {@code null} for none
   */
  public DlpMessageScanRecord setAttachmentScanSummary(DlpScanSummary attachmentScanSummary) {
    this.attachmentScanSummary = attachmentScanSummary;
    return this;
  }

  /**
   * The applied action.
   * @return value or {@code null} for none
   */
  public DlpAction getDlpAction() {
    return dlpAction;
  }

  /**
   * The applied action.
   * @param dlpAction dlpAction or {@code null} for none
   */
  public DlpMessageScanRecord setDlpAction(DlpAction dlpAction) {
    this.dlpAction = dlpAction;
    return this;
  }

  /**
   * Summaries of the message scan.
   * @return value or {@code null} for none
   */
  public DlpScanSummary getMessageScanSummary() {
    return messageScanSummary;
  }

  /**
   * Summaries of the message scan.
   * @param messageScanSummary messageScanSummary or {@code null} for none
   */
  public DlpMessageScanRecord setMessageScanSummary(DlpScanSummary messageScanSummary) {
    this.messageScanSummary = messageScanSummary;
    return this;
  }

  /**
   * The DLP scan outcome for the message.
   * @return value or {@code null} for none
   */
  public java.lang.String getScanOutcome() {
    return scanOutcome;
  }

  /**
   * The DLP scan outcome for the message.
   * @param scanOutcome scanOutcome or {@code null} for none
   */
  public DlpMessageScanRecord setScanOutcome(java.lang.String scanOutcome) {
    this.scanOutcome = scanOutcome;
    return this;
  }

  @Override
  public DlpMessageScanRecord set(String fieldName, Object value) {
    return (DlpMessageScanRecord) super.set(fieldName, value);
  }

  @Override
  public DlpMessageScanRecord clone() {
    return (DlpMessageScanRecord) super.clone();
  }

}
