/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1.model;

/**
 * Single disk entry.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class DiskEntry extends com.google.api.client.json.GenericJson {

  /**
   * Disk capacity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long capacityBytes;

  /**
   * Disk label.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diskLabel;

  /**
   * Disk label type (e.g. BIOS/GPT)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String diskLabelType;

  /**
   * Disk free space.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long freeBytes;

  /**
   * Disk hardware address (e.g. 0:1 for SCSI).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hwAddress;

  /**
   * Disks interface type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String interfaceType;

  /**
   * Partition layout.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DiskPartitionList partitions;

  /**
   * VMware disk details.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private VmwareDiskConfig vmware;

  /**
   * Disk capacity.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCapacityBytes() {
    return capacityBytes;
  }

  /**
   * Disk capacity.
   * @param capacityBytes capacityBytes or {@code null} for none
   */
  public DiskEntry setCapacityBytes(java.lang.Long capacityBytes) {
    this.capacityBytes = capacityBytes;
    return this;
  }

  /**
   * Disk label.
   * @return value or {@code null} for none
   */
  public java.lang.String getDiskLabel() {
    return diskLabel;
  }

  /**
   * Disk label.
   * @param diskLabel diskLabel or {@code null} for none
   */
  public DiskEntry setDiskLabel(java.lang.String diskLabel) {
    this.diskLabel = diskLabel;
    return this;
  }

  /**
   * Disk label type (e.g. BIOS/GPT)
   * @return value or {@code null} for none
   */
  public java.lang.String getDiskLabelType() {
    return diskLabelType;
  }

  /**
   * Disk label type (e.g. BIOS/GPT)
   * @param diskLabelType diskLabelType or {@code null} for none
   */
  public DiskEntry setDiskLabelType(java.lang.String diskLabelType) {
    this.diskLabelType = diskLabelType;
    return this;
  }

  /**
   * Disk free space.
   * @return value or {@code null} for none
   */
  public java.lang.Long getFreeBytes() {
    return freeBytes;
  }

  /**
   * Disk free space.
   * @param freeBytes freeBytes or {@code null} for none
   */
  public DiskEntry setFreeBytes(java.lang.Long freeBytes) {
    this.freeBytes = freeBytes;
    return this;
  }

  /**
   * Disk hardware address (e.g. 0:1 for SCSI).
   * @return value or {@code null} for none
   */
  public java.lang.String getHwAddress() {
    return hwAddress;
  }

  /**
   * Disk hardware address (e.g. 0:1 for SCSI).
   * @param hwAddress hwAddress or {@code null} for none
   */
  public DiskEntry setHwAddress(java.lang.String hwAddress) {
    this.hwAddress = hwAddress;
    return this;
  }

  /**
   * Disks interface type.
   * @return value or {@code null} for none
   */
  public java.lang.String getInterfaceType() {
    return interfaceType;
  }

  /**
   * Disks interface type.
   * @param interfaceType interfaceType or {@code null} for none
   */
  public DiskEntry setInterfaceType(java.lang.String interfaceType) {
    this.interfaceType = interfaceType;
    return this;
  }

  /**
   * Partition layout.
   * @return value or {@code null} for none
   */
  public DiskPartitionList getPartitions() {
    return partitions;
  }

  /**
   * Partition layout.
   * @param partitions partitions or {@code null} for none
   */
  public DiskEntry setPartitions(DiskPartitionList partitions) {
    this.partitions = partitions;
    return this;
  }

  /**
   * VMware disk details.
   * @return value or {@code null} for none
   */
  public VmwareDiskConfig getVmware() {
    return vmware;
  }

  /**
   * VMware disk details.
   * @param vmware vmware or {@code null} for none
   */
  public DiskEntry setVmware(VmwareDiskConfig vmware) {
    this.vmware = vmware;
    return this;
  }

  @Override
  public DiskEntry set(String fieldName, Object value) {
    return (DiskEntry) super.set(fieldName, value);
  }

  @Override
  public DiskEntry clone() {
    return (DiskEntry) super.clone();
  }

}
