/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.classroom.model;

/**
 * An add-on attachment on a post.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Classroom API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AddOnAttachment extends com.google.api.client.json.GenericJson {

  /**
   * Output only. Identifiers of attachments that were previous copies of this attachment. If the
   * attachment was previously copied by virtue of its parent post being copied, this enumerates the
   * identifiers of attachments that were its previous copies in ascending chronological order of
   * copy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<CopyHistory> copyHistory;

  /**
   * Immutable. Identifier of the course.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String courseId;

  /**
   * Date, in UTC, that work on this attachment is due. This must be specified if `due_time` is
   * specified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Date dueDate;

  /**
   * Time of day, in UTC, that work on this attachment is due. This must be specified if `due_date`
   * is specified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimeOfDay dueTime;

  /**
   * Immutable. Classroom-assigned identifier for this attachment, unique per post.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Immutable. Identifier of the `Announcement`, `CourseWork`, or `CourseWorkMaterial` under which
   * the attachment is attached. Unique per course.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String itemId;

  /**
   * Maximum grade for this attachment. Can only be set if `studentWorkReviewUri` is set. Set to a
   * non-zero value to indicate that the attachment supports grade passback. If set, this must be a
   * non-negative integer value. When set to zero, the attachment will not support grade passback.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double maxPoints;

  /**
   * Immutable. Deprecated, use `item_id` instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String postId;

  /**
   * Required. URI to show the student view of the attachment. The URI will be opened in an iframe
   * with the `courseId`, `itemId`, `itemType`, and `attachmentId` query parameters set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EmbedUri studentViewUri;

  /**
   * URI for the teacher to see student work on the attachment, if applicable. The URI will be
   * opened in an iframe with the `courseId`, `itemId`, `itemType`, `attachmentId`, and
   * `submissionId` query parameters set. This is the same `submissionId` returned in the [`AddOnCon
   * text.studentContext`](//devsite.google.com/classroom/reference/rest/v1/AddOnContext#StudentCont
   * ext) field when a student views the attachment. If the URI is omitted or removed, `max_points`
   * will also be discarded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EmbedUri studentWorkReviewUri;

  /**
   * Required. URI to show the teacher view of the attachment. The URI will be opened in an iframe
   * with the `courseId`, `itemId`, `itemType`, and `attachmentId` query parameters set.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EmbedUri teacherViewUri;

  /**
   * Required. Title of this attachment. The title must be between 1 and 1000 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * Output only. Identifiers of attachments that were previous copies of this attachment. If the
   * attachment was previously copied by virtue of its parent post being copied, this enumerates the
   * identifiers of attachments that were its previous copies in ascending chronological order of
   * copy.
   * @return value or {@code null} for none
   */
  public java.util.List<CopyHistory> getCopyHistory() {
    return copyHistory;
  }

  /**
   * Output only. Identifiers of attachments that were previous copies of this attachment. If the
   * attachment was previously copied by virtue of its parent post being copied, this enumerates the
   * identifiers of attachments that were its previous copies in ascending chronological order of
   * copy.
   * @param copyHistory copyHistory or {@code null} for none
   */
  public AddOnAttachment setCopyHistory(java.util.List<CopyHistory> copyHistory) {
    this.copyHistory = copyHistory;
    return this;
  }

  /**
   * Immutable. Identifier of the course.
   * @return value or {@code null} for none
   */
  public java.lang.String getCourseId() {
    return courseId;
  }

  /**
   * Immutable. Identifier of the course.
   * @param courseId courseId or {@code null} for none
   */
  public AddOnAttachment setCourseId(java.lang.String courseId) {
    this.courseId = courseId;
    return this;
  }

  /**
   * Date, in UTC, that work on this attachment is due. This must be specified if `due_time` is
   * specified.
   * @return value or {@code null} for none
   */
  public Date getDueDate() {
    return dueDate;
  }

  /**
   * Date, in UTC, that work on this attachment is due. This must be specified if `due_time` is
   * specified.
   * @param dueDate dueDate or {@code null} for none
   */
  public AddOnAttachment setDueDate(Date dueDate) {
    this.dueDate = dueDate;
    return this;
  }

  /**
   * Time of day, in UTC, that work on this attachment is due. This must be specified if `due_date`
   * is specified.
   * @return value or {@code null} for none
   */
  public TimeOfDay getDueTime() {
    return dueTime;
  }

  /**
   * Time of day, in UTC, that work on this attachment is due. This must be specified if `due_date`
   * is specified.
   * @param dueTime dueTime or {@code null} for none
   */
  public AddOnAttachment setDueTime(TimeOfDay dueTime) {
    this.dueTime = dueTime;
    return this;
  }

  /**
   * Immutable. Classroom-assigned identifier for this attachment, unique per post.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * Immutable. Classroom-assigned identifier for this attachment, unique per post.
   * @param id id or {@code null} for none
   */
  public AddOnAttachment setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Immutable. Identifier of the `Announcement`, `CourseWork`, or `CourseWorkMaterial` under which
   * the attachment is attached. Unique per course.
   * @return value or {@code null} for none
   */
  public java.lang.String getItemId() {
    return itemId;
  }

  /**
   * Immutable. Identifier of the `Announcement`, `CourseWork`, or `CourseWorkMaterial` under which
   * the attachment is attached. Unique per course.
   * @param itemId itemId or {@code null} for none
   */
  public AddOnAttachment setItemId(java.lang.String itemId) {
    this.itemId = itemId;
    return this;
  }

  /**
   * Maximum grade for this attachment. Can only be set if `studentWorkReviewUri` is set. Set to a
   * non-zero value to indicate that the attachment supports grade passback. If set, this must be a
   * non-negative integer value. When set to zero, the attachment will not support grade passback.
   * @return value or {@code null} for none
   */
  public java.lang.Double getMaxPoints() {
    return maxPoints;
  }

  /**
   * Maximum grade for this attachment. Can only be set if `studentWorkReviewUri` is set. Set to a
   * non-zero value to indicate that the attachment supports grade passback. If set, this must be a
   * non-negative integer value. When set to zero, the attachment will not support grade passback.
   * @param maxPoints maxPoints or {@code null} for none
   */
  public AddOnAttachment setMaxPoints(java.lang.Double maxPoints) {
    this.maxPoints = maxPoints;
    return this;
  }

  /**
   * Immutable. Deprecated, use `item_id` instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getPostId() {
    return postId;
  }

  /**
   * Immutable. Deprecated, use `item_id` instead.
   * @param postId postId or {@code null} for none
   */
  public AddOnAttachment setPostId(java.lang.String postId) {
    this.postId = postId;
    return this;
  }

  /**
   * Required. URI to show the student view of the attachment. The URI will be opened in an iframe
   * with the `courseId`, `itemId`, `itemType`, and `attachmentId` query parameters set.
   * @return value or {@code null} for none
   */
  public EmbedUri getStudentViewUri() {
    return studentViewUri;
  }

  /**
   * Required. URI to show the student view of the attachment. The URI will be opened in an iframe
   * with the `courseId`, `itemId`, `itemType`, and `attachmentId` query parameters set.
   * @param studentViewUri studentViewUri or {@code null} for none
   */
  public AddOnAttachment setStudentViewUri(EmbedUri studentViewUri) {
    this.studentViewUri = studentViewUri;
    return this;
  }

  /**
   * URI for the teacher to see student work on the attachment, if applicable. The URI will be
   * opened in an iframe with the `courseId`, `itemId`, `itemType`, `attachmentId`, and
   * `submissionId` query parameters set. This is the same `submissionId` returned in the [`AddOnCon
   * text.studentContext`](//devsite.google.com/classroom/reference/rest/v1/AddOnContext#StudentCont
   * ext) field when a student views the attachment. If the URI is omitted or removed, `max_points`
   * will also be discarded.
   * @return value or {@code null} for none
   */
  public EmbedUri getStudentWorkReviewUri() {
    return studentWorkReviewUri;
  }

  /**
   * URI for the teacher to see student work on the attachment, if applicable. The URI will be
   * opened in an iframe with the `courseId`, `itemId`, `itemType`, `attachmentId`, and
   * `submissionId` query parameters set. This is the same `submissionId` returned in the [`AddOnCon
   * text.studentContext`](//devsite.google.com/classroom/reference/rest/v1/AddOnContext#StudentCont
   * ext) field when a student views the attachment. If the URI is omitted or removed, `max_points`
   * will also be discarded.
   * @param studentWorkReviewUri studentWorkReviewUri or {@code null} for none
   */
  public AddOnAttachment setStudentWorkReviewUri(EmbedUri studentWorkReviewUri) {
    this.studentWorkReviewUri = studentWorkReviewUri;
    return this;
  }

  /**
   * Required. URI to show the teacher view of the attachment. The URI will be opened in an iframe
   * with the `courseId`, `itemId`, `itemType`, and `attachmentId` query parameters set.
   * @return value or {@code null} for none
   */
  public EmbedUri getTeacherViewUri() {
    return teacherViewUri;
  }

  /**
   * Required. URI to show the teacher view of the attachment. The URI will be opened in an iframe
   * with the `courseId`, `itemId`, `itemType`, and `attachmentId` query parameters set.
   * @param teacherViewUri teacherViewUri or {@code null} for none
   */
  public AddOnAttachment setTeacherViewUri(EmbedUri teacherViewUri) {
    this.teacherViewUri = teacherViewUri;
    return this;
  }

  /**
   * Required. Title of this attachment. The title must be between 1 and 1000 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * Required. Title of this attachment. The title must be between 1 and 1000 characters.
   * @param title title or {@code null} for none
   */
  public AddOnAttachment setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  @Override
  public AddOnAttachment set(String fieldName, Object value) {
    return (AddOnAttachment) super.set(fieldName, value);
  }

  @Override
  public AddOnAttachment clone() {
    return (AddOnAttachment) super.clone();
  }

}
