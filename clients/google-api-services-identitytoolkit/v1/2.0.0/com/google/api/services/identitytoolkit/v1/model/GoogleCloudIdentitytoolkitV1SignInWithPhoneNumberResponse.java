/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.identitytoolkit.v1.model;

/**
 * Response message for SignInWithPhoneNumber.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Identity Toolkit API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse extends com.google.api.client.json.GenericJson {

  /**
   * The number of seconds until the ID token expires.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long expiresIn;

  /**
   * Identity Platform ID token for the authenticated user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String idToken;

  /**
   * Whether the authenticated user was created by this request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean isNewUser;

  /**
   * The id of the authenticated user. Present in the case of a successful authentication. In the
   * case when the phone could be verified but the account operation could not be performed, a
   * temporary proof will be returned instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String localId;

  /**
   * Phone number of the authenticated user. Always present in the response.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String phoneNumber;

  /**
   * Refresh token for the authenticated user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String refreshToken;

  /**
   * A proof of the phone number verification, provided if a phone authentication is successful but
   * the user operation fails. This happens when the request tries to link a phone number to a user
   * with an ID token or reauthenticate with an ID token but the phone number is linked to a
   * different user.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String temporaryProof;

  /**
   * The number of seconds until the temporary proof expires.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long temporaryProofExpiresIn;

  /**
   * Do not use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String verificationProof;

  /**
   * Do not use.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long verificationProofExpiresIn;

  /**
   * The number of seconds until the ID token expires.
   * @return value or {@code null} for none
   */
  public java.lang.Long getExpiresIn() {
    return expiresIn;
  }

  /**
   * The number of seconds until the ID token expires.
   * @param expiresIn expiresIn or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse setExpiresIn(java.lang.Long expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

  /**
   * Identity Platform ID token for the authenticated user.
   * @return value or {@code null} for none
   */
  public java.lang.String getIdToken() {
    return idToken;
  }

  /**
   * Identity Platform ID token for the authenticated user.
   * @param idToken idToken or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse setIdToken(java.lang.String idToken) {
    this.idToken = idToken;
    return this;
  }

  /**
   * Whether the authenticated user was created by this request.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getIsNewUser() {
    return isNewUser;
  }

  /**
   * Whether the authenticated user was created by this request.
   * @param isNewUser isNewUser or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse setIsNewUser(java.lang.Boolean isNewUser) {
    this.isNewUser = isNewUser;
    return this;
  }

  /**
   * The id of the authenticated user. Present in the case of a successful authentication. In the
   * case when the phone could be verified but the account operation could not be performed, a
   * temporary proof will be returned instead.
   * @return value or {@code null} for none
   */
  public java.lang.String getLocalId() {
    return localId;
  }

  /**
   * The id of the authenticated user. Present in the case of a successful authentication. In the
   * case when the phone could be verified but the account operation could not be performed, a
   * temporary proof will be returned instead.
   * @param localId localId or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse setLocalId(java.lang.String localId) {
    this.localId = localId;
    return this;
  }

  /**
   * Phone number of the authenticated user. Always present in the response.
   * @return value or {@code null} for none
   */
  public java.lang.String getPhoneNumber() {
    return phoneNumber;
  }

  /**
   * Phone number of the authenticated user. Always present in the response.
   * @param phoneNumber phoneNumber or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse setPhoneNumber(java.lang.String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Refresh token for the authenticated user.
   * @return value or {@code null} for none
   */
  public java.lang.String getRefreshToken() {
    return refreshToken;
  }

  /**
   * Refresh token for the authenticated user.
   * @param refreshToken refreshToken or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse setRefreshToken(java.lang.String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

  /**
   * A proof of the phone number verification, provided if a phone authentication is successful but
   * the user operation fails. This happens when the request tries to link a phone number to a user
   * with an ID token or reauthenticate with an ID token but the phone number is linked to a
   * different user.
   * @return value or {@code null} for none
   */
  public java.lang.String getTemporaryProof() {
    return temporaryProof;
  }

  /**
   * A proof of the phone number verification, provided if a phone authentication is successful but
   * the user operation fails. This happens when the request tries to link a phone number to a user
   * with an ID token or reauthenticate with an ID token but the phone number is linked to a
   * different user.
   * @param temporaryProof temporaryProof or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse setTemporaryProof(java.lang.String temporaryProof) {
    this.temporaryProof = temporaryProof;
    return this;
  }

  /**
   * The number of seconds until the temporary proof expires.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTemporaryProofExpiresIn() {
    return temporaryProofExpiresIn;
  }

  /**
   * The number of seconds until the temporary proof expires.
   * @param temporaryProofExpiresIn temporaryProofExpiresIn or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse setTemporaryProofExpiresIn(java.lang.Long temporaryProofExpiresIn) {
    this.temporaryProofExpiresIn = temporaryProofExpiresIn;
    return this;
  }

  /**
   * Do not use.
   * @return value or {@code null} for none
   */
  public java.lang.String getVerificationProof() {
    return verificationProof;
  }

  /**
   * Do not use.
   * @param verificationProof verificationProof or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse setVerificationProof(java.lang.String verificationProof) {
    this.verificationProof = verificationProof;
    return this;
  }

  /**
   * Do not use.
   * @return value or {@code null} for none
   */
  public java.lang.Long getVerificationProofExpiresIn() {
    return verificationProofExpiresIn;
  }

  /**
   * Do not use.
   * @param verificationProofExpiresIn verificationProofExpiresIn or {@code null} for none
   */
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse setVerificationProofExpiresIn(java.lang.Long verificationProofExpiresIn) {
    this.verificationProofExpiresIn = verificationProofExpiresIn;
    return this;
  }

  @Override
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse set(String fieldName, Object value) {
    return (GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse clone() {
    return (GoogleCloudIdentitytoolkitV1SignInWithPhoneNumberResponse) super.clone();
  }

}
