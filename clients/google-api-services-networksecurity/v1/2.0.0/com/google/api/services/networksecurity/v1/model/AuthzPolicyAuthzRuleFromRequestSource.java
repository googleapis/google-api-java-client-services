/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.networksecurity.v1.model;

/**
 * Describes the properties of a single source.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Network Security API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AuthzPolicyAuthzRuleFromRequestSource extends com.google.api.client.json.GenericJson {

  /**
   * Optional. A list of IP addresses or IP address ranges to match against the source IP address of
   * the request. Limited to 10 ip_blocks per Authorization Policy
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AuthzPolicyAuthzRuleIpBlock> ipBlocks;

  /**
   * Optional. A list of identities derived from the client's certificate. This field will not match
   * on a request unless frontend mutual TLS is enabled for the forwarding rule or Gateway and the
   * client certificate has been successfully validated by mTLS. Each identity is a string whose
   * value is matched against a list of URI SANs, DNS Name SANs, or the common name in the client's
   * certificate. A match happens when any principal matches with the rule. Limited to 50 principals
   * per Authorization Policy for regional internal Application Load Balancers, regional external
   * Application Load Balancers, cross-region internal Application Load Balancers, and Cloud Service
   * Mesh. This field is not supported for global external Application Load Balancers.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AuthzPolicyAuthzRulePrincipal> principals;

  /**
   * Optional. A list of resources to match against the resource of the source VM of a request.
   * Limited to 10 resources per Authorization Policy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<AuthzPolicyAuthzRuleRequestResource> resources;

  /**
   * Optional. A list of IP addresses or IP address ranges to match against the source IP address of
   * the request. Limited to 10 ip_blocks per Authorization Policy
   * @return value or {@code null} for none
   */
  public java.util.List<AuthzPolicyAuthzRuleIpBlock> getIpBlocks() {
    return ipBlocks;
  }

  /**
   * Optional. A list of IP addresses or IP address ranges to match against the source IP address of
   * the request. Limited to 10 ip_blocks per Authorization Policy
   * @param ipBlocks ipBlocks or {@code null} for none
   */
  public AuthzPolicyAuthzRuleFromRequestSource setIpBlocks(java.util.List<AuthzPolicyAuthzRuleIpBlock> ipBlocks) {
    this.ipBlocks = ipBlocks;
    return this;
  }

  /**
   * Optional. A list of identities derived from the client's certificate. This field will not match
   * on a request unless frontend mutual TLS is enabled for the forwarding rule or Gateway and the
   * client certificate has been successfully validated by mTLS. Each identity is a string whose
   * value is matched against a list of URI SANs, DNS Name SANs, or the common name in the client's
   * certificate. A match happens when any principal matches with the rule. Limited to 50 principals
   * per Authorization Policy for regional internal Application Load Balancers, regional external
   * Application Load Balancers, cross-region internal Application Load Balancers, and Cloud Service
   * Mesh. This field is not supported for global external Application Load Balancers.
   * @return value or {@code null} for none
   */
  public java.util.List<AuthzPolicyAuthzRulePrincipal> getPrincipals() {
    return principals;
  }

  /**
   * Optional. A list of identities derived from the client's certificate. This field will not match
   * on a request unless frontend mutual TLS is enabled for the forwarding rule or Gateway and the
   * client certificate has been successfully validated by mTLS. Each identity is a string whose
   * value is matched against a list of URI SANs, DNS Name SANs, or the common name in the client's
   * certificate. A match happens when any principal matches with the rule. Limited to 50 principals
   * per Authorization Policy for regional internal Application Load Balancers, regional external
   * Application Load Balancers, cross-region internal Application Load Balancers, and Cloud Service
   * Mesh. This field is not supported for global external Application Load Balancers.
   * @param principals principals or {@code null} for none
   */
  public AuthzPolicyAuthzRuleFromRequestSource setPrincipals(java.util.List<AuthzPolicyAuthzRulePrincipal> principals) {
    this.principals = principals;
    return this;
  }

  /**
   * Optional. A list of resources to match against the resource of the source VM of a request.
   * Limited to 10 resources per Authorization Policy.
   * @return value or {@code null} for none
   */
  public java.util.List<AuthzPolicyAuthzRuleRequestResource> getResources() {
    return resources;
  }

  /**
   * Optional. A list of resources to match against the resource of the source VM of a request.
   * Limited to 10 resources per Authorization Policy.
   * @param resources resources or {@code null} for none
   */
  public AuthzPolicyAuthzRuleFromRequestSource setResources(java.util.List<AuthzPolicyAuthzRuleRequestResource> resources) {
    this.resources = resources;
    return this;
  }

  @Override
  public AuthzPolicyAuthzRuleFromRequestSource set(String fieldName, Object value) {
    return (AuthzPolicyAuthzRuleFromRequestSource) super.set(fieldName, value);
  }

  @Override
  public AuthzPolicyAuthzRuleFromRequestSource clone() {
    return (AuthzPolicyAuthzRuleFromRequestSource) super.clone();
  }

}
