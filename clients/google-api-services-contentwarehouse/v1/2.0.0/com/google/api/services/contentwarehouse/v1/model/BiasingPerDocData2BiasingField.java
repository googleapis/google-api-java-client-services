/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for BiasingPerDocData2BiasingField.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BiasingPerDocData2BiasingField extends com.google.api.client.json.GenericJson {

  /**
   * A fingerprint of the actual name of the field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Long compressedName;

  /**
   * The value, under various representations to get maximum compression. Exactly one of them is
   * guaranteed to be filled. value as a double.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double value;

  /**
   * a floating value, represented as an integer by converting using floating_value * 1000. Useable
   * for all floating values that need 3 digits of precision, and are small enough.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer valueFloat;

  /**
   * value as an int32. When the value is encode-able as an integer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer valueInt;

  /**
   * A fingerprint of the actual name of the field.
   * @return value or {@code null} for none
   */
  public java.lang.Long getCompressedName() {
    return compressedName;
  }

  /**
   * A fingerprint of the actual name of the field.
   * @param compressedName compressedName or {@code null} for none
   */
  public BiasingPerDocData2BiasingField setCompressedName(java.lang.Long compressedName) {
    this.compressedName = compressedName;
    return this;
  }

  /**
   * The value, under various representations to get maximum compression. Exactly one of them is
   * guaranteed to be filled. value as a double.
   * @return value or {@code null} for none
   */
  public java.lang.Double getValue() {
    return value;
  }

  /**
   * The value, under various representations to get maximum compression. Exactly one of them is
   * guaranteed to be filled. value as a double.
   * @param value value or {@code null} for none
   */
  public BiasingPerDocData2BiasingField setValue(java.lang.Double value) {
    this.value = value;
    return this;
  }

  /**
   * a floating value, represented as an integer by converting using floating_value * 1000. Useable
   * for all floating values that need 3 digits of precision, and are small enough.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getValueFloat() {
    return valueFloat;
  }

  /**
   * a floating value, represented as an integer by converting using floating_value * 1000. Useable
   * for all floating values that need 3 digits of precision, and are small enough.
   * @param valueFloat valueFloat or {@code null} for none
   */
  public BiasingPerDocData2BiasingField setValueFloat(java.lang.Integer valueFloat) {
    this.valueFloat = valueFloat;
    return this;
  }

  /**
   * value as an int32. When the value is encode-able as an integer.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getValueInt() {
    return valueInt;
  }

  /**
   * value as an int32. When the value is encode-able as an integer.
   * @param valueInt valueInt or {@code null} for none
   */
  public BiasingPerDocData2BiasingField setValueInt(java.lang.Integer valueInt) {
    this.valueInt = valueInt;
    return this;
  }

  @Override
  public BiasingPerDocData2BiasingField set(String fieldName, Object value) {
    return (BiasingPerDocData2BiasingField) super.set(fieldName, value);
  }

  @Override
  public BiasingPerDocData2BiasingField clone() {
    return (BiasingPerDocData2BiasingField) super.clone();
  }

}
