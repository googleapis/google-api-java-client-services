/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workflowexecutions.v1beta.model;

/**
 * A running instance of a
 * [Workflow](/workflows/docs/reference/rest/v1beta/projects.locations.workflows).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Workflow Executions API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Execution extends com.google.api.client.json.GenericJson {

  /**
   * Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*:
   * If you are using the REST API directly to run your workflow, you must escape any JSON string
   * value of `argument`. Example:
   * `'{"argument":"{\"firstName\":\"FIRST\",\"lastName\":\"LAST\"}"}'`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String argument;

  /**
   * Output only. Marks the end of execution, successful or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * Output only. The error which caused the execution to finish prematurely. The value is only
   * present if the execution's state is `FAILED` or `CANCELLED`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Error error;

  /**
   * Output only. The resource name of the execution. Format:
   * projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * Output only. Output of the execution represented as a JSON string. The value can only be
   * present if the execution's state is `SUCCEEDED`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String result;

  /**
   * Output only. Marks the beginning of execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Output only. Current state of the execution.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. Revision of the workflow this execution is using.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String workflowRevisionId;

  /**
   * Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*:
   * If you are using the REST API directly to run your workflow, you must escape any JSON string
   * value of `argument`. Example:
   * `'{"argument":"{\"firstName\":\"FIRST\",\"lastName\":\"LAST\"}"}'`
   * @return value or {@code null} for none
   */
  public java.lang.String getArgument() {
    return argument;
  }

  /**
   * Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*:
   * If you are using the REST API directly to run your workflow, you must escape any JSON string
   * value of `argument`. Example:
   * `'{"argument":"{\"firstName\":\"FIRST\",\"lastName\":\"LAST\"}"}'`
   * @param argument argument or {@code null} for none
   */
  public Execution setArgument(java.lang.String argument) {
    this.argument = argument;
    return this;
  }

  /**
   * Output only. Marks the end of execution, successful or not.
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * Output only. Marks the end of execution, successful or not.
   * @param endTime endTime or {@code null} for none
   */
  public Execution setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Output only. The error which caused the execution to finish prematurely. The value is only
   * present if the execution's state is `FAILED` or `CANCELLED`.
   * @return value or {@code null} for none
   */
  public Error getError() {
    return error;
  }

  /**
   * Output only. The error which caused the execution to finish prematurely. The value is only
   * present if the execution's state is `FAILED` or `CANCELLED`.
   * @param error error or {@code null} for none
   */
  public Execution setError(Error error) {
    this.error = error;
    return this;
  }

  /**
   * Output only. The resource name of the execution. Format:
   * projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Output only. The resource name of the execution. Format:
   * projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
   * @param name name or {@code null} for none
   */
  public Execution setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * Output only. Output of the execution represented as a JSON string. The value can only be
   * present if the execution's state is `SUCCEEDED`.
   * @return value or {@code null} for none
   */
  public java.lang.String getResult() {
    return result;
  }

  /**
   * Output only. Output of the execution represented as a JSON string. The value can only be
   * present if the execution's state is `SUCCEEDED`.
   * @param result result or {@code null} for none
   */
  public Execution setResult(java.lang.String result) {
    this.result = result;
    return this;
  }

  /**
   * Output only. Marks the beginning of execution.
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Output only. Marks the beginning of execution.
   * @param startTime startTime or {@code null} for none
   */
  public Execution setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Output only. Current state of the execution.
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. Current state of the execution.
   * @param state state or {@code null} for none
   */
  public Execution setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  /**
   * Output only. Revision of the workflow this execution is using.
   * @return value or {@code null} for none
   */
  public java.lang.String getWorkflowRevisionId() {
    return workflowRevisionId;
  }

  /**
   * Output only. Revision of the workflow this execution is using.
   * @param workflowRevisionId workflowRevisionId or {@code null} for none
   */
  public Execution setWorkflowRevisionId(java.lang.String workflowRevisionId) {
    this.workflowRevisionId = workflowRevisionId;
    return this;
  }

  @Override
  public Execution set(String fieldName, Object value) {
    return (Execution) super.set(fieldName, value);
  }

  @Override
  public Execution clone() {
    return (Execution) super.clone();
  }

}
