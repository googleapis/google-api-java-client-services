/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.spanner.v1.model;

/**
 * The request for BeginTransaction.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Spanner API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BeginTransactionRequest extends com.google.api.client.json.GenericJson {

  /**
   * Optional. Required for read-write transactions on a multiplexed session that commit mutations
   * but do not perform any reads or queries. Clients should randomly select one of the mutations
   * from the mutation set and send it as a part of this request.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Mutation mutationKey;

  /**
   * Required. Options for the new transaction.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TransactionOptions options;

  /**
   * Common options for this request. Priority is ignored for this request. Setting the priority in
   * this request_options struct will not do anything. To set the priority for a transaction, set it
   * on the reads and writes that are part of this transaction instead.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RequestOptions requestOptions;

  /**
   * Optional. Required for read-write transactions on a multiplexed session that commit mutations
   * but do not perform any reads or queries. Clients should randomly select one of the mutations
   * from the mutation set and send it as a part of this request.
   * @return value or {@code null} for none
   */
  public Mutation getMutationKey() {
    return mutationKey;
  }

  /**
   * Optional. Required for read-write transactions on a multiplexed session that commit mutations
   * but do not perform any reads or queries. Clients should randomly select one of the mutations
   * from the mutation set and send it as a part of this request.
   * @param mutationKey mutationKey or {@code null} for none
   */
  public BeginTransactionRequest setMutationKey(Mutation mutationKey) {
    this.mutationKey = mutationKey;
    return this;
  }

  /**
   * Required. Options for the new transaction.
   * @return value or {@code null} for none
   */
  public TransactionOptions getOptions() {
    return options;
  }

  /**
   * Required. Options for the new transaction.
   * @param options options or {@code null} for none
   */
  public BeginTransactionRequest setOptions(TransactionOptions options) {
    this.options = options;
    return this;
  }

  /**
   * Common options for this request. Priority is ignored for this request. Setting the priority in
   * this request_options struct will not do anything. To set the priority for a transaction, set it
   * on the reads and writes that are part of this transaction instead.
   * @return value or {@code null} for none
   */
  public RequestOptions getRequestOptions() {
    return requestOptions;
  }

  /**
   * Common options for this request. Priority is ignored for this request. Setting the priority in
   * this request_options struct will not do anything. To set the priority for a transaction, set it
   * on the reads and writes that are part of this transaction instead.
   * @param requestOptions requestOptions or {@code null} for none
   */
  public BeginTransactionRequest setRequestOptions(RequestOptions requestOptions) {
    this.requestOptions = requestOptions;
    return this;
  }

  @Override
  public BeginTransactionRequest set(String fieldName, Object value) {
    return (BeginTransactionRequest) super.set(fieldName, value);
  }

  @Override
  public BeginTransactionRequest clone() {
    return (BeginTransactionRequest) super.clone();
  }

}
