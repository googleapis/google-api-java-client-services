/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.genomics.model;

/**
 * Metadata describes a single piece of variant call metadata. These data include a top level key
 * and either a single value string (value) or a list of key-value pairs (info.) Value and info are
 * mutually exclusive.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Genomics API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class VariantSetMetadata extends com.google.api.client.json.GenericJson {

  /**
   * A textual description of this metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * User-provided ID field, not enforced by this API. Two or more pieces of structured metadata
   * with identical id and key fields are considered equivalent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String id;

  /**
   * Remaining structured metadata key-value pairs. This must be of the form map (string key mapping
   * to a list of string values).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.util.List<java.lang.Object>> info;

  /**
   * The top-level key.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String key;

  /**
   * The number of values that can be included in a field described by this metadata.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String number;

  /**
   * The type of data. Possible types include: Integer, Float, Flag, Character, and String.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * The value field for simple metadata
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String value;

  /**
   * A textual description of this metadata.
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * A textual description of this metadata.
   * @param description description or {@code null} for none
   */
  public VariantSetMetadata setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * User-provided ID field, not enforced by this API. Two or more pieces of structured metadata
   * with identical id and key fields are considered equivalent.
   * @return value or {@code null} for none
   */
  public java.lang.String getId() {
    return id;
  }

  /**
   * User-provided ID field, not enforced by this API. Two or more pieces of structured metadata
   * with identical id and key fields are considered equivalent.
   * @param id id or {@code null} for none
   */
  public VariantSetMetadata setId(java.lang.String id) {
    this.id = id;
    return this;
  }

  /**
   * Remaining structured metadata key-value pairs. This must be of the form map (string key mapping
   * to a list of string values).
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.util.List<java.lang.Object>> getInfo() {
    return info;
  }

  /**
   * Remaining structured metadata key-value pairs. This must be of the form map (string key mapping
   * to a list of string values).
   * @param info info or {@code null} for none
   */
  public VariantSetMetadata setInfo(java.util.Map<String, java.util.List<java.lang.Object>> info) {
    this.info = info;
    return this;
  }

  /**
   * The top-level key.
   * @return value or {@code null} for none
   */
  public java.lang.String getKey() {
    return key;
  }

  /**
   * The top-level key.
   * @param key key or {@code null} for none
   */
  public VariantSetMetadata setKey(java.lang.String key) {
    this.key = key;
    return this;
  }

  /**
   * The number of values that can be included in a field described by this metadata.
   * @return value or {@code null} for none
   */
  public java.lang.String getNumber() {
    return number;
  }

  /**
   * The number of values that can be included in a field described by this metadata.
   * @param number number or {@code null} for none
   */
  public VariantSetMetadata setNumber(java.lang.String number) {
    this.number = number;
    return this;
  }

  /**
   * The type of data. Possible types include: Integer, Float, Flag, Character, and String.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The type of data. Possible types include: Integer, Float, Flag, Character, and String.
   * @param type type or {@code null} for none
   */
  public VariantSetMetadata setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * The value field for simple metadata
   * @return value or {@code null} for none
   */
  public java.lang.String getValue() {
    return value;
  }

  /**
   * The value field for simple metadata
   * @param value value or {@code null} for none
   */
  public VariantSetMetadata setValue(java.lang.String value) {
    this.value = value;
    return this;
  }

  @Override
  public VariantSetMetadata set(String fieldName, Object value) {
    return (VariantSetMetadata) super.set(fieldName, value);
  }

  @Override
  public VariantSetMetadata clone() {
    return (VariantSetMetadata) super.clone();
  }

}
