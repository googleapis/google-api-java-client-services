/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Available tags: 14+
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PseudoVideoData extends com.google.api.client.json.GenericJson {

  /**
   * ASR model MPM version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("AsrModel")
  private java.lang.String asrModel;

  /**
   * This should be the MustangDocId, we need to figure out how to generate a uint64 given the int64
   * we have in data_set
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("DocKey") @com.google.api.client.json.JsonString
  private java.math.BigInteger docKey;

  /**
   * Language of the recognizer used to generate transcript.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Lang")
  private java.lang.String lang;

  /**
   * This is the videodocid associate to the http://video.google.com/videoplay?docid= NUMBER
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("MustangDocId")
  private java.lang.String mustangDocId;

  /**
   * URL for document.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("Url")
  private java.lang.String url;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String s3Mode;

  /**
   * S3 ASR model info.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String s3ModelInfoLabel;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private PseudoVideoDataTranscript transcript;

  /**
   * ASR model MPM version.
   * @return value or {@code null} for none
   */
  public java.lang.String getAsrModel() {
    return asrModel;
  }

  /**
   * ASR model MPM version.
   * @param asrModel asrModel or {@code null} for none
   */
  public PseudoVideoData setAsrModel(java.lang.String asrModel) {
    this.asrModel = asrModel;
    return this;
  }

  /**
   * This should be the MustangDocId, we need to figure out how to generate a uint64 given the int64
   * we have in data_set
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getDocKey() {
    return docKey;
  }

  /**
   * This should be the MustangDocId, we need to figure out how to generate a uint64 given the int64
   * we have in data_set
   * @param docKey docKey or {@code null} for none
   */
  public PseudoVideoData setDocKey(java.math.BigInteger docKey) {
    this.docKey = docKey;
    return this;
  }

  /**
   * Language of the recognizer used to generate transcript.
   * @return value or {@code null} for none
   */
  public java.lang.String getLang() {
    return lang;
  }

  /**
   * Language of the recognizer used to generate transcript.
   * @param lang lang or {@code null} for none
   */
  public PseudoVideoData setLang(java.lang.String lang) {
    this.lang = lang;
    return this;
  }

  /**
   * This is the videodocid associate to the http://video.google.com/videoplay?docid= NUMBER
   * @return value or {@code null} for none
   */
  public java.lang.String getMustangDocId() {
    return mustangDocId;
  }

  /**
   * This is the videodocid associate to the http://video.google.com/videoplay?docid= NUMBER
   * @param mustangDocId mustangDocId or {@code null} for none
   */
  public PseudoVideoData setMustangDocId(java.lang.String mustangDocId) {
    this.mustangDocId = mustangDocId;
    return this;
  }

  /**
   * URL for document.
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * URL for document.
   * @param url url or {@code null} for none
   */
  public PseudoVideoData setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getS3Mode() {
    return s3Mode;
  }

  /**
   * @param s3Mode s3Mode or {@code null} for none
   */
  public PseudoVideoData setS3Mode(java.lang.String s3Mode) {
    this.s3Mode = s3Mode;
    return this;
  }

  /**
   * S3 ASR model info.
   * @return value or {@code null} for none
   */
  public java.lang.String getS3ModelInfoLabel() {
    return s3ModelInfoLabel;
  }

  /**
   * S3 ASR model info.
   * @param s3ModelInfoLabel s3ModelInfoLabel or {@code null} for none
   */
  public PseudoVideoData setS3ModelInfoLabel(java.lang.String s3ModelInfoLabel) {
    this.s3ModelInfoLabel = s3ModelInfoLabel;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public PseudoVideoDataTranscript getTranscript() {
    return transcript;
  }

  /**
   * @param transcript transcript or {@code null} for none
   */
  public PseudoVideoData setTranscript(PseudoVideoDataTranscript transcript) {
    this.transcript = transcript;
    return this;
  }

  @Override
  public PseudoVideoData set(String fieldName, Object value) {
    return (PseudoVideoData) super.set(fieldName, value);
  }

  @Override
  public PseudoVideoData clone() {
    return (PseudoVideoData) super.clone();
  }

}
