/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.domains.v1beta1.model;

/**
 * Configuration for an arbitrary DNS provider.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Domains API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class CustomDns extends com.google.api.client.json.GenericJson {

  /**
   * The list of DS records for this domain, which are used to enable DNSSEC. The domain's DNS
   * provider can provide the values to set here. If this field is empty, DNSSEC is disabled.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<DsRecord> dsRecords;

  /**
   * Required. A list of name servers that store the DNS zone for this domain. Each name server is a
   * domain name, with Unicode domain names expressed in Punycode format.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> nameServers;

  /**
   * The list of DS records for this domain, which are used to enable DNSSEC. The domain's DNS
   * provider can provide the values to set here. If this field is empty, DNSSEC is disabled.
   * @return value or {@code null} for none
   */
  public java.util.List<DsRecord> getDsRecords() {
    return dsRecords;
  }

  /**
   * The list of DS records for this domain, which are used to enable DNSSEC. The domain's DNS
   * provider can provide the values to set here. If this field is empty, DNSSEC is disabled.
   * @param dsRecords dsRecords or {@code null} for none
   */
  public CustomDns setDsRecords(java.util.List<DsRecord> dsRecords) {
    this.dsRecords = dsRecords;
    return this;
  }

  /**
   * Required. A list of name servers that store the DNS zone for this domain. Each name server is a
   * domain name, with Unicode domain names expressed in Punycode format.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getNameServers() {
    return nameServers;
  }

  /**
   * Required. A list of name servers that store the DNS zone for this domain. Each name server is a
   * domain name, with Unicode domain names expressed in Punycode format.
   * @param nameServers nameServers or {@code null} for none
   */
  public CustomDns setNameServers(java.util.List<java.lang.String> nameServers) {
    this.nameServers = nameServers;
    return this;
  }

  @Override
  public CustomDns set(String fieldName, Object value) {
    return (CustomDns) super.set(fieldName, value);
  }

  @Override
  public CustomDns clone() {
    return (CustomDns) super.clone();
  }

}
