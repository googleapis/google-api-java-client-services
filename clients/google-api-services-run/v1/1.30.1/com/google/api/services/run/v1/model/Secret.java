/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.run.v1.model;

/**
 * Cloud Run fully managed: not supported Cloud Run on GKE: supported Secret holds secret data of a
 * certain type. The total bytes of the values in the Data field must be less than MaxSecretSize
 * bytes.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Run Admin API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Secret extends com.google.api.client.json.GenericJson {

  /**
   * Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or
   * '.'. The serialized form of the secret data is a base64 encoded string, representing the
   * arbitrary (possibly non-string) data value here. Described in
   * https://tools.ietf.org/html/rfc4648#section-4
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> data;

  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-
   * conventions.md#metadata
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ObjectMeta metadata;

  /**
   * stringData allows specifying non-binary secret data in string form. It is provided as a write-
   * only convenience method. All keys and values are merged into the data field on write,
   * overwriting any existing values. It is never output when reading from the API. +k8s:conversion-
   * gen=false
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> stringData;

  /**
   * Used to facilitate programmatic handling of secret data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or
   * '.'. The serialized form of the secret data is a base64 encoded string, representing the
   * arbitrary (possibly non-string) data value here. Described in
   * https://tools.ietf.org/html/rfc4648#section-4
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getData() {
    return data;
  }

  /**
   * Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_' or
   * '.'. The serialized form of the secret data is a base64 encoded string, representing the
   * arbitrary (possibly non-string) data value here. Described in
   * https://tools.ietf.org/html/rfc4648#section-4
   * @param data data or {@code null} for none
   */
  public Secret setData(java.util.Map<String, java.lang.String> data) {
    this.data = data;
    return this;
  }

  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-
   * conventions.md#metadata
   * @return value or {@code null} for none
   */
  public ObjectMeta getMetadata() {
    return metadata;
  }

  /**
   * Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-
   * conventions.md#metadata
   * @param metadata metadata or {@code null} for none
   */
  public Secret setMetadata(ObjectMeta metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * stringData allows specifying non-binary secret data in string form. It is provided as a write-
   * only convenience method. All keys and values are merged into the data field on write,
   * overwriting any existing values. It is never output when reading from the API. +k8s:conversion-
   * gen=false
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getStringData() {
    return stringData;
  }

  /**
   * stringData allows specifying non-binary secret data in string form. It is provided as a write-
   * only convenience method. All keys and values are merged into the data field on write,
   * overwriting any existing values. It is never output when reading from the API. +k8s:conversion-
   * gen=false
   * @param stringData stringData or {@code null} for none
   */
  public Secret setStringData(java.util.Map<String, java.lang.String> stringData) {
    this.stringData = stringData;
    return this;
  }

  /**
   * Used to facilitate programmatic handling of secret data.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * Used to facilitate programmatic handling of secret data.
   * @param type type or {@code null} for none
   */
  public Secret setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public Secret set(String fieldName, Object value) {
    return (Secret) super.set(fieldName, value);
  }

  @Override
  public Secret clone() {
    return (Secret) super.clone();
  }

}
