/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.content.model;

/**
 * Model definition for OrderPromotion.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Content API for Shopping. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class OrderPromotion extends com.google.api.client.json.GenericJson {

  /**
   * Items which this promotion may be applied to. If empty, there are no restrictions on applicable
   * items and quantity.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<OrderPromotionItem> applicableItems;

  /**
   * Items which this promotion have been applied to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<OrderPromotionItem> appliedItems;

  /**
   * The party funding the promotion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String funder;

  /**
   * This field is used to identify promotions within merchants' own systems.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String merchantPromotionId;

  /**
   * Estimated discount applied to price. Amount is pre-tax or post-tax depending on location of
   * order.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Price priceValue;

  /**
   * A short title of the promotion to be shown on the checkout page.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String shortTitle;

  /**
   * The category of the promotion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subtype;

  /**
   * Estimated discount applied to tax (if allowed by law).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Price taxValue;

  /**
   * The title of the promotion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String title;

  /**
   * The scope of the promotion.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Items which this promotion may be applied to. If empty, there are no restrictions on applicable
   * items and quantity.
   * @return value or {@code null} for none
   */
  public java.util.List<OrderPromotionItem> getApplicableItems() {
    return applicableItems;
  }

  /**
   * Items which this promotion may be applied to. If empty, there are no restrictions on applicable
   * items and quantity.
   * @param applicableItems applicableItems or {@code null} for none
   */
  public OrderPromotion setApplicableItems(java.util.List<OrderPromotionItem> applicableItems) {
    this.applicableItems = applicableItems;
    return this;
  }

  /**
   * Items which this promotion have been applied to.
   * @return value or {@code null} for none
   */
  public java.util.List<OrderPromotionItem> getAppliedItems() {
    return appliedItems;
  }

  /**
   * Items which this promotion have been applied to.
   * @param appliedItems appliedItems or {@code null} for none
   */
  public OrderPromotion setAppliedItems(java.util.List<OrderPromotionItem> appliedItems) {
    this.appliedItems = appliedItems;
    return this;
  }

  /**
   * The party funding the promotion.
   * @return value or {@code null} for none
   */
  public java.lang.String getFunder() {
    return funder;
  }

  /**
   * The party funding the promotion.
   * @param funder funder or {@code null} for none
   */
  public OrderPromotion setFunder(java.lang.String funder) {
    this.funder = funder;
    return this;
  }

  /**
   * This field is used to identify promotions within merchants' own systems.
   * @return value or {@code null} for none
   */
  public java.lang.String getMerchantPromotionId() {
    return merchantPromotionId;
  }

  /**
   * This field is used to identify promotions within merchants' own systems.
   * @param merchantPromotionId merchantPromotionId or {@code null} for none
   */
  public OrderPromotion setMerchantPromotionId(java.lang.String merchantPromotionId) {
    this.merchantPromotionId = merchantPromotionId;
    return this;
  }

  /**
   * Estimated discount applied to price. Amount is pre-tax or post-tax depending on location of
   * order.
   * @return value or {@code null} for none
   */
  public Price getPriceValue() {
    return priceValue;
  }

  /**
   * Estimated discount applied to price. Amount is pre-tax or post-tax depending on location of
   * order.
   * @param priceValue priceValue or {@code null} for none
   */
  public OrderPromotion setPriceValue(Price priceValue) {
    this.priceValue = priceValue;
    return this;
  }

  /**
   * A short title of the promotion to be shown on the checkout page.
   * @return value or {@code null} for none
   */
  public java.lang.String getShortTitle() {
    return shortTitle;
  }

  /**
   * A short title of the promotion to be shown on the checkout page.
   * @param shortTitle shortTitle or {@code null} for none
   */
  public OrderPromotion setShortTitle(java.lang.String shortTitle) {
    this.shortTitle = shortTitle;
    return this;
  }

  /**
   * The category of the promotion.
   * @return value or {@code null} for none
   */
  public java.lang.String getSubtype() {
    return subtype;
  }

  /**
   * The category of the promotion.
   * @param subtype subtype or {@code null} for none
   */
  public OrderPromotion setSubtype(java.lang.String subtype) {
    this.subtype = subtype;
    return this;
  }

  /**
   * Estimated discount applied to tax (if allowed by law).
   * @return value or {@code null} for none
   */
  public Price getTaxValue() {
    return taxValue;
  }

  /**
   * Estimated discount applied to tax (if allowed by law).
   * @param taxValue taxValue or {@code null} for none
   */
  public OrderPromotion setTaxValue(Price taxValue) {
    this.taxValue = taxValue;
    return this;
  }

  /**
   * The title of the promotion.
   * @return value or {@code null} for none
   */
  public java.lang.String getTitle() {
    return title;
  }

  /**
   * The title of the promotion.
   * @param title title or {@code null} for none
   */
  public OrderPromotion setTitle(java.lang.String title) {
    this.title = title;
    return this;
  }

  /**
   * The scope of the promotion.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The scope of the promotion.
   * @param type type or {@code null} for none
   */
  public OrderPromotion setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public OrderPromotion set(String fieldName, Object value) {
    return (OrderPromotion) super.set(fieldName, value);
  }

  @Override
  public OrderPromotion clone() {
    return (OrderPromotion) super.clone();
  }

}
