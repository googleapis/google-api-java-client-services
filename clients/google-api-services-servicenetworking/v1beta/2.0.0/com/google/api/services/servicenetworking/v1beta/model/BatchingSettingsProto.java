/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.servicenetworking.v1beta.model;

/**
 * `BatchingSettingsProto` specifies a set of batching thresholds, each of which acts as a trigger
 * to send a batch of messages as a request. At least one threshold must be positive nonzero.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Service Networking API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class BatchingSettingsProto extends com.google.api.client.json.GenericJson {

  /**
   * The duration after which a batch should be sent, starting from the addition of the first
   * message to that batch.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String delayThreshold;

  /**
   * The maximum number of elements collected in a batch that could be accepted by server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer elementCountLimit;

  /**
   * The number of elements of a field collected into a batch which, if exceeded, causes the batch
   * to be sent.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer elementCountThreshold;

  /**
   * The maximum size of data allowed by flow control.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer flowControlByteLimit;

  /**
   * The maximum number of elements allowed by flow control.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer flowControlElementLimit;

  /**
   * The behavior to take when the flow control limit is exceeded.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String flowControlLimitExceededBehavior;

  /**
   * The maximum size of the request that could be accepted by server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer requestByteLimit;

  /**
   * The aggregated size of the batched field which, if exceeded, causes the batch to be sent. This
   * size is computed by aggregating the sizes of the request field to be batched, not of the entire
   * request message.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long requestByteThreshold;

  /**
   * The duration after which a batch should be sent, starting from the addition of the first
   * message to that batch.
   * @return value or {@code null} for none
   */
  public String getDelayThreshold() {
    return delayThreshold;
  }

  /**
   * The duration after which a batch should be sent, starting from the addition of the first
   * message to that batch.
   * @param delayThreshold delayThreshold or {@code null} for none
   */
  public BatchingSettingsProto setDelayThreshold(String delayThreshold) {
    this.delayThreshold = delayThreshold;
    return this;
  }

  /**
   * The maximum number of elements collected in a batch that could be accepted by server.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getElementCountLimit() {
    return elementCountLimit;
  }

  /**
   * The maximum number of elements collected in a batch that could be accepted by server.
   * @param elementCountLimit elementCountLimit or {@code null} for none
   */
  public BatchingSettingsProto setElementCountLimit(java.lang.Integer elementCountLimit) {
    this.elementCountLimit = elementCountLimit;
    return this;
  }

  /**
   * The number of elements of a field collected into a batch which, if exceeded, causes the batch
   * to be sent.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getElementCountThreshold() {
    return elementCountThreshold;
  }

  /**
   * The number of elements of a field collected into a batch which, if exceeded, causes the batch
   * to be sent.
   * @param elementCountThreshold elementCountThreshold or {@code null} for none
   */
  public BatchingSettingsProto setElementCountThreshold(java.lang.Integer elementCountThreshold) {
    this.elementCountThreshold = elementCountThreshold;
    return this;
  }

  /**
   * The maximum size of data allowed by flow control.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFlowControlByteLimit() {
    return flowControlByteLimit;
  }

  /**
   * The maximum size of data allowed by flow control.
   * @param flowControlByteLimit flowControlByteLimit or {@code null} for none
   */
  public BatchingSettingsProto setFlowControlByteLimit(java.lang.Integer flowControlByteLimit) {
    this.flowControlByteLimit = flowControlByteLimit;
    return this;
  }

  /**
   * The maximum number of elements allowed by flow control.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getFlowControlElementLimit() {
    return flowControlElementLimit;
  }

  /**
   * The maximum number of elements allowed by flow control.
   * @param flowControlElementLimit flowControlElementLimit or {@code null} for none
   */
  public BatchingSettingsProto setFlowControlElementLimit(java.lang.Integer flowControlElementLimit) {
    this.flowControlElementLimit = flowControlElementLimit;
    return this;
  }

  /**
   * The behavior to take when the flow control limit is exceeded.
   * @return value or {@code null} for none
   */
  public java.lang.String getFlowControlLimitExceededBehavior() {
    return flowControlLimitExceededBehavior;
  }

  /**
   * The behavior to take when the flow control limit is exceeded.
   * @param flowControlLimitExceededBehavior flowControlLimitExceededBehavior or {@code null} for none
   */
  public BatchingSettingsProto setFlowControlLimitExceededBehavior(java.lang.String flowControlLimitExceededBehavior) {
    this.flowControlLimitExceededBehavior = flowControlLimitExceededBehavior;
    return this;
  }

  /**
   * The maximum size of the request that could be accepted by server.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getRequestByteLimit() {
    return requestByteLimit;
  }

  /**
   * The maximum size of the request that could be accepted by server.
   * @param requestByteLimit requestByteLimit or {@code null} for none
   */
  public BatchingSettingsProto setRequestByteLimit(java.lang.Integer requestByteLimit) {
    this.requestByteLimit = requestByteLimit;
    return this;
  }

  /**
   * The aggregated size of the batched field which, if exceeded, causes the batch to be sent. This
   * size is computed by aggregating the sizes of the request field to be batched, not of the entire
   * request message.
   * @return value or {@code null} for none
   */
  public java.lang.Long getRequestByteThreshold() {
    return requestByteThreshold;
  }

  /**
   * The aggregated size of the batched field which, if exceeded, causes the batch to be sent. This
   * size is computed by aggregating the sizes of the request field to be batched, not of the entire
   * request message.
   * @param requestByteThreshold requestByteThreshold or {@code null} for none
   */
  public BatchingSettingsProto setRequestByteThreshold(java.lang.Long requestByteThreshold) {
    this.requestByteThreshold = requestByteThreshold;
    return this;
  }

  @Override
  public BatchingSettingsProto set(String fieldName, Object value) {
    return (BatchingSettingsProto) super.set(fieldName, value);
  }

  @Override
  public BatchingSettingsProto clone() {
    return (BatchingSettingsProto) super.clone();
  }

}
