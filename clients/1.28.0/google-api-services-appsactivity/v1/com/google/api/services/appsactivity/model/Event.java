/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.appsactivity.model;

/**
 * Represents the changes associated with an action taken by a user.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Drive Activity API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Event extends com.google.api.client.json.GenericJson {

  /**
   * Additional event types. Some events may have multiple types when multiple actions are part of a
   * single event. For example, creating a document, renaming it, and sharing it may be part of a
   * single file-creation event.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> additionalEventTypes;

  /**
   * The time at which the event occurred formatted as Unix time in milliseconds.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.math.BigInteger eventTimeMillis;

  /**
   * Whether this event is caused by a user being deleted.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean fromUserDeletion;

  /**
   * Extra information for move type events, such as changes in an object's parents.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Move move;

  /**
   * Extra information for permissionChange type events, such as the user or group the new
   * permission applies to.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<PermissionChange> permissionChanges;

  /**
   * The main type of event that occurred.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String primaryEventType;

  /**
   * Extra information for rename type events, such as the old and new names.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Rename rename;

  /**
   * Information specific to the Target object modified by the event.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Target target;

  /**
   * Represents the user responsible for the event.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private User user;

  /**
   * Additional event types. Some events may have multiple types when multiple actions are part of a
   * single event. For example, creating a document, renaming it, and sharing it may be part of a
   * single file-creation event.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getAdditionalEventTypes() {
    return additionalEventTypes;
  }

  /**
   * Additional event types. Some events may have multiple types when multiple actions are part of a
   * single event. For example, creating a document, renaming it, and sharing it may be part of a
   * single file-creation event.
   * @param additionalEventTypes additionalEventTypes or {@code null} for none
   */
  public Event setAdditionalEventTypes(java.util.List<java.lang.String> additionalEventTypes) {
    this.additionalEventTypes = additionalEventTypes;
    return this;
  }

  /**
   * The time at which the event occurred formatted as Unix time in milliseconds.
   * @return value or {@code null} for none
   */
  public java.math.BigInteger getEventTimeMillis() {
    return eventTimeMillis;
  }

  /**
   * The time at which the event occurred formatted as Unix time in milliseconds.
   * @param eventTimeMillis eventTimeMillis or {@code null} for none
   */
  public Event setEventTimeMillis(java.math.BigInteger eventTimeMillis) {
    this.eventTimeMillis = eventTimeMillis;
    return this;
  }

  /**
   * Whether this event is caused by a user being deleted.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFromUserDeletion() {
    return fromUserDeletion;
  }

  /**
   * Whether this event is caused by a user being deleted.
   * @param fromUserDeletion fromUserDeletion or {@code null} for none
   */
  public Event setFromUserDeletion(java.lang.Boolean fromUserDeletion) {
    this.fromUserDeletion = fromUserDeletion;
    return this;
  }

  /**
   * Extra information for move type events, such as changes in an object's parents.
   * @return value or {@code null} for none
   */
  public Move getMove() {
    return move;
  }

  /**
   * Extra information for move type events, such as changes in an object's parents.
   * @param move move or {@code null} for none
   */
  public Event setMove(Move move) {
    this.move = move;
    return this;
  }

  /**
   * Extra information for permissionChange type events, such as the user or group the new
   * permission applies to.
   * @return value or {@code null} for none
   */
  public java.util.List<PermissionChange> getPermissionChanges() {
    return permissionChanges;
  }

  /**
   * Extra information for permissionChange type events, such as the user or group the new
   * permission applies to.
   * @param permissionChanges permissionChanges or {@code null} for none
   */
  public Event setPermissionChanges(java.util.List<PermissionChange> permissionChanges) {
    this.permissionChanges = permissionChanges;
    return this;
  }

  /**
   * The main type of event that occurred.
   * @return value or {@code null} for none
   */
  public java.lang.String getPrimaryEventType() {
    return primaryEventType;
  }

  /**
   * The main type of event that occurred.
   * @param primaryEventType primaryEventType or {@code null} for none
   */
  public Event setPrimaryEventType(java.lang.String primaryEventType) {
    this.primaryEventType = primaryEventType;
    return this;
  }

  /**
   * Extra information for rename type events, such as the old and new names.
   * @return value or {@code null} for none
   */
  public Rename getRename() {
    return rename;
  }

  /**
   * Extra information for rename type events, such as the old and new names.
   * @param rename rename or {@code null} for none
   */
  public Event setRename(Rename rename) {
    this.rename = rename;
    return this;
  }

  /**
   * Information specific to the Target object modified by the event.
   * @return value or {@code null} for none
   */
  public Target getTarget() {
    return target;
  }

  /**
   * Information specific to the Target object modified by the event.
   * @param target target or {@code null} for none
   */
  public Event setTarget(Target target) {
    this.target = target;
    return this;
  }

  /**
   * Represents the user responsible for the event.
   * @return value or {@code null} for none
   */
  public User getUser() {
    return user;
  }

  /**
   * Represents the user responsible for the event.
   * @param user user or {@code null} for none
   */
  public Event setUser(User user) {
    this.user = user;
    return this;
  }

  @Override
  public Event set(String fieldName, Object value) {
    return (Event) super.set(fieldName, value);
  }

  @Override
  public Event clone() {
    return (Event) super.clone();
  }

}
