/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Reuse information returned if UrlState == CRAWLED, specifying when we may have reused from cache.
 * See also ReuseInfo below. NOTE: Please use the CrawlTimes below. CrawlDates is deprecated. use
 * CrawlTimes instead!
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class TrawlerFetchReplyDataCrawlDates extends com.google.api.client.json.GenericJson {

  /**
   * fetched from the web. Timestamp indicates when
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("NotChangedDate")
  private java.lang.Integer notChangedDate;

  /**
   * Timestamp when the page was
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("OriginalCrawlDate")
  private java.lang.Integer originalCrawlDate;

  /**
   * the page was last checked but found to be the same as before. If set, timestamp to indicate
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("ReuseDate")
  private java.lang.Integer reuseDate;

  /**
   * fetched from the web. Timestamp indicates when
   * @return value or {@code null} for none
   */
  public java.lang.Integer getNotChangedDate() {
    return notChangedDate;
  }

  /**
   * fetched from the web. Timestamp indicates when
   * @param notChangedDate notChangedDate or {@code null} for none
   */
  public TrawlerFetchReplyDataCrawlDates setNotChangedDate(java.lang.Integer notChangedDate) {
    this.notChangedDate = notChangedDate;
    return this;
  }

  /**
   * Timestamp when the page was
   * @return value or {@code null} for none
   */
  public java.lang.Integer getOriginalCrawlDate() {
    return originalCrawlDate;
  }

  /**
   * Timestamp when the page was
   * @param originalCrawlDate originalCrawlDate or {@code null} for none
   */
  public TrawlerFetchReplyDataCrawlDates setOriginalCrawlDate(java.lang.Integer originalCrawlDate) {
    this.originalCrawlDate = originalCrawlDate;
    return this;
  }

  /**
   * the page was last checked but found to be the same as before. If set, timestamp to indicate
   * @return value or {@code null} for none
   */
  public java.lang.Integer getReuseDate() {
    return reuseDate;
  }

  /**
   * the page was last checked but found to be the same as before. If set, timestamp to indicate
   * @param reuseDate reuseDate or {@code null} for none
   */
  public TrawlerFetchReplyDataCrawlDates setReuseDate(java.lang.Integer reuseDate) {
    this.reuseDate = reuseDate;
    return this;
  }

  @Override
  public TrawlerFetchReplyDataCrawlDates set(String fieldName, Object value) {
    return (TrawlerFetchReplyDataCrawlDates) super.set(fieldName, value);
  }

  @Override
  public TrawlerFetchReplyDataCrawlDates clone() {
    return (TrawlerFetchReplyDataCrawlDates) super.clone();
  }

}
