/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudresourcemanager;

/**
 * Service definition for CloudResourceManager (v2beta1).
 *
 * <p>
 * Creates, reads, and updates metadata for Google Cloud Platform resource containers.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/resource-manager" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link CloudResourceManagerRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class CloudResourceManager extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.29.2 of the Cloud Resource Manager API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://cloudresourcemanager.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public CloudResourceManager(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  CloudResourceManager(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Folders collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudResourceManager cloudresourcemanager = new CloudResourceManager(...);}
   *   {@code CloudResourceManager.Folders.List request = cloudresourcemanager.folders().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Folders folders() {
    return new Folders();
  }

  /**
   * The "folders" collection of methods.
   */
  public class Folders {

    /**
     * Creates a Folder in the resource hierarchy. Returns an Operation which can be used to track the
     * progress of the folder creation workflow. Upon success the Operation.response field will be
     * populated with the created Folder.
     *
     * In order to succeed, the addition of this new Folder must not violate the Folder naming, height
     * or fanout constraints.
     *
     * + The Folder's display_name must be distinct from all other Folder's that share its parent. + The
     * addition of the Folder must not cause the active Folder hierarchy to exceed a height of 4. Note,
     * the full active + deleted Folder hierarchy is allowed to reach a height of 8; this provides
     * additional headroom when moving folders that contain deleted folders. + The addition of the
     * Folder must not cause the total number of Folders under its parent to exceed 100.
     *
     * If the operation fails due to a folder constraint violation, some errors may be returned by the
     * CreateFolder request, with status code FAILED_PRECONDITION and an error description. Other folder
     * constraint violations will be communicated in the Operation, with the specific
     * PreconditionFailure returned via the details list in the Operation.error field.
     *
     * The caller must have `resourcemanager.folders.create` permission on the identified parent.
     *
     * Create a request for the method "folders.create".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.cloudresourcemanager.model.Folder}
     * @return the request
     */
    public Create create(com.google.api.services.cloudresourcemanager.model.Folder content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.Operation> {

      private static final String REST_PATH = "v2/folders";

      /**
       * Creates a Folder in the resource hierarchy. Returns an Operation which can be used to track the
       * progress of the folder creation workflow. Upon success the Operation.response field will be
       * populated with the created Folder.
       *
       * In order to succeed, the addition of this new Folder must not violate the Folder naming, height
       * or fanout constraints.
       *
       * + The Folder's display_name must be distinct from all other Folder's that share its parent. +
       * The addition of the Folder must not cause the active Folder hierarchy to exceed a height of 4.
       * Note, the full active + deleted Folder hierarchy is allowed to reach a height of 8; this
       * provides additional headroom when moving folders that contain deleted folders. + The addition
       * of the Folder must not cause the total number of Folders under its parent to exceed 100.
       *
       * If the operation fails due to a folder constraint violation, some errors may be returned by the
       * CreateFolder request, with status code FAILED_PRECONDITION and an error description. Other
       * folder constraint violations will be communicated in the Operation, with the specific
       * PreconditionFailure returned via the details list in the Operation.error field.
       *
       * The caller must have `resourcemanager.folders.create` permission on the identified parent.
       *
       * Create a request for the method "folders.create".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link Create#execute()} method to invoke the remote
       * operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.cloudresourcemanager.model.Folder}
       * @since 1.13
       */
      protected Create(com.google.api.services.cloudresourcemanager.model.Folder content) {
        super(CloudResourceManager.this, "POST", REST_PATH, content, com.google.api.services.cloudresourcemanager.model.Operation.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The resource name of the new Folder's parent. Must be of the form `folders/{folder_id}` or
       * `organizations/{org_id}`.
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** The resource name of the new Folder's parent. Must be of the form `folders/{folder_id}` or
     `organizations/{org_id}`.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * The resource name of the new Folder's parent. Must be of the form `folders/{folder_id}` or
       * `organizations/{org_id}`.
       */
      public Create setParent(java.lang.String parent) {
        this.parent = parent;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Requests deletion of a Folder. The Folder is moved into the DELETE_REQUESTED state immediately,
     * and is deleted approximately 30 days later. This method may only be called on an empty Folder in
     * the ACTIVE state, where a Folder is empty if it doesn't contain any Folders or Projects in the
     * ACTIVE state. The caller must have `resourcemanager.folders.delete` permission on the identified
     * folder.
     *
     * Create a request for the method "folders.delete".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param name the resource name of the Folder to be deleted.
    Must be of the form `folders/{folder_id}`.
     * @return the request
     */
    public Delete delete(java.lang.String name) throws java.io.IOException {
      Delete result = new Delete(name);
      initialize(result);
      return result;
    }

    public class Delete extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.Folder> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^folders/[^/]+$");

      /**
       * Requests deletion of a Folder. The Folder is moved into the DELETE_REQUESTED state immediately,
       * and is deleted approximately 30 days later. This method may only be called on an empty Folder
       * in the ACTIVE state, where a Folder is empty if it doesn't contain any Folders or Projects in
       * the ACTIVE state. The caller must have `resourcemanager.folders.delete` permission on the
       * identified folder.
       *
       * Create a request for the method "folders.delete".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
       * operation. <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name the resource name of the Folder to be deleted.
    Must be of the form `folders/{folder_id}`.
       * @since 1.13
       */
      protected Delete(java.lang.String name) {
        super(CloudResourceManager.this, "DELETE", REST_PATH, null, com.google.api.services.cloudresourcemanager.model.Folder.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+$");
        }
      }

      @Override
      public Delete set$Xgafv(java.lang.String $Xgafv) {
        return (Delete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Delete setAccessToken(java.lang.String accessToken) {
        return (Delete) super.setAccessToken(accessToken);
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setCallback(java.lang.String callback) {
        return (Delete) super.setCallback(callback);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUploadType(java.lang.String uploadType) {
        return (Delete) super.setUploadType(uploadType);
      }

      @Override
      public Delete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Delete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * the resource name of the Folder to be deleted. Must be of the form `folders/{folder_id}`.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** the resource name of the Folder to be deleted. Must be of the form `folders/{folder_id}`.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * the resource name of the Folder to be deleted. Must be of the form `folders/{folder_id}`.
       */
      public Delete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Retrieves a Folder identified by the supplied resource name. Valid Folder resource names have the
     * format `folders/{folder_id}` (for example, `folders/1234`). The caller must have
     * `resourcemanager.folders.get` permission on the identified folder.
     *
     * Create a request for the method "folders.get".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name The resource name of the Folder to retrieve.
    Must be of the form `folders/{folder_id}`.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.Folder> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^folders/[^/]+$");

      /**
       * Retrieves a Folder identified by the supplied resource name. Valid Folder resource names have
       * the format `folders/{folder_id}` (for example, `folders/1234`). The caller must have
       * `resourcemanager.folders.get` permission on the identified folder.
       *
       * Create a request for the method "folders.get".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       * <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The resource name of the Folder to retrieve.
    Must be of the form `folders/{folder_id}`.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(CloudResourceManager.this, "GET", REST_PATH, null, com.google.api.services.cloudresourcemanager.model.Folder.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The resource name of the Folder to retrieve. Must be of the form `folders/{folder_id}`.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The resource name of the Folder to retrieve. Must be of the form `folders/{folder_id}`.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * The resource name of the Folder to retrieve. Must be of the form `folders/{folder_id}`.
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Gets the access control policy for a Folder. The returned policy may be empty if no such policy
     * or resource exists. The `resource` field should be the Folder's resource name, e.g.
     * "folders/1234". The caller must have `resourcemanager.folders.getIamPolicy` permission on the
     * identified folder.
     *
     * Create a request for the method "folders.getIamPolicy".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
     * operation.
     *
     * @param resource REQUIRED: The resource for which the policy is being requested.
    See the operation documentation for
     *        the appropriate value for this field.
     * @param content the {@link com.google.api.services.cloudresourcemanager.model.GetIamPolicyRequest}
     * @return the request
     */
    public GetIamPolicy getIamPolicy(java.lang.String resource, com.google.api.services.cloudresourcemanager.model.GetIamPolicyRequest content) throws java.io.IOException {
      GetIamPolicy result = new GetIamPolicy(resource, content);
      initialize(result);
      return result;
    }

    public class GetIamPolicy extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.Policy> {

      private static final String REST_PATH = "v2/{+resource}:getIamPolicy";

      private final java.util.regex.Pattern RESOURCE_PATTERN =
          java.util.regex.Pattern.compile("^folders/[^/]+$");

      /**
       * Gets the access control policy for a Folder. The returned policy may be empty if no such policy
       * or resource exists. The `resource` field should be the Folder's resource name, e.g.
       * "folders/1234". The caller must have `resourcemanager.folders.getIamPolicy` permission on the
       * identified folder.
       *
       * Create a request for the method "folders.getIamPolicy".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param resource REQUIRED: The resource for which the policy is being requested.
    See the operation documentation for
     *        the appropriate value for this field.
       * @param content the {@link com.google.api.services.cloudresourcemanager.model.GetIamPolicyRequest}
       * @since 1.13
       */
      protected GetIamPolicy(java.lang.String resource, com.google.api.services.cloudresourcemanager.model.GetIamPolicyRequest content) {
        super(CloudResourceManager.this, "POST", REST_PATH, content, com.google.api.services.cloudresourcemanager.model.Policy.class);
        this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "^folders/[^/]+$");
        }
      }

      @Override
      public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
        return (GetIamPolicy) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetIamPolicy setAccessToken(java.lang.String accessToken) {
        return (GetIamPolicy) super.setAccessToken(accessToken);
      }

      @Override
      public GetIamPolicy setAlt(java.lang.String alt) {
        return (GetIamPolicy) super.setAlt(alt);
      }

      @Override
      public GetIamPolicy setCallback(java.lang.String callback) {
        return (GetIamPolicy) super.setCallback(callback);
      }

      @Override
      public GetIamPolicy setFields(java.lang.String fields) {
        return (GetIamPolicy) super.setFields(fields);
      }

      @Override
      public GetIamPolicy setKey(java.lang.String key) {
        return (GetIamPolicy) super.setKey(key);
      }

      @Override
      public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
        return (GetIamPolicy) super.setOauthToken(oauthToken);
      }

      @Override
      public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
        return (GetIamPolicy) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetIamPolicy setUploadType(java.lang.String uploadType) {
        return (GetIamPolicy) super.setUploadType(uploadType);
      }

      @Override
      public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * REQUIRED: The resource for which the policy is being requested. See the operation
       * documentation for the appropriate value for this field.
       */
      @com.google.api.client.util.Key
      private java.lang.String resource;

      /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
     the appropriate value for this field.
       */
      public java.lang.String getResource() {
        return resource;
      }

      /**
       * REQUIRED: The resource for which the policy is being requested. See the operation
       * documentation for the appropriate value for this field.
       */
      public GetIamPolicy setResource(java.lang.String resource) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "^folders/[^/]+$");
        }
        this.resource = resource;
        return this;
      }

      @Override
      public GetIamPolicy set(String parameterName, Object value) {
        return (GetIamPolicy) super.set(parameterName, value);
      }
    }
    /**
     * Lists the Folders that are direct descendants of supplied parent resource. List provides a
     * strongly consistent view of the Folders underneath the specified parent resource. List returns
     * Folders sorted based upon the (ascending) lexical ordering of their display_name. The caller must
     * have `resourcemanager.folders.list` permission on the identified parent.
     *
     * Create a request for the method "folders.list".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.ListFoldersResponse> {

      private static final String REST_PATH = "v2/folders";

      /**
       * Lists the Folders that are direct descendants of supplied parent resource. List provides a
       * strongly consistent view of the Folders underneath the specified parent resource. List returns
       * Folders sorted based upon the (ascending) lexical ordering of their display_name. The caller
       * must have `resourcemanager.folders.list` permission on the identified parent.
       *
       * Create a request for the method "folders.list".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
       * <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(CloudResourceManager.this, "GET", REST_PATH, null, com.google.api.services.cloudresourcemanager.model.ListFoldersResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The maximum number of Folders to return in the response. This field is optional.
       */
      @com.google.api.client.util.Key
      private java.lang.Integer pageSize;

      /** The maximum number of Folders to return in the response. This field is optional.
       */
      public java.lang.Integer getPageSize() {
        return pageSize;
      }

      /**
       * The maximum number of Folders to return in the response. This field is optional.
       */
      public List setPageSize(java.lang.Integer pageSize) {
        this.pageSize = pageSize;
        return this;
      }

      /**
       * A pagination token returned from a previous call to `ListFolders` that indicates where this
       * listing should continue from. This field is optional.
       */
      @com.google.api.client.util.Key
      private java.lang.String pageToken;

      /** A pagination token returned from a previous call to `ListFolders` that indicates where this listing
     should continue from. This field is optional.
       */
      public java.lang.String getPageToken() {
        return pageToken;
      }

      /**
       * A pagination token returned from a previous call to `ListFolders` that indicates where this
       * listing should continue from. This field is optional.
       */
      public List setPageToken(java.lang.String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /**
       * The resource name of the Organization or Folder whose Folders are being listed. Must be of
       * the form `folders/{folder_id}` or `organizations/{org_id}`. Access to this method is
       * controlled by checking the `resourcemanager.folders.list` permission on the `parent`.
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** The resource name of the Organization or Folder whose Folders are being listed. Must be of the form
     `folders/{folder_id}` or `organizations/{org_id}`. Access to this method is controlled by checking
     the `resourcemanager.folders.list` permission on the `parent`.
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * The resource name of the Organization or Folder whose Folders are being listed. Must be of
       * the form `folders/{folder_id}` or `organizations/{org_id}`. Access to this method is
       * controlled by checking the `resourcemanager.folders.list` permission on the `parent`.
       */
      public List setParent(java.lang.String parent) {
        this.parent = parent;
        return this;
      }

      /**
       * Controls whether Folders in the DELETE_REQUESTED state should be returned. Defaults to
       * false. This field is optional.
       */
      @com.google.api.client.util.Key
      private java.lang.Boolean showDeleted;

      /** Controls whether Folders in the DELETE_REQUESTED state should be returned. Defaults to false. This
     field is optional.
       */
      public java.lang.Boolean getShowDeleted() {
        return showDeleted;
      }

      /**
       * Controls whether Folders in the DELETE_REQUESTED state should be returned. Defaults to
       * false. This field is optional.
       */
      public List setShowDeleted(java.lang.Boolean showDeleted) {
        this.showDeleted = showDeleted;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Moves a Folder under a new resource parent. Returns an Operation which can be used to track the
     * progress of the folder move workflow. Upon success the Operation.response field will be populated
     * with the moved Folder. Upon failure, a FolderOperationError categorizing the failure cause will
     * be returned - if the failure occurs synchronously then the FolderOperationError will be returned
     * via the Status.details field and if it occurs asynchronously then the FolderOperation will be
     * returned via the Operation.error field. In addition, the Operation.metadata field will be
     * populated with a FolderOperation message as an aid to stateless clients. Folder moves will be
     * rejected if they violate either the naming, height or fanout constraints described in the
     * CreateFolder documentation. The caller must have `resourcemanager.folders.move` permission on the
     * folder's current and proposed new parent.
     *
     * Create a request for the method "folders.move".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link Move#execute()} method to invoke the remote operation.
     *
     * @param name The resource name of the Folder to move.
    Must be of the form folders/{folder_id}
     * @param content the {@link com.google.api.services.cloudresourcemanager.model.MoveFolderRequest}
     * @return the request
     */
    public Move move(java.lang.String name, com.google.api.services.cloudresourcemanager.model.MoveFolderRequest content) throws java.io.IOException {
      Move result = new Move(name, content);
      initialize(result);
      return result;
    }

    public class Move extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.Operation> {

      private static final String REST_PATH = "v2/{+name}:move";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^folders/[^/]+$");

      /**
       * Moves a Folder under a new resource parent. Returns an Operation which can be used to track the
       * progress of the folder move workflow. Upon success the Operation.response field will be
       * populated with the moved Folder. Upon failure, a FolderOperationError categorizing the failure
       * cause will be returned - if the failure occurs synchronously then the FolderOperationError will
       * be returned via the Status.details field and if it occurs asynchronously then the
       * FolderOperation will be returned via the Operation.error field. In addition, the
       * Operation.metadata field will be populated with a FolderOperation message as an aid to
       * stateless clients. Folder moves will be rejected if they violate either the naming, height or
       * fanout constraints described in the CreateFolder documentation. The caller must have
       * `resourcemanager.folders.move` permission on the folder's current and proposed new parent.
       *
       * Create a request for the method "folders.move".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link Move#execute()} method to invoke the remote operation.
       * <p> {@link
       * Move#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The resource name of the Folder to move.
    Must be of the form folders/{folder_id}
       * @param content the {@link com.google.api.services.cloudresourcemanager.model.MoveFolderRequest}
       * @since 1.13
       */
      protected Move(java.lang.String name, com.google.api.services.cloudresourcemanager.model.MoveFolderRequest content) {
        super(CloudResourceManager.this, "POST", REST_PATH, content, com.google.api.services.cloudresourcemanager.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+$");
        }
      }

      @Override
      public Move set$Xgafv(java.lang.String $Xgafv) {
        return (Move) super.set$Xgafv($Xgafv);
      }

      @Override
      public Move setAccessToken(java.lang.String accessToken) {
        return (Move) super.setAccessToken(accessToken);
      }

      @Override
      public Move setAlt(java.lang.String alt) {
        return (Move) super.setAlt(alt);
      }

      @Override
      public Move setCallback(java.lang.String callback) {
        return (Move) super.setCallback(callback);
      }

      @Override
      public Move setFields(java.lang.String fields) {
        return (Move) super.setFields(fields);
      }

      @Override
      public Move setKey(java.lang.String key) {
        return (Move) super.setKey(key);
      }

      @Override
      public Move setOauthToken(java.lang.String oauthToken) {
        return (Move) super.setOauthToken(oauthToken);
      }

      @Override
      public Move setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Move) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Move setQuotaUser(java.lang.String quotaUser) {
        return (Move) super.setQuotaUser(quotaUser);
      }

      @Override
      public Move setUploadType(java.lang.String uploadType) {
        return (Move) super.setUploadType(uploadType);
      }

      @Override
      public Move setUploadProtocol(java.lang.String uploadProtocol) {
        return (Move) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The resource name of the Folder to move. Must be of the form folders/{folder_id}
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The resource name of the Folder to move. Must be of the form folders/{folder_id}
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * The resource name of the Folder to move. Must be of the form folders/{folder_id}
       */
      public Move setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Move set(String parameterName, Object value) {
        return (Move) super.set(parameterName, value);
      }
    }
    /**
     * Updates a Folder, changing its display_name. Changes to the folder display_name will be rejected
     * if they violate either the display_name formatting rules or naming constraints described in the
     * CreateFolder documentation.
     *
     * The Folder's display name must start and end with a letter or digit, may contain letters, digits,
     * spaces, hyphens and underscores and can be no longer than 30 characters. This is captured by the
     * regular expression: [\p{L}\p{N}]([\p{L}\p{N}_- ]{0,28}[\p{L}\p{N}])?. The caller must have
     * `resourcemanager.folders.update` permission on the identified folder.
     *
     * If the update fails due to the unique name constraint then a PreconditionFailure explaining this
     * violation will be returned in the Status.details field.
     *
     * Create a request for the method "folders.patch".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param name Output only. The resource name of the Folder.
    Its format is `folders/{folder_id}`, for example:
     *        "folders/1234".
     * @param content the {@link com.google.api.services.cloudresourcemanager.model.Folder}
     * @return the request
     */
    public Patch patch(java.lang.String name, com.google.api.services.cloudresourcemanager.model.Folder content) throws java.io.IOException {
      Patch result = new Patch(name, content);
      initialize(result);
      return result;
    }

    public class Patch extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.Folder> {

      private static final String REST_PATH = "v2/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^folders/[^/]+$");

      /**
       * Updates a Folder, changing its display_name. Changes to the folder display_name will be
       * rejected if they violate either the display_name formatting rules or naming constraints
       * described in the CreateFolder documentation.
       *
       * The Folder's display name must start and end with a letter or digit, may contain letters,
       * digits, spaces, hyphens and underscores and can be no longer than 30 characters. This is
       * captured by the regular expression: [\p{L}\p{N}]([\p{L}\p{N}_- ]{0,28}[\p{L}\p{N}])?. The
       * caller must have `resourcemanager.folders.update` permission on the identified folder.
       *
       * If the update fails due to the unique name constraint then a PreconditionFailure explaining
       * this violation will be returned in the Status.details field.
       *
       * Create a request for the method "folders.patch".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link Patch#execute()} method to invoke the remote
       * operation. <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Output only. The resource name of the Folder.
    Its format is `folders/{folder_id}`, for example:
     *        "folders/1234".
       * @param content the {@link com.google.api.services.cloudresourcemanager.model.Folder}
       * @since 1.13
       */
      protected Patch(java.lang.String name, com.google.api.services.cloudresourcemanager.model.Folder content) {
        super(CloudResourceManager.this, "PATCH", REST_PATH, content, com.google.api.services.cloudresourcemanager.model.Folder.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+$");
        }
      }

      @Override
      public Patch set$Xgafv(java.lang.String $Xgafv) {
        return (Patch) super.set$Xgafv($Xgafv);
      }

      @Override
      public Patch setAccessToken(java.lang.String accessToken) {
        return (Patch) super.setAccessToken(accessToken);
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setCallback(java.lang.String callback) {
        return (Patch) super.setCallback(callback);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUploadType(java.lang.String uploadType) {
        return (Patch) super.setUploadType(uploadType);
      }

      @Override
      public Patch setUploadProtocol(java.lang.String uploadProtocol) {
        return (Patch) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Output only. The resource name of the Folder. Its format is `folders/{folder_id}`, for
       * example: "folders/1234".
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Output only. The resource name of the Folder. Its format is `folders/{folder_id}`, for example:
     "folders/1234".
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Output only. The resource name of the Folder. Its format is `folders/{folder_id}`, for
       * example: "folders/1234".
       */
      public Patch setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+$");
        }
        this.name = name;
        return this;
      }

      /**
       * Fields to be updated. Only the `display_name` can be updated.
       */
      @com.google.api.client.util.Key
      private String updateMask;

      /** Fields to be updated. Only the `display_name` can be updated.
       */
      public String getUpdateMask() {
        return updateMask;
      }

      /**
       * Fields to be updated. Only the `display_name` can be updated.
       */
      public Patch setUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Search for folders that match specific filter criteria. Search provides an eventually consistent
     * view of the folders a user has access to which meet the specified filter criteria.
     *
     * This will only return folders on which the caller has the permission
     * `resourcemanager.folders.get`.
     *
     * Create a request for the method "folders.search".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link Search#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.cloudresourcemanager.model.SearchFoldersRequest}
     * @return the request
     */
    public Search search(com.google.api.services.cloudresourcemanager.model.SearchFoldersRequest content) throws java.io.IOException {
      Search result = new Search(content);
      initialize(result);
      return result;
    }

    public class Search extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.SearchFoldersResponse> {

      private static final String REST_PATH = "v2/folders:search";

      /**
       * Search for folders that match specific filter criteria. Search provides an eventually
       * consistent view of the folders a user has access to which meet the specified filter criteria.
       *
       * This will only return folders on which the caller has the permission
       * `resourcemanager.folders.get`.
       *
       * Create a request for the method "folders.search".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link Search#execute()} method to invoke the remote
       * operation. <p> {@link
       * Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.cloudresourcemanager.model.SearchFoldersRequest}
       * @since 1.13
       */
      protected Search(com.google.api.services.cloudresourcemanager.model.SearchFoldersRequest content) {
        super(CloudResourceManager.this, "POST", REST_PATH, content, com.google.api.services.cloudresourcemanager.model.SearchFoldersResponse.class);
      }

      @Override
      public Search set$Xgafv(java.lang.String $Xgafv) {
        return (Search) super.set$Xgafv($Xgafv);
      }

      @Override
      public Search setAccessToken(java.lang.String accessToken) {
        return (Search) super.setAccessToken(accessToken);
      }

      @Override
      public Search setAlt(java.lang.String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setCallback(java.lang.String callback) {
        return (Search) super.setCallback(callback);
      }

      @Override
      public Search setFields(java.lang.String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(java.lang.String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(java.lang.String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(java.lang.String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUploadType(java.lang.String uploadType) {
        return (Search) super.setUploadType(uploadType);
      }

      @Override
      public Search setUploadProtocol(java.lang.String uploadProtocol) {
        return (Search) super.setUploadProtocol(uploadProtocol);
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }
    /**
     * Sets the access control policy on a Folder, replacing any existing policy. The `resource` field
     * should be the Folder's resource name, e.g. "folders/1234". The caller must have
     * `resourcemanager.folders.setIamPolicy` permission on the identified folder.
     *
     * Create a request for the method "folders.setIamPolicy".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
     * operation.
     *
     * @param resource REQUIRED: The resource for which the policy is being specified.
    See the operation documentation for
     *        the appropriate value for this field.
     * @param content the {@link com.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest}
     * @return the request
     */
    public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest content) throws java.io.IOException {
      SetIamPolicy result = new SetIamPolicy(resource, content);
      initialize(result);
      return result;
    }

    public class SetIamPolicy extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.Policy> {

      private static final String REST_PATH = "v2/{+resource}:setIamPolicy";

      private final java.util.regex.Pattern RESOURCE_PATTERN =
          java.util.regex.Pattern.compile("^folders/[^/]+$");

      /**
       * Sets the access control policy on a Folder, replacing any existing policy. The `resource` field
       * should be the Folder's resource name, e.g. "folders/1234". The caller must have
       * `resourcemanager.folders.setIamPolicy` permission on the identified folder.
       *
       * Create a request for the method "folders.setIamPolicy".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote
       * operation. <p> {@link
       * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param resource REQUIRED: The resource for which the policy is being specified.
    See the operation documentation for
     *        the appropriate value for this field.
       * @param content the {@link com.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest}
       * @since 1.13
       */
      protected SetIamPolicy(java.lang.String resource, com.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest content) {
        super(CloudResourceManager.this, "POST", REST_PATH, content, com.google.api.services.cloudresourcemanager.model.Policy.class);
        this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "^folders/[^/]+$");
        }
      }

      @Override
      public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
        return (SetIamPolicy) super.set$Xgafv($Xgafv);
      }

      @Override
      public SetIamPolicy setAccessToken(java.lang.String accessToken) {
        return (SetIamPolicy) super.setAccessToken(accessToken);
      }

      @Override
      public SetIamPolicy setAlt(java.lang.String alt) {
        return (SetIamPolicy) super.setAlt(alt);
      }

      @Override
      public SetIamPolicy setCallback(java.lang.String callback) {
        return (SetIamPolicy) super.setCallback(callback);
      }

      @Override
      public SetIamPolicy setFields(java.lang.String fields) {
        return (SetIamPolicy) super.setFields(fields);
      }

      @Override
      public SetIamPolicy setKey(java.lang.String key) {
        return (SetIamPolicy) super.setKey(key);
      }

      @Override
      public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
        return (SetIamPolicy) super.setOauthToken(oauthToken);
      }

      @Override
      public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
        return (SetIamPolicy) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetIamPolicy setUploadType(java.lang.String uploadType) {
        return (SetIamPolicy) super.setUploadType(uploadType);
      }

      @Override
      public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
        return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * REQUIRED: The resource for which the policy is being specified. See the operation
       * documentation for the appropriate value for this field.
       */
      @com.google.api.client.util.Key
      private java.lang.String resource;

      /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
     the appropriate value for this field.
       */
      public java.lang.String getResource() {
        return resource;
      }

      /**
       * REQUIRED: The resource for which the policy is being specified. See the operation
       * documentation for the appropriate value for this field.
       */
      public SetIamPolicy setResource(java.lang.String resource) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "^folders/[^/]+$");
        }
        this.resource = resource;
        return this;
      }

      @Override
      public SetIamPolicy set(String parameterName, Object value) {
        return (SetIamPolicy) super.set(parameterName, value);
      }
    }
    /**
     * Returns permissions that a caller has on the specified Folder. The `resource` field should be the
     * Folder's resource name, e.g. "folders/1234".
     *
     * There are no permissions required for making this API call.
     *
     * Create a request for the method "folders.testIamPermissions".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
     * operation.
     *
     * @param resource REQUIRED: The resource for which the policy detail is being requested.
    See the operation
     *        documentation for the appropriate value for this field.
     * @param content the {@link com.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest}
     * @return the request
     */
    public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest content) throws java.io.IOException {
      TestIamPermissions result = new TestIamPermissions(resource, content);
      initialize(result);
      return result;
    }

    public class TestIamPermissions extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.TestIamPermissionsResponse> {

      private static final String REST_PATH = "v2/{+resource}:testIamPermissions";

      private final java.util.regex.Pattern RESOURCE_PATTERN =
          java.util.regex.Pattern.compile("^folders/[^/]+$");

      /**
       * Returns permissions that a caller has on the specified Folder. The `resource` field should be
       * the Folder's resource name, e.g. "folders/1234".
       *
       * There are no permissions required for making this API call.
       *
       * Create a request for the method "folders.testIamPermissions".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link TestIamPermissions#execute()} method to invoke the
       * remote operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.ser
       * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param resource REQUIRED: The resource for which the policy detail is being requested.
    See the operation
     *        documentation for the appropriate value for this field.
       * @param content the {@link com.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest}
       * @since 1.13
       */
      protected TestIamPermissions(java.lang.String resource, com.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest content) {
        super(CloudResourceManager.this, "POST", REST_PATH, content, com.google.api.services.cloudresourcemanager.model.TestIamPermissionsResponse.class);
        this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "^folders/[^/]+$");
        }
      }

      @Override
      public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
        return (TestIamPermissions) super.set$Xgafv($Xgafv);
      }

      @Override
      public TestIamPermissions setAccessToken(java.lang.String accessToken) {
        return (TestIamPermissions) super.setAccessToken(accessToken);
      }

      @Override
      public TestIamPermissions setAlt(java.lang.String alt) {
        return (TestIamPermissions) super.setAlt(alt);
      }

      @Override
      public TestIamPermissions setCallback(java.lang.String callback) {
        return (TestIamPermissions) super.setCallback(callback);
      }

      @Override
      public TestIamPermissions setFields(java.lang.String fields) {
        return (TestIamPermissions) super.setFields(fields);
      }

      @Override
      public TestIamPermissions setKey(java.lang.String key) {
        return (TestIamPermissions) super.setKey(key);
      }

      @Override
      public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
        return (TestIamPermissions) super.setOauthToken(oauthToken);
      }

      @Override
      public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
        return (TestIamPermissions) super.setQuotaUser(quotaUser);
      }

      @Override
      public TestIamPermissions setUploadType(java.lang.String uploadType) {
        return (TestIamPermissions) super.setUploadType(uploadType);
      }

      @Override
      public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
        return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * REQUIRED: The resource for which the policy detail is being requested. See the operation
       * documentation for the appropriate value for this field.
       */
      @com.google.api.client.util.Key
      private java.lang.String resource;

      /** REQUIRED: The resource for which the policy detail is being requested. See the operation
     documentation for the appropriate value for this field.
       */
      public java.lang.String getResource() {
        return resource;
      }

      /**
       * REQUIRED: The resource for which the policy detail is being requested. See the operation
       * documentation for the appropriate value for this field.
       */
      public TestIamPermissions setResource(java.lang.String resource) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
              "Parameter resource must conform to the pattern " +
              "^folders/[^/]+$");
        }
        this.resource = resource;
        return this;
      }

      @Override
      public TestIamPermissions set(String parameterName, Object value) {
        return (TestIamPermissions) super.set(parameterName, value);
      }
    }
    /**
     * Cancels the deletion request for a Folder. This method may only be called on a Folder in the
     * DELETE_REQUESTED state. In order to succeed, the Folder's parent must be in the ACTIVE state. In
     * addition, reintroducing the folder into the tree must not violate folder naming, height and
     * fanout constraints described in the CreateFolder documentation. The caller must have
     * `resourcemanager.folders.undelete` permission on the identified folder.
     *
     * Create a request for the method "folders.undelete".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link Undelete#execute()} method to invoke the remote operation.
     *
     * @param name The resource name of the Folder to undelete.
    Must be of the form `folders/{folder_id}`.
     * @param content the {@link com.google.api.services.cloudresourcemanager.model.UndeleteFolderRequest}
     * @return the request
     */
    public Undelete undelete(java.lang.String name, com.google.api.services.cloudresourcemanager.model.UndeleteFolderRequest content) throws java.io.IOException {
      Undelete result = new Undelete(name, content);
      initialize(result);
      return result;
    }

    public class Undelete extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.Folder> {

      private static final String REST_PATH = "v2/{+name}:undelete";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^folders/[^/]+$");

      /**
       * Cancels the deletion request for a Folder. This method may only be called on a Folder in the
       * DELETE_REQUESTED state. In order to succeed, the Folder's parent must be in the ACTIVE state.
       * In addition, reintroducing the folder into the tree must not violate folder naming, height and
       * fanout constraints described in the CreateFolder documentation. The caller must have
       * `resourcemanager.folders.undelete` permission on the identified folder.
       *
       * Create a request for the method "folders.undelete".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link Undelete#execute()} method to invoke the remote
       * operation. <p> {@link
       * Undelete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The resource name of the Folder to undelete.
    Must be of the form `folders/{folder_id}`.
       * @param content the {@link com.google.api.services.cloudresourcemanager.model.UndeleteFolderRequest}
       * @since 1.13
       */
      protected Undelete(java.lang.String name, com.google.api.services.cloudresourcemanager.model.UndeleteFolderRequest content) {
        super(CloudResourceManager.this, "POST", REST_PATH, content, com.google.api.services.cloudresourcemanager.model.Folder.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+$");
        }
      }

      @Override
      public Undelete set$Xgafv(java.lang.String $Xgafv) {
        return (Undelete) super.set$Xgafv($Xgafv);
      }

      @Override
      public Undelete setAccessToken(java.lang.String accessToken) {
        return (Undelete) super.setAccessToken(accessToken);
      }

      @Override
      public Undelete setAlt(java.lang.String alt) {
        return (Undelete) super.setAlt(alt);
      }

      @Override
      public Undelete setCallback(java.lang.String callback) {
        return (Undelete) super.setCallback(callback);
      }

      @Override
      public Undelete setFields(java.lang.String fields) {
        return (Undelete) super.setFields(fields);
      }

      @Override
      public Undelete setKey(java.lang.String key) {
        return (Undelete) super.setKey(key);
      }

      @Override
      public Undelete setOauthToken(java.lang.String oauthToken) {
        return (Undelete) super.setOauthToken(oauthToken);
      }

      @Override
      public Undelete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Undelete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Undelete setQuotaUser(java.lang.String quotaUser) {
        return (Undelete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Undelete setUploadType(java.lang.String uploadType) {
        return (Undelete) super.setUploadType(uploadType);
      }

      @Override
      public Undelete setUploadProtocol(java.lang.String uploadProtocol) {
        return (Undelete) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * The resource name of the Folder to undelete. Must be of the form `folders/{folder_id}`.
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The resource name of the Folder to undelete. Must be of the form `folders/{folder_id}`.
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * The resource name of the Folder to undelete. Must be of the form `folders/{folder_id}`.
       */
      public Undelete setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^folders/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Undelete set(String parameterName, Object value) {
        return (Undelete) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Operations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code CloudResourceManager cloudresourcemanager = new CloudResourceManager(...);}
   *   {@code CloudResourceManager.Operations.List request = cloudresourcemanager.operations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Operations operations() {
    return new Operations();
  }

  /**
   * The "operations" collection of methods.
   */
  public class Operations {

    /**
     * Gets the latest state of a long-running operation.  Clients can use this method to poll the
     * operation result at intervals as recommended by the API service.
     *
     * Create a request for the method "operations.get".
     *
     * This request holds the parameters needed by the cloudresourcemanager server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name The name of the operation resource.
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends CloudResourceManagerRequest<com.google.api.services.cloudresourcemanager.model.Operation> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^operations/.+$");

      /**
       * Gets the latest state of a long-running operation.  Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the the cloudresourcemanager server.  After setting
       * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
       * <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name The name of the operation resource.
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(CloudResourceManager.this, "GET", REST_PATH, null, com.google.api.services.cloudresourcemanager.model.Operation.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /** The name of the operation resource. */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** The name of the operation resource.
       */
      public java.lang.String getName() {
        return name;
      }

      /** The name of the operation resource. */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^operations/.+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link CloudResourceManager}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link CloudResourceManager}. */
    @Override
    public CloudResourceManager build() {
      return new CloudResourceManager(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link CloudResourceManagerRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setCloudResourceManagerRequestInitializer(
        CloudResourceManagerRequestInitializer cloudresourcemanagerRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(cloudresourcemanagerRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
