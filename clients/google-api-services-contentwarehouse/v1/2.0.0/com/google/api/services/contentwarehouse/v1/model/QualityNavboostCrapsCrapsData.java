/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * NEXT TAG: 27
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class QualityNavboostCrapsCrapsData extends com.google.api.client.json.GenericJson {

  /**
   * Contains counter for Aging signal (go/freshness-aging). It's used internally by Craps/Aging
   * pipeline.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityNavboostCrapsAgingData agingCounts;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double badClicks;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double clicks;

  /**
   * The two-letter uppercase country slice of the CrapsData. Examples: "US", "FR", "BR"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String country;

  /**
   * The device interface and os slice of the CrapsData.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityNavboostCrapsCrapsDevice device;

  /**
   * Contains CrapsClickSignals for specific features. (i.e. for mobile, US, metro id - 123")
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<QualityNavboostCrapsFeatureCrapsData> features;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double goodClicks;

  /**
   * These fields may become legacy fields; we may retire them and use the squashed field (below)
   * instead, to allow for some nesting.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double impressions;

  /**
   * The language slice of the CrapsData. Examples: "en", "fr", "pt-BR",
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String language;

  /**
   * The number of clicks that were last and longest in related user queries.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double lastLongestClicks;

  /**
   * DO NOT USE: Use the above mobile_signals fields instead. DO NOT REMOVE: Field is present in
   * legacy protos in golden tests.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityNavboostCrapsCrapsData mobileData;

  /**
   * The portion of this CrapsData aggregated on data from tier 1/2 mobile interfaces in QSessions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityNavboostCrapsCrapsClickSignals mobileSignals;

  /**
   * Contains a packed string in network byte order, as expected by CrapsIpPrior. Only populated if
   * we looked up the ip_prior_bad_fraction at retrieval time.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String packedIpAddress;

  /**
   * Level of pattern. More general patterns get higher values. For URL patterns this field = 0. For
   * example, if we have "http://abc.def.ghi/xyz.html" level 0 pattern will be
   * "http://abc.def.ghi/xyz.html" level 1 pattern will be "p://abc.def.ghi" level 2 pattern will be
   * "p://def.ghi"
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer patternLevel;

  /**
   * For pattern data, this will contain stats of the SCC's of the individual urls contributing to
   * the pattern.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityNavboostCrapsStatsWithWeightsProto patternSccStats;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String query;

  /**
   * This field can be used by the craps pipeline to slice up signals by various attributes such as
   * device type, country, locale etc. The slice_tag can be an arbitrary string, and the CrapsData
   * values for each slice_tag are aggregated separately, together with the default empty slice_tag.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sliceTag;

  /**
   * Not used yet - we will probably move the impressions / clicks / good_clicks bad clicks / last
   * longest clicks into here from top level, and rename those fields to legacy.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityNavboostCrapsCrapsClickSignals squashed;

  /**
   * Used to assign a prior based on IP address. See quality/navboost/craps/craps-ip-prior.h. This
   * value is prior to the linear transformation (scaling / offset / min / max) that's applied in
   * craps-penalty.cc.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double unscaledIpPriorBadFraction;

  /**
   * We will start using this one for the retuning rollout.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityNavboostCrapsCrapsClickSignals unsquashed;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private QualityNavboostCrapsCrapsClickSignals unsquashedMobileSignals;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String url;

  /**
   * Contains counter for Aging signal (go/freshness-aging). It's used internally by Craps/Aging
   * pipeline.
   * @return value or {@code null} for none
   */
  public QualityNavboostCrapsAgingData getAgingCounts() {
    return agingCounts;
  }

  /**
   * Contains counter for Aging signal (go/freshness-aging). It's used internally by Craps/Aging
   * pipeline.
   * @param agingCounts agingCounts or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setAgingCounts(QualityNavboostCrapsAgingData agingCounts) {
    this.agingCounts = agingCounts;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getBadClicks() {
    return badClicks;
  }

  /**
   * @param badClicks badClicks or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setBadClicks(java.lang.Double badClicks) {
    this.badClicks = badClicks;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getClicks() {
    return clicks;
  }

  /**
   * @param clicks clicks or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setClicks(java.lang.Double clicks) {
    this.clicks = clicks;
    return this;
  }

  /**
   * The two-letter uppercase country slice of the CrapsData. Examples: "US", "FR", "BR"
   * @return value or {@code null} for none
   */
  public java.lang.String getCountry() {
    return country;
  }

  /**
   * The two-letter uppercase country slice of the CrapsData. Examples: "US", "FR", "BR"
   * @param country country or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setCountry(java.lang.String country) {
    this.country = country;
    return this;
  }

  /**
   * The device interface and os slice of the CrapsData.
   * @return value or {@code null} for none
   */
  public QualityNavboostCrapsCrapsDevice getDevice() {
    return device;
  }

  /**
   * The device interface and os slice of the CrapsData.
   * @param device device or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setDevice(QualityNavboostCrapsCrapsDevice device) {
    this.device = device;
    return this;
  }

  /**
   * Contains CrapsClickSignals for specific features. (i.e. for mobile, US, metro id - 123")
   * @return value or {@code null} for none
   */
  public java.util.List<QualityNavboostCrapsFeatureCrapsData> getFeatures() {
    return features;
  }

  /**
   * Contains CrapsClickSignals for specific features. (i.e. for mobile, US, metro id - 123")
   * @param features features or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setFeatures(java.util.List<QualityNavboostCrapsFeatureCrapsData> features) {
    this.features = features;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getGoodClicks() {
    return goodClicks;
  }

  /**
   * @param goodClicks goodClicks or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setGoodClicks(java.lang.Double goodClicks) {
    this.goodClicks = goodClicks;
    return this;
  }

  /**
   * These fields may become legacy fields; we may retire them and use the squashed field (below)
   * instead, to allow for some nesting.
   * @return value or {@code null} for none
   */
  public java.lang.Double getImpressions() {
    return impressions;
  }

  /**
   * These fields may become legacy fields; we may retire them and use the squashed field (below)
   * instead, to allow for some nesting.
   * @param impressions impressions or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setImpressions(java.lang.Double impressions) {
    this.impressions = impressions;
    return this;
  }

  /**
   * The language slice of the CrapsData. Examples: "en", "fr", "pt-BR",
   * @return value or {@code null} for none
   */
  public java.lang.String getLanguage() {
    return language;
  }

  /**
   * The language slice of the CrapsData. Examples: "en", "fr", "pt-BR",
   * @param language language or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setLanguage(java.lang.String language) {
    this.language = language;
    return this;
  }

  /**
   * The number of clicks that were last and longest in related user queries.
   * @return value or {@code null} for none
   */
  public java.lang.Double getLastLongestClicks() {
    return lastLongestClicks;
  }

  /**
   * The number of clicks that were last and longest in related user queries.
   * @param lastLongestClicks lastLongestClicks or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setLastLongestClicks(java.lang.Double lastLongestClicks) {
    this.lastLongestClicks = lastLongestClicks;
    return this;
  }

  /**
   * DO NOT USE: Use the above mobile_signals fields instead. DO NOT REMOVE: Field is present in
   * legacy protos in golden tests.
   * @return value or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData getMobileData() {
    return mobileData;
  }

  /**
   * DO NOT USE: Use the above mobile_signals fields instead. DO NOT REMOVE: Field is present in
   * legacy protos in golden tests.
   * @param mobileData mobileData or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setMobileData(QualityNavboostCrapsCrapsData mobileData) {
    this.mobileData = mobileData;
    return this;
  }

  /**
   * The portion of this CrapsData aggregated on data from tier 1/2 mobile interfaces in QSessions.
   * @return value or {@code null} for none
   */
  public QualityNavboostCrapsCrapsClickSignals getMobileSignals() {
    return mobileSignals;
  }

  /**
   * The portion of this CrapsData aggregated on data from tier 1/2 mobile interfaces in QSessions.
   * @param mobileSignals mobileSignals or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setMobileSignals(QualityNavboostCrapsCrapsClickSignals mobileSignals) {
    this.mobileSignals = mobileSignals;
    return this;
  }

  /**
   * Contains a packed string in network byte order, as expected by CrapsIpPrior. Only populated if
   * we looked up the ip_prior_bad_fraction at retrieval time.
   * @see #decodePackedIpAddress()
   * @return value or {@code null} for none
   */
  public java.lang.String getPackedIpAddress() {
    return packedIpAddress;
  }

  /**
   * Contains a packed string in network byte order, as expected by CrapsIpPrior. Only populated if
   * we looked up the ip_prior_bad_fraction at retrieval time.
   * @see #getPackedIpAddress()
   * @return Base64 decoded value or {@code null} for none
   *
   * @since 1.14
   */
  public byte[] decodePackedIpAddress() {
    return com.google.api.client.util.Base64.decodeBase64(packedIpAddress);
  }

  /**
   * Contains a packed string in network byte order, as expected by CrapsIpPrior. Only populated if
   * we looked up the ip_prior_bad_fraction at retrieval time.
   * @see #encodePackedIpAddress()
   * @param packedIpAddress packedIpAddress or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setPackedIpAddress(java.lang.String packedIpAddress) {
    this.packedIpAddress = packedIpAddress;
    return this;
  }

  /**
   * Contains a packed string in network byte order, as expected by CrapsIpPrior. Only populated if
   * we looked up the ip_prior_bad_fraction at retrieval time.
   * @see #setPackedIpAddress()
   *
   * <p>
   * The value is encoded Base64 or {@code null} for none.
   * </p>
   *
   * @since 1.14
   */
  public QualityNavboostCrapsCrapsData encodePackedIpAddress(byte[] packedIpAddress) {
    this.packedIpAddress = com.google.api.client.util.Base64.encodeBase64URLSafeString(packedIpAddress);
    return this;
  }

  /**
   * Level of pattern. More general patterns get higher values. For URL patterns this field = 0. For
   * example, if we have "http://abc.def.ghi/xyz.html" level 0 pattern will be
   * "http://abc.def.ghi/xyz.html" level 1 pattern will be "p://abc.def.ghi" level 2 pattern will be
   * "p://def.ghi"
   * @return value or {@code null} for none
   */
  public java.lang.Integer getPatternLevel() {
    return patternLevel;
  }

  /**
   * Level of pattern. More general patterns get higher values. For URL patterns this field = 0. For
   * example, if we have "http://abc.def.ghi/xyz.html" level 0 pattern will be
   * "http://abc.def.ghi/xyz.html" level 1 pattern will be "p://abc.def.ghi" level 2 pattern will be
   * "p://def.ghi"
   * @param patternLevel patternLevel or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setPatternLevel(java.lang.Integer patternLevel) {
    this.patternLevel = patternLevel;
    return this;
  }

  /**
   * For pattern data, this will contain stats of the SCC's of the individual urls contributing to
   * the pattern.
   * @return value or {@code null} for none
   */
  public QualityNavboostCrapsStatsWithWeightsProto getPatternSccStats() {
    return patternSccStats;
  }

  /**
   * For pattern data, this will contain stats of the SCC's of the individual urls contributing to
   * the pattern.
   * @param patternSccStats patternSccStats or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setPatternSccStats(QualityNavboostCrapsStatsWithWeightsProto patternSccStats) {
    this.patternSccStats = patternSccStats;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getQuery() {
    return query;
  }

  /**
   * @param query query or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setQuery(java.lang.String query) {
    this.query = query;
    return this;
  }

  /**
   * This field can be used by the craps pipeline to slice up signals by various attributes such as
   * device type, country, locale etc. The slice_tag can be an arbitrary string, and the CrapsData
   * values for each slice_tag are aggregated separately, together with the default empty slice_tag.
   * @return value or {@code null} for none
   */
  public java.lang.String getSliceTag() {
    return sliceTag;
  }

  /**
   * This field can be used by the craps pipeline to slice up signals by various attributes such as
   * device type, country, locale etc. The slice_tag can be an arbitrary string, and the CrapsData
   * values for each slice_tag are aggregated separately, together with the default empty slice_tag.
   * @param sliceTag sliceTag or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setSliceTag(java.lang.String sliceTag) {
    this.sliceTag = sliceTag;
    return this;
  }

  /**
   * Not used yet - we will probably move the impressions / clicks / good_clicks bad clicks / last
   * longest clicks into here from top level, and rename those fields to legacy.
   * @return value or {@code null} for none
   */
  public QualityNavboostCrapsCrapsClickSignals getSquashed() {
    return squashed;
  }

  /**
   * Not used yet - we will probably move the impressions / clicks / good_clicks bad clicks / last
   * longest clicks into here from top level, and rename those fields to legacy.
   * @param squashed squashed or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setSquashed(QualityNavboostCrapsCrapsClickSignals squashed) {
    this.squashed = squashed;
    return this;
  }

  /**
   * Used to assign a prior based on IP address. See quality/navboost/craps/craps-ip-prior.h. This
   * value is prior to the linear transformation (scaling / offset / min / max) that's applied in
   * craps-penalty.cc.
   * @return value or {@code null} for none
   */
  public java.lang.Double getUnscaledIpPriorBadFraction() {
    return unscaledIpPriorBadFraction;
  }

  /**
   * Used to assign a prior based on IP address. See quality/navboost/craps/craps-ip-prior.h. This
   * value is prior to the linear transformation (scaling / offset / min / max) that's applied in
   * craps-penalty.cc.
   * @param unscaledIpPriorBadFraction unscaledIpPriorBadFraction or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setUnscaledIpPriorBadFraction(java.lang.Double unscaledIpPriorBadFraction) {
    this.unscaledIpPriorBadFraction = unscaledIpPriorBadFraction;
    return this;
  }

  /**
   * We will start using this one for the retuning rollout.
   * @return value or {@code null} for none
   */
  public QualityNavboostCrapsCrapsClickSignals getUnsquashed() {
    return unsquashed;
  }

  /**
   * We will start using this one for the retuning rollout.
   * @param unsquashed unsquashed or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setUnsquashed(QualityNavboostCrapsCrapsClickSignals unsquashed) {
    this.unsquashed = unsquashed;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public QualityNavboostCrapsCrapsClickSignals getUnsquashedMobileSignals() {
    return unsquashedMobileSignals;
  }

  /**
   * @param unsquashedMobileSignals unsquashedMobileSignals or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setUnsquashedMobileSignals(QualityNavboostCrapsCrapsClickSignals unsquashedMobileSignals) {
    this.unsquashedMobileSignals = unsquashedMobileSignals;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUrl() {
    return url;
  }

  /**
   * @param url url or {@code null} for none
   */
  public QualityNavboostCrapsCrapsData setUrl(java.lang.String url) {
    this.url = url;
    return this;
  }

  @Override
  public QualityNavboostCrapsCrapsData set(String fieldName, Object value) {
    return (QualityNavboostCrapsCrapsData) super.set(fieldName, value);
  }

  @Override
  public QualityNavboostCrapsCrapsData clone() {
    return (QualityNavboostCrapsCrapsData) super.clone();
  }

}
