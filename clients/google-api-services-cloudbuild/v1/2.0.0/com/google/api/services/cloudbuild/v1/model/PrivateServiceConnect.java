/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbuild.v1.model;

/**
 * Defines the Private Service Connect network configuration for the pool.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Build API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PrivateServiceConnect extends com.google.api.client.json.GenericJson {

  /**
   * Required. Immutable. The network attachment that the worker network interface is peered to.
   * Must be in the format
   * `projects/{project}/regions/{region}/networkAttachments/{networkAttachment}`. The region of
   * network attachment must be the same as the worker pool. See [Network
   * Attachments](https://cloud.google.com/vpc/docs/about-network-attachments)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String networkAttachment;

  /**
   * Required. Immutable. Disable public IP on the primary network interface. If true, workers are
   * created without any public address, which prevents network egress to public IPs unless a
   * network proxy is configured. If false, workers are created with a public address which allows
   * for public internet egress. The public address only applies to traffic through the primary
   * network interface. If `route_all_traffic` is set to true, all traffic will go through the non-
   * primary network interface, this boolean has no effect.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean publicIpAddressDisabled;

  /**
   * Immutable. Route all traffic through PSC interface. Enable this if you want full control of
   * traffic in the private pool. Configure Cloud NAT for the subnet of network attachment if you
   * need to access public Internet. If false, Only route private IPs, e.g. 10.0.0.0/8,
   * 172.16.0.0/12, and 192.168.0.0/16 through PSC interface.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean routeAllTraffic;

  /**
   * Required. Immutable. The network attachment that the worker network interface is peered to.
   * Must be in the format
   * `projects/{project}/regions/{region}/networkAttachments/{networkAttachment}`. The region of
   * network attachment must be the same as the worker pool. See [Network
   * Attachments](https://cloud.google.com/vpc/docs/about-network-attachments)
   * @return value or {@code null} for none
   */
  public java.lang.String getNetworkAttachment() {
    return networkAttachment;
  }

  /**
   * Required. Immutable. The network attachment that the worker network interface is peered to.
   * Must be in the format
   * `projects/{project}/regions/{region}/networkAttachments/{networkAttachment}`. The region of
   * network attachment must be the same as the worker pool. See [Network
   * Attachments](https://cloud.google.com/vpc/docs/about-network-attachments)
   * @param networkAttachment networkAttachment or {@code null} for none
   */
  public PrivateServiceConnect setNetworkAttachment(java.lang.String networkAttachment) {
    this.networkAttachment = networkAttachment;
    return this;
  }

  /**
   * Required. Immutable. Disable public IP on the primary network interface. If true, workers are
   * created without any public address, which prevents network egress to public IPs unless a
   * network proxy is configured. If false, workers are created with a public address which allows
   * for public internet egress. The public address only applies to traffic through the primary
   * network interface. If `route_all_traffic` is set to true, all traffic will go through the non-
   * primary network interface, this boolean has no effect.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getPublicIpAddressDisabled() {
    return publicIpAddressDisabled;
  }

  /**
   * Required. Immutable. Disable public IP on the primary network interface. If true, workers are
   * created without any public address, which prevents network egress to public IPs unless a
   * network proxy is configured. If false, workers are created with a public address which allows
   * for public internet egress. The public address only applies to traffic through the primary
   * network interface. If `route_all_traffic` is set to true, all traffic will go through the non-
   * primary network interface, this boolean has no effect.
   * @param publicIpAddressDisabled publicIpAddressDisabled or {@code null} for none
   */
  public PrivateServiceConnect setPublicIpAddressDisabled(java.lang.Boolean publicIpAddressDisabled) {
    this.publicIpAddressDisabled = publicIpAddressDisabled;
    return this;
  }

  /**
   * Immutable. Route all traffic through PSC interface. Enable this if you want full control of
   * traffic in the private pool. Configure Cloud NAT for the subnet of network attachment if you
   * need to access public Internet. If false, Only route private IPs, e.g. 10.0.0.0/8,
   * 172.16.0.0/12, and 192.168.0.0/16 through PSC interface.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRouteAllTraffic() {
    return routeAllTraffic;
  }

  /**
   * Immutable. Route all traffic through PSC interface. Enable this if you want full control of
   * traffic in the private pool. Configure Cloud NAT for the subnet of network attachment if you
   * need to access public Internet. If false, Only route private IPs, e.g. 10.0.0.0/8,
   * 172.16.0.0/12, and 192.168.0.0/16 through PSC interface.
   * @param routeAllTraffic routeAllTraffic or {@code null} for none
   */
  public PrivateServiceConnect setRouteAllTraffic(java.lang.Boolean routeAllTraffic) {
    this.routeAllTraffic = routeAllTraffic;
    return this;
  }

  @Override
  public PrivateServiceConnect set(String fieldName, Object value) {
    return (PrivateServiceConnect) super.set(fieldName, value);
  }

  @Override
  public PrivateServiceConnect clone() {
    return (PrivateServiceConnect) super.clone();
  }

}
