/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Information defining a FaceCrop for a particular face. See go/on-device-face-grouping-face-crops
 * for more details.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class PhotosVisionServiceFaceFaceParamsFaceCropV8 extends com.google.api.client.json.GenericJson {

  /**
   * The X coordinate of the center of the face crop.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float centerX;

  /**
   * The Y coordinate of the center of the face crop.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float centerY;

  /**
   * Rotation of the face crop, in radians.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float rotation;

  /**
   * Scale to apply to the coordinates of the face crop.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float scale;

  /**
   * The X coordinate of the center of the face crop.
   * @return value or {@code null} for none
   */
  public java.lang.Float getCenterX() {
    return centerX;
  }

  /**
   * The X coordinate of the center of the face crop.
   * @param centerX centerX or {@code null} for none
   */
  public PhotosVisionServiceFaceFaceParamsFaceCropV8 setCenterX(java.lang.Float centerX) {
    this.centerX = centerX;
    return this;
  }

  /**
   * The Y coordinate of the center of the face crop.
   * @return value or {@code null} for none
   */
  public java.lang.Float getCenterY() {
    return centerY;
  }

  /**
   * The Y coordinate of the center of the face crop.
   * @param centerY centerY or {@code null} for none
   */
  public PhotosVisionServiceFaceFaceParamsFaceCropV8 setCenterY(java.lang.Float centerY) {
    this.centerY = centerY;
    return this;
  }

  /**
   * Rotation of the face crop, in radians.
   * @return value or {@code null} for none
   */
  public java.lang.Float getRotation() {
    return rotation;
  }

  /**
   * Rotation of the face crop, in radians.
   * @param rotation rotation or {@code null} for none
   */
  public PhotosVisionServiceFaceFaceParamsFaceCropV8 setRotation(java.lang.Float rotation) {
    this.rotation = rotation;
    return this;
  }

  /**
   * Scale to apply to the coordinates of the face crop.
   * @return value or {@code null} for none
   */
  public java.lang.Float getScale() {
    return scale;
  }

  /**
   * Scale to apply to the coordinates of the face crop.
   * @param scale scale or {@code null} for none
   */
  public PhotosVisionServiceFaceFaceParamsFaceCropV8 setScale(java.lang.Float scale) {
    this.scale = scale;
    return this;
  }

  @Override
  public PhotosVisionServiceFaceFaceParamsFaceCropV8 set(String fieldName, Object value) {
    return (PhotosVisionServiceFaceFaceParamsFaceCropV8) super.set(fieldName, value);
  }

  @Override
  public PhotosVisionServiceFaceFaceParamsFaceCropV8 clone() {
    return (PhotosVisionServiceFaceFaceParamsFaceCropV8) super.clone();
  }

}
