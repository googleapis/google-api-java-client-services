/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * Model definition for AppsPeopleOzExternalMergedpeopleapiEvent.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the contentwarehouse API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AppsPeopleOzExternalMergedpeopleapiEvent extends com.google.api.client.json.GenericJson {

  /**
   * Event are more accurately represented as a calendar day that does not depend on a timestamp
   * representation at all. When given a timestamp, there are lots of opportunities to make
   * mistakes, so a CalendarDay proto is replacing timestamps. PeopleApi will return these values on
   * reads, and unless the client is a legacy caller in the
   * legacy_timestamp_event_write_behavior_enabled capability allowlist, this value is what is used
   * for Person writes.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleTypeDate calendarDay;

  /**
   * The `type` translated and formatted in the request locale. See go/people-api-howto/localization
   * for details on how to usage.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String formattedType;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata metadata;

  /**
   * Clients are recommended to read the calendar_day field instead of timestamp_millis. When
   * writing events, new clients must set calendar_day instead of timestamp_millis. Events are
   * currently represented as timestamp values, although the interpretation of these timestamp
   * values is a calendar date. There are a few important details about how this value should be
   * mapped to a calendar date that should be consistent among all clients. For detailed
   * information, see Birthday.date_ms.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long timestampMillis;

  /**
   * The type of the event. The type can be free form or one of these predefined values: *
   * `anniversary` * `other`
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Event are more accurately represented as a calendar day that does not depend on a timestamp
   * representation at all. When given a timestamp, there are lots of opportunities to make
   * mistakes, so a CalendarDay proto is replacing timestamps. PeopleApi will return these values on
   * reads, and unless the client is a legacy caller in the
   * legacy_timestamp_event_write_behavior_enabled capability allowlist, this value is what is used
   * for Person writes.
   * @return value or {@code null} for none
   */
  public GoogleTypeDate getCalendarDay() {
    return calendarDay;
  }

  /**
   * Event are more accurately represented as a calendar day that does not depend on a timestamp
   * representation at all. When given a timestamp, there are lots of opportunities to make
   * mistakes, so a CalendarDay proto is replacing timestamps. PeopleApi will return these values on
   * reads, and unless the client is a legacy caller in the
   * legacy_timestamp_event_write_behavior_enabled capability allowlist, this value is what is used
   * for Person writes.
   * @param calendarDay calendarDay or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiEvent setCalendarDay(GoogleTypeDate calendarDay) {
    this.calendarDay = calendarDay;
    return this;
  }

  /**
   * The `type` translated and formatted in the request locale. See go/people-api-howto/localization
   * for details on how to usage.
   * @return value or {@code null} for none
   */
  public java.lang.String getFormattedType() {
    return formattedType;
  }

  /**
   * The `type` translated and formatted in the request locale. See go/people-api-howto/localization
   * for details on how to usage.
   * @param formattedType formattedType or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiEvent setFormattedType(java.lang.String formattedType) {
    this.formattedType = formattedType;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata getMetadata() {
    return metadata;
  }

  /**
   * @param metadata metadata or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiEvent setMetadata(AppsPeopleOzExternalMergedpeopleapiPersonFieldMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Clients are recommended to read the calendar_day field instead of timestamp_millis. When
   * writing events, new clients must set calendar_day instead of timestamp_millis. Events are
   * currently represented as timestamp values, although the interpretation of these timestamp
   * values is a calendar date. There are a few important details about how this value should be
   * mapped to a calendar date that should be consistent among all clients. For detailed
   * information, see Birthday.date_ms.
   * @return value or {@code null} for none
   */
  public java.lang.Long getTimestampMillis() {
    return timestampMillis;
  }

  /**
   * Clients are recommended to read the calendar_day field instead of timestamp_millis. When
   * writing events, new clients must set calendar_day instead of timestamp_millis. Events are
   * currently represented as timestamp values, although the interpretation of these timestamp
   * values is a calendar date. There are a few important details about how this value should be
   * mapped to a calendar date that should be consistent among all clients. For detailed
   * information, see Birthday.date_ms.
   * @param timestampMillis timestampMillis or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiEvent setTimestampMillis(java.lang.Long timestampMillis) {
    this.timestampMillis = timestampMillis;
    return this;
  }

  /**
   * The type of the event. The type can be free form or one of these predefined values: *
   * `anniversary` * `other`
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The type of the event. The type can be free form or one of these predefined values: *
   * `anniversary` * `other`
   * @param type type or {@code null} for none
   */
  public AppsPeopleOzExternalMergedpeopleapiEvent setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiEvent set(String fieldName, Object value) {
    return (AppsPeopleOzExternalMergedpeopleapiEvent) super.set(fieldName, value);
  }

  @Override
  public AppsPeopleOzExternalMergedpeopleapiEvent clone() {
    return (AppsPeopleOzExternalMergedpeopleapiEvent) super.clone();
  }

}
