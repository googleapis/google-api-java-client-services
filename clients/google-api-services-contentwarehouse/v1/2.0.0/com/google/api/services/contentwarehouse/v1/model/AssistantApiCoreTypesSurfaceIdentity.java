/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * The set of information that helps the server identify the surface. This replaces the User-Agent
 * string within the Assistant Server. Note: The SurfaceIdentity proto should only be used to derive
 * the capabilities of a surface. It should not be accessed outside of the CapabilityBuilder or
 * CapabilityChecker. NEXT ID: 5 IMPORTANT: The definitions of the SurfaceIdentity and
 * SurfaceVersion protos are being moved to
 * //assistant/api/core_types/governed/surface_identity.proto All existing references will be
 * updated to point to the new location. If you are adding a reference, use the new SurfaceIdentity
 * and SurfaceVersion protos instead of the protos defined here. LINT.IfChange
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AssistantApiCoreTypesSurfaceIdentity extends com.google.api.client.json.GenericJson {

  /**
   * The identifier of the device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesDeviceId deviceId;

  /**
   * The device's surface type. The types are defined at
   * google3/assistant/api/core_types/surfaces.gcl. NOTE: This is the new field that is going to
   * replace the `surface_type_string` field above. For more details please refer to go
   * /ontologicalize-surface-type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String surfaceType;

  /**
   * The device's surface type. This is the string version of the
   * assistant.api.core_types.SurfaceType enum. The server should not use this field, rather it
   * should use the SurfaceType value derived from this string.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String surfaceTypeString;

  /**
   * The version of the surface/client. This is different from the Conversation protocol version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private AssistantApiCoreTypesSurfaceVersion surfaceVersion;

  /**
   * The identifier of the device.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesDeviceId getDeviceId() {
    return deviceId;
  }

  /**
   * The identifier of the device.
   * @param deviceId deviceId or {@code null} for none
   */
  public AssistantApiCoreTypesSurfaceIdentity setDeviceId(AssistantApiCoreTypesDeviceId deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  /**
   * The device's surface type. The types are defined at
   * google3/assistant/api/core_types/surfaces.gcl. NOTE: This is the new field that is going to
   * replace the `surface_type_string` field above. For more details please refer to go
   * /ontologicalize-surface-type.
   * @return value or {@code null} for none
   */
  public java.lang.String getSurfaceType() {
    return surfaceType;
  }

  /**
   * The device's surface type. The types are defined at
   * google3/assistant/api/core_types/surfaces.gcl. NOTE: This is the new field that is going to
   * replace the `surface_type_string` field above. For more details please refer to go
   * /ontologicalize-surface-type.
   * @param surfaceType surfaceType or {@code null} for none
   */
  public AssistantApiCoreTypesSurfaceIdentity setSurfaceType(java.lang.String surfaceType) {
    this.surfaceType = surfaceType;
    return this;
  }

  /**
   * The device's surface type. This is the string version of the
   * assistant.api.core_types.SurfaceType enum. The server should not use this field, rather it
   * should use the SurfaceType value derived from this string.
   * @return value or {@code null} for none
   */
  public java.lang.String getSurfaceTypeString() {
    return surfaceTypeString;
  }

  /**
   * The device's surface type. This is the string version of the
   * assistant.api.core_types.SurfaceType enum. The server should not use this field, rather it
   * should use the SurfaceType value derived from this string.
   * @param surfaceTypeString surfaceTypeString or {@code null} for none
   */
  public AssistantApiCoreTypesSurfaceIdentity setSurfaceTypeString(java.lang.String surfaceTypeString) {
    this.surfaceTypeString = surfaceTypeString;
    return this;
  }

  /**
   * The version of the surface/client. This is different from the Conversation protocol version.
   * @return value or {@code null} for none
   */
  public AssistantApiCoreTypesSurfaceVersion getSurfaceVersion() {
    return surfaceVersion;
  }

  /**
   * The version of the surface/client. This is different from the Conversation protocol version.
   * @param surfaceVersion surfaceVersion or {@code null} for none
   */
  public AssistantApiCoreTypesSurfaceIdentity setSurfaceVersion(AssistantApiCoreTypesSurfaceVersion surfaceVersion) {
    this.surfaceVersion = surfaceVersion;
    return this;
  }

  @Override
  public AssistantApiCoreTypesSurfaceIdentity set(String fieldName, Object value) {
    return (AssistantApiCoreTypesSurfaceIdentity) super.set(fieldName, value);
  }

  @Override
  public AssistantApiCoreTypesSurfaceIdentity clone() {
    return (AssistantApiCoreTypesSurfaceIdentity) super.clone();
  }

}
