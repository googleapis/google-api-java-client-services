/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.dlp.v2.model;

/**
 * Custom information type provided by the user. Used to find domain-specific sensitive information
 * configurable to the data in question.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Data Loss Prevention (DLP) API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GooglePrivacyDlpV2CustomInfoType extends com.google.api.client.json.GenericJson {

  /**
   * Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in
   * order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GooglePrivacyDlpV2DetectionRule> detectionRules;

  /**
   * A list of phrases to detect as a CustomInfoType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2Dictionary dictionary;

  /**
   * If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It
   * still can be used for rules matching.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String exclusionType;

  /**
   * CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the
   * name matches one of existing infoTypes and that infoType is specified in
   * `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by
   * the system. If built-in info type is not specified in `InspectContent.info_types` list then the
   * name is treated as a custom info type.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2InfoType infoType;

  /**
   * Likelihood to return for this CustomInfoType. This base value can be altered by a detection
   * rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not
   * specified.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String likelihood;

  /**
   * Regular expression based CustomInfoType.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2Regex regex;

  /**
   * Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently
   * supported in `InspectContent`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2StoredType storedType;

  /**
   * Message for detecting output from deidentification transformations that support reversing.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GooglePrivacyDlpV2SurrogateType surrogateType;

  /**
   * Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in
   * order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
   * @return value or {@code null} for none
   */
  public java.util.List<GooglePrivacyDlpV2DetectionRule> getDetectionRules() {
    return detectionRules;
  }

  /**
   * Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in
   * order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
   * @param detectionRules detectionRules or {@code null} for none
   */
  public GooglePrivacyDlpV2CustomInfoType setDetectionRules(java.util.List<GooglePrivacyDlpV2DetectionRule> detectionRules) {
    this.detectionRules = detectionRules;
    return this;
  }

  /**
   * A list of phrases to detect as a CustomInfoType.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2Dictionary getDictionary() {
    return dictionary;
  }

  /**
   * A list of phrases to detect as a CustomInfoType.
   * @param dictionary dictionary or {@code null} for none
   */
  public GooglePrivacyDlpV2CustomInfoType setDictionary(GooglePrivacyDlpV2Dictionary dictionary) {
    this.dictionary = dictionary;
    return this;
  }

  /**
   * If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It
   * still can be used for rules matching.
   * @return value or {@code null} for none
   */
  public java.lang.String getExclusionType() {
    return exclusionType;
  }

  /**
   * If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It
   * still can be used for rules matching.
   * @param exclusionType exclusionType or {@code null} for none
   */
  public GooglePrivacyDlpV2CustomInfoType setExclusionType(java.lang.String exclusionType) {
    this.exclusionType = exclusionType;
    return this;
  }

  /**
   * CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the
   * name matches one of existing infoTypes and that infoType is specified in
   * `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by
   * the system. If built-in info type is not specified in `InspectContent.info_types` list then the
   * name is treated as a custom info type.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2InfoType getInfoType() {
    return infoType;
  }

  /**
   * CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the
   * name matches one of existing infoTypes and that infoType is specified in
   * `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by
   * the system. If built-in info type is not specified in `InspectContent.info_types` list then the
   * name is treated as a custom info type.
   * @param infoType infoType or {@code null} for none
   */
  public GooglePrivacyDlpV2CustomInfoType setInfoType(GooglePrivacyDlpV2InfoType infoType) {
    this.infoType = infoType;
    return this;
  }

  /**
   * Likelihood to return for this CustomInfoType. This base value can be altered by a detection
   * rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not
   * specified.
   * @return value or {@code null} for none
   */
  public java.lang.String getLikelihood() {
    return likelihood;
  }

  /**
   * Likelihood to return for this CustomInfoType. This base value can be altered by a detection
   * rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not
   * specified.
   * @param likelihood likelihood or {@code null} for none
   */
  public GooglePrivacyDlpV2CustomInfoType setLikelihood(java.lang.String likelihood) {
    this.likelihood = likelihood;
    return this;
  }

  /**
   * Regular expression based CustomInfoType.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2Regex getRegex() {
    return regex;
  }

  /**
   * Regular expression based CustomInfoType.
   * @param regex regex or {@code null} for none
   */
  public GooglePrivacyDlpV2CustomInfoType setRegex(GooglePrivacyDlpV2Regex regex) {
    this.regex = regex;
    return this;
  }

  /**
   * Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently
   * supported in `InspectContent`.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2StoredType getStoredType() {
    return storedType;
  }

  /**
   * Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently
   * supported in `InspectContent`.
   * @param storedType storedType or {@code null} for none
   */
  public GooglePrivacyDlpV2CustomInfoType setStoredType(GooglePrivacyDlpV2StoredType storedType) {
    this.storedType = storedType;
    return this;
  }

  /**
   * Message for detecting output from deidentification transformations that support reversing.
   * @return value or {@code null} for none
   */
  public GooglePrivacyDlpV2SurrogateType getSurrogateType() {
    return surrogateType;
  }

  /**
   * Message for detecting output from deidentification transformations that support reversing.
   * @param surrogateType surrogateType or {@code null} for none
   */
  public GooglePrivacyDlpV2CustomInfoType setSurrogateType(GooglePrivacyDlpV2SurrogateType surrogateType) {
    this.surrogateType = surrogateType;
    return this;
  }

  @Override
  public GooglePrivacyDlpV2CustomInfoType set(String fieldName, Object value) {
    return (GooglePrivacyDlpV2CustomInfoType) super.set(fieldName, value);
  }

  @Override
  public GooglePrivacyDlpV2CustomInfoType clone() {
    return (GooglePrivacyDlpV2CustomInfoType) super.clone();
  }

}
