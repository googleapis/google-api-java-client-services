/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.recaptchaenterprise.v1.model;

/**
 * Assessment for Fraud Prevention.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the reCAPTCHA Enterprise API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment extends com.google.api.client.json.GenericJson {

  /**
   * Assessment of this transaction for behavioral trust.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict behavioralTrustVerdict;

  /**
   * Assessment of this transaction for risk of being part of a card testing attack.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict cardTestingVerdict;

  /**
   * Assessment of this transaction for risk of a stolen instrument.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict stolenInstrumentVerdict;

  /**
   * Probability (0-1) of this transaction being fraudulent. Summarizes the combined risk of attack
   * vectors below.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Float transactionRisk;

  /**
   * Assessment of this transaction for behavioral trust.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict getBehavioralTrustVerdict() {
    return behavioralTrustVerdict;
  }

  /**
   * Assessment of this transaction for behavioral trust.
   * @param behavioralTrustVerdict behavioralTrustVerdict or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment setBehavioralTrustVerdict(GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentBehavioralTrustVerdict behavioralTrustVerdict) {
    this.behavioralTrustVerdict = behavioralTrustVerdict;
    return this;
  }

  /**
   * Assessment of this transaction for risk of being part of a card testing attack.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict getCardTestingVerdict() {
    return cardTestingVerdict;
  }

  /**
   * Assessment of this transaction for risk of being part of a card testing attack.
   * @param cardTestingVerdict cardTestingVerdict or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment setCardTestingVerdict(GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict cardTestingVerdict) {
    this.cardTestingVerdict = cardTestingVerdict;
    return this;
  }

  /**
   * Assessment of this transaction for risk of a stolen instrument.
   * @return value or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict getStolenInstrumentVerdict() {
    return stolenInstrumentVerdict;
  }

  /**
   * Assessment of this transaction for risk of a stolen instrument.
   * @param stolenInstrumentVerdict stolenInstrumentVerdict or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment setStolenInstrumentVerdict(GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict stolenInstrumentVerdict) {
    this.stolenInstrumentVerdict = stolenInstrumentVerdict;
    return this;
  }

  /**
   * Probability (0-1) of this transaction being fraudulent. Summarizes the combined risk of attack
   * vectors below.
   * @return value or {@code null} for none
   */
  public java.lang.Float getTransactionRisk() {
    return transactionRisk;
  }

  /**
   * Probability (0-1) of this transaction being fraudulent. Summarizes the combined risk of attack
   * vectors below.
   * @param transactionRisk transactionRisk or {@code null} for none
   */
  public GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment setTransactionRisk(java.lang.Float transactionRisk) {
    this.transactionRisk = transactionRisk;
    return this;
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment set(String fieldName, Object value) {
    return (GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment clone() {
    return (GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment) super.clone();
  }

}
