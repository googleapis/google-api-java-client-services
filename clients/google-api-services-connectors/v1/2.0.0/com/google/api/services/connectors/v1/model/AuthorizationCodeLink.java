/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.connectors.v1.model;

/**
 * This configuration captures the details required to render an authorization link for the OAuth
 * Authorization Code Flow.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Connectors API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AuthorizationCodeLink extends com.google.api.client.json.GenericJson {

  /**
   * Optional. The client ID assigned to the Google Cloud Connectors OAuth app for the connector
   * data source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clientId;

  /**
   * Optional. The client secret assigned to the Google Cloud Connectors OAuth app for the connector
   * data source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Secret clientSecret;

  /**
   * Optional. Whether to enable PKCE for the auth code flow.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean enablePkce;

  /**
   * Optional. Omit query params from the redirect URI.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean omitQueryParams;

  /**
   * Optional. The scopes for which the user will authorize Google Cloud Connectors on the connector
   * data source.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> scopes;

  /**
   * Optional. The base URI the user must click to trigger the authorization code login flow.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String uri;

  /**
   * Optional. The client ID assigned to the Google Cloud Connectors OAuth app for the connector
   * data source.
   * @return value or {@code null} for none
   */
  public java.lang.String getClientId() {
    return clientId;
  }

  /**
   * Optional. The client ID assigned to the Google Cloud Connectors OAuth app for the connector
   * data source.
   * @param clientId clientId or {@code null} for none
   */
  public AuthorizationCodeLink setClientId(java.lang.String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Optional. The client secret assigned to the Google Cloud Connectors OAuth app for the connector
   * data source.
   * @return value or {@code null} for none
   */
  public Secret getClientSecret() {
    return clientSecret;
  }

  /**
   * Optional. The client secret assigned to the Google Cloud Connectors OAuth app for the connector
   * data source.
   * @param clientSecret clientSecret or {@code null} for none
   */
  public AuthorizationCodeLink setClientSecret(Secret clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

  /**
   * Optional. Whether to enable PKCE for the auth code flow.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getEnablePkce() {
    return enablePkce;
  }

  /**
   * Optional. Whether to enable PKCE for the auth code flow.
   * @param enablePkce enablePkce or {@code null} for none
   */
  public AuthorizationCodeLink setEnablePkce(java.lang.Boolean enablePkce) {
    this.enablePkce = enablePkce;
    return this;
  }

  /**
   * Optional. Omit query params from the redirect URI.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOmitQueryParams() {
    return omitQueryParams;
  }

  /**
   * Optional. Omit query params from the redirect URI.
   * @param omitQueryParams omitQueryParams or {@code null} for none
   */
  public AuthorizationCodeLink setOmitQueryParams(java.lang.Boolean omitQueryParams) {
    this.omitQueryParams = omitQueryParams;
    return this;
  }

  /**
   * Optional. The scopes for which the user will authorize Google Cloud Connectors on the connector
   * data source.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getScopes() {
    return scopes;
  }

  /**
   * Optional. The scopes for which the user will authorize Google Cloud Connectors on the connector
   * data source.
   * @param scopes scopes or {@code null} for none
   */
  public AuthorizationCodeLink setScopes(java.util.List<java.lang.String> scopes) {
    this.scopes = scopes;
    return this;
  }

  /**
   * Optional. The base URI the user must click to trigger the authorization code login flow.
   * @return value or {@code null} for none
   */
  public java.lang.String getUri() {
    return uri;
  }

  /**
   * Optional. The base URI the user must click to trigger the authorization code login flow.
   * @param uri uri or {@code null} for none
   */
  public AuthorizationCodeLink setUri(java.lang.String uri) {
    this.uri = uri;
    return this;
  }

  @Override
  public AuthorizationCodeLink set(String fieldName, Object value) {
    return (AuthorizationCodeLink) super.set(fieldName, value);
  }

  @Override
  public AuthorizationCodeLink clone() {
    return (AuthorizationCodeLink) super.clone();
  }

}
