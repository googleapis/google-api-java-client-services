/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudsearch.v1.model;

/**
 * A typed name-value pair for structured data.  The type of the value should be the same as the
 * registered type for the `name` property in the object definition of `objectType`.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Search API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NamedProperty extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean booleanValue;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DateValues dateValues;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private DoubleValues doubleValues;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private EnumValues enumValues;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private HtmlValues htmlValues;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private IntegerValues integerValues;

  /**
   * The name of the property.  This name should correspond to the name of the property that was
   * registered for object definition in the schema. The maximum allowable length for this property
   * is 256 characters.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ObjectValues objectValues;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TextValues textValues;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private TimestampValues timestampValues;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBooleanValue() {
    return booleanValue;
  }

  /**
   * @param booleanValue booleanValue or {@code null} for none
   */
  public NamedProperty setBooleanValue(java.lang.Boolean booleanValue) {
    this.booleanValue = booleanValue;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public DateValues getDateValues() {
    return dateValues;
  }

  /**
   * @param dateValues dateValues or {@code null} for none
   */
  public NamedProperty setDateValues(DateValues dateValues) {
    this.dateValues = dateValues;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public DoubleValues getDoubleValues() {
    return doubleValues;
  }

  /**
   * @param doubleValues doubleValues or {@code null} for none
   */
  public NamedProperty setDoubleValues(DoubleValues doubleValues) {
    this.doubleValues = doubleValues;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public EnumValues getEnumValues() {
    return enumValues;
  }

  /**
   * @param enumValues enumValues or {@code null} for none
   */
  public NamedProperty setEnumValues(EnumValues enumValues) {
    this.enumValues = enumValues;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public HtmlValues getHtmlValues() {
    return htmlValues;
  }

  /**
   * @param htmlValues htmlValues or {@code null} for none
   */
  public NamedProperty setHtmlValues(HtmlValues htmlValues) {
    this.htmlValues = htmlValues;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public IntegerValues getIntegerValues() {
    return integerValues;
  }

  /**
   * @param integerValues integerValues or {@code null} for none
   */
  public NamedProperty setIntegerValues(IntegerValues integerValues) {
    this.integerValues = integerValues;
    return this;
  }

  /**
   * The name of the property.  This name should correspond to the name of the property that was
   * registered for object definition in the schema. The maximum allowable length for this property
   * is 256 characters.
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The name of the property.  This name should correspond to the name of the property that was
   * registered for object definition in the schema. The maximum allowable length for this property
   * is 256 characters.
   * @param name name or {@code null} for none
   */
  public NamedProperty setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public ObjectValues getObjectValues() {
    return objectValues;
  }

  /**
   * @param objectValues objectValues or {@code null} for none
   */
  public NamedProperty setObjectValues(ObjectValues objectValues) {
    this.objectValues = objectValues;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public TextValues getTextValues() {
    return textValues;
  }

  /**
   * @param textValues textValues or {@code null} for none
   */
  public NamedProperty setTextValues(TextValues textValues) {
    this.textValues = textValues;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public TimestampValues getTimestampValues() {
    return timestampValues;
  }

  /**
   * @param timestampValues timestampValues or {@code null} for none
   */
  public NamedProperty setTimestampValues(TimestampValues timestampValues) {
    this.timestampValues = timestampValues;
    return this;
  }

  @Override
  public NamedProperty set(String fieldName, Object value) {
    return (NamedProperty) super.set(fieldName, value);
  }

  @Override
  public NamedProperty clone() {
    return (NamedProperty) super.clone();
  }

}
