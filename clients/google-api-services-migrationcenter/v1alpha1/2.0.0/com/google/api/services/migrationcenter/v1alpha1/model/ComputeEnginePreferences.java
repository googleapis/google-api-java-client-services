/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.migrationcenter.v1alpha1.model;

/**
 * The user preferences relating to Compute Engine target platform.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Migration Center API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ComputeEnginePreferences extends com.google.api.client.json.GenericJson {

  /**
   * License type to consider when calculating costs for virtual machine insights and
   * recommendations. If unspecified, costs are calculated based on the default licensing plan.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String licenseType;

  /**
   * Preferences concerning the machine types to consider on Compute Engine.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private MachinePreferences machinePreferences;

  /**
   * Persistent disk type to use. If unspecified (default), all types are considered, based on
   * available usage data.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String persistentDiskType;

  /**
   * License type to consider when calculating costs for virtual machine insights and
   * recommendations. If unspecified, costs are calculated based on the default licensing plan.
   * @return value or {@code null} for none
   */
  public java.lang.String getLicenseType() {
    return licenseType;
  }

  /**
   * License type to consider when calculating costs for virtual machine insights and
   * recommendations. If unspecified, costs are calculated based on the default licensing plan.
   * @param licenseType licenseType or {@code null} for none
   */
  public ComputeEnginePreferences setLicenseType(java.lang.String licenseType) {
    this.licenseType = licenseType;
    return this;
  }

  /**
   * Preferences concerning the machine types to consider on Compute Engine.
   * @return value or {@code null} for none
   */
  public MachinePreferences getMachinePreferences() {
    return machinePreferences;
  }

  /**
   * Preferences concerning the machine types to consider on Compute Engine.
   * @param machinePreferences machinePreferences or {@code null} for none
   */
  public ComputeEnginePreferences setMachinePreferences(MachinePreferences machinePreferences) {
    this.machinePreferences = machinePreferences;
    return this;
  }

  /**
   * Persistent disk type to use. If unspecified (default), all types are considered, based on
   * available usage data.
   * @return value or {@code null} for none
   */
  public java.lang.String getPersistentDiskType() {
    return persistentDiskType;
  }

  /**
   * Persistent disk type to use. If unspecified (default), all types are considered, based on
   * available usage data.
   * @param persistentDiskType persistentDiskType or {@code null} for none
   */
  public ComputeEnginePreferences setPersistentDiskType(java.lang.String persistentDiskType) {
    this.persistentDiskType = persistentDiskType;
    return this;
  }

  @Override
  public ComputeEnginePreferences set(String fieldName, Object value) {
    return (ComputeEnginePreferences) super.set(fieldName, value);
  }

  @Override
  public ComputeEnginePreferences clone() {
    return (ComputeEnginePreferences) super.clone();
  }

}
