/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.compute.model;

/**
 * Contains output only fields. Use this sub-message for actual values set on Instance attributes as
 * compared to the value requested by the user (intent) in their instance CRUD calls.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Compute Engine API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ResourceStatus extends com.google.api.client.json.GenericJson {

  /**
   * [Output Only] The precise location of your instance within the zone's data center, including
   * the block, sub-block, and host. The field is formatted as follows: blockId/subBlockId/hostId.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String physicalHost;

  /**
   * [Output Only] A series of fields containing the global name of the Compute Engine cluster, as
   * well as the ID of the block, sub-block, and host on which the running instance is located.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceStatusPhysicalHostTopology physicalHostTopology;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceStatusScheduling scheduling;

  /**
   * [Output Only] Details about the instance stopping state.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private ResourceStatusShutdownDetails shutdownDetails;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private UpcomingMaintenance upcomingMaintenance;

  /**
   * [Output Only] The precise location of your instance within the zone's data center, including
   * the block, sub-block, and host. The field is formatted as follows: blockId/subBlockId/hostId.
   * @return value or {@code null} for none
   */
  public java.lang.String getPhysicalHost() {
    return physicalHost;
  }

  /**
   * [Output Only] The precise location of your instance within the zone's data center, including
   * the block, sub-block, and host. The field is formatted as follows: blockId/subBlockId/hostId.
   * @param physicalHost physicalHost or {@code null} for none
   */
  public ResourceStatus setPhysicalHost(java.lang.String physicalHost) {
    this.physicalHost = physicalHost;
    return this;
  }

  /**
   * [Output Only] A series of fields containing the global name of the Compute Engine cluster, as
   * well as the ID of the block, sub-block, and host on which the running instance is located.
   * @return value or {@code null} for none
   */
  public ResourceStatusPhysicalHostTopology getPhysicalHostTopology() {
    return physicalHostTopology;
  }

  /**
   * [Output Only] A series of fields containing the global name of the Compute Engine cluster, as
   * well as the ID of the block, sub-block, and host on which the running instance is located.
   * @param physicalHostTopology physicalHostTopology or {@code null} for none
   */
  public ResourceStatus setPhysicalHostTopology(ResourceStatusPhysicalHostTopology physicalHostTopology) {
    this.physicalHostTopology = physicalHostTopology;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public ResourceStatusScheduling getScheduling() {
    return scheduling;
  }

  /**
   * @param scheduling scheduling or {@code null} for none
   */
  public ResourceStatus setScheduling(ResourceStatusScheduling scheduling) {
    this.scheduling = scheduling;
    return this;
  }

  /**
   * [Output Only] Details about the instance stopping state.
   * @return value or {@code null} for none
   */
  public ResourceStatusShutdownDetails getShutdownDetails() {
    return shutdownDetails;
  }

  /**
   * [Output Only] Details about the instance stopping state.
   * @param shutdownDetails shutdownDetails or {@code null} for none
   */
  public ResourceStatus setShutdownDetails(ResourceStatusShutdownDetails shutdownDetails) {
    this.shutdownDetails = shutdownDetails;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public UpcomingMaintenance getUpcomingMaintenance() {
    return upcomingMaintenance;
  }

  /**
   * @param upcomingMaintenance upcomingMaintenance or {@code null} for none
   */
  public ResourceStatus setUpcomingMaintenance(UpcomingMaintenance upcomingMaintenance) {
    this.upcomingMaintenance = upcomingMaintenance;
    return this;
  }

  @Override
  public ResourceStatus set(String fieldName, Object value) {
    return (ResourceStatus) super.set(fieldName, value);
  }

  @Override
  public ResourceStatus clone() {
    return (ResourceStatus) super.clone();
  }

}
