/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.contentwarehouse.v1.model;

/**
 * A message that stores relations between this annotation and another entity. Stores the mid and
 * the kind of relationship. These links may be consumed downstream for various purposes, including
 * support transfer and other business logic. An example is for the Honda Civic entity. It may have
 * an mdvc_relation that is a generalization_of the 2015 Honda Civic entity. So the Honda Civic
 * would have the following: RelatedEntity { mid = 2015 Honda Civic Mid mdvc_relation =
 * GENERALIZATION_OF } It has no equivalent_relation because it is by default NO_EQUIVALENT. The
 * Honda Civic entity might then have a separate relation to the Old Honda Civic entity, as they are
 * considered the same entity, or the following relation: RelatedEntity { mid = Old Honda Civic Mid
 * equivalent_relation = EQUIVALENT }
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Document AI Warehouse API. For a detailed explanation
 * see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class NlpSemanticParsingRelatedEntity extends com.google.api.client.json.GenericJson {

  /**
   * Denotes whether or not the related entity is derived from cluster support transfer.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String clusterSupportTransferRelation;

  /**
   * Denotes whether or not the related entity composes a compound entity together with other
   * related entities.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String composedFromRelation;

  /**
   * Whether or not the given mid is related to the other mid. Equivalent mids are usually mutually
   * exclusive with other kinds of relations.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String equivalentRelation;

  /**
   * The mdvc relation with the related mid.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mdvcRelation;

  /**
   * Mid that is related.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String mid;

  /**
   * Denotes whether or not there was support transfer between the two entities.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String supportTransferRelation;

  /**
   * Set if the related entity is the source of an STBR rule and the target is not this one.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean targetIsStbrSource;

  /**
   * Denotes whether or not the related entity is derived from cluster support transfer.
   * @return value or {@code null} for none
   */
  public java.lang.String getClusterSupportTransferRelation() {
    return clusterSupportTransferRelation;
  }

  /**
   * Denotes whether or not the related entity is derived from cluster support transfer.
   * @param clusterSupportTransferRelation clusterSupportTransferRelation or {@code null} for none
   */
  public NlpSemanticParsingRelatedEntity setClusterSupportTransferRelation(java.lang.String clusterSupportTransferRelation) {
    this.clusterSupportTransferRelation = clusterSupportTransferRelation;
    return this;
  }

  /**
   * Denotes whether or not the related entity composes a compound entity together with other
   * related entities.
   * @return value or {@code null} for none
   */
  public java.lang.String getComposedFromRelation() {
    return composedFromRelation;
  }

  /**
   * Denotes whether or not the related entity composes a compound entity together with other
   * related entities.
   * @param composedFromRelation composedFromRelation or {@code null} for none
   */
  public NlpSemanticParsingRelatedEntity setComposedFromRelation(java.lang.String composedFromRelation) {
    this.composedFromRelation = composedFromRelation;
    return this;
  }

  /**
   * Whether or not the given mid is related to the other mid. Equivalent mids are usually mutually
   * exclusive with other kinds of relations.
   * @return value or {@code null} for none
   */
  public java.lang.String getEquivalentRelation() {
    return equivalentRelation;
  }

  /**
   * Whether or not the given mid is related to the other mid. Equivalent mids are usually mutually
   * exclusive with other kinds of relations.
   * @param equivalentRelation equivalentRelation or {@code null} for none
   */
  public NlpSemanticParsingRelatedEntity setEquivalentRelation(java.lang.String equivalentRelation) {
    this.equivalentRelation = equivalentRelation;
    return this;
  }

  /**
   * The mdvc relation with the related mid.
   * @return value or {@code null} for none
   */
  public java.lang.String getMdvcRelation() {
    return mdvcRelation;
  }

  /**
   * The mdvc relation with the related mid.
   * @param mdvcRelation mdvcRelation or {@code null} for none
   */
  public NlpSemanticParsingRelatedEntity setMdvcRelation(java.lang.String mdvcRelation) {
    this.mdvcRelation = mdvcRelation;
    return this;
  }

  /**
   * Mid that is related.
   * @return value or {@code null} for none
   */
  public java.lang.String getMid() {
    return mid;
  }

  /**
   * Mid that is related.
   * @param mid mid or {@code null} for none
   */
  public NlpSemanticParsingRelatedEntity setMid(java.lang.String mid) {
    this.mid = mid;
    return this;
  }

  /**
   * Denotes whether or not there was support transfer between the two entities.
   * @return value or {@code null} for none
   */
  public java.lang.String getSupportTransferRelation() {
    return supportTransferRelation;
  }

  /**
   * Denotes whether or not there was support transfer between the two entities.
   * @param supportTransferRelation supportTransferRelation or {@code null} for none
   */
  public NlpSemanticParsingRelatedEntity setSupportTransferRelation(java.lang.String supportTransferRelation) {
    this.supportTransferRelation = supportTransferRelation;
    return this;
  }

  /**
   * Set if the related entity is the source of an STBR rule and the target is not this one.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTargetIsStbrSource() {
    return targetIsStbrSource;
  }

  /**
   * Set if the related entity is the source of an STBR rule and the target is not this one.
   * @param targetIsStbrSource targetIsStbrSource or {@code null} for none
   */
  public NlpSemanticParsingRelatedEntity setTargetIsStbrSource(java.lang.Boolean targetIsStbrSource) {
    this.targetIsStbrSource = targetIsStbrSource;
    return this;
  }

  @Override
  public NlpSemanticParsingRelatedEntity set(String fieldName, Object value) {
    return (NlpSemanticParsingRelatedEntity) super.set(fieldName, value);
  }

  @Override
  public NlpSemanticParsingRelatedEntity clone() {
    return (NlpSemanticParsingRelatedEntity) super.clone();
  }

}
