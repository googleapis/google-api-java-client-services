/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.workloadmanager.v1.model;

/**
 * Message describing Execution object
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Workload Manager API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Execution extends com.google.api.client.json.GenericJson {

  /**
   * Output only. [Output only] End time stamp
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String endTime;

  /**
   * Output only. [Output only] Evaluation ID
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String evaluationId;

  /**
   * Output only. [Output only] Inventory time stamp
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String inventoryTime;

  /**
   * Labels as key value pairs
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.Map<String, java.lang.String> labels;

  /**
   * The name of execution resource. The format is
   * projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * type represent whether the execution executed directly by user or scheduled according
   * evaluation.schedule field.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String runType;

  /**
   * Output only. [Output only] Start time stamp
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String startTime;

  /**
   * Output only. [Output only] State
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String state;

  /**
   * Output only. [Output only] End time stamp
   * @return value or {@code null} for none
   */
  public String getEndTime() {
    return endTime;
  }

  /**
   * Output only. [Output only] End time stamp
   * @param endTime endTime or {@code null} for none
   */
  public Execution setEndTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Output only. [Output only] Evaluation ID
   * @return value or {@code null} for none
   */
  public java.lang.String getEvaluationId() {
    return evaluationId;
  }

  /**
   * Output only. [Output only] Evaluation ID
   * @param evaluationId evaluationId or {@code null} for none
   */
  public Execution setEvaluationId(java.lang.String evaluationId) {
    this.evaluationId = evaluationId;
    return this;
  }

  /**
   * Output only. [Output only] Inventory time stamp
   * @return value or {@code null} for none
   */
  public String getInventoryTime() {
    return inventoryTime;
  }

  /**
   * Output only. [Output only] Inventory time stamp
   * @param inventoryTime inventoryTime or {@code null} for none
   */
  public Execution setInventoryTime(String inventoryTime) {
    this.inventoryTime = inventoryTime;
    return this;
  }

  /**
   * Labels as key value pairs
   * @return value or {@code null} for none
   */
  public java.util.Map<String, java.lang.String> getLabels() {
    return labels;
  }

  /**
   * Labels as key value pairs
   * @param labels labels or {@code null} for none
   */
  public Execution setLabels(java.util.Map<String, java.lang.String> labels) {
    this.labels = labels;
    return this;
  }

  /**
   * The name of execution resource. The format is
   * projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * The name of execution resource. The format is
   * projects/{project}/locations/{location}/evaluations/{evaluation}/executions/{execution}
   * @param name name or {@code null} for none
   */
  public Execution setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * type represent whether the execution executed directly by user or scheduled according
   * evaluation.schedule field.
   * @return value or {@code null} for none
   */
  public java.lang.String getRunType() {
    return runType;
  }

  /**
   * type represent whether the execution executed directly by user or scheduled according
   * evaluation.schedule field.
   * @param runType runType or {@code null} for none
   */
  public Execution setRunType(java.lang.String runType) {
    this.runType = runType;
    return this;
  }

  /**
   * Output only. [Output only] Start time stamp
   * @return value or {@code null} for none
   */
  public String getStartTime() {
    return startTime;
  }

  /**
   * Output only. [Output only] Start time stamp
   * @param startTime startTime or {@code null} for none
   */
  public Execution setStartTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Output only. [Output only] State
   * @return value or {@code null} for none
   */
  public java.lang.String getState() {
    return state;
  }

  /**
   * Output only. [Output only] State
   * @param state state or {@code null} for none
   */
  public Execution setState(java.lang.String state) {
    this.state = state;
    return this;
  }

  @Override
  public Execution set(String fieldName, Object value) {
    return (Execution) super.set(fieldName, value);
  }

  @Override
  public Execution clone() {
    return (Execution) super.clone();
  }

}
