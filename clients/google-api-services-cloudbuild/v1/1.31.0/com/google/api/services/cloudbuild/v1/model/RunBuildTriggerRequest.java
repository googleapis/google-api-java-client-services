/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.cloudbuild.v1.model;

/**
 * Specifies a build trigger to run and the source to use.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Build API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RunBuildTriggerRequest extends com.google.api.client.json.GenericJson {

  /**
   * Required. ID of the project.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String projectId;

  /**
   * Source to build against this trigger. Branch and tag names cannot consist of regular
   * expressions.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private RepoSource source;

  /**
   * Required. ID of the trigger.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String triggerId;

  /**
   * Required. ID of the project.
   * @return value or {@code null} for none
   */
  public java.lang.String getProjectId() {
    return projectId;
  }

  /**
   * Required. ID of the project.
   * @param projectId projectId or {@code null} for none
   */
  public RunBuildTriggerRequest setProjectId(java.lang.String projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Source to build against this trigger. Branch and tag names cannot consist of regular
   * expressions.
   * @return value or {@code null} for none
   */
  public RepoSource getSource() {
    return source;
  }

  /**
   * Source to build against this trigger. Branch and tag names cannot consist of regular
   * expressions.
   * @param source source or {@code null} for none
   */
  public RunBuildTriggerRequest setSource(RepoSource source) {
    this.source = source;
    return this;
  }

  /**
   * Required. ID of the trigger.
   * @return value or {@code null} for none
   */
  public java.lang.String getTriggerId() {
    return triggerId;
  }

  /**
   * Required. ID of the trigger.
   * @param triggerId triggerId or {@code null} for none
   */
  public RunBuildTriggerRequest setTriggerId(java.lang.String triggerId) {
    this.triggerId = triggerId;
    return this;
  }

  @Override
  public RunBuildTriggerRequest set(String fieldName, Object value) {
    return (RunBuildTriggerRequest) super.set(fieldName, value);
  }

  @Override
  public RunBuildTriggerRequest clone() {
    return (RunBuildTriggerRequest) super.clone();
  }

}
