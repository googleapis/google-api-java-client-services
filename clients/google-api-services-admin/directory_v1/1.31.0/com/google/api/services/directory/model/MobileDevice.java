/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.directory.model;

/**
 * Google Workspace Mobile Management includes Android, [Google
 * Sync](http://support.google.com/a/bin/answer.py?answer=135937), and iOS devices. For more
 * information about common group mobile device API tasks, see the [Developer's Guide](/admin-
 * sdk/directory/v1/guides/manage-mobile-devices.html).
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Admin SDK API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class MobileDevice extends com.google.api.client.json.GenericJson {

  /**
   * Adb (USB debugging) enabled or disabled on device (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean adbStatus;

  /**
   * The list of applications installed on an Android mobile device. It is not applicable to Google
   * Sync and iOS devices. The list includes any Android applications that access Google Workspace
   * data. When updating an applications list, it is important to note that updates replace the
   * existing list. If the Android device has two existing applications and the API updates the list
   * with five applications, the is now the updated list of five applications.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Applications> applications;

  static {
    // hack to force ProGuard to consider Applications used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(Applications.class);
  }

  /**
   * The device's baseband version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String basebandVersion;

  /**
   * Mobile Device Bootloader version (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String bootloaderVersion;

  /**
   * Mobile Device Brand (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String brand;

  /**
   * The device's operating system build number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String buildNumber;

  /**
   * The default locale used on the device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String defaultLanguage;

  /**
   * Developer options enabled or disabled on device (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean developerOptionsStatus;

  /**
   * The compromised device status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deviceCompromisedStatus;

  /**
   * The serial number for a Google Sync mobile device. For Android and iOS devices, this is a
   * software generated unique identifier.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String deviceId;

  /**
   * DevicePasswordStatus (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String devicePasswordStatus;

  /**
   * List of owner's email addresses. If your application needs the current list of user emails, use
   * the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For additional
   * information, see the [retrieve a user](/admin-sdk/directory/v1/guides/manage-users#get_user)
   * method.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> email;

  /**
   * Mobile Device Encryption Status (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String encryptionStatus;

  /**
   * ETag of the resource.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String etag;

  /**
   * Date and time the device was first synchronized with the policy settings in the G Suite
   * administrator control panel (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private com.google.api.client.util.DateTime firstSync;

  /**
   * Mobile Device Hardware (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hardware;

  /**
   * The IMEI/MEID unique identifier for Android hardware. It is not applicable to Google Sync
   * devices. When adding an Android mobile device, this is an optional property. When updating one
   * of these devices, this is a read-only property.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String hardwareId;

  /**
   * The device's IMEI number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String imei;

  /**
   * The device's kernel version.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kernelVersion;

  /**
   * The type of the API resource. For Mobiledevices resources, the value is
   * `admin#directory#mobiledevice`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * Date and time the device was last synchronized with the policy settings in the G Suite
   * administrator control panel (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private com.google.api.client.util.DateTime lastSync;

  /**
   * Boolean indicating if this account is on owner/primary profile or not.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean managedAccountIsOnOwnerProfile;

  /**
   * Mobile Device manufacturer (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String manufacturer;

  /**
   * The device's MEID number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String meid;

  /**
   * The mobile device's model name, for example Nexus S. This property can be [updated](/admin-
   * sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the
   * [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile=devices#update_mobile_device).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String model;

  /**
   * List of the owner's user names. If your application needs the current list of device owner
   * names, use the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For more
   * information about retrieving mobile device user information, see the [Developer's Guide
   * ](/admin-sdk/directory/v1/guides/manage-users#get_user).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> name;

  /**
   * Mobile Device mobile or network operator (if available) (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String networkOperator;

  /**
   * The mobile device's operating system, for example IOS 4.3 or Android 2.3.5. This property can
   * be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more
   * information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-
   * devices#update_mobile_device).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String os;

  /**
   * List of accounts added on device (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> otherAccountsInfo;

  /**
   * DMAgentPermission (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String privilege;

  /**
   * Mobile Device release version version (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String releaseVersion;

  /**
   * The unique ID the API service uses to identify the mobile device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String resourceId;

  /**
   * Mobile Device Security patch level (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long securityPatchLevel;

  /**
   * The device's serial number.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String serialNumber;

  /**
   * The device's status.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String status;

  /**
   * Work profile supported on device (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean supportsWorkProfile;

  /**
   * The type of mobile device.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String type;

  /**
   * Unknown sources enabled or disabled on device (Read-only)
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean unknownSourcesStatus;

  /**
   * Gives information about the device such as `os` version. This property can be [updated](/admin-
   * sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the
   * [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices#update_mobile_device).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userAgent;

  /**
   * The device's MAC address on Wi-Fi networks.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String wifiMacAddress;

  /**
   * Adb (USB debugging) enabled or disabled on device (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getAdbStatus() {
    return adbStatus;
  }

  /**
   * Adb (USB debugging) enabled or disabled on device (Read-only)
   * @param adbStatus adbStatus or {@code null} for none
   */
  public MobileDevice setAdbStatus(java.lang.Boolean adbStatus) {
    this.adbStatus = adbStatus;
    return this;
  }

  /**
   * The list of applications installed on an Android mobile device. It is not applicable to Google
   * Sync and iOS devices. The list includes any Android applications that access Google Workspace
   * data. When updating an applications list, it is important to note that updates replace the
   * existing list. If the Android device has two existing applications and the API updates the list
   * with five applications, the is now the updated list of five applications.
   * @return value or {@code null} for none
   */
  public java.util.List<Applications> getApplications() {
    return applications;
  }

  /**
   * The list of applications installed on an Android mobile device. It is not applicable to Google
   * Sync and iOS devices. The list includes any Android applications that access Google Workspace
   * data. When updating an applications list, it is important to note that updates replace the
   * existing list. If the Android device has two existing applications and the API updates the list
   * with five applications, the is now the updated list of five applications.
   * @param applications applications or {@code null} for none
   */
  public MobileDevice setApplications(java.util.List<Applications> applications) {
    this.applications = applications;
    return this;
  }

  /**
   * The device's baseband version.
   * @return value or {@code null} for none
   */
  public java.lang.String getBasebandVersion() {
    return basebandVersion;
  }

  /**
   * The device's baseband version.
   * @param basebandVersion basebandVersion or {@code null} for none
   */
  public MobileDevice setBasebandVersion(java.lang.String basebandVersion) {
    this.basebandVersion = basebandVersion;
    return this;
  }

  /**
   * Mobile Device Bootloader version (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getBootloaderVersion() {
    return bootloaderVersion;
  }

  /**
   * Mobile Device Bootloader version (Read-only)
   * @param bootloaderVersion bootloaderVersion or {@code null} for none
   */
  public MobileDevice setBootloaderVersion(java.lang.String bootloaderVersion) {
    this.bootloaderVersion = bootloaderVersion;
    return this;
  }

  /**
   * Mobile Device Brand (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getBrand() {
    return brand;
  }

  /**
   * Mobile Device Brand (Read-only)
   * @param brand brand or {@code null} for none
   */
  public MobileDevice setBrand(java.lang.String brand) {
    this.brand = brand;
    return this;
  }

  /**
   * The device's operating system build number.
   * @return value or {@code null} for none
   */
  public java.lang.String getBuildNumber() {
    return buildNumber;
  }

  /**
   * The device's operating system build number.
   * @param buildNumber buildNumber or {@code null} for none
   */
  public MobileDevice setBuildNumber(java.lang.String buildNumber) {
    this.buildNumber = buildNumber;
    return this;
  }

  /**
   * The default locale used on the device.
   * @return value or {@code null} for none
   */
  public java.lang.String getDefaultLanguage() {
    return defaultLanguage;
  }

  /**
   * The default locale used on the device.
   * @param defaultLanguage defaultLanguage or {@code null} for none
   */
  public MobileDevice setDefaultLanguage(java.lang.String defaultLanguage) {
    this.defaultLanguage = defaultLanguage;
    return this;
  }

  /**
   * Developer options enabled or disabled on device (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDeveloperOptionsStatus() {
    return developerOptionsStatus;
  }

  /**
   * Developer options enabled or disabled on device (Read-only)
   * @param developerOptionsStatus developerOptionsStatus or {@code null} for none
   */
  public MobileDevice setDeveloperOptionsStatus(java.lang.Boolean developerOptionsStatus) {
    this.developerOptionsStatus = developerOptionsStatus;
    return this;
  }

  /**
   * The compromised device status.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeviceCompromisedStatus() {
    return deviceCompromisedStatus;
  }

  /**
   * The compromised device status.
   * @param deviceCompromisedStatus deviceCompromisedStatus or {@code null} for none
   */
  public MobileDevice setDeviceCompromisedStatus(java.lang.String deviceCompromisedStatus) {
    this.deviceCompromisedStatus = deviceCompromisedStatus;
    return this;
  }

  /**
   * The serial number for a Google Sync mobile device. For Android and iOS devices, this is a
   * software generated unique identifier.
   * @return value or {@code null} for none
   */
  public java.lang.String getDeviceId() {
    return deviceId;
  }

  /**
   * The serial number for a Google Sync mobile device. For Android and iOS devices, this is a
   * software generated unique identifier.
   * @param deviceId deviceId or {@code null} for none
   */
  public MobileDevice setDeviceId(java.lang.String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

  /**
   * DevicePasswordStatus (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getDevicePasswordStatus() {
    return devicePasswordStatus;
  }

  /**
   * DevicePasswordStatus (Read-only)
   * @param devicePasswordStatus devicePasswordStatus or {@code null} for none
   */
  public MobileDevice setDevicePasswordStatus(java.lang.String devicePasswordStatus) {
    this.devicePasswordStatus = devicePasswordStatus;
    return this;
  }

  /**
   * List of owner's email addresses. If your application needs the current list of user emails, use
   * the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For additional
   * information, see the [retrieve a user](/admin-sdk/directory/v1/guides/manage-users#get_user)
   * method.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getEmail() {
    return email;
  }

  /**
   * List of owner's email addresses. If your application needs the current list of user emails, use
   * the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For additional
   * information, see the [retrieve a user](/admin-sdk/directory/v1/guides/manage-users#get_user)
   * method.
   * @param email email or {@code null} for none
   */
  public MobileDevice setEmail(java.util.List<java.lang.String> email) {
    this.email = email;
    return this;
  }

  /**
   * Mobile Device Encryption Status (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getEncryptionStatus() {
    return encryptionStatus;
  }

  /**
   * Mobile Device Encryption Status (Read-only)
   * @param encryptionStatus encryptionStatus or {@code null} for none
   */
  public MobileDevice setEncryptionStatus(java.lang.String encryptionStatus) {
    this.encryptionStatus = encryptionStatus;
    return this;
  }

  /**
   * ETag of the resource.
   * @return value or {@code null} for none
   */
  public java.lang.String getEtag() {
    return etag;
  }

  /**
   * ETag of the resource.
   * @param etag etag or {@code null} for none
   */
  public MobileDevice setEtag(java.lang.String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Date and time the device was first synchronized with the policy settings in the G Suite
   * administrator control panel (Read-only)
   * @return value or {@code null} for none
   */
  public com.google.api.client.util.DateTime getFirstSync() {
    return firstSync;
  }

  /**
   * Date and time the device was first synchronized with the policy settings in the G Suite
   * administrator control panel (Read-only)
   * @param firstSync firstSync or {@code null} for none
   */
  public MobileDevice setFirstSync(com.google.api.client.util.DateTime firstSync) {
    this.firstSync = firstSync;
    return this;
  }

  /**
   * Mobile Device Hardware (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getHardware() {
    return hardware;
  }

  /**
   * Mobile Device Hardware (Read-only)
   * @param hardware hardware or {@code null} for none
   */
  public MobileDevice setHardware(java.lang.String hardware) {
    this.hardware = hardware;
    return this;
  }

  /**
   * The IMEI/MEID unique identifier for Android hardware. It is not applicable to Google Sync
   * devices. When adding an Android mobile device, this is an optional property. When updating one
   * of these devices, this is a read-only property.
   * @return value or {@code null} for none
   */
  public java.lang.String getHardwareId() {
    return hardwareId;
  }

  /**
   * The IMEI/MEID unique identifier for Android hardware. It is not applicable to Google Sync
   * devices. When adding an Android mobile device, this is an optional property. When updating one
   * of these devices, this is a read-only property.
   * @param hardwareId hardwareId or {@code null} for none
   */
  public MobileDevice setHardwareId(java.lang.String hardwareId) {
    this.hardwareId = hardwareId;
    return this;
  }

  /**
   * The device's IMEI number.
   * @return value or {@code null} for none
   */
  public java.lang.String getImei() {
    return imei;
  }

  /**
   * The device's IMEI number.
   * @param imei imei or {@code null} for none
   */
  public MobileDevice setImei(java.lang.String imei) {
    this.imei = imei;
    return this;
  }

  /**
   * The device's kernel version.
   * @return value or {@code null} for none
   */
  public java.lang.String getKernelVersion() {
    return kernelVersion;
  }

  /**
   * The device's kernel version.
   * @param kernelVersion kernelVersion or {@code null} for none
   */
  public MobileDevice setKernelVersion(java.lang.String kernelVersion) {
    this.kernelVersion = kernelVersion;
    return this;
  }

  /**
   * The type of the API resource. For Mobiledevices resources, the value is
   * `admin#directory#mobiledevice`.
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * The type of the API resource. For Mobiledevices resources, the value is
   * `admin#directory#mobiledevice`.
   * @param kind kind or {@code null} for none
   */
  public MobileDevice setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Date and time the device was last synchronized with the policy settings in the G Suite
   * administrator control panel (Read-only)
   * @return value or {@code null} for none
   */
  public com.google.api.client.util.DateTime getLastSync() {
    return lastSync;
  }

  /**
   * Date and time the device was last synchronized with the policy settings in the G Suite
   * administrator control panel (Read-only)
   * @param lastSync lastSync or {@code null} for none
   */
  public MobileDevice setLastSync(com.google.api.client.util.DateTime lastSync) {
    this.lastSync = lastSync;
    return this;
  }

  /**
   * Boolean indicating if this account is on owner/primary profile or not.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getManagedAccountIsOnOwnerProfile() {
    return managedAccountIsOnOwnerProfile;
  }

  /**
   * Boolean indicating if this account is on owner/primary profile or not.
   * @param managedAccountIsOnOwnerProfile managedAccountIsOnOwnerProfile or {@code null} for none
   */
  public MobileDevice setManagedAccountIsOnOwnerProfile(java.lang.Boolean managedAccountIsOnOwnerProfile) {
    this.managedAccountIsOnOwnerProfile = managedAccountIsOnOwnerProfile;
    return this;
  }

  /**
   * Mobile Device manufacturer (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getManufacturer() {
    return manufacturer;
  }

  /**
   * Mobile Device manufacturer (Read-only)
   * @param manufacturer manufacturer or {@code null} for none
   */
  public MobileDevice setManufacturer(java.lang.String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

  /**
   * The device's MEID number.
   * @return value or {@code null} for none
   */
  public java.lang.String getMeid() {
    return meid;
  }

  /**
   * The device's MEID number.
   * @param meid meid or {@code null} for none
   */
  public MobileDevice setMeid(java.lang.String meid) {
    this.meid = meid;
    return this;
  }

  /**
   * The mobile device's model name, for example Nexus S. This property can be [updated](/admin-
   * sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the
   * [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile=devices#update_mobile_device).
   * @return value or {@code null} for none
   */
  public java.lang.String getModel() {
    return model;
  }

  /**
   * The mobile device's model name, for example Nexus S. This property can be [updated](/admin-
   * sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the
   * [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile=devices#update_mobile_device).
   * @param model model or {@code null} for none
   */
  public MobileDevice setModel(java.lang.String model) {
    this.model = model;
    return this;
  }

  /**
   * List of the owner's user names. If your application needs the current list of device owner
   * names, use the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For more
   * information about retrieving mobile device user information, see the [Developer's Guide
   * ](/admin-sdk/directory/v1/guides/manage-users#get_user).
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getName() {
    return name;
  }

  /**
   * List of the owner's user names. If your application needs the current list of device owner
   * names, use the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For more
   * information about retrieving mobile device user information, see the [Developer's Guide
   * ](/admin-sdk/directory/v1/guides/manage-users#get_user).
   * @param name name or {@code null} for none
   */
  public MobileDevice setName(java.util.List<java.lang.String> name) {
    this.name = name;
    return this;
  }

  /**
   * Mobile Device mobile or network operator (if available) (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getNetworkOperator() {
    return networkOperator;
  }

  /**
   * Mobile Device mobile or network operator (if available) (Read-only)
   * @param networkOperator networkOperator or {@code null} for none
   */
  public MobileDevice setNetworkOperator(java.lang.String networkOperator) {
    this.networkOperator = networkOperator;
    return this;
  }

  /**
   * The mobile device's operating system, for example IOS 4.3 or Android 2.3.5. This property can
   * be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more
   * information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-
   * devices#update_mobile_device).
   * @return value or {@code null} for none
   */
  public java.lang.String getOs() {
    return os;
  }

  /**
   * The mobile device's operating system, for example IOS 4.3 or Android 2.3.5. This property can
   * be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more
   * information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-
   * devices#update_mobile_device).
   * @param os os or {@code null} for none
   */
  public MobileDevice setOs(java.lang.String os) {
    this.os = os;
    return this;
  }

  /**
   * List of accounts added on device (Read-only)
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getOtherAccountsInfo() {
    return otherAccountsInfo;
  }

  /**
   * List of accounts added on device (Read-only)
   * @param otherAccountsInfo otherAccountsInfo or {@code null} for none
   */
  public MobileDevice setOtherAccountsInfo(java.util.List<java.lang.String> otherAccountsInfo) {
    this.otherAccountsInfo = otherAccountsInfo;
    return this;
  }

  /**
   * DMAgentPermission (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getPrivilege() {
    return privilege;
  }

  /**
   * DMAgentPermission (Read-only)
   * @param privilege privilege or {@code null} for none
   */
  public MobileDevice setPrivilege(java.lang.String privilege) {
    this.privilege = privilege;
    return this;
  }

  /**
   * Mobile Device release version version (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.String getReleaseVersion() {
    return releaseVersion;
  }

  /**
   * Mobile Device release version version (Read-only)
   * @param releaseVersion releaseVersion or {@code null} for none
   */
  public MobileDevice setReleaseVersion(java.lang.String releaseVersion) {
    this.releaseVersion = releaseVersion;
    return this;
  }

  /**
   * The unique ID the API service uses to identify the mobile device.
   * @return value or {@code null} for none
   */
  public java.lang.String getResourceId() {
    return resourceId;
  }

  /**
   * The unique ID the API service uses to identify the mobile device.
   * @param resourceId resourceId or {@code null} for none
   */
  public MobileDevice setResourceId(java.lang.String resourceId) {
    this.resourceId = resourceId;
    return this;
  }

  /**
   * Mobile Device Security patch level (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.Long getSecurityPatchLevel() {
    return securityPatchLevel;
  }

  /**
   * Mobile Device Security patch level (Read-only)
   * @param securityPatchLevel securityPatchLevel or {@code null} for none
   */
  public MobileDevice setSecurityPatchLevel(java.lang.Long securityPatchLevel) {
    this.securityPatchLevel = securityPatchLevel;
    return this;
  }

  /**
   * The device's serial number.
   * @return value or {@code null} for none
   */
  public java.lang.String getSerialNumber() {
    return serialNumber;
  }

  /**
   * The device's serial number.
   * @param serialNumber serialNumber or {@code null} for none
   */
  public MobileDevice setSerialNumber(java.lang.String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

  /**
   * The device's status.
   * @return value or {@code null} for none
   */
  public java.lang.String getStatus() {
    return status;
  }

  /**
   * The device's status.
   * @param status status or {@code null} for none
   */
  public MobileDevice setStatus(java.lang.String status) {
    this.status = status;
    return this;
  }

  /**
   * Work profile supported on device (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSupportsWorkProfile() {
    return supportsWorkProfile;
  }

  /**
   * Work profile supported on device (Read-only)
   * @param supportsWorkProfile supportsWorkProfile or {@code null} for none
   */
  public MobileDevice setSupportsWorkProfile(java.lang.Boolean supportsWorkProfile) {
    this.supportsWorkProfile = supportsWorkProfile;
    return this;
  }

  /**
   * The type of mobile device.
   * @return value or {@code null} for none
   */
  public java.lang.String getType() {
    return type;
  }

  /**
   * The type of mobile device.
   * @param type type or {@code null} for none
   */
  public MobileDevice setType(java.lang.String type) {
    this.type = type;
    return this;
  }

  /**
   * Unknown sources enabled or disabled on device (Read-only)
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getUnknownSourcesStatus() {
    return unknownSourcesStatus;
  }

  /**
   * Unknown sources enabled or disabled on device (Read-only)
   * @param unknownSourcesStatus unknownSourcesStatus or {@code null} for none
   */
  public MobileDevice setUnknownSourcesStatus(java.lang.Boolean unknownSourcesStatus) {
    this.unknownSourcesStatus = unknownSourcesStatus;
    return this;
  }

  /**
   * Gives information about the device such as `os` version. This property can be [updated](/admin-
   * sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the
   * [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices#update_mobile_device).
   * @return value or {@code null} for none
   */
  public java.lang.String getUserAgent() {
    return userAgent;
  }

  /**
   * Gives information about the device such as `os` version. This property can be [updated](/admin-
   * sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the
   * [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices#update_mobile_device).
   * @param userAgent userAgent or {@code null} for none
   */
  public MobileDevice setUserAgent(java.lang.String userAgent) {
    this.userAgent = userAgent;
    return this;
  }

  /**
   * The device's MAC address on Wi-Fi networks.
   * @return value or {@code null} for none
   */
  public java.lang.String getWifiMacAddress() {
    return wifiMacAddress;
  }

  /**
   * The device's MAC address on Wi-Fi networks.
   * @param wifiMacAddress wifiMacAddress or {@code null} for none
   */
  public MobileDevice setWifiMacAddress(java.lang.String wifiMacAddress) {
    this.wifiMacAddress = wifiMacAddress;
    return this;
  }

  @Override
  public MobileDevice set(String fieldName, Object value) {
    return (MobileDevice) super.set(fieldName, value);
  }

  @Override
  public MobileDevice clone() {
    return (MobileDevice) super.clone();
  }

  /**
   * Model definition for MobileDeviceApplications.
   */
  public static final class Applications extends com.google.api.client.json.GenericJson {

    /**
     * The application's display name. An example is `Browser`.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String displayName;

    /**
     * The application's package name. An example is `com.android.browser`.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String packageName;

    /**
     * The list of permissions of this application. These can be either a standard Android permission
     * or one defined by the application, and are found in an application's [Android
     * manifest](http://developer.android.com/guide/topics/manifest/uses-permission-element.html).
     * Examples of a Calendar application's permissions are `READ_CALENDAR`, or `MANAGE_ACCOUNTS`.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.util.List<java.lang.String> permission;

    /**
     * The application's version code. An example is `13`.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.Integer versionCode;

    /**
     * The application's version name. An example is `3.2-140714`.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private java.lang.String versionName;

    /**
     * The application's display name. An example is `Browser`.
     * @return value or {@code null} for none
     */
    public java.lang.String getDisplayName() {
      return displayName;
    }

    /**
     * The application's display name. An example is `Browser`.
     * @param displayName displayName or {@code null} for none
     */
    public Applications setDisplayName(java.lang.String displayName) {
      this.displayName = displayName;
      return this;
    }

    /**
     * The application's package name. An example is `com.android.browser`.
     * @return value or {@code null} for none
     */
    public java.lang.String getPackageName() {
      return packageName;
    }

    /**
     * The application's package name. An example is `com.android.browser`.
     * @param packageName packageName or {@code null} for none
     */
    public Applications setPackageName(java.lang.String packageName) {
      this.packageName = packageName;
      return this;
    }

    /**
     * The list of permissions of this application. These can be either a standard Android permission
     * or one defined by the application, and are found in an application's [Android
     * manifest](http://developer.android.com/guide/topics/manifest/uses-permission-element.html).
     * Examples of a Calendar application's permissions are `READ_CALENDAR`, or `MANAGE_ACCOUNTS`.
     * @return value or {@code null} for none
     */
    public java.util.List<java.lang.String> getPermission() {
      return permission;
    }

    /**
     * The list of permissions of this application. These can be either a standard Android permission
     * or one defined by the application, and are found in an application's [Android
     * manifest](http://developer.android.com/guide/topics/manifest/uses-permission-element.html).
     * Examples of a Calendar application's permissions are `READ_CALENDAR`, or `MANAGE_ACCOUNTS`.
     * @param permission permission or {@code null} for none
     */
    public Applications setPermission(java.util.List<java.lang.String> permission) {
      this.permission = permission;
      return this;
    }

    /**
     * The application's version code. An example is `13`.
     * @return value or {@code null} for none
     */
    public java.lang.Integer getVersionCode() {
      return versionCode;
    }

    /**
     * The application's version code. An example is `13`.
     * @param versionCode versionCode or {@code null} for none
     */
    public Applications setVersionCode(java.lang.Integer versionCode) {
      this.versionCode = versionCode;
      return this;
    }

    /**
     * The application's version name. An example is `3.2-140714`.
     * @return value or {@code null} for none
     */
    public java.lang.String getVersionName() {
      return versionName;
    }

    /**
     * The application's version name. An example is `3.2-140714`.
     * @param versionName versionName or {@code null} for none
     */
    public Applications setVersionName(java.lang.String versionName) {
      this.versionName = versionName;
      return this;
    }

    @Override
    public Applications set(String fieldName, Object value) {
      return (Applications) super.set(fieldName, value);
    }

    @Override
    public Applications clone() {
      return (Applications) super.clone();
    }

  }

}
